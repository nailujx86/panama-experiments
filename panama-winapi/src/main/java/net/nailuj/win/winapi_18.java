// Generated by jextract

package net.nailuj.win;

import java.lang.invoke.*;
import java.lang.foreign.*;
import java.nio.ByteOrder;
import java.util.*;
import java.util.function.*;
import java.util.stream.*;

import static java.lang.foreign.ValueLayout.*;
import static java.lang.foreign.MemoryLayout.PathElement.*;

public class winapi_18 extends winapi_19 {

    winapi_18() {
        // Should not be called directly
    }
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_HOTPLUG_INFO {
     *     DWORD Size;
     *     BOOLEAN MediaRemovable;
     *     BOOLEAN MediaHotplug;
     *     BOOLEAN DeviceHotplug;
     *     BOOLEAN WriteCacheEnableOverride;
     * } *PSTORAGE_HOTPLUG_INFO
     * }
     */
    public static final AddressLayout PSTORAGE_HOTPLUG_INFO = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_FEATURE_SUPPORT {
     *     DWORD Size;
     *     DWORD Version;
     *     union {
     *         struct {
     *             DWORDLONG StorMQMiniportsSupported : 1;
     *             DWORDLONG Reserved : 63;
     *         };
     *         DWORDLONG AsUlonglong;
     *     } Flags;
     *     DWORDLONG Reserved[6];
     * } *PSTORAGE_FEATURE_SUPPORT
     * }
     */
    public static final AddressLayout PSTORAGE_FEATURE_SUPPORT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_DEVICE_NUMBER {
     *     DWORD DeviceType;
     *     DWORD DeviceNumber;
     *     DWORD PartitionNumber;
     * } *PSTORAGE_DEVICE_NUMBER
     * }
     */
    public static final AddressLayout PSTORAGE_DEVICE_NUMBER = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_DEVICE_NUMBERS {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORD NumberOfDevices;
     *     STORAGE_DEVICE_NUMBER Devices[1];
     * } *PSTORAGE_DEVICE_NUMBERS
     * }
     */
    public static final AddressLayout PSTORAGE_DEVICE_NUMBERS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_DEVICE_NUMBER_EX {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORD Flags;
     *     DWORD DeviceType;
     *     DWORD DeviceNumber;
     *     GUID DeviceGuid;
     *     DWORD PartitionNumber;
     * } *PSTORAGE_DEVICE_NUMBER_EX
     * }
     */
    public static final AddressLayout PSTORAGE_DEVICE_NUMBER_EX = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_BUS_RESET_REQUEST {
     *     BYTE PathId;
     * } *PSTORAGE_BUS_RESET_REQUEST
     * }
     */
    public static final AddressLayout PSTORAGE_BUS_RESET_REQUEST = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct STORAGE_BREAK_RESERVATION_REQUEST {
     *     DWORD Length;
     *     BYTE _unused;
     *     BYTE PathId;
     *     BYTE TargetId;
     *     BYTE Lun;
     * } *PSTORAGE_BREAK_RESERVATION_REQUEST
     * }
     */
    public static final AddressLayout PSTORAGE_BREAK_RESERVATION_REQUEST = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _PREVENT_MEDIA_REMOVAL {
     *     BOOLEAN PreventMediaRemoval;
     * } *PPREVENT_MEDIA_REMOVAL
     * }
     */
    public static final AddressLayout PPREVENT_MEDIA_REMOVAL = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _CLASS_MEDIA_CHANGE_CONTEXT {
     *     DWORD MediaChangeCount;
     *     DWORD NewState;
     * } *PCLASS_MEDIA_CHANGE_CONTEXT
     * }
     */
    public static final AddressLayout PCLASS_MEDIA_CHANGE_CONTEXT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _TAPE_STATISTICS {
     *     DWORD Version;
     *     DWORD Flags;
     *     LARGE_INTEGER RecoveredWrites;
     *     LARGE_INTEGER UnrecoveredWrites;
     *     LARGE_INTEGER RecoveredReads;
     *     LARGE_INTEGER UnrecoveredReads;
     *     BYTE CompressionRatioReads;
     *     BYTE CompressionRatioWrites;
     * } *PTAPE_STATISTICS
     * }
     */
    public static final AddressLayout PTAPE_STATISTICS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _TAPE_GET_STATISTICS {
     *     DWORD Operation;
     * } *PTAPE_GET_STATISTICS
     * }
     */
    public static final AddressLayout PTAPE_GET_STATISTICS = winapi.C_POINTER;
    private static final int DDS_4mm = (int)32L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.DDS_4mm = 32
     * }
     */
    public static int DDS_4mm() {
        return DDS_4mm;
    }
    private static final int MiniQic = (int)33L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.MiniQic = 33
     * }
     */
    public static int MiniQic() {
        return MiniQic;
    }
    private static final int Travan = (int)34L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.Travan = 34
     * }
     */
    public static int Travan() {
        return Travan;
    }
    private static final int QIC = (int)35L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.QIC = 35
     * }
     */
    public static int QIC() {
        return QIC;
    }
    private static final int MP_8mm = (int)36L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.MP_8mm = 36
     * }
     */
    public static int MP_8mm() {
        return MP_8mm;
    }
    private static final int AME_8mm = (int)37L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.AME_8mm = 37
     * }
     */
    public static int AME_8mm() {
        return AME_8mm;
    }
    private static final int AIT1_8mm = (int)38L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.AIT1_8mm = 38
     * }
     */
    public static int AIT1_8mm() {
        return AIT1_8mm;
    }
    private static final int DLT = (int)39L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.DLT = 39
     * }
     */
    public static int DLT() {
        return DLT;
    }
    private static final int NCTP = (int)40L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.NCTP = 40
     * }
     */
    public static int NCTP() {
        return NCTP;
    }
    private static final int IBM_3480 = (int)41L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.IBM_3480 = 41
     * }
     */
    public static int IBM_3480() {
        return IBM_3480;
    }
    private static final int IBM_3490E = (int)42L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.IBM_3490E = 42
     * }
     */
    public static int IBM_3490E() {
        return IBM_3490E;
    }
    private static final int IBM_Magstar_3590 = (int)43L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.IBM_Magstar_3590 = 43
     * }
     */
    public static int IBM_Magstar_3590() {
        return IBM_Magstar_3590;
    }
    private static final int IBM_Magstar_MP = (int)44L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.IBM_Magstar_MP = 44
     * }
     */
    public static int IBM_Magstar_MP() {
        return IBM_Magstar_MP;
    }
    private static final int STK_DATA_D3 = (int)45L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.STK_DATA_D3 = 45
     * }
     */
    public static int STK_DATA_D3() {
        return STK_DATA_D3;
    }
    private static final int SONY_DTF = (int)46L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.SONY_DTF = 46
     * }
     */
    public static int SONY_DTF() {
        return SONY_DTF;
    }
    private static final int DV_6mm = (int)47L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.DV_6mm = 47
     * }
     */
    public static int DV_6mm() {
        return DV_6mm;
    }
    private static final int DMI = (int)48L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.DMI = 48
     * }
     */
    public static int DMI() {
        return DMI;
    }
    private static final int SONY_D2 = (int)49L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.SONY_D2 = 49
     * }
     */
    public static int SONY_D2() {
        return SONY_D2;
    }
    private static final int CLEANER_CARTRIDGE = (int)50L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.CLEANER_CARTRIDGE = 50
     * }
     */
    public static int CLEANER_CARTRIDGE() {
        return CLEANER_CARTRIDGE;
    }
    private static final int CD_ROM = (int)51L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.CD_ROM = 51
     * }
     */
    public static int CD_ROM() {
        return CD_ROM;
    }
    private static final int CD_R = (int)52L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.CD_R = 52
     * }
     */
    public static int CD_R() {
        return CD_R;
    }
    private static final int CD_RW = (int)53L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.CD_RW = 53
     * }
     */
    public static int CD_RW() {
        return CD_RW;
    }
    private static final int DVD_ROM = (int)54L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.DVD_ROM = 54
     * }
     */
    public static int DVD_ROM() {
        return DVD_ROM;
    }
    private static final int DVD_R = (int)55L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.DVD_R = 55
     * }
     */
    public static int DVD_R() {
        return DVD_R;
    }
    private static final int DVD_RW = (int)56L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.DVD_RW = 56
     * }
     */
    public static int DVD_RW() {
        return DVD_RW;
    }
    private static final int MO_3_RW = (int)57L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.MO_3_RW = 57
     * }
     */
    public static int MO_3_RW() {
        return MO_3_RW;
    }
    private static final int MO_5_WO = (int)58L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.MO_5_WO = 58
     * }
     */
    public static int MO_5_WO() {
        return MO_5_WO;
    }
    private static final int MO_5_RW = (int)59L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.MO_5_RW = 59
     * }
     */
    public static int MO_5_RW() {
        return MO_5_RW;
    }
    private static final int MO_5_LIMDOW = (int)60L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.MO_5_LIMDOW = 60
     * }
     */
    public static int MO_5_LIMDOW() {
        return MO_5_LIMDOW;
    }
    private static final int PC_5_WO = (int)61L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.PC_5_WO = 61
     * }
     */
    public static int PC_5_WO() {
        return PC_5_WO;
    }
    private static final int PC_5_RW = (int)62L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.PC_5_RW = 62
     * }
     */
    public static int PC_5_RW() {
        return PC_5_RW;
    }
    private static final int PD_5_RW = (int)63L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.PD_5_RW = 63
     * }
     */
    public static int PD_5_RW() {
        return PD_5_RW;
    }
    private static final int ABL_5_WO = (int)64L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.ABL_5_WO = 64
     * }
     */
    public static int ABL_5_WO() {
        return ABL_5_WO;
    }
    private static final int PINNACLE_APEX_5_RW = (int)65L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.PINNACLE_APEX_5_RW = 65
     * }
     */
    public static int PINNACLE_APEX_5_RW() {
        return PINNACLE_APEX_5_RW;
    }
    private static final int SONY_12_WO = (int)66L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.SONY_12_WO = 66
     * }
     */
    public static int SONY_12_WO() {
        return SONY_12_WO;
    }
    private static final int PHILIPS_12_WO = (int)67L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.PHILIPS_12_WO = 67
     * }
     */
    public static int PHILIPS_12_WO() {
        return PHILIPS_12_WO;
    }
    private static final int HITACHI_12_WO = (int)68L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.HITACHI_12_WO = 68
     * }
     */
    public static int HITACHI_12_WO() {
        return HITACHI_12_WO;
    }
    private static final int CYGNET_12_WO = (int)69L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.CYGNET_12_WO = 69
     * }
     */
    public static int CYGNET_12_WO() {
        return CYGNET_12_WO;
    }
    private static final int KODAK_14_WO = (int)70L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.KODAK_14_WO = 70
     * }
     */
    public static int KODAK_14_WO() {
        return KODAK_14_WO;
    }
    private static final int MO_NFR_525 = (int)71L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.MO_NFR_525 = 71
     * }
     */
    public static int MO_NFR_525() {
        return MO_NFR_525;
    }
    private static final int NIKON_12_RW = (int)72L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.NIKON_12_RW = 72
     * }
     */
    public static int NIKON_12_RW() {
        return NIKON_12_RW;
    }
    private static final int IOMEGA_ZIP = (int)73L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.IOMEGA_ZIP = 73
     * }
     */
    public static int IOMEGA_ZIP() {
        return IOMEGA_ZIP;
    }
    private static final int IOMEGA_JAZ = (int)74L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.IOMEGA_JAZ = 74
     * }
     */
    public static int IOMEGA_JAZ() {
        return IOMEGA_JAZ;
    }
    private static final int SYQUEST_EZ135 = (int)75L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.SYQUEST_EZ135 = 75
     * }
     */
    public static int SYQUEST_EZ135() {
        return SYQUEST_EZ135;
    }
    private static final int SYQUEST_EZFLYER = (int)76L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.SYQUEST_EZFLYER = 76
     * }
     */
    public static int SYQUEST_EZFLYER() {
        return SYQUEST_EZFLYER;
    }
    private static final int SYQUEST_SYJET = (int)77L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.SYQUEST_SYJET = 77
     * }
     */
    public static int SYQUEST_SYJET() {
        return SYQUEST_SYJET;
    }
    private static final int AVATAR_F2 = (int)78L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.AVATAR_F2 = 78
     * }
     */
    public static int AVATAR_F2() {
        return AVATAR_F2;
    }
    private static final int MP2_8mm = (int)79L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.MP2_8mm = 79
     * }
     */
    public static int MP2_8mm() {
        return MP2_8mm;
    }
    private static final int DST_S = (int)80L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.DST_S = 80
     * }
     */
    public static int DST_S() {
        return DST_S;
    }
    private static final int DST_M = (int)81L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.DST_M = 81
     * }
     */
    public static int DST_M() {
        return DST_M;
    }
    private static final int DST_L = (int)82L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.DST_L = 82
     * }
     */
    public static int DST_L() {
        return DST_L;
    }
    private static final int VXATape_1 = (int)83L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.VXATape_1 = 83
     * }
     */
    public static int VXATape_1() {
        return VXATape_1;
    }
    private static final int VXATape_2 = (int)84L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.VXATape_2 = 84
     * }
     */
    public static int VXATape_2() {
        return VXATape_2;
    }
    private static final int STK_9840 = (int)85L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.STK_9840 = 85
     * }
     */
    public static int STK_9840() {
        return STK_9840;
    }
    private static final int LTO_Ultrium = (int)86L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.LTO_Ultrium = 86
     * }
     */
    public static int LTO_Ultrium() {
        return LTO_Ultrium;
    }
    private static final int LTO_Accelis = (int)87L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.LTO_Accelis = 87
     * }
     */
    public static int LTO_Accelis() {
        return LTO_Accelis;
    }
    private static final int DVD_RAM = (int)88L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.DVD_RAM = 88
     * }
     */
    public static int DVD_RAM() {
        return DVD_RAM;
    }
    private static final int AIT_8mm = (int)89L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.AIT_8mm = 89
     * }
     */
    public static int AIT_8mm() {
        return AIT_8mm;
    }
    private static final int ADR_1 = (int)90L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.ADR_1 = 90
     * }
     */
    public static int ADR_1() {
        return ADR_1;
    }
    private static final int ADR_2 = (int)91L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.ADR_2 = 91
     * }
     */
    public static int ADR_2() {
        return ADR_2;
    }
    private static final int STK_9940 = (int)92L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.STK_9940 = 92
     * }
     */
    public static int STK_9940() {
        return STK_9940;
    }
    private static final int SAIT = (int)93L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.SAIT = 93
     * }
     */
    public static int SAIT() {
        return SAIT;
    }
    private static final int VXATape = (int)94L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_MEDIA_TYPE.VXATape = 94
     * }
     */
    public static int VXATape() {
        return VXATape;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _STORAGE_MEDIA_TYPE {
     *     DDS_4mm = 32,
     *     MiniQic,
     *     Travan,
     *     QIC,
     *     MP_8mm,
     *     AME_8mm,
     *     AIT1_8mm,
     *     DLT,
     *     NCTP,
     *     IBM_3480,
     *     IBM_3490E,
     *     IBM_Magstar_3590,
     *     IBM_Magstar_MP,
     *     STK_DATA_D3,
     *     SONY_DTF,
     *     DV_6mm,
     *     DMI,
     *     SONY_D2,
     *     CLEANER_CARTRIDGE,
     *     CD_ROM,
     *     CD_R,
     *     CD_RW,
     *     DVD_ROM,
     *     DVD_R,
     *     DVD_RW,
     *     MO_3_RW,
     *     MO_5_WO,
     *     MO_5_RW,
     *     MO_5_LIMDOW,
     *     PC_5_WO,
     *     PC_5_RW,
     *     PD_5_RW,
     *     ABL_5_WO,
     *     PINNACLE_APEX_5_RW,
     *     SONY_12_WO,
     *     PHILIPS_12_WO,
     *     HITACHI_12_WO,
     *     CYGNET_12_WO,
     *     KODAK_14_WO,
     *     MO_NFR_525,
     *     NIKON_12_RW,
     *     IOMEGA_ZIP,
     *     IOMEGA_JAZ,
     *     SYQUEST_EZ135,
     *     SYQUEST_EZFLYER,
     *     SYQUEST_SYJET,
     *     AVATAR_F2,
     *     MP2_8mm,
     *     DST_S,
     *     DST_M,
     *     DST_L,
     *     VXATape_1,
     *     VXATape_2,
     *     STK_9840,
     *     LTO_Ultrium,
     *     LTO_Accelis,
     *     DVD_RAM,
     *     AIT_8mm,
     *     ADR_1,
     *     ADR_2,
     *     STK_9940,
     *     SAIT,
     *     VXATape
     * } *PSTORAGE_MEDIA_TYPE
     * }
     */
    public static final AddressLayout PSTORAGE_MEDIA_TYPE = winapi.C_POINTER;
    private static final int BusTypeUnknown = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_BUS_TYPE.BusTypeUnknown = 0
     * }
     */
    public static int BusTypeUnknown() {
        return BusTypeUnknown;
    }
    private static final int BusTypeScsi = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_BUS_TYPE.BusTypeScsi = 1
     * }
     */
    public static int BusTypeScsi() {
        return BusTypeScsi;
    }
    private static final int BusTypeAtapi = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_BUS_TYPE.BusTypeAtapi = 2
     * }
     */
    public static int BusTypeAtapi() {
        return BusTypeAtapi;
    }
    private static final int BusTypeAta = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_BUS_TYPE.BusTypeAta = 3
     * }
     */
    public static int BusTypeAta() {
        return BusTypeAta;
    }
    private static final int BusType1394 = (int)4L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_BUS_TYPE.BusType1394 = 4
     * }
     */
    public static int BusType1394() {
        return BusType1394;
    }
    private static final int BusTypeSsa = (int)5L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_BUS_TYPE.BusTypeSsa = 5
     * }
     */
    public static int BusTypeSsa() {
        return BusTypeSsa;
    }
    private static final int BusTypeFibre = (int)6L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_BUS_TYPE.BusTypeFibre = 6
     * }
     */
    public static int BusTypeFibre() {
        return BusTypeFibre;
    }
    private static final int BusTypeUsb = (int)7L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_BUS_TYPE.BusTypeUsb = 7
     * }
     */
    public static int BusTypeUsb() {
        return BusTypeUsb;
    }
    private static final int BusTypeRAID = (int)8L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_BUS_TYPE.BusTypeRAID = 8
     * }
     */
    public static int BusTypeRAID() {
        return BusTypeRAID;
    }
    private static final int BusTypeiScsi = (int)9L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_BUS_TYPE.BusTypeiScsi = 9
     * }
     */
    public static int BusTypeiScsi() {
        return BusTypeiScsi;
    }
    private static final int BusTypeSas = (int)10L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_BUS_TYPE.BusTypeSas = 10
     * }
     */
    public static int BusTypeSas() {
        return BusTypeSas;
    }
    private static final int BusTypeSata = (int)11L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_BUS_TYPE.BusTypeSata = 11
     * }
     */
    public static int BusTypeSata() {
        return BusTypeSata;
    }
    private static final int BusTypeSd = (int)12L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_BUS_TYPE.BusTypeSd = 12
     * }
     */
    public static int BusTypeSd() {
        return BusTypeSd;
    }
    private static final int BusTypeMmc = (int)13L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_BUS_TYPE.BusTypeMmc = 13
     * }
     */
    public static int BusTypeMmc() {
        return BusTypeMmc;
    }
    private static final int BusTypeVirtual = (int)14L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_BUS_TYPE.BusTypeVirtual = 14
     * }
     */
    public static int BusTypeVirtual() {
        return BusTypeVirtual;
    }
    private static final int BusTypeFileBackedVirtual = (int)15L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_BUS_TYPE.BusTypeFileBackedVirtual = 15
     * }
     */
    public static int BusTypeFileBackedVirtual() {
        return BusTypeFileBackedVirtual;
    }
    private static final int BusTypeSpaces = (int)16L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_BUS_TYPE.BusTypeSpaces = 16
     * }
     */
    public static int BusTypeSpaces() {
        return BusTypeSpaces;
    }
    private static final int BusTypeNvme = (int)17L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_BUS_TYPE.BusTypeNvme = 17
     * }
     */
    public static int BusTypeNvme() {
        return BusTypeNvme;
    }
    private static final int BusTypeSCM = (int)18L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_BUS_TYPE.BusTypeSCM = 18
     * }
     */
    public static int BusTypeSCM() {
        return BusTypeSCM;
    }
    private static final int BusTypeUfs = (int)19L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_BUS_TYPE.BusTypeUfs = 19
     * }
     */
    public static int BusTypeUfs() {
        return BusTypeUfs;
    }
    private static final int BusTypeNvmeof = (int)20L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_BUS_TYPE.BusTypeNvmeof = 20
     * }
     */
    public static int BusTypeNvmeof() {
        return BusTypeNvmeof;
    }
    private static final int BusTypeMax = (int)21L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_BUS_TYPE.BusTypeMax = 21
     * }
     */
    public static int BusTypeMax() {
        return BusTypeMax;
    }
    private static final int BusTypeMaxReserved = (int)127L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_BUS_TYPE.BusTypeMaxReserved = 127
     * }
     */
    public static int BusTypeMaxReserved() {
        return BusTypeMaxReserved;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _STORAGE_BUS_TYPE {
     *     BusTypeUnknown = 0,
     *     BusTypeScsi,
     *     BusTypeAtapi,
     *     BusTypeAta,
     *     BusType1394,
     *     BusTypeSsa,
     *     BusTypeFibre,
     *     BusTypeUsb,
     *     BusTypeRAID,
     *     BusTypeiScsi,
     *     BusTypeSas,
     *     BusTypeSata,
     *     BusTypeSd,
     *     BusTypeMmc,
     *     BusTypeVirtual,
     *     BusTypeFileBackedVirtual,
     *     BusTypeSpaces,
     *     BusTypeNvme,
     *     BusTypeSCM,
     *     BusTypeUfs,
     *     BusTypeNvmeof,
     *     BusTypeMax,
     *     BusTypeMaxReserved = 127
     * } *PSTORAGE_BUS_TYPE
     * }
     */
    public static final AddressLayout PSTORAGE_BUS_TYPE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICE_MEDIA_INFO {
     *     union {
     *         struct {
     *             LARGE_INTEGER Cylinders;
     *             STORAGE_MEDIA_TYPE MediaType;
     *             DWORD TracksPerCylinder;
     *             DWORD SectorsPerTrack;
     *             DWORD BytesPerSector;
     *             DWORD NumberMediaSides;
     *             DWORD MediaCharacteristics;
     *         } DiskInfo;
     *         struct {
     *             LARGE_INTEGER Cylinders;
     *             STORAGE_MEDIA_TYPE MediaType;
     *             DWORD TracksPerCylinder;
     *             DWORD SectorsPerTrack;
     *             DWORD BytesPerSector;
     *             DWORD NumberMediaSides;
     *             DWORD MediaCharacteristics;
     *         } RemovableDiskInfo;
     *         struct {
     *             STORAGE_MEDIA_TYPE MediaType;
     *             DWORD MediaCharacteristics;
     *             DWORD CurrentBlockSize;
     *             STORAGE_BUS_TYPE BusType;
     *             union {
     *                 struct {
     *                     BYTE MediumType;
     *                     BYTE DensityCode;
     *                 } ScsiInformation;
     *             } BusSpecificData;
     *         } TapeInfo;
     *     } DeviceSpecific;
     * } *PDEVICE_MEDIA_INFO
     * }
     */
    public static final AddressLayout PDEVICE_MEDIA_INFO = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _GET_MEDIA_TYPES {
     *     DWORD DeviceType;
     *     DWORD MediaInfoCount;
     *     DEVICE_MEDIA_INFO MediaInfo[1];
     * } *PGET_MEDIA_TYPES
     * }
     */
    public static final AddressLayout PGET_MEDIA_TYPES = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_PREDICT_FAILURE {
     *     DWORD PredictFailure;
     *     BYTE VendorSpecific[512];
     * } *PSTORAGE_PREDICT_FAILURE
     * }
     */
    public static final AddressLayout PSTORAGE_PREDICT_FAILURE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_FAILURE_PREDICTION_CONFIG {
     *     DWORD Version;
     *     DWORD Size;
     *     BOOLEAN Set;
     *     BOOLEAN Enabled;
     *     WORD Reserved;
     * } *PSTORAGE_FAILURE_PREDICTION_CONFIG
     * }
     */
    public static final AddressLayout PSTORAGE_FAILURE_PREDICTION_CONFIG = winapi.C_POINTER;
    private static final int PropertyStandardQuery = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_QUERY_TYPE.PropertyStandardQuery = 0
     * }
     */
    public static int PropertyStandardQuery() {
        return PropertyStandardQuery;
    }
    private static final int PropertyExistsQuery = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_QUERY_TYPE.PropertyExistsQuery = 1
     * }
     */
    public static int PropertyExistsQuery() {
        return PropertyExistsQuery;
    }
    private static final int PropertyMaskQuery = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_QUERY_TYPE.PropertyMaskQuery = 2
     * }
     */
    public static int PropertyMaskQuery() {
        return PropertyMaskQuery;
    }
    private static final int PropertyQueryMaxDefined = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_QUERY_TYPE.PropertyQueryMaxDefined = 3
     * }
     */
    public static int PropertyQueryMaxDefined() {
        return PropertyQueryMaxDefined;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _STORAGE_QUERY_TYPE {
     *     PropertyStandardQuery = 0,
     *     PropertyExistsQuery,
     *     PropertyMaskQuery,
     *     PropertyQueryMaxDefined
     * } *PSTORAGE_QUERY_TYPE
     * }
     */
    public static final AddressLayout PSTORAGE_QUERY_TYPE = winapi.C_POINTER;
    private static final int PropertyStandardSet = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_SET_TYPE.PropertyStandardSet = 0
     * }
     */
    public static int PropertyStandardSet() {
        return PropertyStandardSet;
    }
    private static final int PropertyExistsSet = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_SET_TYPE.PropertyExistsSet = 1
     * }
     */
    public static int PropertyExistsSet() {
        return PropertyExistsSet;
    }
    private static final int PropertySetMaxDefined = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_SET_TYPE.PropertySetMaxDefined = 2
     * }
     */
    public static int PropertySetMaxDefined() {
        return PropertySetMaxDefined;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _STORAGE_SET_TYPE {
     *     PropertyStandardSet = 0,
     *     PropertyExistsSet,
     *     PropertySetMaxDefined
     * } *PSTORAGE_SET_TYPE
     * }
     */
    public static final AddressLayout PSTORAGE_SET_TYPE = winapi.C_POINTER;
    private static final int StorageDeviceProperty = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROPERTY_ID.StorageDeviceProperty = 0
     * }
     */
    public static int StorageDeviceProperty() {
        return StorageDeviceProperty;
    }
    private static final int StorageAdapterProperty = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROPERTY_ID.StorageAdapterProperty = 1
     * }
     */
    public static int StorageAdapterProperty() {
        return StorageAdapterProperty;
    }
    private static final int StorageDeviceIdProperty = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROPERTY_ID.StorageDeviceIdProperty = 2
     * }
     */
    public static int StorageDeviceIdProperty() {
        return StorageDeviceIdProperty;
    }
    private static final int StorageDeviceUniqueIdProperty = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROPERTY_ID.StorageDeviceUniqueIdProperty = 3
     * }
     */
    public static int StorageDeviceUniqueIdProperty() {
        return StorageDeviceUniqueIdProperty;
    }
    private static final int StorageDeviceWriteCacheProperty = (int)4L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROPERTY_ID.StorageDeviceWriteCacheProperty = 4
     * }
     */
    public static int StorageDeviceWriteCacheProperty() {
        return StorageDeviceWriteCacheProperty;
    }
    private static final int StorageMiniportProperty = (int)5L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROPERTY_ID.StorageMiniportProperty = 5
     * }
     */
    public static int StorageMiniportProperty() {
        return StorageMiniportProperty;
    }
    private static final int StorageAccessAlignmentProperty = (int)6L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROPERTY_ID.StorageAccessAlignmentProperty = 6
     * }
     */
    public static int StorageAccessAlignmentProperty() {
        return StorageAccessAlignmentProperty;
    }
    private static final int StorageDeviceSeekPenaltyProperty = (int)7L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROPERTY_ID.StorageDeviceSeekPenaltyProperty = 7
     * }
     */
    public static int StorageDeviceSeekPenaltyProperty() {
        return StorageDeviceSeekPenaltyProperty;
    }
    private static final int StorageDeviceTrimProperty = (int)8L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROPERTY_ID.StorageDeviceTrimProperty = 8
     * }
     */
    public static int StorageDeviceTrimProperty() {
        return StorageDeviceTrimProperty;
    }
    private static final int StorageDeviceWriteAggregationProperty = (int)9L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROPERTY_ID.StorageDeviceWriteAggregationProperty = 9
     * }
     */
    public static int StorageDeviceWriteAggregationProperty() {
        return StorageDeviceWriteAggregationProperty;
    }
    private static final int StorageDeviceDeviceTelemetryProperty = (int)10L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROPERTY_ID.StorageDeviceDeviceTelemetryProperty = 10
     * }
     */
    public static int StorageDeviceDeviceTelemetryProperty() {
        return StorageDeviceDeviceTelemetryProperty;
    }
    private static final int StorageDeviceLBProvisioningProperty = (int)11L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROPERTY_ID.StorageDeviceLBProvisioningProperty = 11
     * }
     */
    public static int StorageDeviceLBProvisioningProperty() {
        return StorageDeviceLBProvisioningProperty;
    }
    private static final int StorageDevicePowerProperty = (int)12L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROPERTY_ID.StorageDevicePowerProperty = 12
     * }
     */
    public static int StorageDevicePowerProperty() {
        return StorageDevicePowerProperty;
    }
    private static final int StorageDeviceCopyOffloadProperty = (int)13L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROPERTY_ID.StorageDeviceCopyOffloadProperty = 13
     * }
     */
    public static int StorageDeviceCopyOffloadProperty() {
        return StorageDeviceCopyOffloadProperty;
    }
    private static final int StorageDeviceResiliencyProperty = (int)14L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROPERTY_ID.StorageDeviceResiliencyProperty = 14
     * }
     */
    public static int StorageDeviceResiliencyProperty() {
        return StorageDeviceResiliencyProperty;
    }
    private static final int StorageDeviceMediumProductType = (int)15L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROPERTY_ID.StorageDeviceMediumProductType = 15
     * }
     */
    public static int StorageDeviceMediumProductType() {
        return StorageDeviceMediumProductType;
    }
    private static final int StorageAdapterRpmbProperty = (int)16L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROPERTY_ID.StorageAdapterRpmbProperty = 16
     * }
     */
    public static int StorageAdapterRpmbProperty() {
        return StorageAdapterRpmbProperty;
    }
    private static final int StorageAdapterCryptoProperty = (int)17L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROPERTY_ID.StorageAdapterCryptoProperty = 17
     * }
     */
    public static int StorageAdapterCryptoProperty() {
        return StorageAdapterCryptoProperty;
    }
    private static final int StorageDeviceIoCapabilityProperty = (int)48L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROPERTY_ID.StorageDeviceIoCapabilityProperty = 48
     * }
     */
    public static int StorageDeviceIoCapabilityProperty() {
        return StorageDeviceIoCapabilityProperty;
    }
    private static final int StorageAdapterProtocolSpecificProperty = (int)49L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROPERTY_ID.StorageAdapterProtocolSpecificProperty = 49
     * }
     */
    public static int StorageAdapterProtocolSpecificProperty() {
        return StorageAdapterProtocolSpecificProperty;
    }
    private static final int StorageDeviceProtocolSpecificProperty = (int)50L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROPERTY_ID.StorageDeviceProtocolSpecificProperty = 50
     * }
     */
    public static int StorageDeviceProtocolSpecificProperty() {
        return StorageDeviceProtocolSpecificProperty;
    }
    private static final int StorageAdapterTemperatureProperty = (int)51L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROPERTY_ID.StorageAdapterTemperatureProperty = 51
     * }
     */
    public static int StorageAdapterTemperatureProperty() {
        return StorageAdapterTemperatureProperty;
    }
    private static final int StorageDeviceTemperatureProperty = (int)52L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROPERTY_ID.StorageDeviceTemperatureProperty = 52
     * }
     */
    public static int StorageDeviceTemperatureProperty() {
        return StorageDeviceTemperatureProperty;
    }
    private static final int StorageAdapterPhysicalTopologyProperty = (int)53L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROPERTY_ID.StorageAdapterPhysicalTopologyProperty = 53
     * }
     */
    public static int StorageAdapterPhysicalTopologyProperty() {
        return StorageAdapterPhysicalTopologyProperty;
    }
    private static final int StorageDevicePhysicalTopologyProperty = (int)54L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROPERTY_ID.StorageDevicePhysicalTopologyProperty = 54
     * }
     */
    public static int StorageDevicePhysicalTopologyProperty() {
        return StorageDevicePhysicalTopologyProperty;
    }
    private static final int StorageDeviceAttributesProperty = (int)55L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROPERTY_ID.StorageDeviceAttributesProperty = 55
     * }
     */
    public static int StorageDeviceAttributesProperty() {
        return StorageDeviceAttributesProperty;
    }
    private static final int StorageDeviceManagementStatus = (int)56L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROPERTY_ID.StorageDeviceManagementStatus = 56
     * }
     */
    public static int StorageDeviceManagementStatus() {
        return StorageDeviceManagementStatus;
    }
    private static final int StorageAdapterSerialNumberProperty = (int)57L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROPERTY_ID.StorageAdapterSerialNumberProperty = 57
     * }
     */
    public static int StorageAdapterSerialNumberProperty() {
        return StorageAdapterSerialNumberProperty;
    }
    private static final int StorageDeviceLocationProperty = (int)58L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROPERTY_ID.StorageDeviceLocationProperty = 58
     * }
     */
    public static int StorageDeviceLocationProperty() {
        return StorageDeviceLocationProperty;
    }
    private static final int StorageDeviceNumaProperty = (int)59L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROPERTY_ID.StorageDeviceNumaProperty = 59
     * }
     */
    public static int StorageDeviceNumaProperty() {
        return StorageDeviceNumaProperty;
    }
    private static final int StorageDeviceZonedDeviceProperty = (int)60L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROPERTY_ID.StorageDeviceZonedDeviceProperty = 60
     * }
     */
    public static int StorageDeviceZonedDeviceProperty() {
        return StorageDeviceZonedDeviceProperty;
    }
    private static final int StorageDeviceUnsafeShutdownCount = (int)61L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROPERTY_ID.StorageDeviceUnsafeShutdownCount = 61
     * }
     */
    public static int StorageDeviceUnsafeShutdownCount() {
        return StorageDeviceUnsafeShutdownCount;
    }
    private static final int StorageDeviceEnduranceProperty = (int)62L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROPERTY_ID.StorageDeviceEnduranceProperty = 62
     * }
     */
    public static int StorageDeviceEnduranceProperty() {
        return StorageDeviceEnduranceProperty;
    }
    private static final int StorageDeviceLedStateProperty = (int)63L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROPERTY_ID.StorageDeviceLedStateProperty = 63
     * }
     */
    public static int StorageDeviceLedStateProperty() {
        return StorageDeviceLedStateProperty;
    }
    private static final int StorageDeviceSelfEncryptionProperty = (int)64L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROPERTY_ID.StorageDeviceSelfEncryptionProperty = 64
     * }
     */
    public static int StorageDeviceSelfEncryptionProperty() {
        return StorageDeviceSelfEncryptionProperty;
    }
    private static final int StorageFruIdProperty = (int)65L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROPERTY_ID.StorageFruIdProperty = 65
     * }
     */
    public static int StorageFruIdProperty() {
        return StorageFruIdProperty;
    }
    private static final int StorageStackProperty = (int)66L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROPERTY_ID.StorageStackProperty = 66
     * }
     */
    public static int StorageStackProperty() {
        return StorageStackProperty;
    }
    private static final int StorageAdapterProtocolSpecificPropertyEx = (int)67L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROPERTY_ID.StorageAdapterProtocolSpecificPropertyEx = 67
     * }
     */
    public static int StorageAdapterProtocolSpecificPropertyEx() {
        return StorageAdapterProtocolSpecificPropertyEx;
    }
    private static final int StorageDeviceProtocolSpecificPropertyEx = (int)68L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROPERTY_ID.StorageDeviceProtocolSpecificPropertyEx = 68
     * }
     */
    public static int StorageDeviceProtocolSpecificPropertyEx() {
        return StorageDeviceProtocolSpecificPropertyEx;
    }
    private static final int StorageHwCryptoProperty = (int)69L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROPERTY_ID.StorageHwCryptoProperty = 69
     * }
     */
    public static int StorageHwCryptoProperty() {
        return StorageHwCryptoProperty;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _STORAGE_PROPERTY_ID {
     *     StorageDeviceProperty = 0,
     *     StorageAdapterProperty,
     *     StorageDeviceIdProperty,
     *     StorageDeviceUniqueIdProperty,
     *     StorageDeviceWriteCacheProperty,
     *     StorageMiniportProperty,
     *     StorageAccessAlignmentProperty,
     *     StorageDeviceSeekPenaltyProperty,
     *     StorageDeviceTrimProperty,
     *     StorageDeviceWriteAggregationProperty,
     *     StorageDeviceDeviceTelemetryProperty,
     *     StorageDeviceLBProvisioningProperty,
     *     StorageDevicePowerProperty,
     *     StorageDeviceCopyOffloadProperty,
     *     StorageDeviceResiliencyProperty,
     *     StorageDeviceMediumProductType,
     *     StorageAdapterRpmbProperty,
     *     StorageAdapterCryptoProperty,
     *     StorageDeviceIoCapabilityProperty = 48,
     *     StorageAdapterProtocolSpecificProperty,
     *     StorageDeviceProtocolSpecificProperty,
     *     StorageAdapterTemperatureProperty,
     *     StorageDeviceTemperatureProperty,
     *     StorageAdapterPhysicalTopologyProperty,
     *     StorageDevicePhysicalTopologyProperty,
     *     StorageDeviceAttributesProperty,
     *     StorageDeviceManagementStatus,
     *     StorageAdapterSerialNumberProperty,
     *     StorageDeviceLocationProperty,
     *     StorageDeviceNumaProperty,
     *     StorageDeviceZonedDeviceProperty,
     *     StorageDeviceUnsafeShutdownCount,
     *     StorageDeviceEnduranceProperty,
     *     StorageDeviceLedStateProperty,
     *     StorageDeviceSelfEncryptionProperty = 64,
     *     StorageFruIdProperty,
     *     StorageStackProperty,
     *     StorageAdapterProtocolSpecificPropertyEx,
     *     StorageDeviceProtocolSpecificPropertyEx,
     *     StorageHwCryptoProperty
     * } *PSTORAGE_PROPERTY_ID
     * }
     */
    public static final AddressLayout PSTORAGE_PROPERTY_ID = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_PROPERTY_QUERY {
     *     STORAGE_PROPERTY_ID PropertyId;
     *     STORAGE_QUERY_TYPE QueryType;
     *     BYTE AdditionalParameters[1];
     * } *PSTORAGE_PROPERTY_QUERY
     * }
     */
    public static final AddressLayout PSTORAGE_PROPERTY_QUERY = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_PROPERTY_SET {
     *     STORAGE_PROPERTY_ID PropertyId;
     *     STORAGE_SET_TYPE SetType;
     *     BYTE AdditionalParameters[1];
     * } *PSTORAGE_PROPERTY_SET
     * }
     */
    public static final AddressLayout PSTORAGE_PROPERTY_SET = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_DESCRIPTOR_HEADER {
     *     DWORD Version;
     *     DWORD Size;
     * } *PSTORAGE_DESCRIPTOR_HEADER
     * }
     */
    public static final AddressLayout PSTORAGE_DESCRIPTOR_HEADER = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_DEVICE_DESCRIPTOR {
     *     DWORD Version;
     *     DWORD Size;
     *     BYTE DeviceType;
     *     BYTE DeviceTypeModifier;
     *     BOOLEAN RemovableMedia;
     *     BOOLEAN CommandQueueing;
     *     DWORD VendorIdOffset;
     *     DWORD ProductIdOffset;
     *     DWORD ProductRevisionOffset;
     *     DWORD SerialNumberOffset;
     *     STORAGE_BUS_TYPE BusType;
     *     DWORD RawPropertiesLength;
     *     BYTE RawDeviceProperties[1];
     * } *PSTORAGE_DEVICE_DESCRIPTOR
     * }
     */
    public static final AddressLayout PSTORAGE_DEVICE_DESCRIPTOR = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_ADAPTER_DESCRIPTOR {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORD MaximumTransferLength;
     *     DWORD MaximumPhysicalPages;
     *     DWORD AlignmentMask;
     *     BOOLEAN AdapterUsesPio;
     *     BOOLEAN AdapterScansDown;
     *     BOOLEAN CommandQueueing;
     *     BOOLEAN AcceleratedTransfer;
     *     BYTE BusType;
     *     WORD BusMajorVersion;
     *     WORD BusMinorVersion;
     *     BYTE SrbType;
     *     BYTE AddressType;
     * } *PSTORAGE_ADAPTER_DESCRIPTOR
     * }
     */
    public static final AddressLayout PSTORAGE_ADAPTER_DESCRIPTOR = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORD BytesPerCacheLine;
     *     DWORD BytesOffsetForCacheAlignment;
     *     DWORD BytesPerLogicalSector;
     *     DWORD BytesPerPhysicalSector;
     *     DWORD BytesOffsetForSectorAlignment;
     * } *PSTORAGE_ACCESS_ALIGNMENT_DESCRIPTOR
     * }
     */
    public static final AddressLayout PSTORAGE_ACCESS_ALIGNMENT_DESCRIPTOR = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_MEDIUM_PRODUCT_TYPE_DESCRIPTOR {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORD MediumProductType;
     * } *PSTORAGE_MEDIUM_PRODUCT_TYPE_DESCRIPTOR
     * }
     */
    public static final AddressLayout PSTORAGE_MEDIUM_PRODUCT_TYPE_DESCRIPTOR = winapi.C_POINTER;
    private static final int StoragePortCodeSetReserved = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PORT_CODE_SET.StoragePortCodeSetReserved = 0
     * }
     */
    public static int StoragePortCodeSetReserved() {
        return StoragePortCodeSetReserved;
    }
    private static final int StoragePortCodeSetStorport = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PORT_CODE_SET.StoragePortCodeSetStorport = 1
     * }
     */
    public static int StoragePortCodeSetStorport() {
        return StoragePortCodeSetStorport;
    }
    private static final int StoragePortCodeSetSCSIport = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PORT_CODE_SET.StoragePortCodeSetSCSIport = 2
     * }
     */
    public static int StoragePortCodeSetSCSIport() {
        return StoragePortCodeSetSCSIport;
    }
    private static final int StoragePortCodeSetSpaceport = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PORT_CODE_SET.StoragePortCodeSetSpaceport = 3
     * }
     */
    public static int StoragePortCodeSetSpaceport() {
        return StoragePortCodeSetSpaceport;
    }
    private static final int StoragePortCodeSetATAport = (int)4L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PORT_CODE_SET.StoragePortCodeSetATAport = 4
     * }
     */
    public static int StoragePortCodeSetATAport() {
        return StoragePortCodeSetATAport;
    }
    private static final int StoragePortCodeSetUSBport = (int)5L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PORT_CODE_SET.StoragePortCodeSetUSBport = 5
     * }
     */
    public static int StoragePortCodeSetUSBport() {
        return StoragePortCodeSetUSBport;
    }
    private static final int StoragePortCodeSetSBP2port = (int)6L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PORT_CODE_SET.StoragePortCodeSetSBP2port = 6
     * }
     */
    public static int StoragePortCodeSetSBP2port() {
        return StoragePortCodeSetSBP2port;
    }
    private static final int StoragePortCodeSetSDport = (int)7L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PORT_CODE_SET.StoragePortCodeSetSDport = 7
     * }
     */
    public static int StoragePortCodeSetSDport() {
        return StoragePortCodeSetSDport;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _STORAGE_PORT_CODE_SET {
     *     StoragePortCodeSetReserved = 0,
     *     StoragePortCodeSetStorport = 1,
     *     StoragePortCodeSetSCSIport = 2,
     *     StoragePortCodeSetSpaceport = 3,
     *     StoragePortCodeSetATAport = 4,
     *     StoragePortCodeSetUSBport = 5,
     *     StoragePortCodeSetSBP2port = 6,
     *     StoragePortCodeSetSDport = 7
     * } *PSTORAGE_PORT_CODE_SET
     * }
     */
    public static final AddressLayout PSTORAGE_PORT_CODE_SET = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_MINIPORT_DESCRIPTOR {
     *     DWORD Version;
     *     DWORD Size;
     *     STORAGE_PORT_CODE_SET Portdriver;
     *     BOOLEAN LUNResetSupported;
     *     BOOLEAN TargetResetSupported;
     *     WORD IoTimeoutValue;
     *     BOOLEAN ExtraIoInfoSupported;
     *     union {
     *         struct {
     *             BYTE LogicalPoFxForDisk : 1;
     *             BYTE ForwardIo : 1;
     *             BYTE Reserved : 6;
     *         };
     *         BYTE AsBYTE;
     *     } Flags;
     *     BYTE Reserved0[2];
     *     DWORD Reserved1;
     * } *PSTORAGE_MINIPORT_DESCRIPTOR
     * }
     */
    public static final AddressLayout PSTORAGE_MINIPORT_DESCRIPTOR = winapi.C_POINTER;
    private static final int StorageIdCodeSetReserved = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_IDENTIFIER_CODE_SET.StorageIdCodeSetReserved = 0
     * }
     */
    public static int StorageIdCodeSetReserved() {
        return StorageIdCodeSetReserved;
    }
    private static final int StorageIdCodeSetBinary = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_IDENTIFIER_CODE_SET.StorageIdCodeSetBinary = 1
     * }
     */
    public static int StorageIdCodeSetBinary() {
        return StorageIdCodeSetBinary;
    }
    private static final int StorageIdCodeSetAscii = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_IDENTIFIER_CODE_SET.StorageIdCodeSetAscii = 2
     * }
     */
    public static int StorageIdCodeSetAscii() {
        return StorageIdCodeSetAscii;
    }
    private static final int StorageIdCodeSetUtf8 = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_IDENTIFIER_CODE_SET.StorageIdCodeSetUtf8 = 3
     * }
     */
    public static int StorageIdCodeSetUtf8() {
        return StorageIdCodeSetUtf8;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _STORAGE_IDENTIFIER_CODE_SET {
     *     StorageIdCodeSetReserved = 0,
     *     StorageIdCodeSetBinary = 1,
     *     StorageIdCodeSetAscii = 2,
     *     StorageIdCodeSetUtf8 = 3
     * } *PSTORAGE_IDENTIFIER_CODE_SET
     * }
     */
    public static final AddressLayout PSTORAGE_IDENTIFIER_CODE_SET = winapi.C_POINTER;
    private static final int StorageIdTypeVendorSpecific = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_IDENTIFIER_TYPE.StorageIdTypeVendorSpecific = 0
     * }
     */
    public static int StorageIdTypeVendorSpecific() {
        return StorageIdTypeVendorSpecific;
    }
    private static final int StorageIdTypeVendorId = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_IDENTIFIER_TYPE.StorageIdTypeVendorId = 1
     * }
     */
    public static int StorageIdTypeVendorId() {
        return StorageIdTypeVendorId;
    }
    private static final int StorageIdTypeEUI64 = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_IDENTIFIER_TYPE.StorageIdTypeEUI64 = 2
     * }
     */
    public static int StorageIdTypeEUI64() {
        return StorageIdTypeEUI64;
    }
    private static final int StorageIdTypeFCPHName = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_IDENTIFIER_TYPE.StorageIdTypeFCPHName = 3
     * }
     */
    public static int StorageIdTypeFCPHName() {
        return StorageIdTypeFCPHName;
    }
    private static final int StorageIdTypePortRelative = (int)4L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_IDENTIFIER_TYPE.StorageIdTypePortRelative = 4
     * }
     */
    public static int StorageIdTypePortRelative() {
        return StorageIdTypePortRelative;
    }
    private static final int StorageIdTypeTargetPortGroup = (int)5L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_IDENTIFIER_TYPE.StorageIdTypeTargetPortGroup = 5
     * }
     */
    public static int StorageIdTypeTargetPortGroup() {
        return StorageIdTypeTargetPortGroup;
    }
    private static final int StorageIdTypeLogicalUnitGroup = (int)6L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_IDENTIFIER_TYPE.StorageIdTypeLogicalUnitGroup = 6
     * }
     */
    public static int StorageIdTypeLogicalUnitGroup() {
        return StorageIdTypeLogicalUnitGroup;
    }
    private static final int StorageIdTypeMD5LogicalUnitIdentifier = (int)7L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_IDENTIFIER_TYPE.StorageIdTypeMD5LogicalUnitIdentifier = 7
     * }
     */
    public static int StorageIdTypeMD5LogicalUnitIdentifier() {
        return StorageIdTypeMD5LogicalUnitIdentifier;
    }
    private static final int StorageIdTypeScsiNameString = (int)8L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_IDENTIFIER_TYPE.StorageIdTypeScsiNameString = 8
     * }
     */
    public static int StorageIdTypeScsiNameString() {
        return StorageIdTypeScsiNameString;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _STORAGE_IDENTIFIER_TYPE {
     *     StorageIdTypeVendorSpecific = 0,
     *     StorageIdTypeVendorId = 1,
     *     StorageIdTypeEUI64 = 2,
     *     StorageIdTypeFCPHName = 3,
     *     StorageIdTypePortRelative = 4,
     *     StorageIdTypeTargetPortGroup = 5,
     *     StorageIdTypeLogicalUnitGroup = 6,
     *     StorageIdTypeMD5LogicalUnitIdentifier = 7,
     *     StorageIdTypeScsiNameString = 8
     * } *PSTORAGE_IDENTIFIER_TYPE
     * }
     */
    public static final AddressLayout PSTORAGE_IDENTIFIER_TYPE = winapi.C_POINTER;
    private static final int StorageIdNAAFormatIEEEExtended = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_ID_NAA_FORMAT.StorageIdNAAFormatIEEEExtended = 2
     * }
     */
    public static int StorageIdNAAFormatIEEEExtended() {
        return StorageIdNAAFormatIEEEExtended;
    }
    private static final int StorageIdNAAFormatIEEERegistered = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_ID_NAA_FORMAT.StorageIdNAAFormatIEEERegistered = 3
     * }
     */
    public static int StorageIdNAAFormatIEEERegistered() {
        return StorageIdNAAFormatIEEERegistered;
    }
    private static final int StorageIdNAAFormatIEEEERegisteredExtended = (int)5L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_ID_NAA_FORMAT.StorageIdNAAFormatIEEEERegisteredExtended = 5
     * }
     */
    public static int StorageIdNAAFormatIEEEERegisteredExtended() {
        return StorageIdNAAFormatIEEEERegisteredExtended;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _STORAGE_ID_NAA_FORMAT {
     *     StorageIdNAAFormatIEEEExtended = 2,
     *     StorageIdNAAFormatIEEERegistered = 3,
     *     StorageIdNAAFormatIEEEERegisteredExtended = 5
     * } *PSTORAGE_ID_NAA_FORMAT
     * }
     */
    public static final AddressLayout PSTORAGE_ID_NAA_FORMAT = winapi.C_POINTER;
    private static final int StorageIdAssocDevice = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_ASSOCIATION_TYPE.StorageIdAssocDevice = 0
     * }
     */
    public static int StorageIdAssocDevice() {
        return StorageIdAssocDevice;
    }
    private static final int StorageIdAssocPort = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_ASSOCIATION_TYPE.StorageIdAssocPort = 1
     * }
     */
    public static int StorageIdAssocPort() {
        return StorageIdAssocPort;
    }
    private static final int StorageIdAssocTarget = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_ASSOCIATION_TYPE.StorageIdAssocTarget = 2
     * }
     */
    public static int StorageIdAssocTarget() {
        return StorageIdAssocTarget;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _STORAGE_ASSOCIATION_TYPE {
     *     StorageIdAssocDevice = 0,
     *     StorageIdAssocPort = 1,
     *     StorageIdAssocTarget = 2
     * } *PSTORAGE_ASSOCIATION_TYPE
     * }
     */
    public static final AddressLayout PSTORAGE_ASSOCIATION_TYPE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_IDENTIFIER {
     *     STORAGE_IDENTIFIER_CODE_SET CodeSet;
     *     STORAGE_IDENTIFIER_TYPE Type;
     *     WORD IdentifierSize;
     *     WORD NextOffset;
     *     STORAGE_ASSOCIATION_TYPE Association;
     *     BYTE Identifier[1];
     * } *PSTORAGE_IDENTIFIER
     * }
     */
    public static final AddressLayout PSTORAGE_IDENTIFIER = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_DEVICE_ID_DESCRIPTOR {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORD NumberOfIdentifiers;
     *     BYTE Identifiers[1];
     * } *PSTORAGE_DEVICE_ID_DESCRIPTOR
     * }
     */
    public static final AddressLayout PSTORAGE_DEVICE_ID_DESCRIPTOR = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICE_SEEK_PENALTY_DESCRIPTOR {
     *     DWORD Version;
     *     DWORD Size;
     *     BOOLEAN IncursSeekPenalty;
     * } *PDEVICE_SEEK_PENALTY_DESCRIPTOR
     * }
     */
    public static final AddressLayout PDEVICE_SEEK_PENALTY_DESCRIPTOR = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICE_WRITE_AGGREGATION_DESCRIPTOR {
     *     DWORD Version;
     *     DWORD Size;
     *     BOOLEAN BenefitsFromWriteAggregation;
     * } *PDEVICE_WRITE_AGGREGATION_DESCRIPTOR
     * }
     */
    public static final AddressLayout PDEVICE_WRITE_AGGREGATION_DESCRIPTOR = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICE_TRIM_DESCRIPTOR {
     *     DWORD Version;
     *     DWORD Size;
     *     BOOLEAN TrimEnabled;
     * } *PDEVICE_TRIM_DESCRIPTOR
     * }
     */
    public static final AddressLayout PDEVICE_TRIM_DESCRIPTOR = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICE_LB_PROVISIONING_DESCRIPTOR {
     *     DWORD Version;
     *     DWORD Size;
     *     BYTE ThinProvisioningEnabled : 1;
     *     BYTE ThinProvisioningReadZeros : 1;
     *     BYTE AnchorSupported : 3;
     *     BYTE UnmapGranularityAlignmentValid : 1;
     *     BYTE GetFreeSpaceSupported : 1;
     *     BYTE MapSupported : 1;
     *     BYTE Reserved1[7];
     *     DWORDLONG OptimalUnmapGranularity;
     *     DWORDLONG UnmapGranularityAlignment;
     *     DWORD MaxUnmapLbaCount;
     *     DWORD MaxUnmapBlockDescriptorCount;
     * } *PDEVICE_LB_PROVISIONING_DESCRIPTOR
     * }
     */
    public static final AddressLayout PDEVICE_LB_PROVISIONING_DESCRIPTOR = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_LB_PROVISIONING_MAP_RESOURCES {
     *     DWORD Size;
     *     DWORD Version;
     *     BYTE AvailableMappingResourcesValid : 1;
     *     BYTE UsedMappingResourcesValid : 1;
     *     BYTE Reserved0 : 6;
     *     BYTE Reserved1[3];
     *     BYTE AvailableMappingResourcesScope : 2;
     *     BYTE UsedMappingResourcesScope : 2;
     *     BYTE Reserved2 : 4;
     *     BYTE Reserved3[3];
     *     DWORDLONG AvailableMappingResources;
     *     DWORDLONG UsedMappingResources;
     * } *PSTORAGE_LB_PROVISIONING_MAP_RESOURCES
     * }
     */
    public static final AddressLayout PSTORAGE_LB_PROVISIONING_MAP_RESOURCES = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICE_POWER_DESCRIPTOR {
     *     DWORD Version;
     *     DWORD Size;
     *     BOOLEAN DeviceAttentionSupported;
     *     BOOLEAN AsynchronousNotificationSupported;
     *     BOOLEAN IdlePowerManagementEnabled;
     *     BOOLEAN D3ColdEnabled;
     *     BOOLEAN D3ColdSupported;
     *     BOOLEAN NoVerifyDuringIdlePower;
     *     BYTE Reserved[2];
     *     DWORD IdleTimeoutInMS;
     * } *PDEVICE_POWER_DESCRIPTOR
     * }
     */
    public static final AddressLayout PDEVICE_POWER_DESCRIPTOR = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICE_COPY_OFFLOAD_DESCRIPTOR {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORD MaximumTokenLifetime;
     *     DWORD DefaultTokenLifetime;
     *     DWORDLONG MaximumTransferSize;
     *     DWORDLONG OptimalTransferCount;
     *     DWORD MaximumDataDescriptors;
     *     DWORD MaximumTransferLengthPerDescriptor;
     *     DWORD OptimalTransferLengthPerDescriptor;
     *     WORD OptimalTransferLengthGranularity;
     *     BYTE Reserved[2];
     * } *PDEVICE_COPY_OFFLOAD_DESCRIPTOR
     * }
     */
    public static final AddressLayout PDEVICE_COPY_OFFLOAD_DESCRIPTOR = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORD NameOffset;
     *     DWORD NumberOfLogicalCopies;
     *     DWORD NumberOfPhysicalCopies;
     *     DWORD PhysicalDiskRedundancy;
     *     DWORD NumberOfColumns;
     *     DWORD Interleave;
     * } *PSTORAGE_DEVICE_RESILIENCY_DESCRIPTOR
     * }
     */
    public static final AddressLayout PSTORAGE_DEVICE_RESILIENCY_DESCRIPTOR = winapi.C_POINTER;
    private static final int StorageRpmbFrameTypeUnknown = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_RPMB_FRAME_TYPE.StorageRpmbFrameTypeUnknown = 0
     * }
     */
    public static int StorageRpmbFrameTypeUnknown() {
        return StorageRpmbFrameTypeUnknown;
    }
    private static final int StorageRpmbFrameTypeStandard = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_RPMB_FRAME_TYPE.StorageRpmbFrameTypeStandard = 1
     * }
     */
    public static int StorageRpmbFrameTypeStandard() {
        return StorageRpmbFrameTypeStandard;
    }
    private static final int StorageRpmbFrameTypeMax = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_RPMB_FRAME_TYPE.StorageRpmbFrameTypeMax = 2
     * }
     */
    public static int StorageRpmbFrameTypeMax() {
        return StorageRpmbFrameTypeMax;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _STORAGE_RPMB_FRAME_TYPE {
     *     StorageRpmbFrameTypeUnknown = 0,
     *     StorageRpmbFrameTypeStandard,
     *     StorageRpmbFrameTypeMax
     * } *PSTORAGE_RPMB_FRAME_TYPE
     * }
     */
    public static final AddressLayout PSTORAGE_RPMB_FRAME_TYPE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_RPMB_DESCRIPTOR {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORD SizeInBytes;
     *     DWORD MaxReliableWriteSizeInBytes;
     *     STORAGE_RPMB_FRAME_TYPE FrameFormat;
     * } *PSTORAGE_RPMB_DESCRIPTOR
     * }
     */
    public static final AddressLayout PSTORAGE_RPMB_DESCRIPTOR = winapi.C_POINTER;
    private static final int StorageCryptoAlgorithmUnknown = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_CRYPTO_ALGORITHM_ID.StorageCryptoAlgorithmUnknown = 0
     * }
     */
    public static int StorageCryptoAlgorithmUnknown() {
        return StorageCryptoAlgorithmUnknown;
    }
    private static final int StorageCryptoAlgorithmXTSAES = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_CRYPTO_ALGORITHM_ID.StorageCryptoAlgorithmXTSAES = 1
     * }
     */
    public static int StorageCryptoAlgorithmXTSAES() {
        return StorageCryptoAlgorithmXTSAES;
    }
    private static final int StorageCryptoAlgorithmBitlockerAESCBC = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_CRYPTO_ALGORITHM_ID.StorageCryptoAlgorithmBitlockerAESCBC = 2
     * }
     */
    public static int StorageCryptoAlgorithmBitlockerAESCBC() {
        return StorageCryptoAlgorithmBitlockerAESCBC;
    }
    private static final int StorageCryptoAlgorithmAESECB = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_CRYPTO_ALGORITHM_ID.StorageCryptoAlgorithmAESECB = 3
     * }
     */
    public static int StorageCryptoAlgorithmAESECB() {
        return StorageCryptoAlgorithmAESECB;
    }
    private static final int StorageCryptoAlgorithmESSIVAESCBC = (int)4L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_CRYPTO_ALGORITHM_ID.StorageCryptoAlgorithmESSIVAESCBC = 4
     * }
     */
    public static int StorageCryptoAlgorithmESSIVAESCBC() {
        return StorageCryptoAlgorithmESSIVAESCBC;
    }
    private static final int StorageCryptoAlgorithmMax = (int)5L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_CRYPTO_ALGORITHM_ID.StorageCryptoAlgorithmMax = 5
     * }
     */
    public static int StorageCryptoAlgorithmMax() {
        return StorageCryptoAlgorithmMax;
    }
    private static final int StorCryptoAlgorithmUnknown = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_CRYPTO_ALGORITHM_ID.StorCryptoAlgorithmUnknown = 0
     * }
     */
    public static int StorCryptoAlgorithmUnknown() {
        return StorCryptoAlgorithmUnknown;
    }
    private static final int StorCryptoAlgorithmXTSAES = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_CRYPTO_ALGORITHM_ID.StorCryptoAlgorithmXTSAES = 1
     * }
     */
    public static int StorCryptoAlgorithmXTSAES() {
        return StorCryptoAlgorithmXTSAES;
    }
    private static final int StorCryptoAlgorithmBitlockerAESCBC = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_CRYPTO_ALGORITHM_ID.StorCryptoAlgorithmBitlockerAESCBC = 2
     * }
     */
    public static int StorCryptoAlgorithmBitlockerAESCBC() {
        return StorCryptoAlgorithmBitlockerAESCBC;
    }
    private static final int StorCryptoAlgorithmAESECB = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_CRYPTO_ALGORITHM_ID.StorCryptoAlgorithmAESECB = 3
     * }
     */
    public static int StorCryptoAlgorithmAESECB() {
        return StorCryptoAlgorithmAESECB;
    }
    private static final int StorCryptoAlgorithmESSIVAESCBC = (int)4L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_CRYPTO_ALGORITHM_ID.StorCryptoAlgorithmESSIVAESCBC = 4
     * }
     */
    public static int StorCryptoAlgorithmESSIVAESCBC() {
        return StorCryptoAlgorithmESSIVAESCBC;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _STORAGE_CRYPTO_ALGORITHM_ID {
     *     StorageCryptoAlgorithmUnknown = 0,
     *     StorageCryptoAlgorithmXTSAES = 1,
     *     StorageCryptoAlgorithmBitlockerAESCBC,
     *     StorageCryptoAlgorithmAESECB,
     *     StorageCryptoAlgorithmESSIVAESCBC,
     *     StorageCryptoAlgorithmMax,
     *     StorCryptoAlgorithmUnknown = StorageCryptoAlgorithmUnknown,
     *     StorCryptoAlgorithmXTSAES = StorageCryptoAlgorithmXTSAES,
     *     StorCryptoAlgorithmBitlockerAESCBC = StorageCryptoAlgorithmBitlockerAESCBC,
     *     StorCryptoAlgorithmAESECB = StorageCryptoAlgorithmAESECB,
     *     StorCryptoAlgorithmESSIVAESCBC = StorageCryptoAlgorithmESSIVAESCBC
     * } *PSTORAGE_CRYPTO_ALGORITHM_ID
     * }
     */
    public static final AddressLayout PSTORAGE_CRYPTO_ALGORITHM_ID = winapi.C_POINTER;
    private static final int StorageCryptoKeySizeUnknown = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_CRYPTO_KEY_SIZE.StorageCryptoKeySizeUnknown = 0
     * }
     */
    public static int StorageCryptoKeySizeUnknown() {
        return StorageCryptoKeySizeUnknown;
    }
    private static final int StorageCryptoKeySize128Bits = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_CRYPTO_KEY_SIZE.StorageCryptoKeySize128Bits = 1
     * }
     */
    public static int StorageCryptoKeySize128Bits() {
        return StorageCryptoKeySize128Bits;
    }
    private static final int StorageCryptoKeySize192Bits = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_CRYPTO_KEY_SIZE.StorageCryptoKeySize192Bits = 2
     * }
     */
    public static int StorageCryptoKeySize192Bits() {
        return StorageCryptoKeySize192Bits;
    }
    private static final int StorageCryptoKeySize256Bits = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_CRYPTO_KEY_SIZE.StorageCryptoKeySize256Bits = 3
     * }
     */
    public static int StorageCryptoKeySize256Bits() {
        return StorageCryptoKeySize256Bits;
    }
    private static final int StorageCryptoKeySize512Bits = (int)4L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_CRYPTO_KEY_SIZE.StorageCryptoKeySize512Bits = 4
     * }
     */
    public static int StorageCryptoKeySize512Bits() {
        return StorageCryptoKeySize512Bits;
    }
    private static final int StorageCryptoKeySizeMax = (int)5L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_CRYPTO_KEY_SIZE.StorageCryptoKeySizeMax = 5
     * }
     */
    public static int StorageCryptoKeySizeMax() {
        return StorageCryptoKeySizeMax;
    }
    private static final int StorCryptoKeySizeUnknown = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_CRYPTO_KEY_SIZE.StorCryptoKeySizeUnknown = 0
     * }
     */
    public static int StorCryptoKeySizeUnknown() {
        return StorCryptoKeySizeUnknown;
    }
    private static final int StorCryptoKeySize128Bits = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_CRYPTO_KEY_SIZE.StorCryptoKeySize128Bits = 1
     * }
     */
    public static int StorCryptoKeySize128Bits() {
        return StorCryptoKeySize128Bits;
    }
    private static final int StorCryptoKeySize192Bits = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_CRYPTO_KEY_SIZE.StorCryptoKeySize192Bits = 2
     * }
     */
    public static int StorCryptoKeySize192Bits() {
        return StorCryptoKeySize192Bits;
    }
    private static final int StorCryptoKeySize256Bits = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_CRYPTO_KEY_SIZE.StorCryptoKeySize256Bits = 3
     * }
     */
    public static int StorCryptoKeySize256Bits() {
        return StorCryptoKeySize256Bits;
    }
    private static final int StorCryptoKeySize512Bits = (int)4L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_CRYPTO_KEY_SIZE.StorCryptoKeySize512Bits = 4
     * }
     */
    public static int StorCryptoKeySize512Bits() {
        return StorCryptoKeySize512Bits;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _STORAGE_CRYPTO_KEY_SIZE {
     *     StorageCryptoKeySizeUnknown = 0,
     *     StorageCryptoKeySize128Bits = 1,
     *     StorageCryptoKeySize192Bits,
     *     StorageCryptoKeySize256Bits,
     *     StorageCryptoKeySize512Bits,
     *     StorageCryptoKeySizeMax,
     *     StorCryptoKeySizeUnknown = StorageCryptoKeySizeUnknown,
     *     StorCryptoKeySize128Bits = StorageCryptoKeySize128Bits,
     *     StorCryptoKeySize192Bits = StorageCryptoKeySize192Bits,
     *     StorCryptoKeySize256Bits = StorageCryptoKeySize256Bits,
     *     StorCryptoKeySize512Bits = StorageCryptoKeySize512Bits
     * } *PSTORAGE_CRYPTO_KEY_SIZE
     * }
     */
    public static final AddressLayout PSTORAGE_CRYPTO_KEY_SIZE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_CRYPTO_CAPABILITY {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORD CryptoCapabilityIndex;
     *     STORAGE_CRYPTO_ALGORITHM_ID AlgorithmId;
     *     STORAGE_CRYPTO_KEY_SIZE KeySize;
     *     DWORD DataUnitSizeBitmask;
     * } *PSTORAGE_CRYPTO_CAPABILITY
     * }
     */
    public static final AddressLayout PSTORAGE_CRYPTO_CAPABILITY = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_CRYPTO_CAPABILITY_V2 {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORD CryptoCapabilityIndex;
     *     STORAGE_CRYPTO_ALGORITHM_ID AlgorithmId;
     *     STORAGE_CRYPTO_KEY_SIZE KeySize;
     *     DWORD DataUnitSizeBitmask;
     *     WORD MaxIVBitSize;
     *     WORD Reserved;
     *     STORAGE_SECURITY_COMPLIANCE_BITMASK SecurityComplianceBitmask;
     * } *PSTORAGE_CRYPTO_CAPABILITY_V2
     * }
     */
    public static final AddressLayout PSTORAGE_CRYPTO_CAPABILITY_V2 = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_CRYPTO_DESCRIPTOR {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORD NumKeysSupported;
     *     DWORD NumCryptoCapabilities;
     *     STORAGE_CRYPTO_CAPABILITY CryptoCapabilities[1];
     * } *PSTORAGE_CRYPTO_DESCRIPTOR
     * }
     */
    public static final AddressLayout PSTORAGE_CRYPTO_DESCRIPTOR = winapi.C_POINTER;
    private static final int StorageIceTypeUnknown = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_ICE_TYPE.StorageIceTypeUnknown = 0
     * }
     */
    public static int StorageIceTypeUnknown() {
        return StorageIceTypeUnknown;
    }
    private static final int StorageIceTypeUfs = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_ICE_TYPE.StorageIceTypeUfs = 1
     * }
     */
    public static int StorageIceTypeUfs() {
        return StorageIceTypeUfs;
    }
    private static final int StorageIceTypeNvme = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_ICE_TYPE.StorageIceTypeNvme = 2
     * }
     */
    public static int StorageIceTypeNvme() {
        return StorageIceTypeNvme;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _STORAGE_ICE_TYPE {
     *     StorageIceTypeUnknown = 0,
     *     StorageIceTypeUfs,
     *     StorageIceTypeNvme
     * } *PSTORAGE_ICE_TYPE
     * }
     */
    public static final AddressLayout PSTORAGE_ICE_TYPE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_CRYPTO_DESCRIPTOR_V2 {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORD NumKeysSupported;
     *     DWORD NumCryptoCapabilities;
     *     STORAGE_ICE_TYPE IceType;
     *     STORAGE_SECURITY_COMPLIANCE_BITMASK SecurityComplianceBitmask;
     *     STORAGE_CRYPTO_KEY_TYPE KeyTypeBitmask;
     *     STORAGE_CRYPTO_CAPABILITY_V2 CryptoCapabilities[1];
     * } *PSTORAGE_CRYPTO_DESCRIPTOR_V2
     * }
     */
    public static final AddressLayout PSTORAGE_CRYPTO_DESCRIPTOR_V2 = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_HW_CRYPTO_CAPABILITY {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORD CryptoCapabilityIndex;
     *     STORAGE_CRYPTO_ALGORITHM_ID AlgorithmId;
     *     STORAGE_CRYPTO_KEY_SIZE KeySize;
     *     DWORD DataUnitSizeBitmask;
     *     WORD MaxIVBitSize;
     *     WORD Reserved;
     *     STORAGE_SECURITY_COMPLIANCE_BITMASK SecurityComplianceBitmask;
     * } *PSTORAGE_HW_CRYPTO_CAPABILITY
     * }
     */
    public static final AddressLayout PSTORAGE_HW_CRYPTO_CAPABILITY = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_HW_CRYPTO_DESCRIPTOR {
     *     STORAGE_DESCRIPTOR_HEADER Header;
     *     DWORD NumKeysSupported;
     *     DWORD NumCryptoCapabilities;
     *     DWORD OffsetToCryptoCapabilities;
     *     DWORD SizeOfCryptoCapability;
     *     STORAGE_ICE_TYPE IceType;
     *     STORAGE_SECURITY_COMPLIANCE_BITMASK SecurityComplianceBitmask;
     *     STORAGE_CRYPTO_KEY_TYPE KeyTypeBitmask;
     * } *PSTORAGE_HW_CRYPTO_DESCRIPTOR
     * }
     */
    public static final AddressLayout PSTORAGE_HW_CRYPTO_DESCRIPTOR = winapi.C_POINTER;
    private static final int StorageTierMediaTypeUnspecified = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_TIER_MEDIA_TYPE.StorageTierMediaTypeUnspecified = 0
     * }
     */
    public static int StorageTierMediaTypeUnspecified() {
        return StorageTierMediaTypeUnspecified;
    }
    private static final int StorageTierMediaTypeDisk = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_TIER_MEDIA_TYPE.StorageTierMediaTypeDisk = 1
     * }
     */
    public static int StorageTierMediaTypeDisk() {
        return StorageTierMediaTypeDisk;
    }
    private static final int StorageTierMediaTypeSsd = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_TIER_MEDIA_TYPE.StorageTierMediaTypeSsd = 2
     * }
     */
    public static int StorageTierMediaTypeSsd() {
        return StorageTierMediaTypeSsd;
    }
    private static final int StorageTierMediaTypeScm = (int)4L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_TIER_MEDIA_TYPE.StorageTierMediaTypeScm = 4
     * }
     */
    public static int StorageTierMediaTypeScm() {
        return StorageTierMediaTypeScm;
    }
    private static final int StorageTierMediaTypeMax = (int)5L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_TIER_MEDIA_TYPE.StorageTierMediaTypeMax = 5
     * }
     */
    public static int StorageTierMediaTypeMax() {
        return StorageTierMediaTypeMax;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _STORAGE_TIER_MEDIA_TYPE {
     *     StorageTierMediaTypeUnspecified = 0,
     *     StorageTierMediaTypeDisk = 1,
     *     StorageTierMediaTypeSsd = 2,
     *     StorageTierMediaTypeScm = 4,
     *     StorageTierMediaTypeMax
     * } *PSTORAGE_TIER_MEDIA_TYPE
     * }
     */
    public static final AddressLayout PSTORAGE_TIER_MEDIA_TYPE = winapi.C_POINTER;
    private static final int StorageTierClassUnspecified = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_TIER_CLASS.StorageTierClassUnspecified = 0
     * }
     */
    public static int StorageTierClassUnspecified() {
        return StorageTierClassUnspecified;
    }
    private static final int StorageTierClassCapacity = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_TIER_CLASS.StorageTierClassCapacity = 1
     * }
     */
    public static int StorageTierClassCapacity() {
        return StorageTierClassCapacity;
    }
    private static final int StorageTierClassPerformance = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_TIER_CLASS.StorageTierClassPerformance = 2
     * }
     */
    public static int StorageTierClassPerformance() {
        return StorageTierClassPerformance;
    }
    private static final int StorageTierClassMax = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_TIER_CLASS.StorageTierClassMax = 3
     * }
     */
    public static int StorageTierClassMax() {
        return StorageTierClassMax;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _STORAGE_TIER_CLASS {
     *     StorageTierClassUnspecified = 0,
     *     StorageTierClassCapacity,
     *     StorageTierClassPerformance,
     *     StorageTierClassMax
     * } *PSTORAGE_TIER_CLASS
     * }
     */
    public static final AddressLayout PSTORAGE_TIER_CLASS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_TIER {
     *     GUID Id;
     *     WCHAR Name[256];
     *     WCHAR Description[256];
     *     DWORDLONG Flags;
     *     DWORDLONG ProvisionedCapacity;
     *     STORAGE_TIER_MEDIA_TYPE MediaType;
     *     STORAGE_TIER_CLASS Class;
     * } *PSTORAGE_TIER
     * }
     */
    public static final AddressLayout PSTORAGE_TIER = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_DEVICE_TIERING_DESCRIPTOR {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORD Flags;
     *     DWORD TotalNumberOfTiers;
     *     DWORD NumberOfTiersReturned;
     *     STORAGE_TIER Tiers[1];
     * } *PSTORAGE_DEVICE_TIERING_DESCRIPTOR
     * }
     */
    public static final AddressLayout PSTORAGE_DEVICE_TIERING_DESCRIPTOR = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_DEVICE_FAULT_DOMAIN_DESCRIPTOR {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORD NumberOfFaultDomains;
     *     GUID FaultDomainIds[1];
     * } *PSTORAGE_DEVICE_FAULT_DOMAIN_DESCRIPTOR
     * }
     */
    public static final AddressLayout PSTORAGE_DEVICE_FAULT_DOMAIN_DESCRIPTOR = winapi.C_POINTER;
    private static final int ProtocolTypeUnknown = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROTOCOL_TYPE.ProtocolTypeUnknown = 0
     * }
     */
    public static int ProtocolTypeUnknown() {
        return ProtocolTypeUnknown;
    }
    private static final int ProtocolTypeScsi = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROTOCOL_TYPE.ProtocolTypeScsi = 1
     * }
     */
    public static int ProtocolTypeScsi() {
        return ProtocolTypeScsi;
    }
    private static final int ProtocolTypeAta = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROTOCOL_TYPE.ProtocolTypeAta = 2
     * }
     */
    public static int ProtocolTypeAta() {
        return ProtocolTypeAta;
    }
    private static final int ProtocolTypeNvme = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROTOCOL_TYPE.ProtocolTypeNvme = 3
     * }
     */
    public static int ProtocolTypeNvme() {
        return ProtocolTypeNvme;
    }
    private static final int ProtocolTypeSd = (int)4L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROTOCOL_TYPE.ProtocolTypeSd = 4
     * }
     */
    public static int ProtocolTypeSd() {
        return ProtocolTypeSd;
    }
    private static final int ProtocolTypeUfs = (int)5L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROTOCOL_TYPE.ProtocolTypeUfs = 5
     * }
     */
    public static int ProtocolTypeUfs() {
        return ProtocolTypeUfs;
    }
    private static final int ProtocolTypeProprietary = (int)126L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROTOCOL_TYPE.ProtocolTypeProprietary = 126
     * }
     */
    public static int ProtocolTypeProprietary() {
        return ProtocolTypeProprietary;
    }
    private static final int ProtocolTypeMaxReserved = (int)127L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROTOCOL_TYPE.ProtocolTypeMaxReserved = 127
     * }
     */
    public static int ProtocolTypeMaxReserved() {
        return ProtocolTypeMaxReserved;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _STORAGE_PROTOCOL_TYPE {
     *     ProtocolTypeUnknown = 0,
     *     ProtocolTypeScsi,
     *     ProtocolTypeAta,
     *     ProtocolTypeNvme,
     *     ProtocolTypeSd,
     *     ProtocolTypeUfs,
     *     ProtocolTypeProprietary = 126,
     *     ProtocolTypeMaxReserved = 127
     * } *PSTORAGE_PROTOCOL_TYPE
     * }
     */
    public static final AddressLayout PSTORAGE_PROTOCOL_TYPE = winapi.C_POINTER;
    private static final int NVMeDataTypeUnknown = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROTOCOL_NVME_DATA_TYPE.NVMeDataTypeUnknown = 0
     * }
     */
    public static int NVMeDataTypeUnknown() {
        return NVMeDataTypeUnknown;
    }
    private static final int NVMeDataTypeIdentify = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROTOCOL_NVME_DATA_TYPE.NVMeDataTypeIdentify = 1
     * }
     */
    public static int NVMeDataTypeIdentify() {
        return NVMeDataTypeIdentify;
    }
    private static final int NVMeDataTypeLogPage = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROTOCOL_NVME_DATA_TYPE.NVMeDataTypeLogPage = 2
     * }
     */
    public static int NVMeDataTypeLogPage() {
        return NVMeDataTypeLogPage;
    }
    private static final int NVMeDataTypeFeature = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROTOCOL_NVME_DATA_TYPE.NVMeDataTypeFeature = 3
     * }
     */
    public static int NVMeDataTypeFeature() {
        return NVMeDataTypeFeature;
    }
    private static final int NVMeDataTypeLogPageEx = (int)4L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROTOCOL_NVME_DATA_TYPE.NVMeDataTypeLogPageEx = 4
     * }
     */
    public static int NVMeDataTypeLogPageEx() {
        return NVMeDataTypeLogPageEx;
    }
    private static final int NVMeDataTypeFeatureEx = (int)5L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROTOCOL_NVME_DATA_TYPE.NVMeDataTypeFeatureEx = 5
     * }
     */
    public static int NVMeDataTypeFeatureEx() {
        return NVMeDataTypeFeatureEx;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _STORAGE_PROTOCOL_NVME_DATA_TYPE {
     *     NVMeDataTypeUnknown = 0,
     *     NVMeDataTypeIdentify,
     *     NVMeDataTypeLogPage,
     *     NVMeDataTypeFeature,
     *     NVMeDataTypeLogPageEx,
     *     NVMeDataTypeFeatureEx
     * } *PSTORAGE_PROTOCOL_NVME_DATA_TYPE
     * }
     */
    public static final AddressLayout PSTORAGE_PROTOCOL_NVME_DATA_TYPE = winapi.C_POINTER;
    private static final int AtaDataTypeUnknown = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROTOCOL_ATA_DATA_TYPE.AtaDataTypeUnknown = 0
     * }
     */
    public static int AtaDataTypeUnknown() {
        return AtaDataTypeUnknown;
    }
    private static final int AtaDataTypeIdentify = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROTOCOL_ATA_DATA_TYPE.AtaDataTypeIdentify = 1
     * }
     */
    public static int AtaDataTypeIdentify() {
        return AtaDataTypeIdentify;
    }
    private static final int AtaDataTypeLogPage = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROTOCOL_ATA_DATA_TYPE.AtaDataTypeLogPage = 2
     * }
     */
    public static int AtaDataTypeLogPage() {
        return AtaDataTypeLogPage;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _STORAGE_PROTOCOL_ATA_DATA_TYPE {
     *     AtaDataTypeUnknown = 0,
     *     AtaDataTypeIdentify,
     *     AtaDataTypeLogPage
     * } *PSTORAGE_PROTOCOL_ATA_DATA_TYPE
     * }
     */
    public static final AddressLayout PSTORAGE_PROTOCOL_ATA_DATA_TYPE = winapi.C_POINTER;
    private static final int UfsDataTypeUnknown = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROTOCOL_UFS_DATA_TYPE.UfsDataTypeUnknown = 0
     * }
     */
    public static int UfsDataTypeUnknown() {
        return UfsDataTypeUnknown;
    }
    private static final int UfsDataTypeQueryDescriptor = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROTOCOL_UFS_DATA_TYPE.UfsDataTypeQueryDescriptor = 1
     * }
     */
    public static int UfsDataTypeQueryDescriptor() {
        return UfsDataTypeQueryDescriptor;
    }
    private static final int UfsDataTypeQueryAttribute = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROTOCOL_UFS_DATA_TYPE.UfsDataTypeQueryAttribute = 2
     * }
     */
    public static int UfsDataTypeQueryAttribute() {
        return UfsDataTypeQueryAttribute;
    }
    private static final int UfsDataTypeQueryFlag = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROTOCOL_UFS_DATA_TYPE.UfsDataTypeQueryFlag = 3
     * }
     */
    public static int UfsDataTypeQueryFlag() {
        return UfsDataTypeQueryFlag;
    }
    private static final int UfsDataTypeQueryDmeAttribute = (int)4L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROTOCOL_UFS_DATA_TYPE.UfsDataTypeQueryDmeAttribute = 4
     * }
     */
    public static int UfsDataTypeQueryDmeAttribute() {
        return UfsDataTypeQueryDmeAttribute;
    }
    private static final int UfsDataTypeQueryDmePeerAttribute = (int)5L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROTOCOL_UFS_DATA_TYPE.UfsDataTypeQueryDmePeerAttribute = 5
     * }
     */
    public static int UfsDataTypeQueryDmePeerAttribute() {
        return UfsDataTypeQueryDmePeerAttribute;
    }
    private static final int UfsDataTypeMax = (int)6L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_PROTOCOL_UFS_DATA_TYPE.UfsDataTypeMax = 6
     * }
     */
    public static int UfsDataTypeMax() {
        return UfsDataTypeMax;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _STORAGE_PROTOCOL_UFS_DATA_TYPE {
     *     UfsDataTypeUnknown = 0,
     *     UfsDataTypeQueryDescriptor,
     *     UfsDataTypeQueryAttribute,
     *     UfsDataTypeQueryFlag,
     *     UfsDataTypeQueryDmeAttribute,
     *     UfsDataTypeQueryDmePeerAttribute,
     *     UfsDataTypeMax
     * } *PSTORAGE_PROTOCOL_UFS_DATA_TYPE
     * }
     */
    public static final AddressLayout PSTORAGE_PROTOCOL_UFS_DATA_TYPE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef union _STORAGE_PROTOCOL_DATA_SUBVALUE_GET_LOG_PAGE {
     *     struct {
     *         DWORD RetainAsynEvent : 1;
     *         DWORD LogSpecificField : 4;
     *         DWORD Reserved0 : 3;
     *         DWORD UUIDIndex : 7;
     *         DWORD Reserved : 17;
     *     };
     *     DWORD AsUlong;
     * } *PSTORAGE_PROTOCOL_DATA_SUBVALUE_GET_LOG_PAGE
     * }
     */
    public static final AddressLayout PSTORAGE_PROTOCOL_DATA_SUBVALUE_GET_LOG_PAGE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_PROTOCOL_SPECIFIC_DATA {
     *     STORAGE_PROTOCOL_TYPE ProtocolType;
     *     DWORD DataType;
     *     DWORD ProtocolDataRequestValue;
     *     DWORD ProtocolDataRequestSubValue;
     *     DWORD ProtocolDataOffset;
     *     DWORD ProtocolDataLength;
     *     DWORD FixedProtocolReturnData;
     *     DWORD ProtocolDataRequestSubValue2;
     *     DWORD ProtocolDataRequestSubValue3;
     *     DWORD ProtocolDataRequestSubValue4;
     * } *PSTORAGE_PROTOCOL_SPECIFIC_DATA
     * }
     */
    public static final AddressLayout PSTORAGE_PROTOCOL_SPECIFIC_DATA = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT {
     *     STORAGE_PROTOCOL_TYPE ProtocolType;
     *     DWORD DataType;
     *     DWORD ProtocolDataValue;
     *     DWORD ProtocolDataSubValue;
     *     DWORD ProtocolDataOffset;
     *     DWORD ProtocolDataLength;
     *     DWORD FixedProtocolReturnData;
     *     DWORD ProtocolDataSubValue2;
     *     DWORD ProtocolDataSubValue3;
     *     DWORD ProtocolDataSubValue4;
     *     DWORD ProtocolDataSubValue5;
     *     DWORD ProtocolDataSubValue6;
     *     DWORD Reserved[4];
     * } *PSTORAGE_PROTOCOL_SPECIFIC_DATA_EXT
     * }
     */
    public static final AddressLayout PSTORAGE_PROTOCOL_SPECIFIC_DATA_EXT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_PROTOCOL_DATA_DESCRIPTOR {
     *     DWORD Version;
     *     DWORD Size;
     *     STORAGE_PROTOCOL_SPECIFIC_DATA ProtocolSpecificData;
     * } *PSTORAGE_PROTOCOL_DATA_DESCRIPTOR
     * }
     */
    public static final AddressLayout PSTORAGE_PROTOCOL_DATA_DESCRIPTOR = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_PROTOCOL_DATA_DESCRIPTOR_EXT {
     *     DWORD Version;
     *     DWORD Size;
     *     STORAGE_PROTOCOL_SPECIFIC_DATA_EXT ProtocolSpecificData;
     * } *PSTORAGE_PROTOCOL_DATA_DESCRIPTOR_EXT
     * }
     */
    public static final AddressLayout PSTORAGE_PROTOCOL_DATA_DESCRIPTOR_EXT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_TEMPERATURE_INFO {
     *     WORD Index;
     *     SHORT Temperature;
     *     SHORT OverThreshold;
     *     SHORT UnderThreshold;
     *     BOOLEAN OverThresholdChangable;
     *     BOOLEAN UnderThresholdChangable;
     *     BOOLEAN EventGenerated;
     *     BYTE Reserved0;
     *     DWORD Reserved1;
     * } *PSTORAGE_TEMPERATURE_INFO
     * }
     */
    public static final AddressLayout PSTORAGE_TEMPERATURE_INFO = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_TEMPERATURE_DATA_DESCRIPTOR {
     *     DWORD Version;
     *     DWORD Size;
     *     SHORT CriticalTemperature;
     *     SHORT WarningTemperature;
     *     WORD InfoCount;
     *     BYTE Reserved0[2];
     *     DWORD Reserved1[2];
     *     STORAGE_TEMPERATURE_INFO TemperatureInfo[1];
     * } *PSTORAGE_TEMPERATURE_DATA_DESCRIPTOR
     * }
     */
    public static final AddressLayout PSTORAGE_TEMPERATURE_DATA_DESCRIPTOR = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_TEMPERATURE_THRESHOLD {
     *     DWORD Version;
     *     DWORD Size;
     *     WORD Flags;
     *     WORD Index;
     *     SHORT Threshold;
     *     BOOLEAN OverThreshold;
     *     BYTE Reserved;
     * } *PSTORAGE_TEMPERATURE_THRESHOLD
     * }
     */
    public static final AddressLayout PSTORAGE_TEMPERATURE_THRESHOLD = winapi.C_POINTER;
    private static final int FormFactorUnknown = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_DEVICE_FORM_FACTOR.FormFactorUnknown = 0
     * }
     */
    public static int FormFactorUnknown() {
        return FormFactorUnknown;
    }
    private static final int FormFactor3_5 = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_DEVICE_FORM_FACTOR.FormFactor3_5 = 1
     * }
     */
    public static int FormFactor3_5() {
        return FormFactor3_5;
    }
    private static final int FormFactor2_5 = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_DEVICE_FORM_FACTOR.FormFactor2_5 = 2
     * }
     */
    public static int FormFactor2_5() {
        return FormFactor2_5;
    }
    private static final int FormFactor1_8 = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_DEVICE_FORM_FACTOR.FormFactor1_8 = 3
     * }
     */
    public static int FormFactor1_8() {
        return FormFactor1_8;
    }
    private static final int FormFactor1_8Less = (int)4L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_DEVICE_FORM_FACTOR.FormFactor1_8Less = 4
     * }
     */
    public static int FormFactor1_8Less() {
        return FormFactor1_8Less;
    }
    private static final int FormFactorEmbedded = (int)5L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_DEVICE_FORM_FACTOR.FormFactorEmbedded = 5
     * }
     */
    public static int FormFactorEmbedded() {
        return FormFactorEmbedded;
    }
    private static final int FormFactorMemoryCard = (int)6L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_DEVICE_FORM_FACTOR.FormFactorMemoryCard = 6
     * }
     */
    public static int FormFactorMemoryCard() {
        return FormFactorMemoryCard;
    }
    private static final int FormFactormSata = (int)7L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_DEVICE_FORM_FACTOR.FormFactormSata = 7
     * }
     */
    public static int FormFactormSata() {
        return FormFactormSata;
    }
    private static final int FormFactorM_2 = (int)8L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_DEVICE_FORM_FACTOR.FormFactorM_2 = 8
     * }
     */
    public static int FormFactorM_2() {
        return FormFactorM_2;
    }
    private static final int FormFactorPCIeBoard = (int)9L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_DEVICE_FORM_FACTOR.FormFactorPCIeBoard = 9
     * }
     */
    public static int FormFactorPCIeBoard() {
        return FormFactorPCIeBoard;
    }
    private static final int FormFactorDimm = (int)10L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_DEVICE_FORM_FACTOR.FormFactorDimm = 10
     * }
     */
    public static int FormFactorDimm() {
        return FormFactorDimm;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _STORAGE_DEVICE_FORM_FACTOR {
     *     FormFactorUnknown = 0,
     *     FormFactor3_5,
     *     FormFactor2_5,
     *     FormFactor1_8,
     *     FormFactor1_8Less,
     *     FormFactorEmbedded,
     *     FormFactorMemoryCard,
     *     FormFactormSata,
     *     FormFactorM_2,
     *     FormFactorPCIeBoard,
     *     FormFactorDimm
     * } *PSTORAGE_DEVICE_FORM_FACTOR
     * }
     */
    public static final AddressLayout PSTORAGE_DEVICE_FORM_FACTOR = winapi.C_POINTER;
    private static final int HealthStatusUnknown = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_COMPONENT_HEALTH_STATUS.HealthStatusUnknown = 0
     * }
     */
    public static int HealthStatusUnknown() {
        return HealthStatusUnknown;
    }
    private static final int HealthStatusNormal = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_COMPONENT_HEALTH_STATUS.HealthStatusNormal = 1
     * }
     */
    public static int HealthStatusNormal() {
        return HealthStatusNormal;
    }
    private static final int HealthStatusThrottled = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_COMPONENT_HEALTH_STATUS.HealthStatusThrottled = 2
     * }
     */
    public static int HealthStatusThrottled() {
        return HealthStatusThrottled;
    }
    private static final int HealthStatusWarning = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_COMPONENT_HEALTH_STATUS.HealthStatusWarning = 3
     * }
     */
    public static int HealthStatusWarning() {
        return HealthStatusWarning;
    }
    private static final int HealthStatusDisabled = (int)4L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_COMPONENT_HEALTH_STATUS.HealthStatusDisabled = 4
     * }
     */
    public static int HealthStatusDisabled() {
        return HealthStatusDisabled;
    }
    private static final int HealthStatusFailed = (int)5L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_COMPONENT_HEALTH_STATUS.HealthStatusFailed = 5
     * }
     */
    public static int HealthStatusFailed() {
        return HealthStatusFailed;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _STORAGE_COMPONENT_HEALTH_STATUS {
     *     HealthStatusUnknown = 0,
     *     HealthStatusNormal,
     *     HealthStatusThrottled,
     *     HealthStatusWarning,
     *     HealthStatusDisabled,
     *     HealthStatusFailed
     * } *PSTORAGE_COMPONENT_HEALTH_STATUS
     * }
     */
    public static final AddressLayout PSTORAGE_COMPONENT_HEALTH_STATUS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef union _STORAGE_SPEC_VERSION {
     *     struct {
     *         union {
     *             struct {
     *                 BYTE SubMinor;
     *                 BYTE Minor;
     *             };
     *             WORD AsUshort;
     *         } MinorVersion;
     *         WORD MajorVersion;
     *     };
     *     DWORD AsUlong;
     * } *PSTORAGE_SPEC_VERSION
     * }
     */
    public static final AddressLayout PSTORAGE_SPEC_VERSION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_PHYSICAL_DEVICE_DATA {
     *     DWORD DeviceId;
     *     DWORD Role;
     *     STORAGE_COMPONENT_HEALTH_STATUS HealthStatus;
     *     STORAGE_PROTOCOL_TYPE CommandProtocol;
     *     STORAGE_SPEC_VERSION SpecVersion;
     *     STORAGE_DEVICE_FORM_FACTOR FormFactor;
     *     BYTE Vendor[8];
     *     BYTE Model[40];
     *     BYTE FirmwareRevision[16];
     *     DWORDLONG Capacity;
     *     BYTE PhysicalLocation[32];
     *     DWORD Reserved[2];
     * } *PSTORAGE_PHYSICAL_DEVICE_DATA
     * }
     */
    public static final AddressLayout PSTORAGE_PHYSICAL_DEVICE_DATA = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_PHYSICAL_ADAPTER_DATA {
     *     DWORD AdapterId;
     *     STORAGE_COMPONENT_HEALTH_STATUS HealthStatus;
     *     STORAGE_PROTOCOL_TYPE CommandProtocol;
     *     STORAGE_SPEC_VERSION SpecVersion;
     *     BYTE Vendor[8];
     *     BYTE Model[40];
     *     BYTE FirmwareRevision[16];
     *     BYTE PhysicalLocation[32];
     *     BOOLEAN ExpanderConnected;
     *     BYTE Reserved0[3];
     *     DWORD Reserved1[3];
     * } *PSTORAGE_PHYSICAL_ADAPTER_DATA
     * }
     */
    public static final AddressLayout PSTORAGE_PHYSICAL_ADAPTER_DATA = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_PHYSICAL_NODE_DATA {
     *     DWORD NodeId;
     *     DWORD AdapterCount;
     *     DWORD AdapterDataLength;
     *     DWORD AdapterDataOffset;
     *     DWORD DeviceCount;
     *     DWORD DeviceDataLength;
     *     DWORD DeviceDataOffset;
     *     DWORD Reserved[3];
     * } *PSTORAGE_PHYSICAL_NODE_DATA
     * }
     */
    public static final AddressLayout PSTORAGE_PHYSICAL_NODE_DATA = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_PHYSICAL_TOPOLOGY_DESCRIPTOR {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORD NodeCount;
     *     DWORD Reserved;
     *     STORAGE_PHYSICAL_NODE_DATA Node[1];
     * } *PSTORAGE_PHYSICAL_TOPOLOGY_DESCRIPTOR
     * }
     */
    public static final AddressLayout PSTORAGE_PHYSICAL_TOPOLOGY_DESCRIPTOR = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_DEVICE_IO_CAPABILITY_DESCRIPTOR {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORD LunMaxIoCount;
     *     DWORD AdapterMaxIoCount;
     * } *PSTORAGE_DEVICE_IO_CAPABILITY_DESCRIPTOR
     * }
     */
    public static final AddressLayout PSTORAGE_DEVICE_IO_CAPABILITY_DESCRIPTOR = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_DEVICE_ATTRIBUTES_DESCRIPTOR {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORD64 Attributes;
     * } *PSTORAGE_DEVICE_ATTRIBUTES_DESCRIPTOR
     * }
     */
    public static final AddressLayout PSTORAGE_DEVICE_ATTRIBUTES_DESCRIPTOR = winapi.C_POINTER;
    private static final int DiskHealthUnknown = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_DISK_HEALTH_STATUS.DiskHealthUnknown = 0
     * }
     */
    public static int DiskHealthUnknown() {
        return DiskHealthUnknown;
    }
    private static final int DiskHealthUnhealthy = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_DISK_HEALTH_STATUS.DiskHealthUnhealthy = 1
     * }
     */
    public static int DiskHealthUnhealthy() {
        return DiskHealthUnhealthy;
    }
    private static final int DiskHealthWarning = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_DISK_HEALTH_STATUS.DiskHealthWarning = 2
     * }
     */
    public static int DiskHealthWarning() {
        return DiskHealthWarning;
    }
    private static final int DiskHealthHealthy = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_DISK_HEALTH_STATUS.DiskHealthHealthy = 3
     * }
     */
    public static int DiskHealthHealthy() {
        return DiskHealthHealthy;
    }
    private static final int DiskHealthMax = (int)4L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_DISK_HEALTH_STATUS.DiskHealthMax = 4
     * }
     */
    public static int DiskHealthMax() {
        return DiskHealthMax;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _STORAGE_DISK_HEALTH_STATUS {
     *     DiskHealthUnknown = 0,
     *     DiskHealthUnhealthy,
     *     DiskHealthWarning,
     *     DiskHealthHealthy,
     *     DiskHealthMax
     * } *PSTORAGE_DISK_HEALTH_STATUS
     * }
     */
    public static final AddressLayout PSTORAGE_DISK_HEALTH_STATUS = winapi.C_POINTER;
    private static final int DiskOpStatusNone = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_DISK_OPERATIONAL_STATUS.DiskOpStatusNone = 0
     * }
     */
    public static int DiskOpStatusNone() {
        return DiskOpStatusNone;
    }
    private static final int DiskOpStatusUnknown = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_DISK_OPERATIONAL_STATUS.DiskOpStatusUnknown = 1
     * }
     */
    public static int DiskOpStatusUnknown() {
        return DiskOpStatusUnknown;
    }
    private static final int DiskOpStatusOk = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_DISK_OPERATIONAL_STATUS.DiskOpStatusOk = 2
     * }
     */
    public static int DiskOpStatusOk() {
        return DiskOpStatusOk;
    }
    private static final int DiskOpStatusPredictingFailure = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_DISK_OPERATIONAL_STATUS.DiskOpStatusPredictingFailure = 3
     * }
     */
    public static int DiskOpStatusPredictingFailure() {
        return DiskOpStatusPredictingFailure;
    }
    private static final int DiskOpStatusInService = (int)4L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_DISK_OPERATIONAL_STATUS.DiskOpStatusInService = 4
     * }
     */
    public static int DiskOpStatusInService() {
        return DiskOpStatusInService;
    }
    private static final int DiskOpStatusHardwareError = (int)5L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_DISK_OPERATIONAL_STATUS.DiskOpStatusHardwareError = 5
     * }
     */
    public static int DiskOpStatusHardwareError() {
        return DiskOpStatusHardwareError;
    }
    private static final int DiskOpStatusNotUsable = (int)6L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_DISK_OPERATIONAL_STATUS.DiskOpStatusNotUsable = 6
     * }
     */
    public static int DiskOpStatusNotUsable() {
        return DiskOpStatusNotUsable;
    }
    private static final int DiskOpStatusTransientError = (int)7L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_DISK_OPERATIONAL_STATUS.DiskOpStatusTransientError = 7
     * }
     */
    public static int DiskOpStatusTransientError() {
        return DiskOpStatusTransientError;
    }
    private static final int DiskOpStatusMissing = (int)8L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_DISK_OPERATIONAL_STATUS.DiskOpStatusMissing = 8
     * }
     */
    public static int DiskOpStatusMissing() {
        return DiskOpStatusMissing;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _STORAGE_DISK_OPERATIONAL_STATUS {
     *     DiskOpStatusNone = 0,
     *     DiskOpStatusUnknown,
     *     DiskOpStatusOk,
     *     DiskOpStatusPredictingFailure,
     *     DiskOpStatusInService,
     *     DiskOpStatusHardwareError,
     *     DiskOpStatusNotUsable,
     *     DiskOpStatusTransientError,
     *     DiskOpStatusMissing
     * } *PSTORAGE_DISK_OPERATIONAL_STATUS
     * }
     */
    public static final AddressLayout PSTORAGE_DISK_OPERATIONAL_STATUS = winapi.C_POINTER;
    private static final int DiskOpReasonUnknown = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonUnknown = 0
     * }
     */
    public static int DiskOpReasonUnknown() {
        return DiskOpReasonUnknown;
    }
    private static final int DiskOpReasonScsiSenseCode = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonScsiSenseCode = 1
     * }
     */
    public static int DiskOpReasonScsiSenseCode() {
        return DiskOpReasonScsiSenseCode;
    }
    private static final int DiskOpReasonMedia = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonMedia = 2
     * }
     */
    public static int DiskOpReasonMedia() {
        return DiskOpReasonMedia;
    }
    private static final int DiskOpReasonIo = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonIo = 3
     * }
     */
    public static int DiskOpReasonIo() {
        return DiskOpReasonIo;
    }
    private static final int DiskOpReasonThresholdExceeded = (int)4L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonThresholdExceeded = 4
     * }
     */
    public static int DiskOpReasonThresholdExceeded() {
        return DiskOpReasonThresholdExceeded;
    }
    private static final int DiskOpReasonLostData = (int)5L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonLostData = 5
     * }
     */
    public static int DiskOpReasonLostData() {
        return DiskOpReasonLostData;
    }
    private static final int DiskOpReasonEnergySource = (int)6L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonEnergySource = 6
     * }
     */
    public static int DiskOpReasonEnergySource() {
        return DiskOpReasonEnergySource;
    }
    private static final int DiskOpReasonConfiguration = (int)7L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonConfiguration = 7
     * }
     */
    public static int DiskOpReasonConfiguration() {
        return DiskOpReasonConfiguration;
    }
    private static final int DiskOpReasonDeviceController = (int)8L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonDeviceController = 8
     * }
     */
    public static int DiskOpReasonDeviceController() {
        return DiskOpReasonDeviceController;
    }
    private static final int DiskOpReasonMediaController = (int)9L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonMediaController = 9
     * }
     */
    public static int DiskOpReasonMediaController() {
        return DiskOpReasonMediaController;
    }
    private static final int DiskOpReasonComponent = (int)10L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonComponent = 10
     * }
     */
    public static int DiskOpReasonComponent() {
        return DiskOpReasonComponent;
    }
    private static final int DiskOpReasonNVDIMM_N = (int)11L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonNVDIMM_N = 11
     * }
     */
    public static int DiskOpReasonNVDIMM_N() {
        return DiskOpReasonNVDIMM_N;
    }
    private static final int DiskOpReasonBackgroundOperation = (int)12L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonBackgroundOperation = 12
     * }
     */
    public static int DiskOpReasonBackgroundOperation() {
        return DiskOpReasonBackgroundOperation;
    }
    private static final int DiskOpReasonInvalidFirmware = (int)13L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonInvalidFirmware = 13
     * }
     */
    public static int DiskOpReasonInvalidFirmware() {
        return DiskOpReasonInvalidFirmware;
    }
    private static final int DiskOpReasonHealthCheck = (int)14L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonHealthCheck = 14
     * }
     */
    public static int DiskOpReasonHealthCheck() {
        return DiskOpReasonHealthCheck;
    }
    private static final int DiskOpReasonLostDataPersistence = (int)15L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonLostDataPersistence = 15
     * }
     */
    public static int DiskOpReasonLostDataPersistence() {
        return DiskOpReasonLostDataPersistence;
    }
    private static final int DiskOpReasonDisabledByPlatform = (int)16L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonDisabledByPlatform = 16
     * }
     */
    public static int DiskOpReasonDisabledByPlatform() {
        return DiskOpReasonDisabledByPlatform;
    }
    private static final int DiskOpReasonLostWritePersistence = (int)17L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonLostWritePersistence = 17
     * }
     */
    public static int DiskOpReasonLostWritePersistence() {
        return DiskOpReasonLostWritePersistence;
    }
    private static final int DiskOpReasonDataPersistenceLossImminent = (int)18L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonDataPersistenceLossImminent = 18
     * }
     */
    public static int DiskOpReasonDataPersistenceLossImminent() {
        return DiskOpReasonDataPersistenceLossImminent;
    }
    private static final int DiskOpReasonWritePersistenceLossImminent = (int)19L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonWritePersistenceLossImminent = 19
     * }
     */
    public static int DiskOpReasonWritePersistenceLossImminent() {
        return DiskOpReasonWritePersistenceLossImminent;
    }
    private static final int DiskOpReasonMax = (int)20L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonMax = 20
     * }
     */
    public static int DiskOpReasonMax() {
        return DiskOpReasonMax;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _STORAGE_OPERATIONAL_STATUS_REASON {
     *     DiskOpReasonUnknown = 0,
     *     DiskOpReasonScsiSenseCode,
     *     DiskOpReasonMedia,
     *     DiskOpReasonIo,
     *     DiskOpReasonThresholdExceeded,
     *     DiskOpReasonLostData,
     *     DiskOpReasonEnergySource,
     *     DiskOpReasonConfiguration,
     *     DiskOpReasonDeviceController,
     *     DiskOpReasonMediaController,
     *     DiskOpReasonComponent,
     *     DiskOpReasonNVDIMM_N,
     *     DiskOpReasonBackgroundOperation,
     *     DiskOpReasonInvalidFirmware,
     *     DiskOpReasonHealthCheck,
     *     DiskOpReasonLostDataPersistence,
     *     DiskOpReasonDisabledByPlatform,
     *     DiskOpReasonLostWritePersistence,
     *     DiskOpReasonDataPersistenceLossImminent,
     *     DiskOpReasonWritePersistenceLossImminent,
     *     DiskOpReasonMax
     * } *PSTORAGE_OPERATIONAL_STATUS_REASON
     * }
     */
    public static final AddressLayout PSTORAGE_OPERATIONAL_STATUS_REASON = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_OPERATIONAL_REASON {
     *     DWORD Version;
     *     DWORD Size;
     *     STORAGE_OPERATIONAL_STATUS_REASON Reason;
     *     union {
     *         struct {
     *             BYTE SenseKey;
     *             BYTE ASC;
     *             BYTE ASCQ;
     *             BYTE Reserved;
     *         } ScsiSenseKey;
     *         struct {
     *             BYTE CriticalHealth;
     *             BYTE ModuleHealth[2];
     *             BYTE ErrorThresholdStatus;
     *         } NVDIMM_N;
     *         DWORD AsUlong;
     *     } RawBytes;
     * } *PSTORAGE_OPERATIONAL_REASON
     * }
     */
    public static final AddressLayout PSTORAGE_OPERATIONAL_REASON = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_DEVICE_MANAGEMENT_STATUS {
     *     DWORD Version;
     *     DWORD Size;
     *     STORAGE_DISK_HEALTH_STATUS Health;
     *     DWORD NumberOfOperationalStatus;
     *     DWORD NumberOfAdditionalReasons;
     *     STORAGE_DISK_OPERATIONAL_STATUS OperationalStatus[16];
     *     STORAGE_OPERATIONAL_REASON AdditionalReasons[1];
     * } *PSTORAGE_DEVICE_MANAGEMENT_STATUS
     * }
     */
    public static final AddressLayout PSTORAGE_DEVICE_MANAGEMENT_STATUS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_ADAPTER_SERIAL_NUMBER {
     *     DWORD Version;
     *     DWORD Size;
     *     WCHAR SerialNumber[128];
     * } *PSTORAGE_ADAPTER_SERIAL_NUMBER
     * }
     */
    public static final AddressLayout PSTORAGE_ADAPTER_SERIAL_NUMBER = winapi.C_POINTER;
    private static final int ZonedDeviceTypeUnknown = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_ZONED_DEVICE_TYPES.ZonedDeviceTypeUnknown = 0
     * }
     */
    public static int ZonedDeviceTypeUnknown() {
        return ZonedDeviceTypeUnknown;
    }
    private static final int ZonedDeviceTypeHostManaged = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_ZONED_DEVICE_TYPES.ZonedDeviceTypeHostManaged = 1
     * }
     */
    public static int ZonedDeviceTypeHostManaged() {
        return ZonedDeviceTypeHostManaged;
    }
    private static final int ZonedDeviceTypeHostAware = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_ZONED_DEVICE_TYPES.ZonedDeviceTypeHostAware = 2
     * }
     */
    public static int ZonedDeviceTypeHostAware() {
        return ZonedDeviceTypeHostAware;
    }
    private static final int ZonedDeviceTypeDeviceManaged = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_ZONED_DEVICE_TYPES.ZonedDeviceTypeDeviceManaged = 3
     * }
     */
    public static int ZonedDeviceTypeDeviceManaged() {
        return ZonedDeviceTypeDeviceManaged;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _STORAGE_ZONED_DEVICE_TYPES {
     *     ZonedDeviceTypeUnknown = 0,
     *     ZonedDeviceTypeHostManaged,
     *     ZonedDeviceTypeHostAware,
     *     ZonedDeviceTypeDeviceManaged
     * } *PSTORAGE_ZONED_DEVICE_TYPES
     * }
     */
    public static final AddressLayout PSTORAGE_ZONED_DEVICE_TYPES = winapi.C_POINTER;
    private static final int ZoneTypeUnknown = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_ZONE_TYPES.ZoneTypeUnknown = 0
     * }
     */
    public static int ZoneTypeUnknown() {
        return ZoneTypeUnknown;
    }
    private static final int ZoneTypeConventional = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_ZONE_TYPES.ZoneTypeConventional = 1
     * }
     */
    public static int ZoneTypeConventional() {
        return ZoneTypeConventional;
    }
    private static final int ZoneTypeSequentialWriteRequired = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_ZONE_TYPES.ZoneTypeSequentialWriteRequired = 2
     * }
     */
    public static int ZoneTypeSequentialWriteRequired() {
        return ZoneTypeSequentialWriteRequired;
    }
    private static final int ZoneTypeSequentialWritePreferred = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_ZONE_TYPES.ZoneTypeSequentialWritePreferred = 3
     * }
     */
    public static int ZoneTypeSequentialWritePreferred() {
        return ZoneTypeSequentialWritePreferred;
    }
    private static final int ZoneTypeMax = (int)4L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_ZONE_TYPES.ZoneTypeMax = 4
     * }
     */
    public static int ZoneTypeMax() {
        return ZoneTypeMax;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _STORAGE_ZONE_TYPES {
     *     ZoneTypeUnknown = 0,
     *     ZoneTypeConventional = 1,
     *     ZoneTypeSequentialWriteRequired = 2,
     *     ZoneTypeSequentialWritePreferred = 3,
     *     ZoneTypeMax
     * } *PSTORAGE_ZONE_TYPES
     * }
     */
    public static final AddressLayout PSTORAGE_ZONE_TYPES = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_ZONE_GROUP {
     *     DWORD ZoneCount;
     *     STORAGE_ZONE_TYPES ZoneType;
     *     DWORDLONG ZoneSize;
     * } *PSTORAGE_ZONE_GROUP
     * }
     */
    public static final AddressLayout PSTORAGE_ZONE_GROUP = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_ZONED_DEVICE_DESCRIPTOR {
     *     DWORD Version;
     *     DWORD Size;
     *     STORAGE_ZONED_DEVICE_TYPES DeviceType;
     *     DWORD ZoneCount;
     *     union {
     *         struct {
     *             DWORD MaxOpenZoneCount;
     *             BOOLEAN UnrestrictedRead;
     *             BYTE Reserved[3];
     *         } SequentialRequiredZone;
     *         struct {
     *             DWORD OptimalOpenZoneCount;
     *             DWORD Reserved;
     *         } SequentialPreferredZone;
     *     } ZoneAttributes;
     *     DWORD ZoneGroupCount;
     *     STORAGE_ZONE_GROUP ZoneGroup[1];
     * } *PSTORAGE_ZONED_DEVICE_DESCRIPTOR
     * }
     */
    public static final AddressLayout PSTORAGE_ZONED_DEVICE_DESCRIPTOR = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICE_LOCATION {
     *     DWORD Socket;
     *     DWORD Slot;
     *     DWORD Adapter;
     *     DWORD Port;
     *     union {
     *         struct {
     *             DWORD Channel;
     *             DWORD Device;
     *         };
     *         struct {
     *             DWORD Target;
     *             DWORD Lun;
     *         };
     *     };
     * } *PDEVICE_LOCATION
     * }
     */
    public static final AddressLayout PDEVICE_LOCATION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_DEVICE_LOCATION_DESCRIPTOR {
     *     DWORD Version;
     *     DWORD Size;
     *     DEVICE_LOCATION Location;
     *     DWORD StringOffset;
     * } *PSTORAGE_DEVICE_LOCATION_DESCRIPTOR
     * }
     */
    public static final AddressLayout PSTORAGE_DEVICE_LOCATION_DESCRIPTOR = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_DEVICE_NUMA_PROPERTY {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORD NumaNode;
     * } *PSTORAGE_DEVICE_NUMA_PROPERTY
     * }
     */
    public static final AddressLayout PSTORAGE_DEVICE_NUMA_PROPERTY = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_DEVICE_UNSAFE_SHUTDOWN_COUNT {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORD UnsafeShutdownCount;
     * } *PSTORAGE_DEVICE_UNSAFE_SHUTDOWN_COUNT
     * }
     */
    public static final AddressLayout PSTORAGE_DEVICE_UNSAFE_SHUTDOWN_COUNT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_HW_ENDURANCE_INFO {
     *     DWORD ValidFields;
     *     DWORD GroupId;
     *     struct {
     *         DWORD Shared : 1;
     *         DWORD Reserved : 31;
     *     } Flags;
     *     DWORD LifePercentage;
     *     BYTE BytesReadCount[16];
     *     BYTE ByteWriteCount[16];
     * } *PSTORAGE_HW_ENDURANCE_INFO
     * }
     */
    public static final AddressLayout PSTORAGE_HW_ENDURANCE_INFO = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_HW_ENDURANCE_DATA_DESCRIPTOR {
     *     DWORD Version;
     *     DWORD Size;
     *     STORAGE_HW_ENDURANCE_INFO EnduranceInfo;
     * } *PSTORAGE_HW_ENDURANCE_DATA_DESCRIPTOR
     * }
     */
    public static final AddressLayout PSTORAGE_HW_ENDURANCE_DATA_DESCRIPTOR = winapi.C_POINTER;
    private static final int StorageStackTypeUnknown = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_STACK_TYPE.StorageStackTypeUnknown = 0
     * }
     */
    public static int StorageStackTypeUnknown() {
        return StorageStackTypeUnknown;
    }
    private static final int StorageStackTypeScsi = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_STACK_TYPE.StorageStackTypeScsi = 1
     * }
     */
    public static int StorageStackTypeScsi() {
        return StorageStackTypeScsi;
    }
    private static final int StorageStackTypeNVMe = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_STACK_TYPE.StorageStackTypeNVMe = 2
     * }
     */
    public static int StorageStackTypeNVMe() {
        return StorageStackTypeNVMe;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _STORAGE_STACK_TYPE {
     *     StorageStackTypeUnknown = 0,
     *     StorageStackTypeScsi,
     *     StorageStackTypeNVMe
     * } *PSTORAGE_STACK_TYPE
     * }
     */
    public static final AddressLayout PSTORAGE_STACK_TYPE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_STACK_DESCRIPTOR {
     *     DWORD Version;
     *     DWORD Size;
     *     STORAGE_STACK_TYPE StorageStackType;
     * } *PSTORAGE_STACK_DESCRIPTOR
     * }
     */
    public static final AddressLayout PSTORAGE_STACK_DESCRIPTOR = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_DEVICE_LED_STATE_DESCRIPTOR {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORDLONG State;
     * } *PSTORAGE_DEVICE_LED_STATE_DESCRIPTOR
     * }
     */
    public static final AddressLayout PSTORAGE_DEVICE_LED_STATE_DESCRIPTOR = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_DEVICE_SELF_ENCRYPTION_PROPERTY {
     *     DWORD Version;
     *     DWORD Size;
     *     BOOLEAN SupportsSelfEncryption;
     * } *PSTORAGE_DEVICE_SELF_ENCRYPTION_PROPERTY
     * }
     */
    public static final AddressLayout PSTORAGE_DEVICE_SELF_ENCRYPTION_PROPERTY = winapi.C_POINTER;
    private static final int StorageEncryptionTypeUnknown = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_ENCRYPTION_TYPE.StorageEncryptionTypeUnknown = 0
     * }
     */
    public static int StorageEncryptionTypeUnknown() {
        return StorageEncryptionTypeUnknown;
    }
    private static final int StorageEncryptionTypeEDrive = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_ENCRYPTION_TYPE.StorageEncryptionTypeEDrive = 1
     * }
     */
    public static int StorageEncryptionTypeEDrive() {
        return StorageEncryptionTypeEDrive;
    }
    private static final int StorageEncryptionTypeTcgOpal = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_ENCRYPTION_TYPE.StorageEncryptionTypeTcgOpal = 2
     * }
     */
    public static int StorageEncryptionTypeTcgOpal() {
        return StorageEncryptionTypeTcgOpal;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _STORAGE_ENCRYPTION_TYPE {
     *     StorageEncryptionTypeUnknown = 0,
     *     StorageEncryptionTypeEDrive = 1,
     *     StorageEncryptionTypeTcgOpal = 2
     * } *PSTORAGE_ENCRYPTION_TYPE
     * }
     */
    public static final AddressLayout PSTORAGE_ENCRYPTION_TYPE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_DEVICE_SELF_ENCRYPTION_PROPERTY_V2 {
     *     DWORD Version;
     *     DWORD Size;
     *     BOOLEAN SupportsSelfEncryption;
     *     STORAGE_ENCRYPTION_TYPE EncryptionType;
     * } *PSTORAGE_DEVICE_SELF_ENCRYPTION_PROPERTY_V2
     * }
     */
    public static final AddressLayout PSTORAGE_DEVICE_SELF_ENCRYPTION_PROPERTY_V2 = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_FRU_ID_DESCRIPTOR {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORD IdentifierSize;
     *     BYTE Identifier[1];
     * } *PSTORAGE_FRU_ID_DESCRIPTOR
     * }
     */
    public static final AddressLayout PSTORAGE_FRU_ID_DESCRIPTOR = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef DWORD DEVICE_DATA_MANAGEMENT_SET_ACTION
     * }
     */
    public static final OfInt DEVICE_DATA_MANAGEMENT_SET_ACTION = winapi.C_LONG;
    /**
     * {@snippet lang=c :
     * typedef DWORD DEVICE_DSM_ACTION
     * }
     */
    public static final OfInt DEVICE_DSM_ACTION = winapi.C_LONG;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICE_DATA_SET_RANGE {
     *     LONGLONG StartingOffset;
     *     DWORDLONG LengthInBytes;
     * } *PDEVICE_DATA_SET_RANGE
     * }
     */
    public static final AddressLayout PDEVICE_DATA_SET_RANGE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICE_DATA_SET_RANGE {
     *     LONGLONG StartingOffset;
     *     DWORDLONG LengthInBytes;
     * } *PDEVICE_DSM_RANGE
     * }
     */
    public static final AddressLayout PDEVICE_DSM_RANGE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICE_MANAGE_DATA_SET_ATTRIBUTES {
     *     DWORD Size;
     *     DEVICE_DSM_ACTION Action;
     *     DWORD Flags;
     *     DWORD ParameterBlockOffset;
     *     DWORD ParameterBlockLength;
     *     DWORD DataSetRangesOffset;
     *     DWORD DataSetRangesLength;
     * } *PDEVICE_MANAGE_DATA_SET_ATTRIBUTES
     * }
     */
    public static final AddressLayout PDEVICE_MANAGE_DATA_SET_ATTRIBUTES = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICE_MANAGE_DATA_SET_ATTRIBUTES {
     *     DWORD Size;
     *     DEVICE_DSM_ACTION Action;
     *     DWORD Flags;
     *     DWORD ParameterBlockOffset;
     *     DWORD ParameterBlockLength;
     *     DWORD DataSetRangesOffset;
     *     DWORD DataSetRangesLength;
     * } *PDEVICE_DSM_INPUT
     * }
     */
    public static final AddressLayout PDEVICE_DSM_INPUT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT {
     *     DWORD Size;
     *     DEVICE_DSM_ACTION Action;
     *     DWORD Flags;
     *     DWORD OperationStatus;
     *     DWORD ExtendedError;
     *     DWORD TargetDetailedError;
     *     DWORD ReservedStatus;
     *     DWORD OutputBlockOffset;
     *     DWORD OutputBlockLength;
     * } *PDEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT
     * }
     */
    public static final AddressLayout PDEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT {
     *     DWORD Size;
     *     DEVICE_DSM_ACTION Action;
     *     DWORD Flags;
     *     DWORD OperationStatus;
     *     DWORD ExtendedError;
     *     DWORD TargetDetailedError;
     *     DWORD ReservedStatus;
     *     DWORD OutputBlockOffset;
     *     DWORD OutputBlockLength;
     * } *PDEVICE_DSM_OUTPUT
     * }
     */
    public static final AddressLayout PDEVICE_DSM_OUTPUT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICE_DSM_DEFINITION {
     *     DEVICE_DSM_ACTION Action;
     *     BOOLEAN SingleRange;
     *     DWORD ParameterBlockAlignment;
     *     DWORD ParameterBlockLength;
     *     BOOLEAN HasOutput;
     *     DWORD OutputBlockAlignment;
     *     DWORD OutputBlockLength;
     * } *PDEVICE_DSM_DEFINITION
     * }
     */
    public static final AddressLayout PDEVICE_DSM_DEFINITION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICE_DSM_NOTIFICATION_PARAMETERS {
     *     DWORD Size;
     *     DWORD Flags;
     *     DWORD NumFileTypeIDs;
     *     GUID FileTypeID[1];
     * } *PDEVICE_DSM_NOTIFICATION_PARAMETERS
     * }
     */
    public static final AddressLayout PDEVICE_DSM_NOTIFICATION_PARAMETERS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_OFFLOAD_TOKEN {
     *     BYTE TokenType[4];
     *     BYTE Reserved[2];
     *     BYTE TokenIdLength[2];
     *     union {
     *         struct {
     *             BYTE Reserved2[504];
     *         } StorageOffloadZeroDataToken;
     *         BYTE Token[504];
     *     };
     * } *PSTORAGE_OFFLOAD_TOKEN
     * }
     */
    public static final AddressLayout PSTORAGE_OFFLOAD_TOKEN = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICE_DSM_OFFLOAD_READ_PARAMETERS {
     *     DWORD Flags;
     *     DWORD TimeToLive;
     *     DWORD Reserved[2];
     * } *PDEVICE_DSM_OFFLOAD_READ_PARAMETERS
     * }
     */
    public static final AddressLayout PDEVICE_DSM_OFFLOAD_READ_PARAMETERS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_OFFLOAD_READ_OUTPUT {
     *     DWORD OffloadReadFlags;
     *     DWORD Reserved;
     *     DWORDLONG LengthProtected;
     *     DWORD TokenLength;
     *     STORAGE_OFFLOAD_TOKEN Token;
     * } *PSTORAGE_OFFLOAD_READ_OUTPUT
     * }
     */
    public static final AddressLayout PSTORAGE_OFFLOAD_READ_OUTPUT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICE_DSM_OFFLOAD_WRITE_PARAMETERS {
     *     DWORD Flags;
     *     DWORD Reserved;
     *     DWORDLONG TokenOffset;
     *     STORAGE_OFFLOAD_TOKEN Token;
     * } *PDEVICE_DSM_OFFLOAD_WRITE_PARAMETERS
     * }
     */
    public static final AddressLayout PDEVICE_DSM_OFFLOAD_WRITE_PARAMETERS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_OFFLOAD_WRITE_OUTPUT {
     *     DWORD OffloadWriteFlags;
     *     DWORD Reserved;
     *     DWORDLONG LengthCopied;
     * } *PSTORAGE_OFFLOAD_WRITE_OUTPUT
     * }
     */
    public static final AddressLayout PSTORAGE_OFFLOAD_WRITE_OUTPUT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICE_DATA_SET_LBP_STATE_PARAMETERS {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORD Flags;
     *     DWORD OutputVersion;
     * } *PDEVICE_DATA_SET_LBP_STATE_PARAMETERS
     * }
     */
    public static final AddressLayout PDEVICE_DATA_SET_LBP_STATE_PARAMETERS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICE_DATA_SET_LBP_STATE_PARAMETERS {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORD Flags;
     *     DWORD OutputVersion;
     * } *PDEVICE_DSM_ALLOCATION_PARAMETERS
     * }
     */
    public static final AddressLayout PDEVICE_DSM_ALLOCATION_PARAMETERS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICE_DATA_SET_LB_PROVISIONING_STATE {
     *     DWORD Size;
     *     DWORD Version;
     *     DWORDLONG SlabSizeInBytes;
     *     DWORD SlabOffsetDeltaInBytes;
     *     DWORD SlabAllocationBitMapBitCount;
     *     DWORD SlabAllocationBitMapLength;
     *     DWORD SlabAllocationBitMap[1];
     * } *PDEVICE_DATA_SET_LB_PROVISIONING_STATE
     * }
     */
    public static final AddressLayout PDEVICE_DATA_SET_LB_PROVISIONING_STATE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICE_DATA_SET_LB_PROVISIONING_STATE {
     *     DWORD Size;
     *     DWORD Version;
     *     DWORDLONG SlabSizeInBytes;
     *     DWORD SlabOffsetDeltaInBytes;
     *     DWORD SlabAllocationBitMapBitCount;
     *     DWORD SlabAllocationBitMapLength;
     *     DWORD SlabAllocationBitMap[1];
     * } *PDEVICE_DSM_ALLOCATION_OUTPUT
     * }
     */
    public static final AddressLayout PDEVICE_DSM_ALLOCATION_OUTPUT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2 {
     *     DWORD Size;
     *     DWORD Version;
     *     DWORDLONG SlabSizeInBytes;
     *     DWORDLONG SlabOffsetDeltaInBytes;
     *     DWORD SlabAllocationBitMapBitCount;
     *     DWORD SlabAllocationBitMapLength;
     *     DWORD SlabAllocationBitMap[1];
     * } *PDEVICE_DATA_SET_LB_PROVISIONING_STATE_V2
     * }
     */
    public static final AddressLayout PDEVICE_DATA_SET_LB_PROVISIONING_STATE_V2 = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2 {
     *     DWORD Size;
     *     DWORD Version;
     *     DWORDLONG SlabSizeInBytes;
     *     DWORDLONG SlabOffsetDeltaInBytes;
     *     DWORD SlabAllocationBitMapBitCount;
     *     DWORD SlabAllocationBitMapLength;
     *     DWORD SlabAllocationBitMap[1];
     * } *PDEVICE_DSM_ALLOCATION_OUTPUT2
     * }
     */
    public static final AddressLayout PDEVICE_DSM_ALLOCATION_OUTPUT2 = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICE_DATA_SET_REPAIR_PARAMETERS {
     *     DWORD NumberOfRepairCopies;
     *     DWORD SourceCopy;
     *     DWORD RepairCopies[1];
     * } *PDEVICE_DATA_SET_REPAIR_PARAMETERS
     * }
     */
    public static final AddressLayout PDEVICE_DATA_SET_REPAIR_PARAMETERS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICE_DATA_SET_REPAIR_PARAMETERS {
     *     DWORD NumberOfRepairCopies;
     *     DWORD SourceCopy;
     *     DWORD RepairCopies[1];
     * } *PDEVICE_DSM_REPAIR_PARAMETERS
     * }
     */
    public static final AddressLayout PDEVICE_DSM_REPAIR_PARAMETERS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICE_DATA_SET_REPAIR_OUTPUT {
     *     DEVICE_DSM_RANGE ParityExtent;
     * } *PDEVICE_DATA_SET_REPAIR_OUTPUT
     * }
     */
    public static final AddressLayout PDEVICE_DATA_SET_REPAIR_OUTPUT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICE_DATA_SET_REPAIR_OUTPUT {
     *     DEVICE_DSM_RANGE ParityExtent;
     * } *PDEVICE_DSM_REPAIR_OUTPUT
     * }
     */
    public static final AddressLayout PDEVICE_DSM_REPAIR_OUTPUT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICE_DSM_QUERY_PREFER_LOCAL_REPAIR_OUTPUT {
     *     DWORD Version;
     *     BOOLEAN PreferLocalRepair;
     * } *PDEVICE_DSM_QUERY_PREFER_LOCAL_REPAIR_OUTPUT
     * }
     */
    public static final AddressLayout PDEVICE_DSM_QUERY_PREFER_LOCAL_REPAIR_OUTPUT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICE_DATA_SET_SCRUB_OUTPUT {
     *     DWORDLONG BytesProcessed;
     *     DWORDLONG BytesRepaired;
     *     DWORDLONG BytesFailed;
     * } *PDEVICE_DATA_SET_SCRUB_OUTPUT
     * }
     */
    public static final AddressLayout PDEVICE_DATA_SET_SCRUB_OUTPUT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICE_DATA_SET_SCRUB_OUTPUT {
     *     DWORDLONG BytesProcessed;
     *     DWORDLONG BytesRepaired;
     *     DWORDLONG BytesFailed;
     * } *PDEVICE_DSM_SCRUB_OUTPUT
     * }
     */
    public static final AddressLayout PDEVICE_DSM_SCRUB_OUTPUT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICE_DATA_SET_SCRUB_EX_OUTPUT {
     *     DWORDLONG BytesProcessed;
     *     DWORDLONG BytesRepaired;
     *     DWORDLONG BytesFailed;
     *     DEVICE_DSM_RANGE ParityExtent;
     *     DWORDLONG BytesScrubbed;
     * } *PDEVICE_DATA_SET_SCRUB_EX_OUTPUT
     * }
     */
    public static final AddressLayout PDEVICE_DATA_SET_SCRUB_EX_OUTPUT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICE_DATA_SET_SCRUB_EX_OUTPUT {
     *     DWORDLONG BytesProcessed;
     *     DWORDLONG BytesRepaired;
     *     DWORDLONG BytesFailed;
     *     DEVICE_DSM_RANGE ParityExtent;
     *     DWORDLONG BytesScrubbed;
     * } *PDEVICE_DSM_SCRUB_OUTPUT2
     * }
     */
    public static final AddressLayout PDEVICE_DSM_SCRUB_OUTPUT2 = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICE_DSM_TIERING_QUERY_INPUT {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORD Flags;
     *     DWORD NumberOfTierIds;
     *     GUID TierIds[1];
     * } *PDEVICE_DSM_TIERING_QUERY_INPUT
     * }
     */
    public static final AddressLayout PDEVICE_DSM_TIERING_QUERY_INPUT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICE_DSM_TIERING_QUERY_INPUT {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORD Flags;
     *     DWORD NumberOfTierIds;
     *     GUID TierIds[1];
     * } *PDEVICE_DSM_TIERING_QUERY_PARAMETERS
     * }
     */
    public static final AddressLayout PDEVICE_DSM_TIERING_QUERY_PARAMETERS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_TIER_REGION {
     *     GUID TierId;
     *     DWORDLONG Offset;
     *     DWORDLONG Length;
     * } *PSTORAGE_TIER_REGION
     * }
     */
    public static final AddressLayout PSTORAGE_TIER_REGION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICE_DSM_TIERING_QUERY_OUTPUT {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORD Flags;
     *     DWORD Reserved;
     *     DWORDLONG Alignment;
     *     DWORD TotalNumberOfRegions;
     *     DWORD NumberOfRegionsReturned;
     *     STORAGE_TIER_REGION Regions[1];
     * } *PDEVICE_DSM_TIERING_QUERY_OUTPUT
     * }
     */
    public static final AddressLayout PDEVICE_DSM_TIERING_QUERY_OUTPUT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICE_DSM_NVCACHE_CHANGE_PRIORITY_PARAMETERS {
     *     DWORD Size;
     *     BYTE TargetPriority;
     *     BYTE Reserved[3];
     * } *PDEVICE_DSM_NVCACHE_CHANGE_PRIORITY_PARAMETERS
     * }
     */
    public static final AddressLayout PDEVICE_DSM_NVCACHE_CHANGE_PRIORITY_PARAMETERS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICE_DATA_SET_TOPOLOGY_ID_QUERY_OUTPUT {
     *     DWORDLONG TopologyRangeBytes;
     *     BYTE TopologyId[16];
     * } *PDEVICE_DATA_SET_TOPOLOGY_ID_QUERY_OUTPUT
     * }
     */
    public static final AddressLayout PDEVICE_DATA_SET_TOPOLOGY_ID_QUERY_OUTPUT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICE_DATA_SET_TOPOLOGY_ID_QUERY_OUTPUT {
     *     DWORDLONG TopologyRangeBytes;
     *     BYTE TopologyId[16];
     * } *PDEVICE_DSM_TOPOLOGY_ID_QUERY_OUTPUT
     * }
     */
    public static final AddressLayout PDEVICE_DSM_TOPOLOGY_ID_QUERY_OUTPUT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICE_STORAGE_ADDRESS_RANGE {
     *     LONGLONG StartAddress;
     *     DWORDLONG LengthInBytes;
     * } *PDEVICE_STORAGE_ADDRESS_RANGE
     * }
     */
    public static final AddressLayout PDEVICE_STORAGE_ADDRESS_RANGE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICE_DSM_PHYSICAL_ADDRESSES_OUTPUT {
     *     DWORD Version;
     *     DWORD Flags;
     *     DWORD TotalNumberOfRanges;
     *     DWORD NumberOfRangesReturned;
     *     DEVICE_STORAGE_ADDRESS_RANGE Ranges[1];
     * } *PDEVICE_DSM_PHYSICAL_ADDRESSES_OUTPUT
     * }
     */
    public static final AddressLayout PDEVICE_DSM_PHYSICAL_ADDRESSES_OUTPUT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICE_DSM_REPORT_ZONES_PARAMETERS {
     *     DWORD Size;
     *     BYTE ReportOption;
     *     BYTE Partial;
     *     BYTE Reserved[2];
     * } *PDEVICE_DSM_REPORT_ZONES_PARAMETERS
     * }
     */
    public static final AddressLayout PDEVICE_DSM_REPORT_ZONES_PARAMETERS = winapi.C_POINTER;
    private static final int ZonesAttributeTypeAndLengthMayDifferent = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_ZONES_ATTRIBUTES.ZonesAttributeTypeAndLengthMayDifferent = 0
     * }
     */
    public static int ZonesAttributeTypeAndLengthMayDifferent() {
        return ZonesAttributeTypeAndLengthMayDifferent;
    }
    private static final int ZonesAttributeTypeSameLengthSame = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_ZONES_ATTRIBUTES.ZonesAttributeTypeSameLengthSame = 1
     * }
     */
    public static int ZonesAttributeTypeSameLengthSame() {
        return ZonesAttributeTypeSameLengthSame;
    }
    private static final int ZonesAttributeTypeSameLastZoneLengthDifferent = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_ZONES_ATTRIBUTES.ZonesAttributeTypeSameLastZoneLengthDifferent = 2
     * }
     */
    public static int ZonesAttributeTypeSameLastZoneLengthDifferent() {
        return ZonesAttributeTypeSameLastZoneLengthDifferent;
    }
    private static final int ZonesAttributeTypeMayDifferentLengthSame = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_ZONES_ATTRIBUTES.ZonesAttributeTypeMayDifferentLengthSame = 3
     * }
     */
    public static int ZonesAttributeTypeMayDifferentLengthSame() {
        return ZonesAttributeTypeMayDifferentLengthSame;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _STORAGE_ZONES_ATTRIBUTES {
     *     ZonesAttributeTypeAndLengthMayDifferent = 0,
     *     ZonesAttributeTypeSameLengthSame = 1,
     *     ZonesAttributeTypeSameLastZoneLengthDifferent = 2,
     *     ZonesAttributeTypeMayDifferentLengthSame = 3
     * } *PSTORAGE_ZONES_ATTRIBUTES
     * }
     */
    public static final AddressLayout PSTORAGE_ZONES_ATTRIBUTES = winapi.C_POINTER;
    private static final int ZoneConditionConventional = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_ZONE_CONDITION.ZoneConditionConventional = 0
     * }
     */
    public static int ZoneConditionConventional() {
        return ZoneConditionConventional;
    }
    private static final int ZoneConditionEmpty = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_ZONE_CONDITION.ZoneConditionEmpty = 1
     * }
     */
    public static int ZoneConditionEmpty() {
        return ZoneConditionEmpty;
    }
    private static final int ZoneConditionImplicitlyOpened = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_ZONE_CONDITION.ZoneConditionImplicitlyOpened = 2
     * }
     */
    public static int ZoneConditionImplicitlyOpened() {
        return ZoneConditionImplicitlyOpened;
    }
    private static final int ZoneConditionExplicitlyOpened = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_ZONE_CONDITION.ZoneConditionExplicitlyOpened = 3
     * }
     */
    public static int ZoneConditionExplicitlyOpened() {
        return ZoneConditionExplicitlyOpened;
    }
    private static final int ZoneConditionClosed = (int)4L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_ZONE_CONDITION.ZoneConditionClosed = 4
     * }
     */
    public static int ZoneConditionClosed() {
        return ZoneConditionClosed;
    }
    private static final int ZoneConditionReadOnly = (int)13L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_ZONE_CONDITION.ZoneConditionReadOnly = 13
     * }
     */
    public static int ZoneConditionReadOnly() {
        return ZoneConditionReadOnly;
    }
    private static final int ZoneConditionFull = (int)14L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_ZONE_CONDITION.ZoneConditionFull = 14
     * }
     */
    public static int ZoneConditionFull() {
        return ZoneConditionFull;
    }
    private static final int ZoneConditionOffline = (int)15L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_ZONE_CONDITION.ZoneConditionOffline = 15
     * }
     */
    public static int ZoneConditionOffline() {
        return ZoneConditionOffline;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _STORAGE_ZONE_CONDITION {
     *     ZoneConditionConventional = 0,
     *     ZoneConditionEmpty = 1,
     *     ZoneConditionImplicitlyOpened = 2,
     *     ZoneConditionExplicitlyOpened = 3,
     *     ZoneConditionClosed = 4,
     *     ZoneConditionReadOnly = 13,
     *     ZoneConditionFull = 14,
     *     ZoneConditionOffline = 15
     * } *PSTORAGE_ZONE_CONDITION
     * }
     */
    public static final AddressLayout PSTORAGE_ZONE_CONDITION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_ZONE_DESCRIPTOR {
     *     DWORD Size;
     *     STORAGE_ZONE_TYPES ZoneType;
     *     STORAGE_ZONE_CONDITION ZoneCondition;
     *     BOOLEAN ResetWritePointerRecommend;
     *     BYTE Reserved0[3];
     *     DWORDLONG ZoneSize;
     *     DWORDLONG WritePointerOffset;
     * } *PSTORAGE_ZONE_DESCRIPTOR
     * }
     */
    public static final AddressLayout PSTORAGE_ZONE_DESCRIPTOR = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICE_DSM_REPORT_ZONES_DATA {
     *     DWORD Size;
     *     DWORD ZoneCount;
     *     STORAGE_ZONES_ATTRIBUTES Attributes;
     *     DWORD Reserved0;
     *     STORAGE_ZONE_DESCRIPTOR ZoneDescriptors[1];
     * } *PDEVICE_DSM_REPORT_ZONES_DATA
     * }
     */
    public static final AddressLayout PDEVICE_DSM_REPORT_ZONES_DATA = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICE_DSM_REPORT_ZONES_DATA {
     *     DWORD Size;
     *     DWORD ZoneCount;
     *     STORAGE_ZONES_ATTRIBUTES Attributes;
     *     DWORD Reserved0;
     *     STORAGE_ZONE_DESCRIPTOR ZoneDescriptors[1];
     * } *PDEVICE_DSM_REPORT_ZONES_OUTPUT
     * }
     */
    public static final AddressLayout PDEVICE_DSM_REPORT_ZONES_OUTPUT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICE_STORAGE_RANGE_ATTRIBUTES {
     *     DWORDLONG LengthInBytes;
     *     union {
     *         DWORD AllFlags;
     *         struct {
     *             DWORD IsRangeBad : 1;
     *         };
     *     };
     *     DWORD Reserved;
     * } *PDEVICE_STORAGE_RANGE_ATTRIBUTES
     * }
     */
    public static final AddressLayout PDEVICE_STORAGE_RANGE_ATTRIBUTES = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICE_DSM_RANGE_ERROR_INFO {
     *     DWORD Version;
     *     DWORD Flags;
     *     DWORD TotalNumberOfRanges;
     *     DWORD NumberOfRangesReturned;
     *     DEVICE_STORAGE_RANGE_ATTRIBUTES Ranges[1];
     * } *PDEVICE_DSM_RANGE_ERROR_INFO
     * }
     */
    public static final AddressLayout PDEVICE_DSM_RANGE_ERROR_INFO = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICE_DSM_RANGE_ERROR_INFO {
     *     DWORD Version;
     *     DWORD Flags;
     *     DWORD TotalNumberOfRanges;
     *     DWORD NumberOfRangesReturned;
     *     DEVICE_STORAGE_RANGE_ATTRIBUTES Ranges[1];
     * } *PDEVICE_DSM_RANGE_ERROR_OUTPUT
     * }
     */
    public static final AddressLayout PDEVICE_DSM_RANGE_ERROR_OUTPUT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICE_DSM_LOST_QUERY_PARAMETERS {
     *     DWORD Version;
     *     DWORDLONG Granularity;
     * } *PDEVICE_DSM_LOST_QUERY_PARAMETERS
     * }
     */
    public static final AddressLayout PDEVICE_DSM_LOST_QUERY_PARAMETERS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICE_DSM_LOST_QUERY_OUTPUT {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORDLONG Alignment;
     *     DWORD NumberOfBits;
     *     DWORD BitMap[1];
     * } *PDEVICE_DSM_LOST_QUERY_OUTPUT
     * }
     */
    public static final AddressLayout PDEVICE_DSM_LOST_QUERY_OUTPUT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICE_DSM_FREE_SPACE_OUTPUT {
     *     DWORD Version;
     *     DWORDLONG FreeSpace;
     * } *PDEVICE_DSM_FREE_SPACE_OUTPUT
     * }
     */
    public static final AddressLayout PDEVICE_DSM_FREE_SPACE_OUTPUT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICE_DSM_CONVERSION_OUTPUT {
     *     DWORD Version;
     *     GUID Source;
     * } *PDEVICE_DSM_CONVERSION_OUTPUT
     * }
     */
    public static final AddressLayout PDEVICE_DSM_CONVERSION_OUTPUT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_GET_BC_PROPERTIES_OUTPUT {
     *     DWORD MaximumRequestsPerPeriod;
     *     DWORD MinimumPeriod;
     *     DWORDLONG MaximumRequestSize;
     *     DWORD EstimatedTimePerRequest;
     *     DWORD NumOutStandingRequests;
     *     DWORDLONG RequestSize;
     * } *PSTORAGE_GET_BC_PROPERTIES_OUTPUT
     * }
     */
    public static final AddressLayout PSTORAGE_GET_BC_PROPERTIES_OUTPUT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_ALLOCATE_BC_STREAM_INPUT {
     *     DWORD Version;
     *     DWORD RequestsPerPeriod;
     *     DWORD Period;
     *     BOOLEAN RetryFailures;
     *     BOOLEAN Discardable;
     *     BOOLEAN Reserved1[2];
     *     DWORD AccessType;
     *     DWORD AccessMode;
     * } *PSTORAGE_ALLOCATE_BC_STREAM_INPUT
     * }
     */
    public static final AddressLayout PSTORAGE_ALLOCATE_BC_STREAM_INPUT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_ALLOCATE_BC_STREAM_OUTPUT {
     *     DWORDLONG RequestSize;
     *     DWORD NumOutStandingRequests;
     * } *PSTORAGE_ALLOCATE_BC_STREAM_OUTPUT
     * }
     */
    public static final AddressLayout PSTORAGE_ALLOCATE_BC_STREAM_OUTPUT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_PRIORITY_HINT_SUPPORT {
     *     DWORD SupportFlags;
     * } *PSTORAGE_PRIORITY_HINT_SUPPORT
     * }
     */
    public static final AddressLayout PSTORAGE_PRIORITY_HINT_SUPPORT = winapi.C_POINTER;
    private static final int StorageDiagnosticLevelDefault = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_DIAGNOSTIC_LEVEL.StorageDiagnosticLevelDefault = 0
     * }
     */
    public static int StorageDiagnosticLevelDefault() {
        return StorageDiagnosticLevelDefault;
    }
    private static final int StorageDiagnosticLevelMax = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_DIAGNOSTIC_LEVEL.StorageDiagnosticLevelMax = 1
     * }
     */
    public static int StorageDiagnosticLevelMax() {
        return StorageDiagnosticLevelMax;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _STORAGE_DIAGNOSTIC_LEVEL {
     *     StorageDiagnosticLevelDefault = 0,
     *     StorageDiagnosticLevelMax
     * } *PSTORAGE_DIAGNOSTIC_LEVEL
     * }
     */
    public static final AddressLayout PSTORAGE_DIAGNOSTIC_LEVEL = winapi.C_POINTER;
    private static final int StorageDiagnosticTargetTypeUndefined = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_DIAGNOSTIC_TARGET_TYPE.StorageDiagnosticTargetTypeUndefined = 0
     * }
     */
    public static int StorageDiagnosticTargetTypeUndefined() {
        return StorageDiagnosticTargetTypeUndefined;
    }
    private static final int StorageDiagnosticTargetTypePort = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_DIAGNOSTIC_TARGET_TYPE.StorageDiagnosticTargetTypePort = 1
     * }
     */
    public static int StorageDiagnosticTargetTypePort() {
        return StorageDiagnosticTargetTypePort;
    }
    private static final int StorageDiagnosticTargetTypeMiniport = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_DIAGNOSTIC_TARGET_TYPE.StorageDiagnosticTargetTypeMiniport = 2
     * }
     */
    public static int StorageDiagnosticTargetTypeMiniport() {
        return StorageDiagnosticTargetTypeMiniport;
    }
    private static final int StorageDiagnosticTargetTypeHbaFirmware = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_DIAGNOSTIC_TARGET_TYPE.StorageDiagnosticTargetTypeHbaFirmware = 3
     * }
     */
    public static int StorageDiagnosticTargetTypeHbaFirmware() {
        return StorageDiagnosticTargetTypeHbaFirmware;
    }
    private static final int StorageDiagnosticTargetTypeMax = (int)4L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_DIAGNOSTIC_TARGET_TYPE.StorageDiagnosticTargetTypeMax = 4
     * }
     */
    public static int StorageDiagnosticTargetTypeMax() {
        return StorageDiagnosticTargetTypeMax;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _STORAGE_DIAGNOSTIC_TARGET_TYPE {
     *     StorageDiagnosticTargetTypeUndefined = 0,
     *     StorageDiagnosticTargetTypePort,
     *     StorageDiagnosticTargetTypeMiniport,
     *     StorageDiagnosticTargetTypeHbaFirmware,
     *     StorageDiagnosticTargetTypeMax
     * } *PSTORAGE_DIAGNOSTIC_TARGET_TYPE
     * }
     */
    public static final AddressLayout PSTORAGE_DIAGNOSTIC_TARGET_TYPE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_DIAGNOSTIC_REQUEST {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORD Flags;
     *     STORAGE_DIAGNOSTIC_TARGET_TYPE TargetType;
     *     STORAGE_DIAGNOSTIC_LEVEL Level;
     * } *PSTORAGE_DIAGNOSTIC_REQUEST
     * }
     */
    public static final AddressLayout PSTORAGE_DIAGNOSTIC_REQUEST = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_DIAGNOSTIC_DATA {
     *     DWORD Version;
     *     DWORD Size;
     *     GUID ProviderId;
     *     DWORD BufferSize;
     *     DWORD Reserved;
     *     BYTE DiagnosticDataBuffer[1];
     * } *PSTORAGE_DIAGNOSTIC_DATA
     * }
     */
    public static final AddressLayout PSTORAGE_DIAGNOSTIC_DATA = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _PHYSICAL_ELEMENT_STATUS_REQUEST {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORD StartingElement;
     *     BYTE Filter;
     *     BYTE ReportType;
     *     BYTE Reserved[2];
     * } *PPHYSICAL_ELEMENT_STATUS_REQUEST
     * }
     */
    public static final AddressLayout PPHYSICAL_ELEMENT_STATUS_REQUEST = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _PHYSICAL_ELEMENT_STATUS_DESCRIPTOR {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORD ElementIdentifier;
     *     BYTE PhysicalElementType;
     *     BYTE PhysicalElementHealth;
     *     BYTE Reserved1[2];
     *     DWORDLONG AssociatedCapacity;
     *     DWORD Reserved2[4];
     * } *PPHYSICAL_ELEMENT_STATUS_DESCRIPTOR
     * }
     */
    public static final AddressLayout PPHYSICAL_ELEMENT_STATUS_DESCRIPTOR = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _PHYSICAL_ELEMENT_STATUS {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORD DescriptorCount;
     *     DWORD ReturnedDescriptorCount;
     *     DWORD ElementIdentifierBeingDepoped;
     *     DWORD Reserved;
     *     PHYSICAL_ELEMENT_STATUS_DESCRIPTOR Descriptors[1];
     * } *PPHYSICAL_ELEMENT_STATUS
     * }
     */
    public static final AddressLayout PPHYSICAL_ELEMENT_STATUS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _REMOVE_ELEMENT_AND_TRUNCATE_REQUEST {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORDLONG RequestCapacity;
     *     DWORD ElementIdentifier;
     *     DWORD Reserved;
     * } *PREMOVE_ELEMENT_AND_TRUNCATE_REQUEST
     * }
     */
    public static final AddressLayout PREMOVE_ELEMENT_AND_TRUNCATE_REQUEST = winapi.C_POINTER;
    private static final int DeviceInternalStatusDataRequestTypeUndefined = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _DEVICE_INTERNAL_STATUS_DATA_REQUEST_TYPE.DeviceInternalStatusDataRequestTypeUndefined = 0
     * }
     */
    public static int DeviceInternalStatusDataRequestTypeUndefined() {
        return DeviceInternalStatusDataRequestTypeUndefined;
    }
    private static final int DeviceCurrentInternalStatusDataHeader = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _DEVICE_INTERNAL_STATUS_DATA_REQUEST_TYPE.DeviceCurrentInternalStatusDataHeader = 1
     * }
     */
    public static int DeviceCurrentInternalStatusDataHeader() {
        return DeviceCurrentInternalStatusDataHeader;
    }
    private static final int DeviceCurrentInternalStatusData = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _DEVICE_INTERNAL_STATUS_DATA_REQUEST_TYPE.DeviceCurrentInternalStatusData = 2
     * }
     */
    public static int DeviceCurrentInternalStatusData() {
        return DeviceCurrentInternalStatusData;
    }
    private static final int DeviceSavedInternalStatusDataHeader = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _DEVICE_INTERNAL_STATUS_DATA_REQUEST_TYPE.DeviceSavedInternalStatusDataHeader = 3
     * }
     */
    public static int DeviceSavedInternalStatusDataHeader() {
        return DeviceSavedInternalStatusDataHeader;
    }
    private static final int DeviceSavedInternalStatusData = (int)4L;
    /**
     * {@snippet lang=c :
     * enum _DEVICE_INTERNAL_STATUS_DATA_REQUEST_TYPE.DeviceSavedInternalStatusData = 4
     * }
     */
    public static int DeviceSavedInternalStatusData() {
        return DeviceSavedInternalStatusData;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _DEVICE_INTERNAL_STATUS_DATA_REQUEST_TYPE {
     *     DeviceInternalStatusDataRequestTypeUndefined = 0,
     *     DeviceCurrentInternalStatusDataHeader,
     *     DeviceCurrentInternalStatusData,
     *     DeviceSavedInternalStatusDataHeader,
     *     DeviceSavedInternalStatusData
     * } *PDEVICE_INTERNAL_STATUS_DATA_REQUEST_TYPE
     * }
     */
    public static final AddressLayout PDEVICE_INTERNAL_STATUS_DATA_REQUEST_TYPE = winapi.C_POINTER;
    private static final int DeviceStatusDataSetUndefined = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _DEVICE_INTERNAL_STATUS_DATA_SET.DeviceStatusDataSetUndefined = 0
     * }
     */
    public static int DeviceStatusDataSetUndefined() {
        return DeviceStatusDataSetUndefined;
    }
    private static final int DeviceStatusDataSet1 = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _DEVICE_INTERNAL_STATUS_DATA_SET.DeviceStatusDataSet1 = 1
     * }
     */
    public static int DeviceStatusDataSet1() {
        return DeviceStatusDataSet1;
    }
    private static final int DeviceStatusDataSet2 = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _DEVICE_INTERNAL_STATUS_DATA_SET.DeviceStatusDataSet2 = 2
     * }
     */
    public static int DeviceStatusDataSet2() {
        return DeviceStatusDataSet2;
    }
    private static final int DeviceStatusDataSet3 = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _DEVICE_INTERNAL_STATUS_DATA_SET.DeviceStatusDataSet3 = 3
     * }
     */
    public static int DeviceStatusDataSet3() {
        return DeviceStatusDataSet3;
    }
    private static final int DeviceStatusDataSet4 = (int)4L;
    /**
     * {@snippet lang=c :
     * enum _DEVICE_INTERNAL_STATUS_DATA_SET.DeviceStatusDataSet4 = 4
     * }
     */
    public static int DeviceStatusDataSet4() {
        return DeviceStatusDataSet4;
    }
    private static final int DeviceStatusDataSetMax = (int)5L;
    /**
     * {@snippet lang=c :
     * enum _DEVICE_INTERNAL_STATUS_DATA_SET.DeviceStatusDataSetMax = 5
     * }
     */
    public static int DeviceStatusDataSetMax() {
        return DeviceStatusDataSetMax;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _DEVICE_INTERNAL_STATUS_DATA_SET {
     *     DeviceStatusDataSetUndefined = 0,
     *     DeviceStatusDataSet1,
     *     DeviceStatusDataSet2,
     *     DeviceStatusDataSet3,
     *     DeviceStatusDataSet4,
     *     DeviceStatusDataSetMax
     * } *PDEVICE_INTERNAL_STATUS_DATA_SET
     * }
     */
    public static final AddressLayout PDEVICE_INTERNAL_STATUS_DATA_SET = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _GET_DEVICE_INTERNAL_STATUS_DATA_REQUEST {
     *     DWORD Version;
     *     DWORD Size;
     *     DEVICE_INTERNAL_STATUS_DATA_REQUEST_TYPE RequestDataType;
     *     DEVICE_INTERNAL_STATUS_DATA_SET RequestDataSet;
     * } *PGET_DEVICE_INTERNAL_STATUS_DATA_REQUEST
     * }
     */
    public static final AddressLayout PGET_DEVICE_INTERNAL_STATUS_DATA_REQUEST = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICE_INTERNAL_STATUS_DATA {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORDLONG T10VendorId;
     *     DWORD DataSet1Length;
     *     DWORD DataSet2Length;
     *     DWORD DataSet3Length;
     *     DWORD DataSet4Length;
     *     BYTE StatusDataVersion;
     *     BYTE Reserved[3];
     *     BYTE ReasonIdentifier[128];
     *     DWORD StatusDataLength;
     *     BYTE StatusData[1];
     * } *PDEVICE_INTERNAL_STATUS_DATA
     * }
     */
    public static final AddressLayout PDEVICE_INTERNAL_STATUS_DATA = winapi.C_POINTER;
    private static final int StorageSanitizeMethodDefault = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_SANITIZE_METHOD.StorageSanitizeMethodDefault = 0
     * }
     */
    public static int StorageSanitizeMethodDefault() {
        return StorageSanitizeMethodDefault;
    }
    private static final int StorageSanitizeMethodBlockErase = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_SANITIZE_METHOD.StorageSanitizeMethodBlockErase = 1
     * }
     */
    public static int StorageSanitizeMethodBlockErase() {
        return StorageSanitizeMethodBlockErase;
    }
    private static final int StorageSanitizeMethodCryptoErase = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_SANITIZE_METHOD.StorageSanitizeMethodCryptoErase = 2
     * }
     */
    public static int StorageSanitizeMethodCryptoErase() {
        return StorageSanitizeMethodCryptoErase;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _STORAGE_SANITIZE_METHOD {
     *     StorageSanitizeMethodDefault = 0,
     *     StorageSanitizeMethodBlockErase,
     *     StorageSanitizeMethodCryptoErase
     * } *PSTORAGE_SANITIZE_METHOD
     * }
     */
    public static final AddressLayout PSTORAGE_SANITIZE_METHOD = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_REINITIALIZE_MEDIA {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORD TimeoutInSeconds;
     *     struct {
     *         DWORD SanitizeMethod : 4;
     *         DWORD DisallowUnrestrictedSanitizeExit : 1;
     *         DWORD Reserved : 27;
     *     } SanitizeOption;
     * } *PSTORAGE_REINITIALIZE_MEDIA
     * }
     */
    public static final AddressLayout PSTORAGE_REINITIALIZE_MEDIA = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_MEDIA_SERIAL_NUMBER_DATA {
     *     WORD Reserved;
     *     WORD SerialNumberLength;
     *     BYTE SerialNumber[0];
     * } *PSTORAGE_MEDIA_SERIAL_NUMBER_DATA
     * }
     */
    public static final AddressLayout PSTORAGE_MEDIA_SERIAL_NUMBER_DATA = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_READ_CAPACITY {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORD BlockLength;
     *     LARGE_INTEGER NumberOfBlocks;
     *     LARGE_INTEGER DiskLength;
     * } *PSTORAGE_READ_CAPACITY
     * }
     */
    public static final AddressLayout PSTORAGE_READ_CAPACITY = winapi.C_POINTER;
    private static final int WriteCacheTypeUnknown = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _WRITE_CACHE_TYPE.WriteCacheTypeUnknown = 0
     * }
     */
    public static int WriteCacheTypeUnknown() {
        return WriteCacheTypeUnknown;
    }
    private static final int WriteCacheTypeNone = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _WRITE_CACHE_TYPE.WriteCacheTypeNone = 1
     * }
     */
    public static int WriteCacheTypeNone() {
        return WriteCacheTypeNone;
    }
    private static final int WriteCacheTypeWriteBack = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _WRITE_CACHE_TYPE.WriteCacheTypeWriteBack = 2
     * }
     */
    public static int WriteCacheTypeWriteBack() {
        return WriteCacheTypeWriteBack;
    }
    private static final int WriteCacheTypeWriteThrough = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _WRITE_CACHE_TYPE.WriteCacheTypeWriteThrough = 3
     * }
     */
    public static int WriteCacheTypeWriteThrough() {
        return WriteCacheTypeWriteThrough;
    }
    private static final int WriteCacheEnableUnknown = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _WRITE_CACHE_ENABLE.WriteCacheEnableUnknown = 0
     * }
     */
    public static int WriteCacheEnableUnknown() {
        return WriteCacheEnableUnknown;
    }
    private static final int WriteCacheDisabled = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _WRITE_CACHE_ENABLE.WriteCacheDisabled = 1
     * }
     */
    public static int WriteCacheDisabled() {
        return WriteCacheDisabled;
    }
    private static final int WriteCacheEnabled = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _WRITE_CACHE_ENABLE.WriteCacheEnabled = 2
     * }
     */
    public static int WriteCacheEnabled() {
        return WriteCacheEnabled;
    }
    private static final int WriteCacheChangeUnknown = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _WRITE_CACHE_CHANGE.WriteCacheChangeUnknown = 0
     * }
     */
    public static int WriteCacheChangeUnknown() {
        return WriteCacheChangeUnknown;
    }
    private static final int WriteCacheNotChangeable = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _WRITE_CACHE_CHANGE.WriteCacheNotChangeable = 1
     * }
     */
    public static int WriteCacheNotChangeable() {
        return WriteCacheNotChangeable;
    }
    private static final int WriteCacheChangeable = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _WRITE_CACHE_CHANGE.WriteCacheChangeable = 2
     * }
     */
    public static int WriteCacheChangeable() {
        return WriteCacheChangeable;
    }
    private static final int WriteThroughUnknown = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _WRITE_THROUGH.WriteThroughUnknown = 0
     * }
     */
    public static int WriteThroughUnknown() {
        return WriteThroughUnknown;
    }
    private static final int WriteThroughNotSupported = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _WRITE_THROUGH.WriteThroughNotSupported = 1
     * }
     */
    public static int WriteThroughNotSupported() {
        return WriteThroughNotSupported;
    }
    private static final int WriteThroughSupported = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _WRITE_THROUGH.WriteThroughSupported = 2
     * }
     */
    public static int WriteThroughSupported() {
        return WriteThroughSupported;
    }
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_WRITE_CACHE_PROPERTY {
     *     DWORD Version;
     *     DWORD Size;
     *     WRITE_CACHE_TYPE WriteCacheType;
     *     WRITE_CACHE_ENABLE WriteCacheEnabled;
     *     WRITE_CACHE_CHANGE WriteCacheChangeable;
     *     WRITE_THROUGH WriteThroughSupported;
     *     BOOLEAN FlushCacheSupported;
     *     BOOLEAN UserDefinedPowerProtection;
     *     BOOLEAN NVCacheEnabled;
     * } *PSTORAGE_WRITE_CACHE_PROPERTY
     * }
     */
    public static final AddressLayout PSTORAGE_WRITE_CACHE_PROPERTY = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _PERSISTENT_RESERVE_COMMAND {
     *     DWORD Version;
     *     DWORD Size;
     *     union {
     *         struct {
     *             BYTE ServiceAction : 5;
     *             BYTE Reserved1 : 3;
     *             WORD AllocationLength;
     *         } PR_IN;
     *         struct {
     *             BYTE ServiceAction : 5;
     *             BYTE Reserved1 : 3;
     *             BYTE Type : 4;
     *             BYTE Scope : 4;
     *             BYTE ParameterList[0];
     *         } PR_OUT;
     *     };
     * } *PPERSISTENT_RESERVE_COMMAND
     * }
     */
    public static final AddressLayout PPERSISTENT_RESERVE_COMMAND = winapi.C_POINTER;
    private static final int TCCollectionBugCheck = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _DEVICEDUMP_COLLECTION_TYPE.TCCollectionBugCheck = 1
     * }
     */
    public static int TCCollectionBugCheck() {
        return TCCollectionBugCheck;
    }
    private static final int TCCollectionApplicationRequested = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _DEVICEDUMP_COLLECTION_TYPE.TCCollectionApplicationRequested = 2
     * }
     */
    public static int TCCollectionApplicationRequested() {
        return TCCollectionApplicationRequested;
    }
    private static final int TCCollectionDeviceRequested = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _DEVICEDUMP_COLLECTION_TYPE.TCCollectionDeviceRequested = 3
     * }
     */
    public static int TCCollectionDeviceRequested() {
        return TCCollectionDeviceRequested;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _DEVICEDUMP_COLLECTION_TYPE {
     *     TCCollectionBugCheck = 1,
     *     TCCollectionApplicationRequested,
     *     TCCollectionDeviceRequested
     * } *PDEVICEDUMP_COLLECTION_TYPE
     * }
     */
    public static final AddressLayout PDEVICEDUMP_COLLECTION_TYPE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICEDUMP_SUBSECTION_POINTER {
     *     DWORD dwSize;
     *     DWORD dwFlags;
     *     DWORD dwOffset;
     * } *PDEVICEDUMP_SUBSECTION_POINTER
     * }
     */
    public static final AddressLayout PDEVICEDUMP_SUBSECTION_POINTER = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICEDUMP_STRUCTURE_VERSION {
     *     DWORD dwSignature;
     *     DWORD dwVersion;
     *     DWORD dwSize;
     * } *PDEVICEDUMP_STRUCTURE_VERSION
     * }
     */
    public static final AddressLayout PDEVICEDUMP_STRUCTURE_VERSION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICEDUMP_SECTION_HEADER {
     *     GUID guidDeviceDataId;
     *     BYTE sOrganizationID[16];
     *     DWORD dwFirmwareRevision;
     *     BYTE sModelNumber[32];
     *     BYTE szDeviceManufacturingID[32];
     *     DWORD dwFlags;
     *     DWORD bRestrictedPrivateDataVersion;
     *     DWORD dwFirmwareIssueId;
     *     BYTE szIssueDescriptionString[132];
     * } *PDEVICEDUMP_SECTION_HEADER
     * }
     */
    public static final AddressLayout PDEVICEDUMP_SECTION_HEADER = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _GP_LOG_PAGE_DESCRIPTOR {
     *     WORD LogAddress;
     *     WORD LogSectors;
     * } *PGP_LOG_PAGE_DESCRIPTOR
     * }
     */
    public static final AddressLayout PGP_LOG_PAGE_DESCRIPTOR = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICEDUMP_PUBLIC_SUBSECTION {
     *     DWORD dwFlags;
     *     GP_LOG_PAGE_DESCRIPTOR GPLogTable[16];
     *     CHAR szDescription[16];
     *     BYTE bData[1];
     * } *PDEVICEDUMP_PUBLIC_SUBSECTION
     * }
     */
    public static final AddressLayout PDEVICEDUMP_PUBLIC_SUBSECTION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICEDUMP_RESTRICTED_SUBSECTION {
     *     BYTE bData[1];
     * } *PDEVICEDUMP_RESTRICTED_SUBSECTION
     * }
     */
    public static final AddressLayout PDEVICEDUMP_RESTRICTED_SUBSECTION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICEDUMP_PRIVATE_SUBSECTION {
     *     DWORD dwFlags;
     *     GP_LOG_PAGE_DESCRIPTOR GPLogId;
     *     BYTE bData[1];
     * } *PDEVICEDUMP_PRIVATE_SUBSECTION
     * }
     */
    public static final AddressLayout PDEVICEDUMP_PRIVATE_SUBSECTION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICEDUMP_STORAGEDEVICE_DATA {
     *     DEVICEDUMP_STRUCTURE_VERSION Descriptor;
     *     DEVICEDUMP_SECTION_HEADER SectionHeader;
     *     DWORD dwBufferSize;
     *     DWORD dwReasonForCollection;
     *     DEVICEDUMP_SUBSECTION_POINTER PublicData;
     *     DEVICEDUMP_SUBSECTION_POINTER RestrictedData;
     *     DEVICEDUMP_SUBSECTION_POINTER PrivateData;
     * } *PDEVICEDUMP_STORAGEDEVICE_DATA
     * }
     */
    public static final AddressLayout PDEVICEDUMP_STORAGEDEVICE_DATA = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD {
     *     BYTE Cdb[16];
     *     BYTE Command[16];
     *     DWORDLONG StartTime;
     *     DWORDLONG EndTime;
     *     DWORD OperationStatus;
     *     DWORD OperationError;
     *     union {
     *         struct {
     *             DWORD dwReserved;
     *         } ExternalStack;
     *         struct {
     *             DWORD dwAtaPortSpecific;
     *         } AtaPort;
     *         struct {
     *             DWORD SrbTag;
     *         } StorPort;
     *     } StackSpecific;
     * } *PDEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD
     * }
     */
    public static final AddressLayout PDEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DEVICEDUMP_STORAGESTACK_PUBLIC_DUMP {
     *     DEVICEDUMP_STRUCTURE_VERSION Descriptor;
     *     DWORD dwReasonForCollection;
     *     BYTE cDriverName[16];
     *     DWORD uiNumRecords;
     *     DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD RecordArray[1];
     * } *PDEVICEDUMP_STORAGESTACK_PUBLIC_DUMP
     * }
     */
    public static final AddressLayout PDEVICEDUMP_STORAGESTACK_PUBLIC_DUMP = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_IDLE_POWER {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORD WakeCapableHint : 1;
     *     DWORD D3ColdSupported : 1;
     *     DWORD Reserved : 30;
     *     DWORD D3IdleTimeout;
     * } *PSTORAGE_IDLE_POWER
     * }
     */
    public static final AddressLayout PSTORAGE_IDLE_POWER = winapi.C_POINTER;
    private static final int StoragePowerupUnknown = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_POWERUP_REASON_TYPE.StoragePowerupUnknown = 0
     * }
     */
    public static int StoragePowerupUnknown() {
        return StoragePowerupUnknown;
    }
    private static final int StoragePowerupIO = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_POWERUP_REASON_TYPE.StoragePowerupIO = 1
     * }
     */
    public static int StoragePowerupIO() {
        return StoragePowerupIO;
    }
    private static final int StoragePowerupDeviceAttention = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_POWERUP_REASON_TYPE.StoragePowerupDeviceAttention = 2
     * }
     */
    public static int StoragePowerupDeviceAttention() {
        return StoragePowerupDeviceAttention;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _STORAGE_POWERUP_REASON_TYPE {
     *     StoragePowerupUnknown = 0,
     *     StoragePowerupIO,
     *     StoragePowerupDeviceAttention
     * } *PSTORAGE_POWERUP_REASON_TYPE
     * }
     */
    public static final AddressLayout PSTORAGE_POWERUP_REASON_TYPE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_IDLE_POWERUP_REASON {
     *     DWORD Version;
     *     DWORD Size;
     *     STORAGE_POWERUP_REASON_TYPE PowerupReason;
     * } *PSTORAGE_IDLE_POWERUP_REASON
     * }
     */
    public static final AddressLayout PSTORAGE_IDLE_POWERUP_REASON = winapi.C_POINTER;
    private static final int StorageDevicePowerCapUnitsPercent = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_DEVICE_POWER_CAP_UNITS.StorageDevicePowerCapUnitsPercent = 0
     * }
     */
    public static int StorageDevicePowerCapUnitsPercent() {
        return StorageDevicePowerCapUnitsPercent;
    }
    private static final int StorageDevicePowerCapUnitsMilliwatts = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_DEVICE_POWER_CAP_UNITS.StorageDevicePowerCapUnitsMilliwatts = 1
     * }
     */
    public static int StorageDevicePowerCapUnitsMilliwatts() {
        return StorageDevicePowerCapUnitsMilliwatts;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _STORAGE_DEVICE_POWER_CAP_UNITS {
     *     StorageDevicePowerCapUnitsPercent,
     *     StorageDevicePowerCapUnitsMilliwatts
     * } *PSTORAGE_DEVICE_POWER_CAP_UNITS
     * }
     */
    public static final AddressLayout PSTORAGE_DEVICE_POWER_CAP_UNITS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_DEVICE_POWER_CAP {
     *     DWORD Version;
     *     DWORD Size;
     *     STORAGE_DEVICE_POWER_CAP_UNITS Units;
     *     DWORDLONG MaxPower;
     * } *PSTORAGE_DEVICE_POWER_CAP
     * }
     */
    public static final AddressLayout PSTORAGE_DEVICE_POWER_CAP = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_RPMB_DATA_FRAME {
     *     BYTE Stuff[196];
     *     BYTE KeyOrMAC[32];
     *     BYTE Data[256];
     *     BYTE Nonce[16];
     *     BYTE WriteCounter[4];
     *     BYTE Address[2];
     *     BYTE BlockCount[2];
     *     BYTE OperationResult[2];
     *     BYTE RequestOrResponseType[2];
     * } *PSTORAGE_RPMB_DATA_FRAME
     * }
     */
    public static final AddressLayout PSTORAGE_RPMB_DATA_FRAME = winapi.C_POINTER;
    private static final int StorRpmbProgramAuthKey = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_RPMB_COMMAND_TYPE.StorRpmbProgramAuthKey = 1
     * }
     */
    public static int StorRpmbProgramAuthKey() {
        return StorRpmbProgramAuthKey;
    }
    private static final int StorRpmbQueryWriteCounter = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_RPMB_COMMAND_TYPE.StorRpmbQueryWriteCounter = 2
     * }
     */
    public static int StorRpmbQueryWriteCounter() {
        return StorRpmbQueryWriteCounter;
    }
    private static final int StorRpmbAuthenticatedWrite = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_RPMB_COMMAND_TYPE.StorRpmbAuthenticatedWrite = 3
     * }
     */
    public static int StorRpmbAuthenticatedWrite() {
        return StorRpmbAuthenticatedWrite;
    }
    private static final int StorRpmbAuthenticatedRead = (int)4L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_RPMB_COMMAND_TYPE.StorRpmbAuthenticatedRead = 4
     * }
     */
    public static int StorRpmbAuthenticatedRead() {
        return StorRpmbAuthenticatedRead;
    }
    private static final int StorRpmbReadResultRequest = (int)5L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_RPMB_COMMAND_TYPE.StorRpmbReadResultRequest = 5
     * }
     */
    public static int StorRpmbReadResultRequest() {
        return StorRpmbReadResultRequest;
    }
    private static final int StorRpmbAuthenticatedDeviceConfigWrite = (int)6L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_RPMB_COMMAND_TYPE.StorRpmbAuthenticatedDeviceConfigWrite = 6
     * }
     */
    public static int StorRpmbAuthenticatedDeviceConfigWrite() {
        return StorRpmbAuthenticatedDeviceConfigWrite;
    }
    private static final int StorRpmbAuthenticatedDeviceConfigRead = (int)7L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_RPMB_COMMAND_TYPE.StorRpmbAuthenticatedDeviceConfigRead = 7
     * }
     */
    public static int StorRpmbAuthenticatedDeviceConfigRead() {
        return StorRpmbAuthenticatedDeviceConfigRead;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _STORAGE_RPMB_COMMAND_TYPE {
     *     StorRpmbProgramAuthKey = 1,
     *     StorRpmbQueryWriteCounter = 2,
     *     StorRpmbAuthenticatedWrite = 3,
     *     StorRpmbAuthenticatedRead = 4,
     *     StorRpmbReadResultRequest = 5,
     *     StorRpmbAuthenticatedDeviceConfigWrite = 6,
     *     StorRpmbAuthenticatedDeviceConfigRead = 7
     * } *PSTORAGE_RPMB_COMMAND_TYPE
     * }
     */
    public static final AddressLayout PSTORAGE_RPMB_COMMAND_TYPE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_EVENT_NOTIFICATION {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORDLONG Events;
     * } *PSTORAGE_EVENT_NOTIFICATION
     * }
     */
    public static final AddressLayout PSTORAGE_EVENT_NOTIFICATION = winapi.C_POINTER;
    private static final int StorageCounterTypeUnknown = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_COUNTER_TYPE.StorageCounterTypeUnknown = 0
     * }
     */
    public static int StorageCounterTypeUnknown() {
        return StorageCounterTypeUnknown;
    }
    private static final int StorageCounterTypeTemperatureCelsius = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_COUNTER_TYPE.StorageCounterTypeTemperatureCelsius = 1
     * }
     */
    public static int StorageCounterTypeTemperatureCelsius() {
        return StorageCounterTypeTemperatureCelsius;
    }
    private static final int StorageCounterTypeTemperatureCelsiusMax = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_COUNTER_TYPE.StorageCounterTypeTemperatureCelsiusMax = 2
     * }
     */
    public static int StorageCounterTypeTemperatureCelsiusMax() {
        return StorageCounterTypeTemperatureCelsiusMax;
    }
    private static final int StorageCounterTypeReadErrorsTotal = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_COUNTER_TYPE.StorageCounterTypeReadErrorsTotal = 3
     * }
     */
    public static int StorageCounterTypeReadErrorsTotal() {
        return StorageCounterTypeReadErrorsTotal;
    }
    private static final int StorageCounterTypeReadErrorsCorrected = (int)4L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_COUNTER_TYPE.StorageCounterTypeReadErrorsCorrected = 4
     * }
     */
    public static int StorageCounterTypeReadErrorsCorrected() {
        return StorageCounterTypeReadErrorsCorrected;
    }
    private static final int StorageCounterTypeReadErrorsUncorrected = (int)5L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_COUNTER_TYPE.StorageCounterTypeReadErrorsUncorrected = 5
     * }
     */
    public static int StorageCounterTypeReadErrorsUncorrected() {
        return StorageCounterTypeReadErrorsUncorrected;
    }
    private static final int StorageCounterTypeWriteErrorsTotal = (int)6L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_COUNTER_TYPE.StorageCounterTypeWriteErrorsTotal = 6
     * }
     */
    public static int StorageCounterTypeWriteErrorsTotal() {
        return StorageCounterTypeWriteErrorsTotal;
    }
    private static final int StorageCounterTypeWriteErrorsCorrected = (int)7L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_COUNTER_TYPE.StorageCounterTypeWriteErrorsCorrected = 7
     * }
     */
    public static int StorageCounterTypeWriteErrorsCorrected() {
        return StorageCounterTypeWriteErrorsCorrected;
    }
    private static final int StorageCounterTypeWriteErrorsUncorrected = (int)8L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_COUNTER_TYPE.StorageCounterTypeWriteErrorsUncorrected = 8
     * }
     */
    public static int StorageCounterTypeWriteErrorsUncorrected() {
        return StorageCounterTypeWriteErrorsUncorrected;
    }
    private static final int StorageCounterTypeManufactureDate = (int)9L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_COUNTER_TYPE.StorageCounterTypeManufactureDate = 9
     * }
     */
    public static int StorageCounterTypeManufactureDate() {
        return StorageCounterTypeManufactureDate;
    }
    private static final int StorageCounterTypeStartStopCycleCount = (int)10L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_COUNTER_TYPE.StorageCounterTypeStartStopCycleCount = 10
     * }
     */
    public static int StorageCounterTypeStartStopCycleCount() {
        return StorageCounterTypeStartStopCycleCount;
    }
    private static final int StorageCounterTypeStartStopCycleCountMax = (int)11L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_COUNTER_TYPE.StorageCounterTypeStartStopCycleCountMax = 11
     * }
     */
    public static int StorageCounterTypeStartStopCycleCountMax() {
        return StorageCounterTypeStartStopCycleCountMax;
    }
    private static final int StorageCounterTypeLoadUnloadCycleCount = (int)12L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_COUNTER_TYPE.StorageCounterTypeLoadUnloadCycleCount = 12
     * }
     */
    public static int StorageCounterTypeLoadUnloadCycleCount() {
        return StorageCounterTypeLoadUnloadCycleCount;
    }
    private static final int StorageCounterTypeLoadUnloadCycleCountMax = (int)13L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_COUNTER_TYPE.StorageCounterTypeLoadUnloadCycleCountMax = 13
     * }
     */
    public static int StorageCounterTypeLoadUnloadCycleCountMax() {
        return StorageCounterTypeLoadUnloadCycleCountMax;
    }
    private static final int StorageCounterTypeWearPercentage = (int)14L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_COUNTER_TYPE.StorageCounterTypeWearPercentage = 14
     * }
     */
    public static int StorageCounterTypeWearPercentage() {
        return StorageCounterTypeWearPercentage;
    }
    private static final int StorageCounterTypeWearPercentageWarning = (int)15L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_COUNTER_TYPE.StorageCounterTypeWearPercentageWarning = 15
     * }
     */
    public static int StorageCounterTypeWearPercentageWarning() {
        return StorageCounterTypeWearPercentageWarning;
    }
    private static final int StorageCounterTypeWearPercentageMax = (int)16L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_COUNTER_TYPE.StorageCounterTypeWearPercentageMax = 16
     * }
     */
    public static int StorageCounterTypeWearPercentageMax() {
        return StorageCounterTypeWearPercentageMax;
    }
    private static final int StorageCounterTypePowerOnHours = (int)17L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_COUNTER_TYPE.StorageCounterTypePowerOnHours = 17
     * }
     */
    public static int StorageCounterTypePowerOnHours() {
        return StorageCounterTypePowerOnHours;
    }
    private static final int StorageCounterTypeReadLatency100NSMax = (int)18L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_COUNTER_TYPE.StorageCounterTypeReadLatency100NSMax = 18
     * }
     */
    public static int StorageCounterTypeReadLatency100NSMax() {
        return StorageCounterTypeReadLatency100NSMax;
    }
    private static final int StorageCounterTypeWriteLatency100NSMax = (int)19L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_COUNTER_TYPE.StorageCounterTypeWriteLatency100NSMax = 19
     * }
     */
    public static int StorageCounterTypeWriteLatency100NSMax() {
        return StorageCounterTypeWriteLatency100NSMax;
    }
    private static final int StorageCounterTypeFlushLatency100NSMax = (int)20L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_COUNTER_TYPE.StorageCounterTypeFlushLatency100NSMax = 20
     * }
     */
    public static int StorageCounterTypeFlushLatency100NSMax() {
        return StorageCounterTypeFlushLatency100NSMax;
    }
    private static final int StorageCounterTypeMax = (int)21L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_COUNTER_TYPE.StorageCounterTypeMax = 21
     * }
     */
    public static int StorageCounterTypeMax() {
        return StorageCounterTypeMax;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _STORAGE_COUNTER_TYPE {
     *     StorageCounterTypeUnknown = 0,
     *     StorageCounterTypeTemperatureCelsius,
     *     StorageCounterTypeTemperatureCelsiusMax,
     *     StorageCounterTypeReadErrorsTotal,
     *     StorageCounterTypeReadErrorsCorrected,
     *     StorageCounterTypeReadErrorsUncorrected,
     *     StorageCounterTypeWriteErrorsTotal,
     *     StorageCounterTypeWriteErrorsCorrected,
     *     StorageCounterTypeWriteErrorsUncorrected,
     *     StorageCounterTypeManufactureDate,
     *     StorageCounterTypeStartStopCycleCount,
     *     StorageCounterTypeStartStopCycleCountMax,
     *     StorageCounterTypeLoadUnloadCycleCount,
     *     StorageCounterTypeLoadUnloadCycleCountMax,
     *     StorageCounterTypeWearPercentage,
     *     StorageCounterTypeWearPercentageWarning,
     *     StorageCounterTypeWearPercentageMax,
     *     StorageCounterTypePowerOnHours,
     *     StorageCounterTypeReadLatency100NSMax,
     *     StorageCounterTypeWriteLatency100NSMax,
     *     StorageCounterTypeFlushLatency100NSMax,
     *     StorageCounterTypeMax
     * } *PSTORAGE_COUNTER_TYPE
     * }
     */
    public static final AddressLayout PSTORAGE_COUNTER_TYPE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_COUNTER {
     *     STORAGE_COUNTER_TYPE Type;
     *     union {
     *         struct {
     *             DWORD Week;
     *             DWORD Year;
     *         } ManufactureDate;
     *         DWORDLONG AsUlonglong;
     *     } Value;
     * } *PSTORAGE_COUNTER
     * }
     */
    public static final AddressLayout PSTORAGE_COUNTER = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_COUNTERS {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORD NumberOfCounters;
     *     STORAGE_COUNTER Counters[1];
     * } *PSTORAGE_COUNTERS
     * }
     */
    public static final AddressLayout PSTORAGE_COUNTERS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_HW_FIRMWARE_INFO_QUERY {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORD Flags;
     *     DWORD Reserved;
     * } *PSTORAGE_HW_FIRMWARE_INFO_QUERY
     * }
     */
    public static final AddressLayout PSTORAGE_HW_FIRMWARE_INFO_QUERY = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_HW_FIRMWARE_SLOT_INFO {
     *     DWORD Version;
     *     DWORD Size;
     *     BYTE SlotNumber;
     *     BYTE ReadOnly : 1;
     *     BYTE Reserved0 : 7;
     *     BYTE Reserved1[6];
     *     BYTE Revision[16];
     * } *PSTORAGE_HW_FIRMWARE_SLOT_INFO
     * }
     */
    public static final AddressLayout PSTORAGE_HW_FIRMWARE_SLOT_INFO = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_HW_FIRMWARE_INFO {
     *     DWORD Version;
     *     DWORD Size;
     *     BYTE SupportUpgrade : 1;
     *     BYTE Reserved0 : 7;
     *     BYTE SlotCount;
     *     BYTE ActiveSlot;
     *     BYTE PendingActivateSlot;
     *     BOOLEAN FirmwareShared;
     *     BYTE Reserved[3];
     *     DWORD ImagePayloadAlignment;
     *     DWORD ImagePayloadMaxSize;
     *     STORAGE_HW_FIRMWARE_SLOT_INFO Slot[1];
     * } *PSTORAGE_HW_FIRMWARE_INFO
     * }
     */
    public static final AddressLayout PSTORAGE_HW_FIRMWARE_INFO = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_HW_FIRMWARE_DOWNLOAD {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORD Flags;
     *     BYTE Slot;
     *     BYTE Reserved[3];
     *     DWORDLONG Offset;
     *     DWORDLONG BufferSize;
     *     BYTE ImageBuffer[1];
     * } *PSTORAGE_HW_FIRMWARE_DOWNLOAD
     * }
     */
    public static final AddressLayout PSTORAGE_HW_FIRMWARE_DOWNLOAD = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_HW_FIRMWARE_DOWNLOAD_V2 {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORD Flags;
     *     BYTE Slot;
     *     BYTE Reserved[3];
     *     DWORDLONG Offset;
     *     DWORDLONG BufferSize;
     *     DWORD ImageSize;
     *     DWORD Reserved2;
     *     BYTE ImageBuffer[1];
     * } *PSTORAGE_HW_FIRMWARE_DOWNLOAD_V2
     * }
     */
    public static final AddressLayout PSTORAGE_HW_FIRMWARE_DOWNLOAD_V2 = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_HW_FIRMWARE_ACTIVATE {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORD Flags;
     *     BYTE Slot;
     *     BYTE Reserved0[3];
     * } *PSTORAGE_HW_FIRMWARE_ACTIVATE
     * }
     */
    public static final AddressLayout PSTORAGE_HW_FIRMWARE_ACTIVATE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_PROTOCOL_COMMAND {
     *     DWORD Version;
     *     DWORD Length;
     *     STORAGE_PROTOCOL_TYPE ProtocolType;
     *     DWORD Flags;
     *     DWORD ReturnStatus;
     *     DWORD ErrorCode;
     *     DWORD CommandLength;
     *     DWORD ErrorInfoLength;
     *     DWORD DataToDeviceTransferLength;
     *     DWORD DataFromDeviceTransferLength;
     *     DWORD TimeOutValue;
     *     DWORD ErrorInfoOffset;
     *     DWORD DataToDeviceBufferOffset;
     *     DWORD DataFromDeviceBufferOffset;
     *     DWORD CommandSpecific;
     *     DWORD Reserved0;
     *     DWORD FixedProtocolReturnData;
     *     DWORD FixedProtocolReturnData2;
     *     DWORD Reserved1[2];
     *     BYTE Command[1];
     * } *PSTORAGE_PROTOCOL_COMMAND
     * }
     */
    public static final AddressLayout PSTORAGE_PROTOCOL_COMMAND = winapi.C_POINTER;
    private static final int StorAttributeMgmt_ClearAttribute = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_ATTRIBUTE_MGMT_ACTION.StorAttributeMgmt_ClearAttribute = 0
     * }
     */
    public static int StorAttributeMgmt_ClearAttribute() {
        return StorAttributeMgmt_ClearAttribute;
    }
    private static final int StorAttributeMgmt_SetAttribute = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_ATTRIBUTE_MGMT_ACTION.StorAttributeMgmt_SetAttribute = 1
     * }
     */
    public static int StorAttributeMgmt_SetAttribute() {
        return StorAttributeMgmt_SetAttribute;
    }
    private static final int StorAttributeMgmt_ResetAttribute = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _STORAGE_ATTRIBUTE_MGMT_ACTION.StorAttributeMgmt_ResetAttribute = 2
     * }
     */
    public static int StorAttributeMgmt_ResetAttribute() {
        return StorAttributeMgmt_ResetAttribute;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _STORAGE_ATTRIBUTE_MGMT_ACTION {
     *     StorAttributeMgmt_ClearAttribute = 0,
     *     StorAttributeMgmt_SetAttribute = 1,
     *     StorAttributeMgmt_ResetAttribute = 2
     * } *PSTORAGE_ATTRIBUTE_MGMT_ACTION
     * }
     */
    public static final AddressLayout PSTORAGE_ATTRIBUTE_MGMT_ACTION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_ATTRIBUTE_MGMT {
     *     DWORD Version;
     *     DWORD Size;
     *     STORAGE_ATTRIBUTE_MGMT_ACTION Action;
     *     DWORD Attribute;
     * } *PSTORAGE_ATTRIBUTE_MGMT
     * }
     */
    public static final AddressLayout PSTORAGE_ATTRIBUTE_MGMT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SCM_PD_HEALTH_NOTIFICATION_DATA {
     *     GUID DeviceGuid;
     * } *PSCM_PD_HEALTH_NOTIFICATION_DATA
     * }
     */
    public static final AddressLayout PSCM_PD_HEALTH_NOTIFICATION_DATA = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SCM_LOGICAL_DEVICE_INSTANCE {
     *     DWORD Version;
     *     DWORD Size;
     *     GUID DeviceGuid;
     *     WCHAR SymbolicLink[256];
     * } *PSCM_LOGICAL_DEVICE_INSTANCE
     * }
     */
    public static final AddressLayout PSCM_LOGICAL_DEVICE_INSTANCE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SCM_LOGICAL_DEVICES {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORD DeviceCount;
     *     SCM_LOGICAL_DEVICE_INSTANCE Devices[1];
     * } *PSCM_LOGICAL_DEVICES
     * }
     */
    public static final AddressLayout PSCM_LOGICAL_DEVICES = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SCM_PHYSICAL_DEVICE_INSTANCE {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORD NfitHandle;
     *     WCHAR SymbolicLink[256];
     * } *PSCM_PHYSICAL_DEVICE_INSTANCE
     * }
     */
    public static final AddressLayout PSCM_PHYSICAL_DEVICE_INSTANCE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SCM_PHYSICAL_DEVICES {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORD DeviceCount;
     *     SCM_PHYSICAL_DEVICE_INSTANCE Devices[1];
     * } *PSCM_PHYSICAL_DEVICES
     * }
     */
    public static final AddressLayout PSCM_PHYSICAL_DEVICES = winapi.C_POINTER;
    private static final int ScmRegionFlagNone = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _SCM_REGION_FLAG.ScmRegionFlagNone = 0
     * }
     */
    public static int ScmRegionFlagNone() {
        return ScmRegionFlagNone;
    }
    private static final int ScmRegionFlagLabel = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _SCM_REGION_FLAG.ScmRegionFlagLabel = 1
     * }
     */
    public static int ScmRegionFlagLabel() {
        return ScmRegionFlagLabel;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _SCM_REGION_FLAG {
     *     ScmRegionFlagNone = 0,
     *     ScmRegionFlagLabel = 1
     * } *PSCM_REGION_FLAG
     * }
     */
    public static final AddressLayout PSCM_REGION_FLAG = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SCM_REGION {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORD Flags;
     *     DWORD NfitHandle;
     *     GUID LogicalDeviceGuid;
     *     GUID AddressRangeType;
     *     DWORD AssociatedId;
     *     DWORD64 Length;
     *     DWORD64 StartingDPA;
     *     DWORD64 BaseSPA;
     *     DWORD64 SPAOffset;
     *     DWORD64 RegionOffset;
     * } *PSCM_REGION
     * }
     */
    public static final AddressLayout PSCM_REGION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SCM_REGIONS {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORD RegionCount;
     *     SCM_REGION Regions[1];
     * } *PSCM_REGIONS
     * }
     */
    public static final AddressLayout PSCM_REGIONS = winapi.C_POINTER;
    private static final int ScmBusQuery_Descriptor = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _SCM_BUS_QUERY_TYPE.ScmBusQuery_Descriptor = 0
     * }
     */
    public static int ScmBusQuery_Descriptor() {
        return ScmBusQuery_Descriptor;
    }
    private static final int ScmBusQuery_IsSupported = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _SCM_BUS_QUERY_TYPE.ScmBusQuery_IsSupported = 1
     * }
     */
    public static int ScmBusQuery_IsSupported() {
        return ScmBusQuery_IsSupported;
    }
    private static final int ScmBusQuery_Max = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _SCM_BUS_QUERY_TYPE.ScmBusQuery_Max = 2
     * }
     */
    public static int ScmBusQuery_Max() {
        return ScmBusQuery_Max;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _SCM_BUS_QUERY_TYPE {
     *     ScmBusQuery_Descriptor = 0,
     *     ScmBusQuery_IsSupported,
     *     ScmBusQuery_Max
     * } *PSCM_BUS_QUERY_TYPE
     * }
     */
    public static final AddressLayout PSCM_BUS_QUERY_TYPE = winapi.C_POINTER;
    private static final int ScmBusSet_Descriptor = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _SCM_BUS_SET_TYPE.ScmBusSet_Descriptor = 0
     * }
     */
    public static int ScmBusSet_Descriptor() {
        return ScmBusSet_Descriptor;
    }
    private static final int ScmBusSet_IsSupported = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _SCM_BUS_SET_TYPE.ScmBusSet_IsSupported = 1
     * }
     */
    public static int ScmBusSet_IsSupported() {
        return ScmBusSet_IsSupported;
    }
    private static final int ScmBusSet_Max = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _SCM_BUS_SET_TYPE.ScmBusSet_Max = 2
     * }
     */
    public static int ScmBusSet_Max() {
        return ScmBusSet_Max;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _SCM_BUS_SET_TYPE {
     *     ScmBusSet_Descriptor = 0,
     *     ScmBusSet_IsSupported,
     *     ScmBusSet_Max
     * } *PSCM_BUS_SET_TYPE
     * }
     */
    public static final AddressLayout PSCM_BUS_SET_TYPE = winapi.C_POINTER;
    private static final int ScmBusProperty_RuntimeFwActivationInfo = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _SCM_BUS_PROPERTY_ID.ScmBusProperty_RuntimeFwActivationInfo = 0
     * }
     */
    public static int ScmBusProperty_RuntimeFwActivationInfo() {
        return ScmBusProperty_RuntimeFwActivationInfo;
    }
    private static final int ScmBusProperty_DedicatedMemoryInfo = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _SCM_BUS_PROPERTY_ID.ScmBusProperty_DedicatedMemoryInfo = 1
     * }
     */
    public static int ScmBusProperty_DedicatedMemoryInfo() {
        return ScmBusProperty_DedicatedMemoryInfo;
    }
    private static final int ScmBusProperty_DedicatedMemoryState = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _SCM_BUS_PROPERTY_ID.ScmBusProperty_DedicatedMemoryState = 2
     * }
     */
    public static int ScmBusProperty_DedicatedMemoryState() {
        return ScmBusProperty_DedicatedMemoryState;
    }
    private static final int ScmBusProperty_Max = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _SCM_BUS_PROPERTY_ID.ScmBusProperty_Max = 3
     * }
     */
    public static int ScmBusProperty_Max() {
        return ScmBusProperty_Max;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _SCM_BUS_PROPERTY_ID {
     *     ScmBusProperty_RuntimeFwActivationInfo = 0,
     *     ScmBusProperty_DedicatedMemoryInfo = 1,
     *     ScmBusProperty_DedicatedMemoryState = 2,
     *     ScmBusProperty_Max
     * } *PSCM_BUS_PROPERTY_ID
     * }
     */
    public static final AddressLayout PSCM_BUS_PROPERTY_ID = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SCM_BUS_PROPERTY_QUERY {
     *     DWORD Version;
     *     DWORD Size;
     *     SCM_BUS_PROPERTY_ID PropertyId;
     *     SCM_BUS_QUERY_TYPE QueryType;
     *     BYTE AdditionalParameters[1];
     * } *PSCM_BUS_PROPERTY_QUERY
     * }
     */
    public static final AddressLayout PSCM_BUS_PROPERTY_QUERY = winapi.C_POINTER;
    private static final int ScmBusFirmwareActivationState_Idle = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _SCM_BUS_FIRMWARE_ACTIVATION_STATE.ScmBusFirmwareActivationState_Idle = 0
     * }
     */
    public static int ScmBusFirmwareActivationState_Idle() {
        return ScmBusFirmwareActivationState_Idle;
    }
    private static final int ScmBusFirmwareActivationState_Armed = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _SCM_BUS_FIRMWARE_ACTIVATION_STATE.ScmBusFirmwareActivationState_Armed = 1
     * }
     */
    public static int ScmBusFirmwareActivationState_Armed() {
        return ScmBusFirmwareActivationState_Armed;
    }
    private static final int ScmBusFirmwareActivationState_Busy = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _SCM_BUS_FIRMWARE_ACTIVATION_STATE.ScmBusFirmwareActivationState_Busy = 2
     * }
     */
    public static int ScmBusFirmwareActivationState_Busy() {
        return ScmBusFirmwareActivationState_Busy;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _SCM_BUS_FIRMWARE_ACTIVATION_STATE {
     *     ScmBusFirmwareActivationState_Idle = 0,
     *     ScmBusFirmwareActivationState_Armed = 1,
     *     ScmBusFirmwareActivationState_Busy = 2
     * } *PSCM_BUS_FIRMWARE_ACTIVATION_STATE
     * }
     */
    public static final AddressLayout PSCM_BUS_FIRMWARE_ACTIVATION_STATE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SCM_BUS_RUNTIME_FW_ACTIVATION_INFO {
     *     DWORD Version;
     *     DWORD Size;
     *     BOOLEAN RuntimeFwActivationSupported;
     *     SCM_BUS_FIRMWARE_ACTIVATION_STATE FirmwareActivationState;
     *     struct {
     *         DWORD FwManagedIoQuiesceFwActivationSupported : 1;
     *         DWORD OsManagedIoQuiesceFwActivationSupported : 1;
     *         DWORD WarmResetBasedFwActivationSupported : 1;
     *         DWORD Reserved : 29;
     *     } FirmwareActivationCapability;
     *     DWORDLONG EstimatedFirmwareActivationTimeInUSecs;
     *     DWORDLONG EstimatedProcessorAccessQuiesceTimeInUSecs;
     *     DWORDLONG EstimatedIOAccessQuiesceTimeInUSecs;
     *     DWORDLONG PlatformSupportedMaxIOAccessQuiesceTimeInUSecs;
     * } *PSCM_BUS_RUNTIME_FW_ACTIVATION_INFO
     * }
     */
    public static final AddressLayout PSCM_BUS_RUNTIME_FW_ACTIVATION_INFO = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SCM_BUS_DEDICATED_MEMORY_DEVICE_INFO {
     *     GUID DeviceGuid;
     *     DWORD DeviceNumber;
     *     struct {
     *         DWORD ForcedByRegistry : 1;
     *         DWORD Initialized : 1;
     *         DWORD Reserved : 30;
     *     } Flags;
     *     DWORDLONG DeviceSize;
     * } *PSCM_BUS_DEDICATED_MEMORY_DEVICE_INFO
     * }
     */
    public static final AddressLayout PSCM_BUS_DEDICATED_MEMORY_DEVICE_INFO = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SCM_BUS_DEDICATED_MEMORY_DEVICES_INFO {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORD DeviceCount;
     *     SCM_BUS_DEDICATED_MEMORY_DEVICE_INFO Devices[1];
     * } *PSCM_BUS_DEDICATED_MEMORY_DEVICES_INFO
     * }
     */
    public static final AddressLayout PSCM_BUS_DEDICATED_MEMORY_DEVICES_INFO = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SCM_BUS_PROPERTY_SET {
     *     DWORD Version;
     *     DWORD Size;
     *     SCM_BUS_PROPERTY_ID PropertyId;
     *     SCM_BUS_SET_TYPE SetType;
     *     BYTE AdditionalParameters[1];
     * } *PSCM_BUS_PROPERTY_SET
     * }
     */
    public static final AddressLayout PSCM_BUS_PROPERTY_SET = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SCM_BUS_DEDICATED_MEMORY_STATE {
     *     BOOLEAN ActivateState;
     * } *PSCM_BUS_DEDICATED_MEMORY_STATE
     * }
     */
    public static final AddressLayout PSCM_BUS_DEDICATED_MEMORY_STATE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SCM_INTERLEAVED_PD_INFO {
     *     DWORD DeviceHandle;
     *     GUID DeviceGuid;
     * } *PSCM_INTERLEAVED_PD_INFO
     * }
     */
    public static final AddressLayout PSCM_INTERLEAVED_PD_INFO = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SCM_LD_INTERLEAVE_SET_INFO {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORD InterleaveSetSize;
     *     SCM_INTERLEAVED_PD_INFO InterleaveSet[1];
     * } *PSCM_LD_INTERLEAVE_SET_INFO
     * }
     */
    public static final AddressLayout PSCM_LD_INTERLEAVE_SET_INFO = winapi.C_POINTER;
    private static final int ScmPhysicalDeviceQuery_Descriptor = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_QUERY_TYPE.ScmPhysicalDeviceQuery_Descriptor = 0
     * }
     */
    public static int ScmPhysicalDeviceQuery_Descriptor() {
        return ScmPhysicalDeviceQuery_Descriptor;
    }
    private static final int ScmPhysicalDeviceQuery_IsSupported = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_QUERY_TYPE.ScmPhysicalDeviceQuery_IsSupported = 1
     * }
     */
    public static int ScmPhysicalDeviceQuery_IsSupported() {
        return ScmPhysicalDeviceQuery_IsSupported;
    }
    private static final int ScmPhysicalDeviceQuery_Max = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_QUERY_TYPE.ScmPhysicalDeviceQuery_Max = 2
     * }
     */
    public static int ScmPhysicalDeviceQuery_Max() {
        return ScmPhysicalDeviceQuery_Max;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _SCM_PD_QUERY_TYPE {
     *     ScmPhysicalDeviceQuery_Descriptor = 0,
     *     ScmPhysicalDeviceQuery_IsSupported,
     *     ScmPhysicalDeviceQuery_Max
     * } *PSCM_PD_QUERY_TYPE
     * }
     */
    public static final AddressLayout PSCM_PD_QUERY_TYPE = winapi.C_POINTER;
    private static final int ScmPhysicalDeviceSet_Descriptor = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_SET_TYPE.ScmPhysicalDeviceSet_Descriptor = 0
     * }
     */
    public static int ScmPhysicalDeviceSet_Descriptor() {
        return ScmPhysicalDeviceSet_Descriptor;
    }
    private static final int ScmPhysicalDeviceSet_IsSupported = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_SET_TYPE.ScmPhysicalDeviceSet_IsSupported = 1
     * }
     */
    public static int ScmPhysicalDeviceSet_IsSupported() {
        return ScmPhysicalDeviceSet_IsSupported;
    }
    private static final int ScmPhysicalDeviceSet_Max = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_SET_TYPE.ScmPhysicalDeviceSet_Max = 2
     * }
     */
    public static int ScmPhysicalDeviceSet_Max() {
        return ScmPhysicalDeviceSet_Max;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _SCM_PD_SET_TYPE {
     *     ScmPhysicalDeviceSet_Descriptor = 0,
     *     ScmPhysicalDeviceSet_IsSupported,
     *     ScmPhysicalDeviceSet_Max
     * } *PSCM_PD_SET_TYPE
     * }
     */
    public static final AddressLayout PSCM_PD_SET_TYPE = winapi.C_POINTER;
    private static final int ScmPhysicalDeviceProperty_DeviceInfo = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_PROPERTY_ID.ScmPhysicalDeviceProperty_DeviceInfo = 0
     * }
     */
    public static int ScmPhysicalDeviceProperty_DeviceInfo() {
        return ScmPhysicalDeviceProperty_DeviceInfo;
    }
    private static final int ScmPhysicalDeviceProperty_ManagementStatus = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_PROPERTY_ID.ScmPhysicalDeviceProperty_ManagementStatus = 1
     * }
     */
    public static int ScmPhysicalDeviceProperty_ManagementStatus() {
        return ScmPhysicalDeviceProperty_ManagementStatus;
    }
    private static final int ScmPhysicalDeviceProperty_FirmwareInfo = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_PROPERTY_ID.ScmPhysicalDeviceProperty_FirmwareInfo = 2
     * }
     */
    public static int ScmPhysicalDeviceProperty_FirmwareInfo() {
        return ScmPhysicalDeviceProperty_FirmwareInfo;
    }
    private static final int ScmPhysicalDeviceProperty_LocationString = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_PROPERTY_ID.ScmPhysicalDeviceProperty_LocationString = 3
     * }
     */
    public static int ScmPhysicalDeviceProperty_LocationString() {
        return ScmPhysicalDeviceProperty_LocationString;
    }
    private static final int ScmPhysicalDeviceProperty_DeviceSpecificInfo = (int)4L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_PROPERTY_ID.ScmPhysicalDeviceProperty_DeviceSpecificInfo = 4
     * }
     */
    public static int ScmPhysicalDeviceProperty_DeviceSpecificInfo() {
        return ScmPhysicalDeviceProperty_DeviceSpecificInfo;
    }
    private static final int ScmPhysicalDeviceProperty_DeviceHandle = (int)5L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_PROPERTY_ID.ScmPhysicalDeviceProperty_DeviceHandle = 5
     * }
     */
    public static int ScmPhysicalDeviceProperty_DeviceHandle() {
        return ScmPhysicalDeviceProperty_DeviceHandle;
    }
    private static final int ScmPhysicalDeviceProperty_FruIdString = (int)6L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_PROPERTY_ID.ScmPhysicalDeviceProperty_FruIdString = 6
     * }
     */
    public static int ScmPhysicalDeviceProperty_FruIdString() {
        return ScmPhysicalDeviceProperty_FruIdString;
    }
    private static final int ScmPhysicalDeviceProperty_RuntimeFwActivationInfo = (int)7L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_PROPERTY_ID.ScmPhysicalDeviceProperty_RuntimeFwActivationInfo = 7
     * }
     */
    public static int ScmPhysicalDeviceProperty_RuntimeFwActivationInfo() {
        return ScmPhysicalDeviceProperty_RuntimeFwActivationInfo;
    }
    private static final int ScmPhysicalDeviceProperty_RuntimeFwActivationArmState = (int)8L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_PROPERTY_ID.ScmPhysicalDeviceProperty_RuntimeFwActivationArmState = 8
     * }
     */
    public static int ScmPhysicalDeviceProperty_RuntimeFwActivationArmState() {
        return ScmPhysicalDeviceProperty_RuntimeFwActivationArmState;
    }
    private static final int ScmPhysicalDeviceProperty_Max = (int)9L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_PROPERTY_ID.ScmPhysicalDeviceProperty_Max = 9
     * }
     */
    public static int ScmPhysicalDeviceProperty_Max() {
        return ScmPhysicalDeviceProperty_Max;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _SCM_PD_PROPERTY_ID {
     *     ScmPhysicalDeviceProperty_DeviceInfo = 0,
     *     ScmPhysicalDeviceProperty_ManagementStatus,
     *     ScmPhysicalDeviceProperty_FirmwareInfo,
     *     ScmPhysicalDeviceProperty_LocationString,
     *     ScmPhysicalDeviceProperty_DeviceSpecificInfo,
     *     ScmPhysicalDeviceProperty_DeviceHandle,
     *     ScmPhysicalDeviceProperty_FruIdString,
     *     ScmPhysicalDeviceProperty_RuntimeFwActivationInfo,
     *     ScmPhysicalDeviceProperty_RuntimeFwActivationArmState,
     *     ScmPhysicalDeviceProperty_Max
     * } *PSCM_PD_PROPERTY_ID
     * }
     */
    public static final AddressLayout PSCM_PD_PROPERTY_ID = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SCM_PD_PROPERTY_QUERY {
     *     DWORD Version;
     *     DWORD Size;
     *     SCM_PD_PROPERTY_ID PropertyId;
     *     SCM_PD_QUERY_TYPE QueryType;
     *     BYTE AdditionalParameters[1];
     * } *PSCM_PD_PROPERTY_QUERY
     * }
     */
    public static final AddressLayout PSCM_PD_PROPERTY_QUERY = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SCM_PD_PROPERTY_SET {
     *     DWORD Version;
     *     DWORD Size;
     *     SCM_PD_PROPERTY_ID PropertyId;
     *     SCM_PD_SET_TYPE SetType;
     *     BYTE AdditionalParameters[1];
     * } *PSCM_PD_PROPERTY_SET
     * }
     */
    public static final AddressLayout PSCM_PD_PROPERTY_SET = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SCM_PD_RUNTIME_FW_ACTIVATION_ARM_STATE {
     *     BOOLEAN ArmState;
     * } *PSCM_PD_RUNTIME_FW_ACTIVATION_ARM_STATE
     * }
     */
    public static final AddressLayout PSCM_PD_RUNTIME_FW_ACTIVATION_ARM_STATE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SCM_PD_DESCRIPTOR_HEADER {
     *     DWORD Version;
     *     DWORD Size;
     * } *PSCM_PD_DESCRIPTOR_HEADER
     * }
     */
    public static final AddressLayout PSCM_PD_DESCRIPTOR_HEADER = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SCM_PD_DEVICE_HANDLE {
     *     DWORD Version;
     *     DWORD Size;
     *     GUID DeviceGuid;
     *     DWORD DeviceHandle;
     * } *PSCM_PD_DEVICE_HANDLE
     * }
     */
    public static final AddressLayout PSCM_PD_DEVICE_HANDLE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SCM_PD_DEVICE_INFO {
     *     DWORD Version;
     *     DWORD Size;
     *     GUID DeviceGuid;
     *     DWORD UnsafeShutdownCount;
     *     DWORD64 PersistentMemorySizeInBytes;
     *     DWORD64 VolatileMemorySizeInBytes;
     *     DWORD64 TotalMemorySizeInBytes;
     *     DWORD SlotNumber;
     *     DWORD DeviceHandle;
     *     WORD PhysicalId;
     *     BYTE NumberOfFormatInterfaceCodes;
     *     WORD FormatInterfaceCodes[8];
     *     DWORD VendorId;
     *     DWORD ProductId;
     *     DWORD SubsystemDeviceId;
     *     DWORD SubsystemVendorId;
     *     BYTE ManufacturingLocation;
     *     BYTE ManufacturingWeek;
     *     BYTE ManufacturingYear;
     *     DWORD SerialNumber4Byte;
     *     DWORD SerialNumberLengthInChars;
     *     CHAR SerialNumber[1];
     * } *PSCM_PD_DEVICE_INFO
     * }
     */
    public static final AddressLayout PSCM_PD_DEVICE_INFO = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SCM_PD_DEVICE_SPECIFIC_PROPERTY {
     *     WCHAR Name[128];
     *     LONGLONG Value;
     * } *PSCM_PD_DEVICE_SPECIFIC_PROPERTY
     * }
     */
    public static final AddressLayout PSCM_PD_DEVICE_SPECIFIC_PROPERTY = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SCM_PD_DEVICE_SPECIFIC_INFO {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORD NumberOfProperties;
     *     SCM_PD_DEVICE_SPECIFIC_PROPERTY DeviceSpecificProperties[1];
     * } *PSCM_PD_DEVICE_SPECIFIC_INFO
     * }
     */
    public static final AddressLayout PSCM_PD_DEVICE_SPECIFIC_INFO = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SCM_PD_FIRMWARE_SLOT_INFO {
     *     DWORD Version;
     *     DWORD Size;
     *     BYTE SlotNumber;
     *     BYTE ReadOnly : 1;
     *     BYTE Reserved0 : 7;
     *     BYTE Reserved1[6];
     *     BYTE Revision[32];
     * } *PSCM_PD_FIRMWARE_SLOT_INFO
     * }
     */
    public static final AddressLayout PSCM_PD_FIRMWARE_SLOT_INFO = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SCM_PD_FIRMWARE_INFO {
     *     DWORD Version;
     *     DWORD Size;
     *     BYTE ActiveSlot;
     *     BYTE NextActiveSlot;
     *     BYTE SlotCount;
     *     SCM_PD_FIRMWARE_SLOT_INFO Slots[1];
     * } *PSCM_PD_FIRMWARE_INFO
     * }
     */
    public static final AddressLayout PSCM_PD_FIRMWARE_INFO = winapi.C_POINTER;
    private static final int ScmPhysicalDeviceHealth_Unknown = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_HEALTH_STATUS.ScmPhysicalDeviceHealth_Unknown = 0
     * }
     */
    public static int ScmPhysicalDeviceHealth_Unknown() {
        return ScmPhysicalDeviceHealth_Unknown;
    }
    private static final int ScmPhysicalDeviceHealth_Unhealthy = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_HEALTH_STATUS.ScmPhysicalDeviceHealth_Unhealthy = 1
     * }
     */
    public static int ScmPhysicalDeviceHealth_Unhealthy() {
        return ScmPhysicalDeviceHealth_Unhealthy;
    }
    private static final int ScmPhysicalDeviceHealth_Warning = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_HEALTH_STATUS.ScmPhysicalDeviceHealth_Warning = 2
     * }
     */
    public static int ScmPhysicalDeviceHealth_Warning() {
        return ScmPhysicalDeviceHealth_Warning;
    }
    private static final int ScmPhysicalDeviceHealth_Healthy = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_HEALTH_STATUS.ScmPhysicalDeviceHealth_Healthy = 3
     * }
     */
    public static int ScmPhysicalDeviceHealth_Healthy() {
        return ScmPhysicalDeviceHealth_Healthy;
    }
    private static final int ScmPhysicalDeviceHealth_Max = (int)4L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_HEALTH_STATUS.ScmPhysicalDeviceHealth_Max = 4
     * }
     */
    public static int ScmPhysicalDeviceHealth_Max() {
        return ScmPhysicalDeviceHealth_Max;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _SCM_PD_HEALTH_STATUS {
     *     ScmPhysicalDeviceHealth_Unknown = 0,
     *     ScmPhysicalDeviceHealth_Unhealthy,
     *     ScmPhysicalDeviceHealth_Warning,
     *     ScmPhysicalDeviceHealth_Healthy,
     *     ScmPhysicalDeviceHealth_Max
     * } *PSCM_PD_HEALTH_STATUS
     * }
     */
    public static final AddressLayout PSCM_PD_HEALTH_STATUS = winapi.C_POINTER;
    private static final int ScmPhysicalDeviceOpStatus_Unknown = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_OPERATIONAL_STATUS.ScmPhysicalDeviceOpStatus_Unknown = 0
     * }
     */
    public static int ScmPhysicalDeviceOpStatus_Unknown() {
        return ScmPhysicalDeviceOpStatus_Unknown;
    }
    private static final int ScmPhysicalDeviceOpStatus_Ok = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_OPERATIONAL_STATUS.ScmPhysicalDeviceOpStatus_Ok = 1
     * }
     */
    public static int ScmPhysicalDeviceOpStatus_Ok() {
        return ScmPhysicalDeviceOpStatus_Ok;
    }
    private static final int ScmPhysicalDeviceOpStatus_PredictingFailure = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_OPERATIONAL_STATUS.ScmPhysicalDeviceOpStatus_PredictingFailure = 2
     * }
     */
    public static int ScmPhysicalDeviceOpStatus_PredictingFailure() {
        return ScmPhysicalDeviceOpStatus_PredictingFailure;
    }
    private static final int ScmPhysicalDeviceOpStatus_InService = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_OPERATIONAL_STATUS.ScmPhysicalDeviceOpStatus_InService = 3
     * }
     */
    public static int ScmPhysicalDeviceOpStatus_InService() {
        return ScmPhysicalDeviceOpStatus_InService;
    }
    private static final int ScmPhysicalDeviceOpStatus_HardwareError = (int)4L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_OPERATIONAL_STATUS.ScmPhysicalDeviceOpStatus_HardwareError = 4
     * }
     */
    public static int ScmPhysicalDeviceOpStatus_HardwareError() {
        return ScmPhysicalDeviceOpStatus_HardwareError;
    }
    private static final int ScmPhysicalDeviceOpStatus_NotUsable = (int)5L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_OPERATIONAL_STATUS.ScmPhysicalDeviceOpStatus_NotUsable = 5
     * }
     */
    public static int ScmPhysicalDeviceOpStatus_NotUsable() {
        return ScmPhysicalDeviceOpStatus_NotUsable;
    }
    private static final int ScmPhysicalDeviceOpStatus_TransientError = (int)6L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_OPERATIONAL_STATUS.ScmPhysicalDeviceOpStatus_TransientError = 6
     * }
     */
    public static int ScmPhysicalDeviceOpStatus_TransientError() {
        return ScmPhysicalDeviceOpStatus_TransientError;
    }
    private static final int ScmPhysicalDeviceOpStatus_Missing = (int)7L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_OPERATIONAL_STATUS.ScmPhysicalDeviceOpStatus_Missing = 7
     * }
     */
    public static int ScmPhysicalDeviceOpStatus_Missing() {
        return ScmPhysicalDeviceOpStatus_Missing;
    }
    private static final int ScmPhysicalDeviceOpStatus_Max = (int)8L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_OPERATIONAL_STATUS.ScmPhysicalDeviceOpStatus_Max = 8
     * }
     */
    public static int ScmPhysicalDeviceOpStatus_Max() {
        return ScmPhysicalDeviceOpStatus_Max;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _SCM_PD_OPERATIONAL_STATUS {
     *     ScmPhysicalDeviceOpStatus_Unknown = 0,
     *     ScmPhysicalDeviceOpStatus_Ok,
     *     ScmPhysicalDeviceOpStatus_PredictingFailure,
     *     ScmPhysicalDeviceOpStatus_InService,
     *     ScmPhysicalDeviceOpStatus_HardwareError,
     *     ScmPhysicalDeviceOpStatus_NotUsable,
     *     ScmPhysicalDeviceOpStatus_TransientError,
     *     ScmPhysicalDeviceOpStatus_Missing,
     *     ScmPhysicalDeviceOpStatus_Max
     * } *PSCM_PD_OPERATIONAL_STATUS
     * }
     */
    public static final AddressLayout PSCM_PD_OPERATIONAL_STATUS = winapi.C_POINTER;
    private static final int ScmPhysicalDeviceOpReason_Unknown = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_OPERATIONAL_STATUS_REASON.ScmPhysicalDeviceOpReason_Unknown = 0
     * }
     */
    public static int ScmPhysicalDeviceOpReason_Unknown() {
        return ScmPhysicalDeviceOpReason_Unknown;
    }
    private static final int ScmPhysicalDeviceOpReason_Media = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_OPERATIONAL_STATUS_REASON.ScmPhysicalDeviceOpReason_Media = 1
     * }
     */
    public static int ScmPhysicalDeviceOpReason_Media() {
        return ScmPhysicalDeviceOpReason_Media;
    }
    private static final int ScmPhysicalDeviceOpReason_ThresholdExceeded = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_OPERATIONAL_STATUS_REASON.ScmPhysicalDeviceOpReason_ThresholdExceeded = 2
     * }
     */
    public static int ScmPhysicalDeviceOpReason_ThresholdExceeded() {
        return ScmPhysicalDeviceOpReason_ThresholdExceeded;
    }
    private static final int ScmPhysicalDeviceOpReason_LostData = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_OPERATIONAL_STATUS_REASON.ScmPhysicalDeviceOpReason_LostData = 3
     * }
     */
    public static int ScmPhysicalDeviceOpReason_LostData() {
        return ScmPhysicalDeviceOpReason_LostData;
    }
    private static final int ScmPhysicalDeviceOpReason_EnergySource = (int)4L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_OPERATIONAL_STATUS_REASON.ScmPhysicalDeviceOpReason_EnergySource = 4
     * }
     */
    public static int ScmPhysicalDeviceOpReason_EnergySource() {
        return ScmPhysicalDeviceOpReason_EnergySource;
    }
    private static final int ScmPhysicalDeviceOpReason_Configuration = (int)5L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_OPERATIONAL_STATUS_REASON.ScmPhysicalDeviceOpReason_Configuration = 5
     * }
     */
    public static int ScmPhysicalDeviceOpReason_Configuration() {
        return ScmPhysicalDeviceOpReason_Configuration;
    }
    private static final int ScmPhysicalDeviceOpReason_DeviceController = (int)6L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_OPERATIONAL_STATUS_REASON.ScmPhysicalDeviceOpReason_DeviceController = 6
     * }
     */
    public static int ScmPhysicalDeviceOpReason_DeviceController() {
        return ScmPhysicalDeviceOpReason_DeviceController;
    }
    private static final int ScmPhysicalDeviceOpReason_MediaController = (int)7L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_OPERATIONAL_STATUS_REASON.ScmPhysicalDeviceOpReason_MediaController = 7
     * }
     */
    public static int ScmPhysicalDeviceOpReason_MediaController() {
        return ScmPhysicalDeviceOpReason_MediaController;
    }
    private static final int ScmPhysicalDeviceOpReason_Component = (int)8L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_OPERATIONAL_STATUS_REASON.ScmPhysicalDeviceOpReason_Component = 8
     * }
     */
    public static int ScmPhysicalDeviceOpReason_Component() {
        return ScmPhysicalDeviceOpReason_Component;
    }
    private static final int ScmPhysicalDeviceOpReason_BackgroundOperation = (int)9L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_OPERATIONAL_STATUS_REASON.ScmPhysicalDeviceOpReason_BackgroundOperation = 9
     * }
     */
    public static int ScmPhysicalDeviceOpReason_BackgroundOperation() {
        return ScmPhysicalDeviceOpReason_BackgroundOperation;
    }
    private static final int ScmPhysicalDeviceOpReason_InvalidFirmware = (int)10L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_OPERATIONAL_STATUS_REASON.ScmPhysicalDeviceOpReason_InvalidFirmware = 10
     * }
     */
    public static int ScmPhysicalDeviceOpReason_InvalidFirmware() {
        return ScmPhysicalDeviceOpReason_InvalidFirmware;
    }
    private static final int ScmPhysicalDeviceOpReason_HealthCheck = (int)11L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_OPERATIONAL_STATUS_REASON.ScmPhysicalDeviceOpReason_HealthCheck = 11
     * }
     */
    public static int ScmPhysicalDeviceOpReason_HealthCheck() {
        return ScmPhysicalDeviceOpReason_HealthCheck;
    }
    private static final int ScmPhysicalDeviceOpReason_LostDataPersistence = (int)12L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_OPERATIONAL_STATUS_REASON.ScmPhysicalDeviceOpReason_LostDataPersistence = 12
     * }
     */
    public static int ScmPhysicalDeviceOpReason_LostDataPersistence() {
        return ScmPhysicalDeviceOpReason_LostDataPersistence;
    }
    private static final int ScmPhysicalDeviceOpReason_DisabledByPlatform = (int)13L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_OPERATIONAL_STATUS_REASON.ScmPhysicalDeviceOpReason_DisabledByPlatform = 13
     * }
     */
    public static int ScmPhysicalDeviceOpReason_DisabledByPlatform() {
        return ScmPhysicalDeviceOpReason_DisabledByPlatform;
    }
    private static final int ScmPhysicalDeviceOpReason_PermanentError = (int)14L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_OPERATIONAL_STATUS_REASON.ScmPhysicalDeviceOpReason_PermanentError = 14
     * }
     */
    public static int ScmPhysicalDeviceOpReason_PermanentError() {
        return ScmPhysicalDeviceOpReason_PermanentError;
    }
    private static final int ScmPhysicalDeviceOpReason_LostWritePersistence = (int)15L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_OPERATIONAL_STATUS_REASON.ScmPhysicalDeviceOpReason_LostWritePersistence = 15
     * }
     */
    public static int ScmPhysicalDeviceOpReason_LostWritePersistence() {
        return ScmPhysicalDeviceOpReason_LostWritePersistence;
    }
    private static final int ScmPhysicalDeviceOpReason_FatalError = (int)16L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_OPERATIONAL_STATUS_REASON.ScmPhysicalDeviceOpReason_FatalError = 16
     * }
     */
    public static int ScmPhysicalDeviceOpReason_FatalError() {
        return ScmPhysicalDeviceOpReason_FatalError;
    }
    private static final int ScmPhysicalDeviceOpReason_DataPersistenceLossImminent = (int)17L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_OPERATIONAL_STATUS_REASON.ScmPhysicalDeviceOpReason_DataPersistenceLossImminent = 17
     * }
     */
    public static int ScmPhysicalDeviceOpReason_DataPersistenceLossImminent() {
        return ScmPhysicalDeviceOpReason_DataPersistenceLossImminent;
    }
    private static final int ScmPhysicalDeviceOpReason_WritePersistenceLossImminent = (int)18L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_OPERATIONAL_STATUS_REASON.ScmPhysicalDeviceOpReason_WritePersistenceLossImminent = 18
     * }
     */
    public static int ScmPhysicalDeviceOpReason_WritePersistenceLossImminent() {
        return ScmPhysicalDeviceOpReason_WritePersistenceLossImminent;
    }
    private static final int ScmPhysicalDeviceOpReason_MediaRemainingSpareBlock = (int)19L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_OPERATIONAL_STATUS_REASON.ScmPhysicalDeviceOpReason_MediaRemainingSpareBlock = 19
     * }
     */
    public static int ScmPhysicalDeviceOpReason_MediaRemainingSpareBlock() {
        return ScmPhysicalDeviceOpReason_MediaRemainingSpareBlock;
    }
    private static final int ScmPhysicalDeviceOpReason_PerformanceDegradation = (int)20L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_OPERATIONAL_STATUS_REASON.ScmPhysicalDeviceOpReason_PerformanceDegradation = 20
     * }
     */
    public static int ScmPhysicalDeviceOpReason_PerformanceDegradation() {
        return ScmPhysicalDeviceOpReason_PerformanceDegradation;
    }
    private static final int ScmPhysicalDeviceOpReason_ExcessiveTemperature = (int)21L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_OPERATIONAL_STATUS_REASON.ScmPhysicalDeviceOpReason_ExcessiveTemperature = 21
     * }
     */
    public static int ScmPhysicalDeviceOpReason_ExcessiveTemperature() {
        return ScmPhysicalDeviceOpReason_ExcessiveTemperature;
    }
    private static final int ScmPhysicalDeviceOpReason_InternalFailure = (int)22L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_OPERATIONAL_STATUS_REASON.ScmPhysicalDeviceOpReason_InternalFailure = 22
     * }
     */
    public static int ScmPhysicalDeviceOpReason_InternalFailure() {
        return ScmPhysicalDeviceOpReason_InternalFailure;
    }
    private static final int ScmPhysicalDeviceOpReason_Max = (int)23L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_OPERATIONAL_STATUS_REASON.ScmPhysicalDeviceOpReason_Max = 23
     * }
     */
    public static int ScmPhysicalDeviceOpReason_Max() {
        return ScmPhysicalDeviceOpReason_Max;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _SCM_PD_OPERATIONAL_STATUS_REASON {
     *     ScmPhysicalDeviceOpReason_Unknown = 0,
     *     ScmPhysicalDeviceOpReason_Media,
     *     ScmPhysicalDeviceOpReason_ThresholdExceeded,
     *     ScmPhysicalDeviceOpReason_LostData,
     *     ScmPhysicalDeviceOpReason_EnergySource,
     *     ScmPhysicalDeviceOpReason_Configuration,
     *     ScmPhysicalDeviceOpReason_DeviceController,
     *     ScmPhysicalDeviceOpReason_MediaController,
     *     ScmPhysicalDeviceOpReason_Component,
     *     ScmPhysicalDeviceOpReason_BackgroundOperation,
     *     ScmPhysicalDeviceOpReason_InvalidFirmware,
     *     ScmPhysicalDeviceOpReason_HealthCheck,
     *     ScmPhysicalDeviceOpReason_LostDataPersistence,
     *     ScmPhysicalDeviceOpReason_DisabledByPlatform,
     *     ScmPhysicalDeviceOpReason_PermanentError,
     *     ScmPhysicalDeviceOpReason_LostWritePersistence,
     *     ScmPhysicalDeviceOpReason_FatalError,
     *     ScmPhysicalDeviceOpReason_DataPersistenceLossImminent,
     *     ScmPhysicalDeviceOpReason_WritePersistenceLossImminent,
     *     ScmPhysicalDeviceOpReason_MediaRemainingSpareBlock,
     *     ScmPhysicalDeviceOpReason_PerformanceDegradation,
     *     ScmPhysicalDeviceOpReason_ExcessiveTemperature,
     *     ScmPhysicalDeviceOpReason_InternalFailure,
     *     ScmPhysicalDeviceOpReason_Max
     * } *PSCM_PD_OPERATIONAL_STATUS_REASON
     * }
     */
    public static final AddressLayout PSCM_PD_OPERATIONAL_STATUS_REASON = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SCM_PD_MANAGEMENT_STATUS {
     *     DWORD Version;
     *     DWORD Size;
     *     SCM_PD_HEALTH_STATUS Health;
     *     DWORD NumberOfOperationalStatus;
     *     DWORD NumberOfAdditionalReasons;
     *     SCM_PD_OPERATIONAL_STATUS OperationalStatus[16];
     *     SCM_PD_OPERATIONAL_STATUS_REASON AdditionalReasons[1];
     * } *PSCM_PD_MANAGEMENT_STATUS
     * }
     */
    public static final AddressLayout PSCM_PD_MANAGEMENT_STATUS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SCM_PD_LOCATION_STRING {
     *     DWORD Version;
     *     DWORD Size;
     *     WCHAR Location[1];
     * } *PSCM_PD_LOCATION_STRING
     * }
     */
    public static final AddressLayout PSCM_PD_LOCATION_STRING = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SCM_PD_FRU_ID_STRING {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORD IdentifierSize;
     *     BYTE Identifier[1];
     * } *PSCM_PD_FRU_ID_STRING
     * }
     */
    public static final AddressLayout PSCM_PD_FRU_ID_STRING = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SCM_PD_FIRMWARE_DOWNLOAD {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORD Flags;
     *     BYTE Slot;
     *     BYTE Reserved[3];
     *     DWORD64 Offset;
     *     DWORD FirmwareImageSizeInBytes;
     *     BYTE FirmwareImage[1];
     * } *PSCM_PD_FIRMWARE_DOWNLOAD
     * }
     */
    public static final AddressLayout PSCM_PD_FIRMWARE_DOWNLOAD = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SCM_PD_FIRMWARE_ACTIVATE {
     *     DWORD Version;
     *     DWORD Size;
     *     DWORD Flags;
     *     BYTE Slot;
     * } *PSCM_PD_FIRMWARE_ACTIVATE
     * }
     */
    public static final AddressLayout PSCM_PD_FIRMWARE_ACTIVATE = winapi.C_POINTER;
    private static final int ScmPdLastFwActivationStatus_None = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_LAST_FW_ACTIVATION_STATUS.ScmPdLastFwActivationStatus_None = 0
     * }
     */
    public static int ScmPdLastFwActivationStatus_None() {
        return ScmPdLastFwActivationStatus_None;
    }
    private static final int ScmPdLastFwActivationStatus_Success = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_LAST_FW_ACTIVATION_STATUS.ScmPdLastFwActivationStatus_Success = 1
     * }
     */
    public static int ScmPdLastFwActivationStatus_Success() {
        return ScmPdLastFwActivationStatus_Success;
    }
    private static final int ScmPdLastFwActivationStatus_FwNotFound = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_LAST_FW_ACTIVATION_STATUS.ScmPdLastFwActivationStatus_FwNotFound = 2
     * }
     */
    public static int ScmPdLastFwActivationStatus_FwNotFound() {
        return ScmPdLastFwActivationStatus_FwNotFound;
    }
    private static final int ScmPdLastFwActivationStatus_ColdRebootRequired = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_LAST_FW_ACTIVATION_STATUS.ScmPdLastFwActivationStatus_ColdRebootRequired = 3
     * }
     */
    public static int ScmPdLastFwActivationStatus_ColdRebootRequired() {
        return ScmPdLastFwActivationStatus_ColdRebootRequired;
    }
    private static final int ScmPdLastFwActivaitonStatus_ActivationInProgress = (int)4L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_LAST_FW_ACTIVATION_STATUS.ScmPdLastFwActivaitonStatus_ActivationInProgress = 4
     * }
     */
    public static int ScmPdLastFwActivaitonStatus_ActivationInProgress() {
        return ScmPdLastFwActivaitonStatus_ActivationInProgress;
    }
    private static final int ScmPdLastFwActivaitonStatus_Retry = (int)5L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_LAST_FW_ACTIVATION_STATUS.ScmPdLastFwActivaitonStatus_Retry = 5
     * }
     */
    public static int ScmPdLastFwActivaitonStatus_Retry() {
        return ScmPdLastFwActivaitonStatus_Retry;
    }
    private static final int ScmPdLastFwActivaitonStatus_FwUnsupported = (int)6L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_LAST_FW_ACTIVATION_STATUS.ScmPdLastFwActivaitonStatus_FwUnsupported = 6
     * }
     */
    public static int ScmPdLastFwActivaitonStatus_FwUnsupported() {
        return ScmPdLastFwActivaitonStatus_FwUnsupported;
    }
    private static final int ScmPdLastFwActivaitonStatus_UnknownError = (int)7L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_LAST_FW_ACTIVATION_STATUS.ScmPdLastFwActivaitonStatus_UnknownError = 7
     * }
     */
    public static int ScmPdLastFwActivaitonStatus_UnknownError() {
        return ScmPdLastFwActivaitonStatus_UnknownError;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _SCM_PD_LAST_FW_ACTIVATION_STATUS {
     *     ScmPdLastFwActivationStatus_None = 0,
     *     ScmPdLastFwActivationStatus_Success = 1,
     *     ScmPdLastFwActivationStatus_FwNotFound = 2,
     *     ScmPdLastFwActivationStatus_ColdRebootRequired = 3,
     *     ScmPdLastFwActivaitonStatus_ActivationInProgress = 4,
     *     ScmPdLastFwActivaitonStatus_Retry = 5,
     *     ScmPdLastFwActivaitonStatus_FwUnsupported = 6,
     *     ScmPdLastFwActivaitonStatus_UnknownError = 7
     * } *PSCM_PD_LAST_FW_ACTIVATION_STATUS
     * }
     */
    public static final AddressLayout PSCM_PD_LAST_FW_ACTIVATION_STATUS = winapi.C_POINTER;
    private static final int ScmPdFirmwareActivationState_Idle = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_FIRMWARE_ACTIVATION_STATE.ScmPdFirmwareActivationState_Idle = 0
     * }
     */
    public static int ScmPdFirmwareActivationState_Idle() {
        return ScmPdFirmwareActivationState_Idle;
    }
    private static final int ScmPdFirmwareActivationState_Armed = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_FIRMWARE_ACTIVATION_STATE.ScmPdFirmwareActivationState_Armed = 1
     * }
     */
    public static int ScmPdFirmwareActivationState_Armed() {
        return ScmPdFirmwareActivationState_Armed;
    }
    private static final int ScmPdFirmwareActivationState_Busy = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_FIRMWARE_ACTIVATION_STATE.ScmPdFirmwareActivationState_Busy = 2
     * }
     */
    public static int ScmPdFirmwareActivationState_Busy() {
        return ScmPdFirmwareActivationState_Busy;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _SCM_PD_FIRMWARE_ACTIVATION_STATE {
     *     ScmPdFirmwareActivationState_Idle = 0,
     *     ScmPdFirmwareActivationState_Armed = 1,
     *     ScmPdFirmwareActivationState_Busy = 2
     * } *PSCM_PD_FIRMWARE_ACTIVATION_STATE
     * }
     */
    public static final AddressLayout PSCM_PD_FIRMWARE_ACTIVATION_STATE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SCM_PD_RUNTIME_FW_ACTIVATION_INFO {
     *     DWORD Version;
     *     DWORD Size;
     *     SCM_PD_LAST_FW_ACTIVATION_STATUS LastFirmwareActivationStatus;
     *     SCM_PD_FIRMWARE_ACTIVATION_STATE FirmwareActivationState;
     * } *PSCM_PD_RUNTIME_FW_ACTIVATION_INFO
     * }
     */
    public static final AddressLayout PSCM_PD_RUNTIME_FW_ACTIVATION_INFO = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SCM_PD_PASSTHROUGH_INPUT {
     *     DWORD Version;
     *     DWORD Size;
     *     GUID ProtocolGuid;
     *     DWORD DataSize;
     *     BYTE Data[1];
     * } *PSCM_PD_PASSTHROUGH_INPUT
     * }
     */
    public static final AddressLayout PSCM_PD_PASSTHROUGH_INPUT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SCM_PD_PASSTHROUGH_OUTPUT {
     *     DWORD Version;
     *     DWORD Size;
     *     GUID ProtocolGuid;
     *     DWORD DataSize;
     *     BYTE Data[1];
     * } *PSCM_PD_PASSTHROUGH_OUTPUT
     * }
     */
    public static final AddressLayout PSCM_PD_PASSTHROUGH_OUTPUT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SCM_PD_PASSTHROUGH_INVDIMM_INPUT {
     *     DWORD Opcode;
     *     DWORD OpcodeParametersLength;
     *     BYTE OpcodeParameters[1];
     * } *PSCM_PD_PASSTHROUGH_INVDIMM_INPUT
     * }
     */
    public static final AddressLayout PSCM_PD_PASSTHROUGH_INVDIMM_INPUT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SCM_PD_PASSTHROUGH_INVDIMM_OUTPUT {
     *     WORD GeneralStatus;
     *     WORD ExtendedStatus;
     *     DWORD OutputDataLength;
     *     BYTE OutputData[1];
     * } *PSCM_PD_PASSTHROUGH_INVDIMM_OUTPUT
     * }
     */
    public static final AddressLayout PSCM_PD_PASSTHROUGH_INVDIMM_OUTPUT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SCM_PD_REINITIALIZE_MEDIA_INPUT {
     *     DWORD Version;
     *     DWORD Size;
     *     struct {
     *         DWORD Overwrite : 1;
     *     } Options;
     * } *PSCM_PD_REINITIALIZE_MEDIA_INPUT
     * }
     */
    public static final AddressLayout PSCM_PD_REINITIALIZE_MEDIA_INPUT = winapi.C_POINTER;
    private static final int ScmPhysicalDeviceReinit_Success = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_MEDIA_REINITIALIZATION_STATUS.ScmPhysicalDeviceReinit_Success = 0
     * }
     */
    public static int ScmPhysicalDeviceReinit_Success() {
        return ScmPhysicalDeviceReinit_Success;
    }
    private static final int ScmPhysicalDeviceReinit_RebootNeeded = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_MEDIA_REINITIALIZATION_STATUS.ScmPhysicalDeviceReinit_RebootNeeded = 1
     * }
     */
    public static int ScmPhysicalDeviceReinit_RebootNeeded() {
        return ScmPhysicalDeviceReinit_RebootNeeded;
    }
    private static final int ScmPhysicalDeviceReinit_ColdBootNeeded = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_MEDIA_REINITIALIZATION_STATUS.ScmPhysicalDeviceReinit_ColdBootNeeded = 2
     * }
     */
    public static int ScmPhysicalDeviceReinit_ColdBootNeeded() {
        return ScmPhysicalDeviceReinit_ColdBootNeeded;
    }
    private static final int ScmPhysicalDeviceReinit_Max = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _SCM_PD_MEDIA_REINITIALIZATION_STATUS.ScmPhysicalDeviceReinit_Max = 3
     * }
     */
    public static int ScmPhysicalDeviceReinit_Max() {
        return ScmPhysicalDeviceReinit_Max;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _SCM_PD_MEDIA_REINITIALIZATION_STATUS {
     *     ScmPhysicalDeviceReinit_Success = 0,
     *     ScmPhysicalDeviceReinit_RebootNeeded,
     *     ScmPhysicalDeviceReinit_ColdBootNeeded,
     *     ScmPhysicalDeviceReinit_Max
     * } *PSCM_PD_MEDIA_REINITIALIZATION_STATUS
     * }
     */
    public static final AddressLayout PSCM_PD_MEDIA_REINITIALIZATION_STATUS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SCM_PD_REINITIALIZE_MEDIA_OUTPUT {
     *     DWORD Version;
     *     DWORD Size;
     *     SCM_PD_MEDIA_REINITIALIZATION_STATUS Status;
     * } *PSCM_PD_REINITIALIZE_MEDIA_OUTPUT
     * }
     */
    public static final AddressLayout PSCM_PD_REINITIALIZE_MEDIA_OUTPUT = winapi.C_POINTER;
    private static final int Unknown = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _MEDIA_TYPE.Unknown = 0
     * }
     */
    public static int Unknown() {
        return Unknown;
    }
    private static final int F5_1Pt2_512 = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _MEDIA_TYPE.F5_1Pt2_512 = 1
     * }
     */
    public static int F5_1Pt2_512() {
        return F5_1Pt2_512;
    }
    private static final int F3_1Pt44_512 = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _MEDIA_TYPE.F3_1Pt44_512 = 2
     * }
     */
    public static int F3_1Pt44_512() {
        return F3_1Pt44_512;
    }
    private static final int F3_2Pt88_512 = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _MEDIA_TYPE.F3_2Pt88_512 = 3
     * }
     */
    public static int F3_2Pt88_512() {
        return F3_2Pt88_512;
    }
    private static final int F3_20Pt8_512 = (int)4L;
    /**
     * {@snippet lang=c :
     * enum _MEDIA_TYPE.F3_20Pt8_512 = 4
     * }
     */
    public static int F3_20Pt8_512() {
        return F3_20Pt8_512;
    }
    private static final int F3_720_512 = (int)5L;
    /**
     * {@snippet lang=c :
     * enum _MEDIA_TYPE.F3_720_512 = 5
     * }
     */
    public static int F3_720_512() {
        return F3_720_512;
    }
    private static final int F5_360_512 = (int)6L;
    /**
     * {@snippet lang=c :
     * enum _MEDIA_TYPE.F5_360_512 = 6
     * }
     */
    public static int F5_360_512() {
        return F5_360_512;
    }
    private static final int F5_320_512 = (int)7L;
    /**
     * {@snippet lang=c :
     * enum _MEDIA_TYPE.F5_320_512 = 7
     * }
     */
    public static int F5_320_512() {
        return F5_320_512;
    }
    private static final int F5_320_1024 = (int)8L;
    /**
     * {@snippet lang=c :
     * enum _MEDIA_TYPE.F5_320_1024 = 8
     * }
     */
    public static int F5_320_1024() {
        return F5_320_1024;
    }
    private static final int F5_180_512 = (int)9L;
    /**
     * {@snippet lang=c :
     * enum _MEDIA_TYPE.F5_180_512 = 9
     * }
     */
    public static int F5_180_512() {
        return F5_180_512;
    }
    private static final int F5_160_512 = (int)10L;
    /**
     * {@snippet lang=c :
     * enum _MEDIA_TYPE.F5_160_512 = 10
     * }
     */
    public static int F5_160_512() {
        return F5_160_512;
    }
    private static final int RemovableMedia = (int)11L;
    /**
     * {@snippet lang=c :
     * enum _MEDIA_TYPE.RemovableMedia = 11
     * }
     */
    public static int RemovableMedia() {
        return RemovableMedia;
    }
    private static final int FixedMedia = (int)12L;
    /**
     * {@snippet lang=c :
     * enum _MEDIA_TYPE.FixedMedia = 12
     * }
     */
    public static int FixedMedia() {
        return FixedMedia;
    }
    private static final int F3_120M_512 = (int)13L;
    /**
     * {@snippet lang=c :
     * enum _MEDIA_TYPE.F3_120M_512 = 13
     * }
     */
    public static int F3_120M_512() {
        return F3_120M_512;
    }
    private static final int F3_640_512 = (int)14L;
    /**
     * {@snippet lang=c :
     * enum _MEDIA_TYPE.F3_640_512 = 14
     * }
     */
    public static int F3_640_512() {
        return F3_640_512;
    }
    private static final int F5_640_512 = (int)15L;
    /**
     * {@snippet lang=c :
     * enum _MEDIA_TYPE.F5_640_512 = 15
     * }
     */
    public static int F5_640_512() {
        return F5_640_512;
    }
    private static final int F5_720_512 = (int)16L;
    /**
     * {@snippet lang=c :
     * enum _MEDIA_TYPE.F5_720_512 = 16
     * }
     */
    public static int F5_720_512() {
        return F5_720_512;
    }
    private static final int F3_1Pt2_512 = (int)17L;
    /**
     * {@snippet lang=c :
     * enum _MEDIA_TYPE.F3_1Pt2_512 = 17
     * }
     */
    public static int F3_1Pt2_512() {
        return F3_1Pt2_512;
    }
    private static final int F3_1Pt23_1024 = (int)18L;
    /**
     * {@snippet lang=c :
     * enum _MEDIA_TYPE.F3_1Pt23_1024 = 18
     * }
     */
    public static int F3_1Pt23_1024() {
        return F3_1Pt23_1024;
    }
    private static final int F5_1Pt23_1024 = (int)19L;
    /**
     * {@snippet lang=c :
     * enum _MEDIA_TYPE.F5_1Pt23_1024 = 19
     * }
     */
    public static int F5_1Pt23_1024() {
        return F5_1Pt23_1024;
    }
    private static final int F3_128Mb_512 = (int)20L;
    /**
     * {@snippet lang=c :
     * enum _MEDIA_TYPE.F3_128Mb_512 = 20
     * }
     */
    public static int F3_128Mb_512() {
        return F3_128Mb_512;
    }
    private static final int F3_230Mb_512 = (int)21L;
    /**
     * {@snippet lang=c :
     * enum _MEDIA_TYPE.F3_230Mb_512 = 21
     * }
     */
    public static int F3_230Mb_512() {
        return F3_230Mb_512;
    }
    private static final int F8_256_128 = (int)22L;
    /**
     * {@snippet lang=c :
     * enum _MEDIA_TYPE.F8_256_128 = 22
     * }
     */
    public static int F8_256_128() {
        return F8_256_128;
    }
    private static final int F3_200Mb_512 = (int)23L;
    /**
     * {@snippet lang=c :
     * enum _MEDIA_TYPE.F3_200Mb_512 = 23
     * }
     */
    public static int F3_200Mb_512() {
        return F3_200Mb_512;
    }
    private static final int F3_240M_512 = (int)24L;
    /**
     * {@snippet lang=c :
     * enum _MEDIA_TYPE.F3_240M_512 = 24
     * }
     */
    public static int F3_240M_512() {
        return F3_240M_512;
    }
    private static final int F3_32M_512 = (int)25L;
    /**
     * {@snippet lang=c :
     * enum _MEDIA_TYPE.F3_32M_512 = 25
     * }
     */
    public static int F3_32M_512() {
        return F3_32M_512;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _MEDIA_TYPE {
     *     Unknown,
     *     F5_1Pt2_512,
     *     F3_1Pt44_512,
     *     F3_2Pt88_512,
     *     F3_20Pt8_512,
     *     F3_720_512,
     *     F5_360_512,
     *     F5_320_512,
     *     F5_320_1024,
     *     F5_180_512,
     *     F5_160_512,
     *     RemovableMedia,
     *     FixedMedia,
     *     F3_120M_512,
     *     F3_640_512,
     *     F5_640_512,
     *     F5_720_512,
     *     F3_1Pt2_512,
     *     F3_1Pt23_1024,
     *     F5_1Pt23_1024,
     *     F3_128Mb_512,
     *     F3_230Mb_512,
     *     F8_256_128,
     *     F3_200Mb_512,
     *     F3_240M_512,
     *     F3_32M_512
     * } *PMEDIA_TYPE
     * }
     */
    public static final AddressLayout PMEDIA_TYPE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _FORMAT_PARAMETERS {
     *     MEDIA_TYPE MediaType;
     *     DWORD StartCylinderNumber;
     *     DWORD EndCylinderNumber;
     *     DWORD StartHeadNumber;
     *     DWORD EndHeadNumber;
     * } *PFORMAT_PARAMETERS
     * }
     */
    public static final AddressLayout PFORMAT_PARAMETERS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef WORD BAD_TRACK_NUMBER
     * }
     */
    public static final OfShort BAD_TRACK_NUMBER = winapi.C_SHORT;
    /**
     * {@snippet lang=c :
     * typedef WORD *PBAD_TRACK_NUMBER
     * }
     */
    public static final AddressLayout PBAD_TRACK_NUMBER = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _FORMAT_EX_PARAMETERS {
     *     MEDIA_TYPE MediaType;
     *     DWORD StartCylinderNumber;
     *     DWORD EndCylinderNumber;
     *     DWORD StartHeadNumber;
     *     DWORD EndHeadNumber;
     *     WORD FormatGapLength;
     *     WORD SectorsPerTrack;
     *     WORD SectorNumber[1];
     * } *PFORMAT_EX_PARAMETERS
     * }
     */
    public static final AddressLayout PFORMAT_EX_PARAMETERS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DISK_GEOMETRY {
     *     LARGE_INTEGER Cylinders;
     *     MEDIA_TYPE MediaType;
     *     DWORD TracksPerCylinder;
     *     DWORD SectorsPerTrack;
     *     DWORD BytesPerSector;
     * } *PDISK_GEOMETRY
     * }
     */
    public static final AddressLayout PDISK_GEOMETRY = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _PARTITION_INFORMATION {
     *     LARGE_INTEGER StartingOffset;
     *     LARGE_INTEGER PartitionLength;
     *     DWORD HiddenSectors;
     *     DWORD PartitionNumber;
     *     BYTE PartitionType;
     *     BOOLEAN BootIndicator;
     *     BOOLEAN RecognizedPartition;
     *     BOOLEAN RewritePartition;
     * } *PPARTITION_INFORMATION
     * }
     */
    public static final AddressLayout PPARTITION_INFORMATION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SET_PARTITION_INFORMATION {
     *     BYTE PartitionType;
     * } *PSET_PARTITION_INFORMATION
     * }
     */
    public static final AddressLayout PSET_PARTITION_INFORMATION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DRIVE_LAYOUT_INFORMATION {
     *     DWORD PartitionCount;
     *     DWORD Signature;
     *     PARTITION_INFORMATION PartitionEntry[1];
     * } *PDRIVE_LAYOUT_INFORMATION
     * }
     */
    public static final AddressLayout PDRIVE_LAYOUT_INFORMATION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _VERIFY_INFORMATION {
     *     LARGE_INTEGER StartingOffset;
     *     DWORD Length;
     * } *PVERIFY_INFORMATION
     * }
     */
    public static final AddressLayout PVERIFY_INFORMATION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _REASSIGN_BLOCKS {
     *     WORD Reserved;
     *     WORD Count;
     *     DWORD BlockNumber[1];
     * } *PREASSIGN_BLOCKS
     * }
     */
    public static final AddressLayout PREASSIGN_BLOCKS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _REASSIGN_BLOCKS_EX {
     *     WORD Reserved;
     *     WORD Count;
     *     LARGE_INTEGER BlockNumber[1];
     * } *PREASSIGN_BLOCKS_EX
     * }
     */
    public static final AddressLayout PREASSIGN_BLOCKS_EX = winapi.C_POINTER;
    private static final int PARTITION_STYLE_MBR = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _PARTITION_STYLE.PARTITION_STYLE_MBR = 0
     * }
     */
    public static int PARTITION_STYLE_MBR() {
        return PARTITION_STYLE_MBR;
    }
    private static final int PARTITION_STYLE_GPT = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _PARTITION_STYLE.PARTITION_STYLE_GPT = 1
     * }
     */
    public static int PARTITION_STYLE_GPT() {
        return PARTITION_STYLE_GPT;
    }
    private static final int PARTITION_STYLE_RAW = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _PARTITION_STYLE.PARTITION_STYLE_RAW = 2
     * }
     */
    public static int PARTITION_STYLE_RAW() {
        return PARTITION_STYLE_RAW;
    }
    /**
     * {@snippet lang=c :
     * typedef struct _PARTITION_INFORMATION_GPT {
     *     GUID PartitionType;
     *     GUID PartitionId;
     *     DWORD64 Attributes;
     *     WCHAR Name[36];
     * } *PPARTITION_INFORMATION_GPT
     * }
     */
    public static final AddressLayout PPARTITION_INFORMATION_GPT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _PARTITION_INFORMATION_MBR {
     *     BYTE PartitionType;
     *     BOOLEAN BootIndicator;
     *     BOOLEAN RecognizedPartition;
     *     DWORD HiddenSectors;
     *     GUID PartitionId;
     * } *PPARTITION_INFORMATION_MBR
     * }
     */
    public static final AddressLayout PPARTITION_INFORMATION_MBR = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SET_PARTITION_INFORMATION_EX {
     *     PARTITION_STYLE PartitionStyle;
     *     union {
     *         SET_PARTITION_INFORMATION_MBR Mbr;
     *         SET_PARTITION_INFORMATION_GPT Gpt;
     *     };
     * } *PSET_PARTITION_INFORMATION_EX
     * }
     */
    public static final AddressLayout PSET_PARTITION_INFORMATION_EX = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _CREATE_DISK_GPT {
     *     GUID DiskId;
     *     DWORD MaxPartitionCount;
     * } *PCREATE_DISK_GPT
     * }
     */
    public static final AddressLayout PCREATE_DISK_GPT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _CREATE_DISK_MBR {
     *     DWORD Signature;
     * } *PCREATE_DISK_MBR
     * }
     */
    public static final AddressLayout PCREATE_DISK_MBR = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _CREATE_DISK {
     *     PARTITION_STYLE PartitionStyle;
     *     union {
     *         CREATE_DISK_MBR Mbr;
     *         CREATE_DISK_GPT Gpt;
     *     };
     * } *PCREATE_DISK
     * }
     */
    public static final AddressLayout PCREATE_DISK = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _GET_LENGTH_INFORMATION {
     *     LARGE_INTEGER Length;
     * } *PGET_LENGTH_INFORMATION
     * }
     */
    public static final AddressLayout PGET_LENGTH_INFORMATION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _PARTITION_INFORMATION_EX {
     *     PARTITION_STYLE PartitionStyle;
     *     LARGE_INTEGER StartingOffset;
     *     LARGE_INTEGER PartitionLength;
     *     DWORD PartitionNumber;
     *     BOOLEAN RewritePartition;
     *     BOOLEAN IsServicePartition;
     *     union {
     *         PARTITION_INFORMATION_MBR Mbr;
     *         PARTITION_INFORMATION_GPT Gpt;
     *     };
     * } *PPARTITION_INFORMATION_EX
     * }
     */
    public static final AddressLayout PPARTITION_INFORMATION_EX = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DRIVE_LAYOUT_INFORMATION_GPT {
     *     GUID DiskId;
     *     LARGE_INTEGER StartingUsableOffset;
     *     LARGE_INTEGER UsableLength;
     *     DWORD MaxPartitionCount;
     * } *PDRIVE_LAYOUT_INFORMATION_GPT
     * }
     */
    public static final AddressLayout PDRIVE_LAYOUT_INFORMATION_GPT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DRIVE_LAYOUT_INFORMATION_MBR {
     *     DWORD Signature;
     *     DWORD CheckSum;
     * } *PDRIVE_LAYOUT_INFORMATION_MBR
     * }
     */
    public static final AddressLayout PDRIVE_LAYOUT_INFORMATION_MBR = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DRIVE_LAYOUT_INFORMATION_EX {
     *     DWORD PartitionStyle;
     *     DWORD PartitionCount;
     *     union {
     *         DRIVE_LAYOUT_INFORMATION_MBR Mbr;
     *         DRIVE_LAYOUT_INFORMATION_GPT Gpt;
     *     };
     *     PARTITION_INFORMATION_EX PartitionEntry[1];
     * } *PDRIVE_LAYOUT_INFORMATION_EX
     * }
     */
    public static final AddressLayout PDRIVE_LAYOUT_INFORMATION_EX = winapi.C_POINTER;
    private static final int DetectNone = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _DETECTION_TYPE.DetectNone = 0
     * }
     */
    public static int DetectNone() {
        return DetectNone;
    }
    private static final int DetectInt13 = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _DETECTION_TYPE.DetectInt13 = 1
     * }
     */
    public static int DetectInt13() {
        return DetectInt13;
    }
    private static final int DetectExInt13 = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _DETECTION_TYPE.DetectExInt13 = 2
     * }
     */
    public static int DetectExInt13() {
        return DetectExInt13;
    }
    /**
     * {@snippet lang=c :
     * typedef struct _DISK_INT13_INFO {
     *     WORD DriveSelect;
     *     DWORD MaxCylinders;
     *     WORD SectorsPerTrack;
     *     WORD MaxHeads;
     *     WORD NumberDrives;
     * } *PDISK_INT13_INFO
     * }
     */
    public static final AddressLayout PDISK_INT13_INFO = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DISK_EX_INT13_INFO {
     *     WORD ExBufferSize;
     *     WORD ExFlags;
     *     DWORD ExCylinders;
     *     DWORD ExHeads;
     *     DWORD ExSectorsPerTrack;
     *     DWORD64 ExSectorsPerDrive;
     *     WORD ExSectorSize;
     *     WORD ExReserved;
     * } *PDISK_EX_INT13_INFO
     * }
     */
    public static final AddressLayout PDISK_EX_INT13_INFO = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DISK_DETECTION_INFO {
     *     DWORD SizeOfDetectInfo;
     *     DETECTION_TYPE DetectionType;
     *     union {
     *         struct {
     *             DISK_INT13_INFO Int13;
     *             DISK_EX_INT13_INFO ExInt13;
     *         };
     *     };
     * } *PDISK_DETECTION_INFO
     * }
     */
    public static final AddressLayout PDISK_DETECTION_INFO = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DISK_PARTITION_INFO {
     *     DWORD SizeOfPartitionInfo;
     *     PARTITION_STYLE PartitionStyle;
     *     union {
     *         struct {
     *             DWORD Signature;
     *             DWORD CheckSum;
     *         } Mbr;
     *         struct {
     *             GUID DiskId;
     *         } Gpt;
     *     };
     * } *PDISK_PARTITION_INFO
     * }
     */
    public static final AddressLayout PDISK_PARTITION_INFO = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DISK_GEOMETRY_EX {
     *     DISK_GEOMETRY Geometry;
     *     LARGE_INTEGER DiskSize;
     *     BYTE Data[1];
     * } *PDISK_GEOMETRY_EX
     * }
     */
    public static final AddressLayout PDISK_GEOMETRY_EX = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DISK_CONTROLLER_NUMBER {
     *     DWORD ControllerNumber;
     *     DWORD DiskNumber;
     * } *PDISK_CONTROLLER_NUMBER
     * }
     */
    public static final AddressLayout PDISK_CONTROLLER_NUMBER = winapi.C_POINTER;
    private static final int EqualPriority = (int)0L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.EqualPriority = 0
     * }
     */
    public static int EqualPriority() {
        return EqualPriority;
    }
    private static final int KeepPrefetchedData = (int)1L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.KeepPrefetchedData = 1
     * }
     */
    public static int KeepPrefetchedData() {
        return KeepPrefetchedData;
    }
    private static final int KeepReadData = (int)2L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.KeepReadData = 2
     * }
     */
    public static int KeepReadData() {
        return KeepReadData;
    }
    /**
     * {@snippet lang=c :
     * typedef struct _DISK_CACHE_INFORMATION {
     *     BOOLEAN ParametersSavable;
     *     BOOLEAN ReadCacheEnabled;
     *     BOOLEAN WriteCacheEnabled;
     *     DISK_CACHE_RETENTION_PRIORITY ReadRetentionPriority;
     *     DISK_CACHE_RETENTION_PRIORITY WriteRetentionPriority;
     *     WORD DisablePrefetchTransferLength;
     *     BOOLEAN PrefetchScalar;
     *     union {
     *         struct {
     *             WORD Minimum;
     *             WORD Maximum;
     *             WORD MaximumBlocks;
     *         } ScalarPrefetch;
     *         struct {
     *             WORD Minimum;
     *             WORD Maximum;
     *         } BlockPrefetch;
     *     };
     * } *PDISK_CACHE_INFORMATION
     * }
     */
    public static final AddressLayout PDISK_CACHE_INFORMATION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DISK_GROW_PARTITION {
     *     DWORD PartitionNumber;
     *     LARGE_INTEGER BytesToGrow;
     * } *PDISK_GROW_PARTITION
     * }
     */
    public static final AddressLayout PDISK_GROW_PARTITION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _HISTOGRAM_BUCKET {
     *     DWORD Reads;
     *     DWORD Writes;
     * } *PHISTOGRAM_BUCKET
     * }
     */
    public static final AddressLayout PHISTOGRAM_BUCKET = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DISK_HISTOGRAM {
     *     LARGE_INTEGER DiskSize;
     *     LARGE_INTEGER Start;
     *     LARGE_INTEGER End;
     *     LARGE_INTEGER Average;
     *     LARGE_INTEGER AverageRead;
     *     LARGE_INTEGER AverageWrite;
     *     DWORD Granularity;
     *     DWORD Size;
     *     DWORD ReadCount;
     *     DWORD WriteCount;
     *     PHISTOGRAM_BUCKET Histogram;
     * } *PDISK_HISTOGRAM
     * }
     */
    public static final AddressLayout PDISK_HISTOGRAM = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DISK_PERFORMANCE {
     *     LARGE_INTEGER BytesRead;
     *     LARGE_INTEGER BytesWritten;
     *     LARGE_INTEGER ReadTime;
     *     LARGE_INTEGER WriteTime;
     *     LARGE_INTEGER IdleTime;
     *     DWORD ReadCount;
     *     DWORD WriteCount;
     *     DWORD QueueDepth;
     *     DWORD SplitCount;
     *     LARGE_INTEGER QueryTime;
     *     DWORD StorageDeviceNumber;
     *     WCHAR StorageManagerName[8];
     * } *PDISK_PERFORMANCE
     * }
     */
    public static final AddressLayout PDISK_PERFORMANCE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DISK_RECORD {
     *     LARGE_INTEGER ByteOffset;
     *     LARGE_INTEGER StartTime;
     *     LARGE_INTEGER EndTime;
     *     PVOID VirtualAddress;
     *     DWORD NumberOfBytes;
     *     BYTE DeviceNumber;
     *     BOOLEAN ReadRequest;
     * } *PDISK_RECORD
     * }
     */
    public static final AddressLayout PDISK_RECORD = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DISK_LOGGING {
     *     BYTE Function;
     *     PVOID BufferAddress;
     *     DWORD BufferSize;
     * } *PDISK_LOGGING
     * }
     */
    public static final AddressLayout PDISK_LOGGING = winapi.C_POINTER;
    private static final int RequestSize = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _BIN_TYPES.RequestSize = 0
     * }
     */
    public static int RequestSize() {
        return RequestSize;
    }
    private static final int RequestLocation = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _BIN_TYPES.RequestLocation = 1
     * }
     */
    public static int RequestLocation() {
        return RequestLocation;
    }
    /**
     * {@snippet lang=c :
     * typedef struct _BIN_RANGE {
     *     LARGE_INTEGER StartValue;
     *     LARGE_INTEGER Length;
     * } *PBIN_RANGE
     * }
     */
    public static final AddressLayout PBIN_RANGE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _PERF_BIN {
     *     DWORD NumberOfBins;
     *     DWORD TypeOfBin;
     *     BIN_RANGE BinsRanges[1];
     * } *PPERF_BIN
     * }
     */
    public static final AddressLayout PPERF_BIN = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _BIN_COUNT {
     *     BIN_RANGE BinRange;
     *     DWORD BinCount;
     * } *PBIN_COUNT
     * }
     */
    public static final AddressLayout PBIN_COUNT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _BIN_RESULTS {
     *     DWORD NumberOfBins;
     *     BIN_COUNT BinCounts[1];
     * } *PBIN_RESULTS
     * }
     */
    public static final AddressLayout PBIN_RESULTS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _GETVERSIONINPARAMS {
     *     BYTE bVersion;
     *     BYTE bRevision;
     *     BYTE bReserved;
     *     BYTE bIDEDeviceMap;
     *     DWORD fCapabilities;
     *     DWORD dwReserved[4];
     * } *PGETVERSIONINPARAMS
     * }
     */
    public static final AddressLayout PGETVERSIONINPARAMS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _GETVERSIONINPARAMS {
     *     BYTE bVersion;
     *     BYTE bRevision;
     *     BYTE bReserved;
     *     BYTE bIDEDeviceMap;
     *     DWORD fCapabilities;
     *     DWORD dwReserved[4];
     * } *LPGETVERSIONINPARAMS
     * }
     */
    public static final AddressLayout LPGETVERSIONINPARAMS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _IDEREGS {
     *     BYTE bFeaturesReg;
     *     BYTE bSectorCountReg;
     *     BYTE bSectorNumberReg;
     *     BYTE bCylLowReg;
     *     BYTE bCylHighReg;
     *     BYTE bDriveHeadReg;
     *     BYTE bCommandReg;
     *     BYTE bReserved;
     * } *PIDEREGS
     * }
     */
    public static final AddressLayout PIDEREGS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _IDEREGS {
     *     BYTE bFeaturesReg;
     *     BYTE bSectorCountReg;
     *     BYTE bSectorNumberReg;
     *     BYTE bCylLowReg;
     *     BYTE bCylHighReg;
     *     BYTE bDriveHeadReg;
     *     BYTE bCommandReg;
     *     BYTE bReserved;
     * } *LPIDEREGS
     * }
     */
    public static final AddressLayout LPIDEREGS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SENDCMDINPARAMS {
     *     DWORD cBufferSize;
     *     IDEREGS irDriveRegs;
     *     BYTE bDriveNumber;
     *     BYTE bReserved[3];
     *     DWORD dwReserved[4];
     *     BYTE bBuffer[1];
     * } *PSENDCMDINPARAMS
     * }
     */
    public static final AddressLayout PSENDCMDINPARAMS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SENDCMDINPARAMS {
     *     DWORD cBufferSize;
     *     IDEREGS irDriveRegs;
     *     BYTE bDriveNumber;
     *     BYTE bReserved[3];
     *     DWORD dwReserved[4];
     *     BYTE bBuffer[1];
     * } *LPSENDCMDINPARAMS
     * }
     */
    public static final AddressLayout LPSENDCMDINPARAMS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DRIVERSTATUS {
     *     BYTE bDriverError;
     *     BYTE bIDEError;
     *     BYTE bReserved[2];
     *     DWORD dwReserved[2];
     * } *PDRIVERSTATUS
     * }
     */
    public static final AddressLayout PDRIVERSTATUS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DRIVERSTATUS {
     *     BYTE bDriverError;
     *     BYTE bIDEError;
     *     BYTE bReserved[2];
     *     DWORD dwReserved[2];
     * } *LPDRIVERSTATUS
     * }
     */
    public static final AddressLayout LPDRIVERSTATUS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SENDCMDOUTPARAMS {
     *     DWORD cBufferSize;
     *     DRIVERSTATUS DriverStatus;
     *     BYTE bBuffer[1];
     * } *PSENDCMDOUTPARAMS
     * }
     */
    public static final AddressLayout PSENDCMDOUTPARAMS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SENDCMDOUTPARAMS {
     *     DWORD cBufferSize;
     *     DRIVERSTATUS DriverStatus;
     *     BYTE bBuffer[1];
     * } *LPSENDCMDOUTPARAMS
     * }
     */
    public static final AddressLayout LPSENDCMDOUTPARAMS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _GET_DISK_ATTRIBUTES {
     *     DWORD Version;
     *     DWORD Reserved1;
     *     DWORDLONG Attributes;
     * } *PGET_DISK_ATTRIBUTES
     * }
     */
    public static final AddressLayout PGET_DISK_ATTRIBUTES = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SET_DISK_ATTRIBUTES {
     *     DWORD Version;
     *     BOOLEAN Persist;
     *     BYTE Reserved1[3];
     *     DWORDLONG Attributes;
     *     DWORDLONG AttributesMask;
     *     DWORD Reserved2[4];
     * } *PSET_DISK_ATTRIBUTES
     * }
     */
    public static final AddressLayout PSET_DISK_ATTRIBUTES = winapi.C_POINTER;
    private static final int AllElements = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _ELEMENT_TYPE.AllElements = 0
     * }
     */
    public static int AllElements() {
        return AllElements;
    }
    private static final int ChangerTransport = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _ELEMENT_TYPE.ChangerTransport = 1
     * }
     */
    public static int ChangerTransport() {
        return ChangerTransport;
    }
    private static final int ChangerSlot = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _ELEMENT_TYPE.ChangerSlot = 2
     * }
     */
    public static int ChangerSlot() {
        return ChangerSlot;
    }
    private static final int ChangerIEPort = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _ELEMENT_TYPE.ChangerIEPort = 3
     * }
     */
    public static int ChangerIEPort() {
        return ChangerIEPort;
    }
    private static final int ChangerDrive = (int)4L;
    /**
     * {@snippet lang=c :
     * enum _ELEMENT_TYPE.ChangerDrive = 4
     * }
     */
    public static int ChangerDrive() {
        return ChangerDrive;
    }
    private static final int ChangerDoor = (int)5L;
    /**
     * {@snippet lang=c :
     * enum _ELEMENT_TYPE.ChangerDoor = 5
     * }
     */
    public static int ChangerDoor() {
        return ChangerDoor;
    }
    private static final int ChangerKeypad = (int)6L;
    /**
     * {@snippet lang=c :
     * enum _ELEMENT_TYPE.ChangerKeypad = 6
     * }
     */
    public static int ChangerKeypad() {
        return ChangerKeypad;
    }
    private static final int ChangerMaxElement = (int)7L;
    /**
     * {@snippet lang=c :
     * enum _ELEMENT_TYPE.ChangerMaxElement = 7
     * }
     */
    public static int ChangerMaxElement() {
        return ChangerMaxElement;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _ELEMENT_TYPE {
     *     AllElements,
     *     ChangerTransport,
     *     ChangerSlot,
     *     ChangerIEPort,
     *     ChangerDrive,
     *     ChangerDoor,
     *     ChangerKeypad,
     *     ChangerMaxElement
     * } *PELEMENT_TYPE
     * }
     */
    public static final AddressLayout PELEMENT_TYPE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _CHANGER_ELEMENT {
     *     ELEMENT_TYPE ElementType;
     *     DWORD ElementAddress;
     * } *PCHANGER_ELEMENT
     * }
     */
    public static final AddressLayout PCHANGER_ELEMENT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _CHANGER_ELEMENT_LIST {
     *     CHANGER_ELEMENT Element;
     *     DWORD NumberOfElements;
     * } *PCHANGER_ELEMENT_LIST
     * }
     */
    public static final AddressLayout PCHANGER_ELEMENT_LIST = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _GET_CHANGER_PARAMETERS {
     *     DWORD Size;
     *     WORD NumberTransportElements;
     *     WORD NumberStorageElements;
     *     WORD NumberCleanerSlots;
     *     WORD NumberIEElements;
     *     WORD NumberDataTransferElements;
     *     WORD NumberOfDoors;
     *     WORD FirstSlotNumber;
     *     WORD FirstDriveNumber;
     *     WORD FirstTransportNumber;
     *     WORD FirstIEPortNumber;
     *     WORD FirstCleanerSlotAddress;
     *     WORD MagazineSize;
     *     DWORD DriveCleanTimeout;
     *     DWORD Features0;
     *     DWORD Features1;
     *     BYTE MoveFromTransport;
     *     BYTE MoveFromSlot;
     *     BYTE MoveFromIePort;
     *     BYTE MoveFromDrive;
     *     BYTE ExchangeFromTransport;
     *     BYTE ExchangeFromSlot;
     *     BYTE ExchangeFromIePort;
     *     BYTE ExchangeFromDrive;
     *     BYTE LockUnlockCapabilities;
     *     BYTE PositionCapabilities;
     *     BYTE Reserved1[2];
     *     DWORD Reserved2[2];
     * } *PGET_CHANGER_PARAMETERS
     * }
     */
    public static final AddressLayout PGET_CHANGER_PARAMETERS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _CHANGER_PRODUCT_DATA {
     *     BYTE VendorId[8];
     *     BYTE ProductId[16];
     *     BYTE Revision[4];
     *     BYTE SerialNumber[32];
     *     BYTE DeviceType;
     * } *PCHANGER_PRODUCT_DATA
     * }
     */
    public static final AddressLayout PCHANGER_PRODUCT_DATA = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _CHANGER_SET_ACCESS {
     *     CHANGER_ELEMENT Element;
     *     DWORD Control;
     * } *PCHANGER_SET_ACCESS
     * }
     */
    public static final AddressLayout PCHANGER_SET_ACCESS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _CHANGER_READ_ELEMENT_STATUS {
     *     CHANGER_ELEMENT_LIST ElementList;
     *     BOOLEAN VolumeTagInfo;
     * } *PCHANGER_READ_ELEMENT_STATUS
     * }
     */
    public static final AddressLayout PCHANGER_READ_ELEMENT_STATUS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _CHANGER_ELEMENT_STATUS {
     *     CHANGER_ELEMENT Element;
     *     CHANGER_ELEMENT SrcElementAddress;
     *     DWORD Flags;
     *     DWORD ExceptionCode;
     *     BYTE TargetId;
     *     BYTE Lun;
     *     WORD Reserved;
     *     BYTE PrimaryVolumeID[36];
     *     BYTE AlternateVolumeID[36];
     * } *PCHANGER_ELEMENT_STATUS
     * }
     */
    public static final AddressLayout PCHANGER_ELEMENT_STATUS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _CHANGER_ELEMENT_STATUS_EX {
     *     CHANGER_ELEMENT Element;
     *     CHANGER_ELEMENT SrcElementAddress;
     *     DWORD Flags;
     *     DWORD ExceptionCode;
     *     BYTE TargetId;
     *     BYTE Lun;
     *     WORD Reserved;
     *     BYTE PrimaryVolumeID[36];
     *     BYTE AlternateVolumeID[36];
     *     BYTE VendorIdentification[8];
     *     BYTE ProductIdentification[16];
     *     BYTE SerialNumber[32];
     * } *PCHANGER_ELEMENT_STATUS_EX
     * }
     */
    public static final AddressLayout PCHANGER_ELEMENT_STATUS_EX = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _CHANGER_INITIALIZE_ELEMENT_STATUS {
     *     CHANGER_ELEMENT_LIST ElementList;
     *     BOOLEAN BarCodeScan;
     * } *PCHANGER_INITIALIZE_ELEMENT_STATUS
     * }
     */
    public static final AddressLayout PCHANGER_INITIALIZE_ELEMENT_STATUS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _CHANGER_SET_POSITION {
     *     CHANGER_ELEMENT Transport;
     *     CHANGER_ELEMENT Destination;
     *     BOOLEAN Flip;
     * } *PCHANGER_SET_POSITION
     * }
     */
    public static final AddressLayout PCHANGER_SET_POSITION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _CHANGER_EXCHANGE_MEDIUM {
     *     CHANGER_ELEMENT Transport;
     *     CHANGER_ELEMENT Source;
     *     CHANGER_ELEMENT Destination1;
     *     CHANGER_ELEMENT Destination2;
     *     BOOLEAN Flip1;
     *     BOOLEAN Flip2;
     * } *PCHANGER_EXCHANGE_MEDIUM
     * }
     */
    public static final AddressLayout PCHANGER_EXCHANGE_MEDIUM = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _CHANGER_MOVE_MEDIUM {
     *     CHANGER_ELEMENT Transport;
     *     CHANGER_ELEMENT Source;
     *     CHANGER_ELEMENT Destination;
     *     BOOLEAN Flip;
     * } *PCHANGER_MOVE_MEDIUM
     * }
     */
    public static final AddressLayout PCHANGER_MOVE_MEDIUM = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _CHANGER_SEND_VOLUME_TAG_INFORMATION {
     *     CHANGER_ELEMENT StartingElement;
     *     DWORD ActionCode;
     *     BYTE VolumeIDTemplate[40];
     * } *PCHANGER_SEND_VOLUME_TAG_INFORMATION
     * }
     */
    public static final AddressLayout PCHANGER_SEND_VOLUME_TAG_INFORMATION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _READ_ELEMENT_ADDRESS_INFO {
     *     DWORD NumberOfElements;
     *     CHANGER_ELEMENT_STATUS ElementStatus[1];
     * } *PREAD_ELEMENT_ADDRESS_INFO
     * }
     */
    public static final AddressLayout PREAD_ELEMENT_ADDRESS_INFO = winapi.C_POINTER;
    private static final int DeviceProblemNone = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _CHANGER_DEVICE_PROBLEM_TYPE.DeviceProblemNone = 0
     * }
     */
    public static int DeviceProblemNone() {
        return DeviceProblemNone;
    }
    private static final int DeviceProblemHardware = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _CHANGER_DEVICE_PROBLEM_TYPE.DeviceProblemHardware = 1
     * }
     */
    public static int DeviceProblemHardware() {
        return DeviceProblemHardware;
    }
    private static final int DeviceProblemCHMError = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _CHANGER_DEVICE_PROBLEM_TYPE.DeviceProblemCHMError = 2
     * }
     */
    public static int DeviceProblemCHMError() {
        return DeviceProblemCHMError;
    }
    private static final int DeviceProblemDoorOpen = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _CHANGER_DEVICE_PROBLEM_TYPE.DeviceProblemDoorOpen = 3
     * }
     */
    public static int DeviceProblemDoorOpen() {
        return DeviceProblemDoorOpen;
    }
    private static final int DeviceProblemCalibrationError = (int)4L;
    /**
     * {@snippet lang=c :
     * enum _CHANGER_DEVICE_PROBLEM_TYPE.DeviceProblemCalibrationError = 4
     * }
     */
    public static int DeviceProblemCalibrationError() {
        return DeviceProblemCalibrationError;
    }
    private static final int DeviceProblemTargetFailure = (int)5L;
    /**
     * {@snippet lang=c :
     * enum _CHANGER_DEVICE_PROBLEM_TYPE.DeviceProblemTargetFailure = 5
     * }
     */
    public static int DeviceProblemTargetFailure() {
        return DeviceProblemTargetFailure;
    }
    private static final int DeviceProblemCHMMoveError = (int)6L;
    /**
     * {@snippet lang=c :
     * enum _CHANGER_DEVICE_PROBLEM_TYPE.DeviceProblemCHMMoveError = 6
     * }
     */
    public static int DeviceProblemCHMMoveError() {
        return DeviceProblemCHMMoveError;
    }
    private static final int DeviceProblemCHMZeroError = (int)7L;
    /**
     * {@snippet lang=c :
     * enum _CHANGER_DEVICE_PROBLEM_TYPE.DeviceProblemCHMZeroError = 7
     * }
     */
    public static int DeviceProblemCHMZeroError() {
        return DeviceProblemCHMZeroError;
    }
    private static final int DeviceProblemCartridgeInsertError = (int)8L;
    /**
     * {@snippet lang=c :
     * enum _CHANGER_DEVICE_PROBLEM_TYPE.DeviceProblemCartridgeInsertError = 8
     * }
     */
    public static int DeviceProblemCartridgeInsertError() {
        return DeviceProblemCartridgeInsertError;
    }
    private static final int DeviceProblemPositionError = (int)9L;
    /**
     * {@snippet lang=c :
     * enum _CHANGER_DEVICE_PROBLEM_TYPE.DeviceProblemPositionError = 9
     * }
     */
    public static int DeviceProblemPositionError() {
        return DeviceProblemPositionError;
    }
    private static final int DeviceProblemSensorError = (int)10L;
    /**
     * {@snippet lang=c :
     * enum _CHANGER_DEVICE_PROBLEM_TYPE.DeviceProblemSensorError = 10
     * }
     */
    public static int DeviceProblemSensorError() {
        return DeviceProblemSensorError;
    }
    private static final int DeviceProblemCartridgeEjectError = (int)11L;
    /**
     * {@snippet lang=c :
     * enum _CHANGER_DEVICE_PROBLEM_TYPE.DeviceProblemCartridgeEjectError = 11
     * }
     */
    public static int DeviceProblemCartridgeEjectError() {
        return DeviceProblemCartridgeEjectError;
    }
    private static final int DeviceProblemGripperError = (int)12L;
    /**
     * {@snippet lang=c :
     * enum _CHANGER_DEVICE_PROBLEM_TYPE.DeviceProblemGripperError = 12
     * }
     */
    public static int DeviceProblemGripperError() {
        return DeviceProblemGripperError;
    }
    private static final int DeviceProblemDriveError = (int)13L;
    /**
     * {@snippet lang=c :
     * enum _CHANGER_DEVICE_PROBLEM_TYPE.DeviceProblemDriveError = 13
     * }
     */
    public static int DeviceProblemDriveError() {
        return DeviceProblemDriveError;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _CHANGER_DEVICE_PROBLEM_TYPE {
     *     DeviceProblemNone,
     *     DeviceProblemHardware,
     *     DeviceProblemCHMError,
     *     DeviceProblemDoorOpen,
     *     DeviceProblemCalibrationError,
     *     DeviceProblemTargetFailure,
     *     DeviceProblemCHMMoveError,
     *     DeviceProblemCHMZeroError,
     *     DeviceProblemCartridgeInsertError,
     *     DeviceProblemPositionError,
     *     DeviceProblemSensorError,
     *     DeviceProblemCartridgeEjectError,
     *     DeviceProblemGripperError,
     *     DeviceProblemDriveError
     * } *PCHANGER_DEVICE_PROBLEM_TYPE
     * }
     */
    public static final AddressLayout PCHANGER_DEVICE_PROBLEM_TYPE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _PATHNAME_BUFFER {
     *     DWORD PathNameLength;
     *     WCHAR Name[1];
     * } *PPATHNAME_BUFFER
     * }
     */
    public static final AddressLayout PPATHNAME_BUFFER = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _FSCTL_QUERY_FAT_BPB_BUFFER {
     *     BYTE First0x24BytesOfBootSector[36];
     * } *PFSCTL_QUERY_FAT_BPB_BUFFER
     * }
     */
    public static final AddressLayout PFSCTL_QUERY_FAT_BPB_BUFFER = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct {
     *     LARGE_INTEGER VolumeSerialNumber;
     *     LARGE_INTEGER NumberSectors;
     *     LARGE_INTEGER TotalClusters;
     *     LARGE_INTEGER FreeClusters;
     *     LARGE_INTEGER TotalReserved;
     *     DWORD BytesPerSector;
     *     DWORD BytesPerCluster;
     *     DWORD BytesPerFileRecordSegment;
     *     DWORD ClustersPerFileRecordSegment;
     *     LARGE_INTEGER MftValidDataLength;
     *     LARGE_INTEGER MftStartLcn;
     *     LARGE_INTEGER Mft2StartLcn;
     *     LARGE_INTEGER MftZoneStart;
     *     LARGE_INTEGER MftZoneEnd;
     * } *PNTFS_VOLUME_DATA_BUFFER
     * }
     */
    public static final AddressLayout PNTFS_VOLUME_DATA_BUFFER = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct {
     *     DWORD ByteCount;
     *     WORD MajorVersion;
     *     WORD MinorVersion;
     *     DWORD BytesPerPhysicalSector;
     *     WORD LfsMajorVersion;
     *     WORD LfsMinorVersion;
     *     DWORD MaxDeviceTrimExtentCount;
     *     DWORD MaxDeviceTrimByteCount;
     *     DWORD MaxVolumeTrimExtentCount;
     *     DWORD MaxVolumeTrimByteCount;
     * } *PNTFS_EXTENDED_VOLUME_DATA
     * }
     */
    public static final AddressLayout PNTFS_EXTENDED_VOLUME_DATA = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct {
     *     DWORD ByteCount;
     *     DWORD MajorVersion;
     *     DWORD MinorVersion;
     *     DWORD BytesPerPhysicalSector;
     *     LARGE_INTEGER VolumeSerialNumber;
     *     LARGE_INTEGER NumberSectors;
     *     LARGE_INTEGER TotalClusters;
     *     LARGE_INTEGER FreeClusters;
     *     LARGE_INTEGER TotalReserved;
     *     DWORD BytesPerSector;
     *     DWORD BytesPerCluster;
     *     LARGE_INTEGER MaximumSizeOfResidentFile;
     *     WORD FastTierDataFillRatio;
     *     WORD SlowTierDataFillRatio;
     *     DWORD DestagesFastTierToSlowTierRate;
     *     WORD MetadataChecksumType;
     *     BYTE Reserved0[6];
     *     DWORD DriverMajorVersion;
     *     DWORD DriverMinorVersion;
     *     LARGE_INTEGER Reserved[7];
     * } *PREFS_VOLUME_DATA_BUFFER
     * }
     */
    public static final AddressLayout PREFS_VOLUME_DATA_BUFFER = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct {
     *     LARGE_INTEGER StartingLcn;
     * } *PSTARTING_LCN_INPUT_BUFFER
     * }
     */
    public static final AddressLayout PSTARTING_LCN_INPUT_BUFFER = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct {
     *     LARGE_INTEGER StartingLcn;
     *     DWORD Flags;
     * } *PSTARTING_LCN_INPUT_BUFFER_EX
     * }
     */
    public static final AddressLayout PSTARTING_LCN_INPUT_BUFFER_EX = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct {
     *     LARGE_INTEGER StartingLcn;
     *     LARGE_INTEGER BitmapSize;
     *     BYTE Buffer[1];
     * } *PVOLUME_BITMAP_BUFFER
     * }
     */
    public static final AddressLayout PVOLUME_BITMAP_BUFFER = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct {
     *     LARGE_INTEGER StartingVcn;
     * } *PSTARTING_VCN_INPUT_BUFFER
     * }
     */
    public static final AddressLayout PSTARTING_VCN_INPUT_BUFFER = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct RETRIEVAL_POINTERS_BUFFER {
     *     DWORD ExtentCount;
     *     LARGE_INTEGER StartingVcn;
     *     struct {
     *         LARGE_INTEGER NextVcn;
     *         LARGE_INTEGER Lcn;
     *     } Extents[1];
     * } *PRETRIEVAL_POINTERS_BUFFER
     * }
     */
    public static final AddressLayout PRETRIEVAL_POINTERS_BUFFER = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct RETRIEVAL_POINTERS_AND_REFCOUNT_BUFFER {
     *     DWORD ExtentCount;
     *     LARGE_INTEGER StartingVcn;
     *     struct {
     *         LARGE_INTEGER NextVcn;
     *         LARGE_INTEGER Lcn;
     *         DWORD ReferenceCount;
     *     } Extents[1];
     * } *PRETRIEVAL_POINTERS_AND_REFCOUNT_BUFFER
     * }
     */
    public static final AddressLayout PRETRIEVAL_POINTERS_AND_REFCOUNT_BUFFER = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct RETRIEVAL_POINTER_COUNT {
     *     DWORD ExtentCount;
     * } *PRETRIEVAL_POINTER_COUNT
     * }
     */
    public static final AddressLayout PRETRIEVAL_POINTER_COUNT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct {
     *     LARGE_INTEGER FileReferenceNumber;
     * } *PNTFS_FILE_RECORD_INPUT_BUFFER
     * }
     */
    public static final AddressLayout PNTFS_FILE_RECORD_INPUT_BUFFER = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct {
     *     LARGE_INTEGER FileReferenceNumber;
     *     DWORD FileRecordLength;
     *     BYTE FileRecordBuffer[1];
     * } *PNTFS_FILE_RECORD_OUTPUT_BUFFER
     * }
     */
    public static final AddressLayout PNTFS_FILE_RECORD_OUTPUT_BUFFER = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct {
     *     HANDLE FileHandle;
     *     LARGE_INTEGER StartingVcn;
     *     LARGE_INTEGER StartingLcn;
     *     DWORD ClusterCount;
     * } *PMOVE_FILE_DATA
     * }
     */
    public static final AddressLayout PMOVE_FILE_DATA = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct {
     *     HANDLE FileHandle;
     *     LARGE_INTEGER SourceFileRecord;
     *     LARGE_INTEGER TargetFileRecord;
     * } *PMOVE_FILE_RECORD_DATA
     * }
     */
    public static final AddressLayout PMOVE_FILE_RECORD_DATA = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _MOVE_FILE_DATA32 {
     *     UINT32 FileHandle;
     *     LARGE_INTEGER StartingVcn;
     *     LARGE_INTEGER StartingLcn;
     *     DWORD ClusterCount;
     * } *PMOVE_FILE_DATA32
     * }
     */
    public static final AddressLayout PMOVE_FILE_DATA32 = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct {
     *     DWORD Restart;
     *     SID Sid;
     * } *PFIND_BY_SID_DATA
     * }
     */
    public static final AddressLayout PFIND_BY_SID_DATA = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct {
     *     DWORD NextEntryOffset;
     *     DWORD FileIndex;
     *     DWORD FileNameLength;
     *     WCHAR FileName[1];
     * } *PFIND_BY_SID_OUTPUT
     * }
     */
    public static final AddressLayout PFIND_BY_SID_OUTPUT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct {
     *     DWORDLONG StartFileReferenceNumber;
     *     USN LowUsn;
     *     USN HighUsn;
     * } *PMFT_ENUM_DATA_V0
     * }
     */
    public static final AddressLayout PMFT_ENUM_DATA_V0 = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct {
     *     DWORDLONG StartFileReferenceNumber;
     *     USN LowUsn;
     *     USN HighUsn;
     *     WORD MinMajorVersion;
     *     WORD MaxMajorVersion;
     * } *PMFT_ENUM_DATA_V1
     * }
     */
    public static final AddressLayout PMFT_ENUM_DATA_V1 = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef MFT_ENUM_DATA_V1 *PMFT_ENUM_DATA
     * }
     */
    public static final AddressLayout PMFT_ENUM_DATA = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct {
     *     DWORDLONG MaximumSize;
     *     DWORDLONG AllocationDelta;
     * } *PCREATE_USN_JOURNAL_DATA
     * }
     */
    public static final AddressLayout PCREATE_USN_JOURNAL_DATA = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct {
     *     WORD MinMajorVersion;
     *     WORD MaxMajorVersion;
     * } *PREAD_FILE_USN_DATA
     * }
     */
    public static final AddressLayout PREAD_FILE_USN_DATA = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct {
     *     USN StartUsn;
     *     DWORD ReasonMask;
     *     DWORD ReturnOnlyOnClose;
     *     DWORDLONG Timeout;
     *     DWORDLONG BytesToWaitFor;
     *     DWORDLONG UsnJournalID;
     * } *PREAD_USN_JOURNAL_DATA_V0
     * }
     */
    public static final AddressLayout PREAD_USN_JOURNAL_DATA_V0 = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct {
     *     USN StartUsn;
     *     DWORD ReasonMask;
     *     DWORD ReturnOnlyOnClose;
     *     DWORDLONG Timeout;
     *     DWORDLONG BytesToWaitFor;
     *     DWORDLONG UsnJournalID;
     *     WORD MinMajorVersion;
     *     WORD MaxMajorVersion;
     * } *PREAD_USN_JOURNAL_DATA_V1
     * }
     */
    public static final AddressLayout PREAD_USN_JOURNAL_DATA_V1 = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef READ_USN_JOURNAL_DATA_V1 *PREAD_USN_JOURNAL_DATA
     * }
     */
    public static final AddressLayout PREAD_USN_JOURNAL_DATA = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct {
     *     DWORD Flags;
     *     DWORD Unused;
     *     DWORDLONG ChunkSize;
     *     LONGLONG FileSizeThreshold;
     * } *PUSN_TRACK_MODIFIED_RANGES
     * }
     */
    public static final AddressLayout PUSN_TRACK_MODIFIED_RANGES = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct {
     *     USN Usn;
     * } *PUSN_RANGE_TRACK_OUTPUT
     * }
     */
    public static final AddressLayout PUSN_RANGE_TRACK_OUTPUT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct {
     *     DWORD RecordLength;
     *     WORD MajorVersion;
     *     WORD MinorVersion;
     *     DWORDLONG FileReferenceNumber;
     *     DWORDLONG ParentFileReferenceNumber;
     *     USN Usn;
     *     LARGE_INTEGER TimeStamp;
     *     DWORD Reason;
     *     DWORD SourceInfo;
     *     DWORD SecurityId;
     *     DWORD FileAttributes;
     *     WORD FileNameLength;
     *     WORD FileNameOffset;
     *     WCHAR FileName[1];
     * } *PUSN_RECORD_V2
     * }
     */
    public static final AddressLayout PUSN_RECORD_V2 = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct {
     *     DWORD RecordLength;
     *     WORD MajorVersion;
     *     WORD MinorVersion;
     *     FILE_ID_128 FileReferenceNumber;
     *     FILE_ID_128 ParentFileReferenceNumber;
     *     USN Usn;
     *     LARGE_INTEGER TimeStamp;
     *     DWORD Reason;
     *     DWORD SourceInfo;
     *     DWORD SecurityId;
     *     DWORD FileAttributes;
     *     WORD FileNameLength;
     *     WORD FileNameOffset;
     *     WCHAR FileName[1];
     * } *PUSN_RECORD_V3
     * }
     */
    public static final AddressLayout PUSN_RECORD_V3 = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef USN_RECORD_V2 *PUSN_RECORD
     * }
     */
    public static final AddressLayout PUSN_RECORD = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct {
     *     DWORD RecordLength;
     *     WORD MajorVersion;
     *     WORD MinorVersion;
     * } *PUSN_RECORD_COMMON_HEADER
     * }
     */
    public static final AddressLayout PUSN_RECORD_COMMON_HEADER = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct {
     *     LONGLONG Offset;
     *     LONGLONG Length;
     * } *PUSN_RECORD_EXTENT
     * }
     */
    public static final AddressLayout PUSN_RECORD_EXTENT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct {
     *     USN_RECORD_COMMON_HEADER Header;
     *     FILE_ID_128 FileReferenceNumber;
     *     FILE_ID_128 ParentFileReferenceNumber;
     *     USN Usn;
     *     DWORD Reason;
     *     DWORD SourceInfo;
     *     DWORD RemainingExtents;
     *     WORD NumberOfExtents;
     *     WORD ExtentSize;
     *     USN_RECORD_EXTENT Extents[1];
     * } *PUSN_RECORD_V4
     * }
     */
    public static final AddressLayout PUSN_RECORD_V4 = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef union {
     *     USN_RECORD_COMMON_HEADER Header;
     *     USN_RECORD_V2 V2;
     *     USN_RECORD_V3 V3;
     *     USN_RECORD_V4 V4;
     * } *PUSN_RECORD_UNION
     * }
     */
    public static final AddressLayout PUSN_RECORD_UNION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct {
     *     DWORDLONG UsnJournalID;
     *     USN FirstUsn;
     *     USN NextUsn;
     *     USN LowestValidUsn;
     *     USN MaxUsn;
     *     DWORDLONG MaximumSize;
     *     DWORDLONG AllocationDelta;
     * } *PUSN_JOURNAL_DATA_V0
     * }
     */
    public static final AddressLayout PUSN_JOURNAL_DATA_V0 = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct {
     *     DWORDLONG UsnJournalID;
     *     USN FirstUsn;
     *     USN NextUsn;
     *     USN LowestValidUsn;
     *     USN MaxUsn;
     *     DWORDLONG MaximumSize;
     *     DWORDLONG AllocationDelta;
     *     WORD MinSupportedMajorVersion;
     *     WORD MaxSupportedMajorVersion;
     * } *PUSN_JOURNAL_DATA_V1
     * }
     */
    public static final AddressLayout PUSN_JOURNAL_DATA_V1 = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct {
     *     DWORDLONG UsnJournalID;
     *     USN FirstUsn;
     *     USN NextUsn;
     *     USN LowestValidUsn;
     *     USN MaxUsn;
     *     DWORDLONG MaximumSize;
     *     DWORDLONG AllocationDelta;
     *     WORD MinSupportedMajorVersion;
     *     WORD MaxSupportedMajorVersion;
     *     DWORD Flags;
     *     DWORDLONG RangeTrackChunkSize;
     *     LONGLONG RangeTrackFileSizeThreshold;
     * } *PUSN_JOURNAL_DATA_V2
     * }
     */
    public static final AddressLayout PUSN_JOURNAL_DATA_V2 = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef USN_JOURNAL_DATA_V1 *PUSN_JOURNAL_DATA
     * }
     */
    public static final AddressLayout PUSN_JOURNAL_DATA = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct {
     *     DWORDLONG UsnJournalID;
     *     DWORD DeleteFlags;
     * } *PDELETE_USN_JOURNAL_DATA
     * }
     */
    public static final AddressLayout PDELETE_USN_JOURNAL_DATA = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _MARK_HANDLE_INFO {
     *     union {
     *         DWORD UsnSourceInfo;
     *         DWORD CopyNumber;
     *     };
     *     HANDLE VolumeHandle;
     *     DWORD HandleInfo;
     * } *PMARK_HANDLE_INFO
     * }
     */
    public static final AddressLayout PMARK_HANDLE_INFO = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _MARK_HANDLE_INFO32 {
     *     union {
     *         DWORD UsnSourceInfo;
     *         DWORD CopyNumber;
     *     };
     *     UINT32 VolumeHandle;
     *     DWORD HandleInfo;
     * } *PMARK_HANDLE_INFO32
     * }
     */
    public static final AddressLayout PMARK_HANDLE_INFO32 = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct {
     *     ACCESS_MASK DesiredAccess;
     *     DWORD SecurityIds[1];
     * } *PBULK_SECURITY_TEST_DATA
     * }
     */
    public static final AddressLayout PBULK_SECURITY_TEST_DATA = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _FILE_PREFETCH {
     *     DWORD Type;
     *     DWORD Count;
     *     DWORDLONG Prefetch[1];
     * } *PFILE_PREFETCH
     * }
     */
    public static final AddressLayout PFILE_PREFETCH = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _FILE_PREFETCH_EX {
     *     DWORD Type;
     *     DWORD Count;
     *     PVOID Context;
     *     DWORDLONG Prefetch[1];
     * } *PFILE_PREFETCH_EX
     * }
     */
    public static final AddressLayout PFILE_PREFETCH_EX = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _FILESYSTEM_STATISTICS {
     *     WORD FileSystemType;
     *     WORD Version;
     *     DWORD SizeOfCompleteStructure;
     *     DWORD UserFileReads;
     *     DWORD UserFileReadBytes;
     *     DWORD UserDiskReads;
     *     DWORD UserFileWrites;
     *     DWORD UserFileWriteBytes;
     *     DWORD UserDiskWrites;
     *     DWORD MetaDataReads;
     *     DWORD MetaDataReadBytes;
     *     DWORD MetaDataDiskReads;
     *     DWORD MetaDataWrites;
     *     DWORD MetaDataWriteBytes;
     *     DWORD MetaDataDiskWrites;
     * } *PFILESYSTEM_STATISTICS
     * }
     */
    public static final AddressLayout PFILESYSTEM_STATISTICS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _FAT_STATISTICS {
     *     DWORD CreateHits;
     *     DWORD SuccessfulCreates;
     *     DWORD FailedCreates;
     *     DWORD NonCachedReads;
     *     DWORD NonCachedReadBytes;
     *     DWORD NonCachedWrites;
     *     DWORD NonCachedWriteBytes;
     *     DWORD NonCachedDiskReads;
     *     DWORD NonCachedDiskWrites;
     * } *PFAT_STATISTICS
     * }
     */
    public static final AddressLayout PFAT_STATISTICS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _EXFAT_STATISTICS {
     *     DWORD CreateHits;
     *     DWORD SuccessfulCreates;
     *     DWORD FailedCreates;
     *     DWORD NonCachedReads;
     *     DWORD NonCachedReadBytes;
     *     DWORD NonCachedWrites;
     *     DWORD NonCachedWriteBytes;
     *     DWORD NonCachedDiskReads;
     *     DWORD NonCachedDiskWrites;
     * } *PEXFAT_STATISTICS
     * }
     */
    public static final AddressLayout PEXFAT_STATISTICS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _NTFS_STATISTICS {
     *     DWORD LogFileFullExceptions;
     *     DWORD OtherExceptions;
     *     DWORD MftReads;
     *     DWORD MftReadBytes;
     *     DWORD MftWrites;
     *     DWORD MftWriteBytes;
     *     struct {
     *         WORD Write;
     *         WORD Create;
     *         WORD SetInfo;
     *         WORD Flush;
     *     } MftWritesUserLevel;
     *     WORD MftWritesFlushForLogFileFull;
     *     WORD MftWritesLazyWriter;
     *     WORD MftWritesUserRequest;
     *     DWORD Mft2Writes;
     *     DWORD Mft2WriteBytes;
     *     struct {
     *         WORD Write;
     *         WORD Create;
     *         WORD SetInfo;
     *         WORD Flush;
     *     } Mft2WritesUserLevel;
     *     WORD Mft2WritesFlushForLogFileFull;
     *     WORD Mft2WritesLazyWriter;
     *     WORD Mft2WritesUserRequest;
     *     DWORD RootIndexReads;
     *     DWORD RootIndexReadBytes;
     *     DWORD RootIndexWrites;
     *     DWORD RootIndexWriteBytes;
     *     DWORD BitmapReads;
     *     DWORD BitmapReadBytes;
     *     DWORD BitmapWrites;
     *     DWORD BitmapWriteBytes;
     *     WORD BitmapWritesFlushForLogFileFull;
     *     WORD BitmapWritesLazyWriter;
     *     WORD BitmapWritesUserRequest;
     *     struct {
     *         WORD Write;
     *         WORD Create;
     *         WORD SetInfo;
     *     } BitmapWritesUserLevel;
     *     DWORD MftBitmapReads;
     *     DWORD MftBitmapReadBytes;
     *     DWORD MftBitmapWrites;
     *     DWORD MftBitmapWriteBytes;
     *     WORD MftBitmapWritesFlushForLogFileFull;
     *     WORD MftBitmapWritesLazyWriter;
     *     WORD MftBitmapWritesUserRequest;
     *     struct {
     *         WORD Write;
     *         WORD Create;
     *         WORD SetInfo;
     *         WORD Flush;
     *     } MftBitmapWritesUserLevel;
     *     DWORD UserIndexReads;
     *     DWORD UserIndexReadBytes;
     *     DWORD UserIndexWrites;
     *     DWORD UserIndexWriteBytes;
     *     DWORD LogFileReads;
     *     DWORD LogFileReadBytes;
     *     DWORD LogFileWrites;
     *     DWORD LogFileWriteBytes;
     *     struct {
     *         DWORD Calls;
     *         DWORD Clusters;
     *         DWORD Hints;
     *         DWORD RunsReturned;
     *         DWORD HintsHonored;
     *         DWORD HintsClusters;
     *         DWORD Cache;
     *         DWORD CacheClusters;
     *         DWORD CacheMiss;
     *         DWORD CacheMissClusters;
     *     } Allocate;
     *     DWORD DiskResourcesExhausted;
     * } *PNTFS_STATISTICS
     * }
     */
    public static final AddressLayout PNTFS_STATISTICS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _FILESYSTEM_STATISTICS_EX {
     *     WORD FileSystemType;
     *     WORD Version;
     *     DWORD SizeOfCompleteStructure;
     *     DWORDLONG UserFileReads;
     *     DWORDLONG UserFileReadBytes;
     *     DWORDLONG UserDiskReads;
     *     DWORDLONG UserFileWrites;
     *     DWORDLONG UserFileWriteBytes;
     *     DWORDLONG UserDiskWrites;
     *     DWORDLONG MetaDataReads;
     *     DWORDLONG MetaDataReadBytes;
     *     DWORDLONG MetaDataDiskReads;
     *     DWORDLONG MetaDataWrites;
     *     DWORDLONG MetaDataWriteBytes;
     *     DWORDLONG MetaDataDiskWrites;
     * } *PFILESYSTEM_STATISTICS_EX
     * }
     */
    public static final AddressLayout PFILESYSTEM_STATISTICS_EX = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _NTFS_STATISTICS_EX {
     *     DWORD LogFileFullExceptions;
     *     DWORD OtherExceptions;
     *     DWORDLONG MftReads;
     *     DWORDLONG MftReadBytes;
     *     DWORDLONG MftWrites;
     *     DWORDLONG MftWriteBytes;
     *     struct {
     *         DWORD Write;
     *         DWORD Create;
     *         DWORD SetInfo;
     *         DWORD Flush;
     *     } MftWritesUserLevel;
     *     DWORD MftWritesFlushForLogFileFull;
     *     DWORD MftWritesLazyWriter;
     *     DWORD MftWritesUserRequest;
     *     DWORDLONG Mft2Writes;
     *     DWORDLONG Mft2WriteBytes;
     *     struct {
     *         DWORD Write;
     *         DWORD Create;
     *         DWORD SetInfo;
     *         DWORD Flush;
     *     } Mft2WritesUserLevel;
     *     DWORD Mft2WritesFlushForLogFileFull;
     *     DWORD Mft2WritesLazyWriter;
     *     DWORD Mft2WritesUserRequest;
     *     DWORDLONG RootIndexReads;
     *     DWORDLONG RootIndexReadBytes;
     *     DWORDLONG RootIndexWrites;
     *     DWORDLONG RootIndexWriteBytes;
     *     DWORDLONG BitmapReads;
     *     DWORDLONG BitmapReadBytes;
     *     DWORDLONG BitmapWrites;
     *     DWORDLONG BitmapWriteBytes;
     *     DWORD BitmapWritesFlushForLogFileFull;
     *     DWORD BitmapWritesLazyWriter;
     *     DWORD BitmapWritesUserRequest;
     *     struct {
     *         DWORD Write;
     *         DWORD Create;
     *         DWORD SetInfo;
     *         DWORD Flush;
     *     } BitmapWritesUserLevel;
     *     DWORDLONG MftBitmapReads;
     *     DWORDLONG MftBitmapReadBytes;
     *     DWORDLONG MftBitmapWrites;
     *     DWORDLONG MftBitmapWriteBytes;
     *     DWORD MftBitmapWritesFlushForLogFileFull;
     *     DWORD MftBitmapWritesLazyWriter;
     *     DWORD MftBitmapWritesUserRequest;
     *     struct {
     *         DWORD Write;
     *         DWORD Create;
     *         DWORD SetInfo;
     *         DWORD Flush;
     *     } MftBitmapWritesUserLevel;
     *     DWORDLONG UserIndexReads;
     *     DWORDLONG UserIndexReadBytes;
     *     DWORDLONG UserIndexWrites;
     *     DWORDLONG UserIndexWriteBytes;
     *     DWORDLONG LogFileReads;
     *     DWORDLONG LogFileReadBytes;
     *     DWORDLONG LogFileWrites;
     *     DWORDLONG LogFileWriteBytes;
     *     struct {
     *         DWORD Calls;
     *         DWORD RunsReturned;
     *         DWORD Hints;
     *         DWORD HintsHonored;
     *         DWORD Cache;
     *         DWORD CacheMiss;
     *         DWORDLONG Clusters;
     *         DWORDLONG HintsClusters;
     *         DWORDLONG CacheClusters;
     *         DWORDLONG CacheMissClusters;
     *     } Allocate;
     *     DWORD DiskResourcesExhausted;
     *     DWORDLONG VolumeTrimCount;
     *     DWORDLONG VolumeTrimTime;
     *     DWORDLONG VolumeTrimByteCount;
     *     DWORDLONG FileLevelTrimCount;
     *     DWORDLONG FileLevelTrimTime;
     *     DWORDLONG FileLevelTrimByteCount;
     *     DWORDLONG VolumeTrimSkippedCount;
     *     DWORDLONG VolumeTrimSkippedByteCount;
     *     DWORDLONG NtfsFillStatInfoFromMftRecordCalledCount;
     *     DWORDLONG NtfsFillStatInfoFromMftRecordBailedBecauseOfAttributeListCount;
     *     DWORDLONG NtfsFillStatInfoFromMftRecordBailedBecauseOfNonResReparsePointCount;
     * } *PNTFS_STATISTICS_EX
     * }
     */
    public static final AddressLayout PNTFS_STATISTICS_EX = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _FILE_OBJECTID_BUFFER {
     *     BYTE ObjectId[16];
     *     union {
     *         struct {
     *             BYTE BirthVolumeId[16];
     *             BYTE BirthObjectId[16];
     *             BYTE DomainId[16];
     *         };
     *         BYTE ExtendedInfo[48];
     *     };
     * } *PFILE_OBJECTID_BUFFER
     * }
     */
    public static final AddressLayout PFILE_OBJECTID_BUFFER = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _FILE_SET_SPARSE_BUFFER {
     *     BOOLEAN SetSparse;
     * } *PFILE_SET_SPARSE_BUFFER
     * }
     */
    public static final AddressLayout PFILE_SET_SPARSE_BUFFER = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _FILE_ZERO_DATA_INFORMATION {
     *     LARGE_INTEGER FileOffset;
     *     LARGE_INTEGER BeyondFinalZero;
     * } *PFILE_ZERO_DATA_INFORMATION
     * }
     */
    public static final AddressLayout PFILE_ZERO_DATA_INFORMATION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _FILE_ZERO_DATA_INFORMATION_EX {
     *     LARGE_INTEGER FileOffset;
     *     LARGE_INTEGER BeyondFinalZero;
     *     DWORD Flags;
     * } *PFILE_ZERO_DATA_INFORMATION_EX
     * }
     */
    public static final AddressLayout PFILE_ZERO_DATA_INFORMATION_EX = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _FILE_ALLOCATED_RANGE_BUFFER {
     *     LARGE_INTEGER FileOffset;
     *     LARGE_INTEGER Length;
     * } *PFILE_ALLOCATED_RANGE_BUFFER
     * }
     */
    public static final AddressLayout PFILE_ALLOCATED_RANGE_BUFFER = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _ENCRYPTION_BUFFER {
     *     DWORD EncryptionOperation;
     *     BYTE Private[1];
     * } *PENCRYPTION_BUFFER
     * }
     */
    public static final AddressLayout PENCRYPTION_BUFFER = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _DECRYPTION_STATUS_BUFFER {
     *     BOOLEAN NoEncryptedStreams;
     * } *PDECRYPTION_STATUS_BUFFER
     * }
     */
    public static final AddressLayout PDECRYPTION_STATUS_BUFFER = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _REQUEST_RAW_ENCRYPTED_DATA {
     *     LONGLONG FileOffset;
     *     DWORD Length;
     * } *PREQUEST_RAW_ENCRYPTED_DATA
     * }
     */
    public static final AddressLayout PREQUEST_RAW_ENCRYPTED_DATA = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _ENCRYPTED_DATA_INFO {
     *     DWORDLONG StartingFileOffset;
     *     DWORD OutputBufferOffset;
     *     DWORD BytesWithinFileSize;
     *     DWORD BytesWithinValidDataLength;
     *     WORD CompressionFormat;
     *     BYTE DataUnitShift;
     *     BYTE ChunkShift;
     *     BYTE ClusterShift;
     *     BYTE EncryptionFormat;
     *     WORD NumberOfDataBlocks;
     *     DWORD DataBlockSize[1];
     * } *PENCRYPTED_DATA_INFO
     * }
     */
    public static final AddressLayout PENCRYPTED_DATA_INFO = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _EXTENDED_ENCRYPTED_DATA_INFO {
     *     DWORD ExtendedCode;
     *     DWORD Length;
     *     DWORD Flags;
     *     DWORD Reserved;
     * } *PEXTENDED_ENCRYPTED_DATA_INFO
     * }
     */
    public static final AddressLayout PEXTENDED_ENCRYPTED_DATA_INFO = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _PLEX_READ_DATA_REQUEST {
     *     LARGE_INTEGER ByteOffset;
     *     DWORD ByteLength;
     *     DWORD PlexNumber;
     * } *PPLEX_READ_DATA_REQUEST
     * }
     */
    public static final AddressLayout PPLEX_READ_DATA_REQUEST = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SI_COPYFILE {
     *     DWORD SourceFileNameLength;
     *     DWORD DestinationFileNameLength;
     *     DWORD Flags;
     *     WCHAR FileNameBuffer[1];
     * } *PSI_COPYFILE
     * }
     */
    public static final AddressLayout PSI_COPYFILE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _FILE_MAKE_COMPATIBLE_BUFFER {
     *     BOOLEAN CloseDisc;
     * } *PFILE_MAKE_COMPATIBLE_BUFFER
     * }
     */
    public static final AddressLayout PFILE_MAKE_COMPATIBLE_BUFFER = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _FILE_SET_DEFECT_MGMT_BUFFER {
     *     BOOLEAN Disable;
     * } *PFILE_SET_DEFECT_MGMT_BUFFER
     * }
     */
    public static final AddressLayout PFILE_SET_DEFECT_MGMT_BUFFER = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _FILE_QUERY_SPARING_BUFFER {
     *     DWORD SparingUnitBytes;
     *     BOOLEAN SoftwareSparing;
     *     DWORD TotalSpareBlocks;
     *     DWORD FreeSpareBlocks;
     * } *PFILE_QUERY_SPARING_BUFFER
     * }
     */
    public static final AddressLayout PFILE_QUERY_SPARING_BUFFER = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _FILE_QUERY_ON_DISK_VOL_INFO_BUFFER {
     *     LARGE_INTEGER DirectoryCount;
     *     LARGE_INTEGER FileCount;
     *     WORD FsFormatMajVersion;
     *     WORD FsFormatMinVersion;
     *     WCHAR FsFormatName[12];
     *     LARGE_INTEGER FormatTime;
     *     LARGE_INTEGER LastUpdateTime;
     *     WCHAR CopyrightInfo[34];
     *     WCHAR AbstractInfo[34];
     *     WCHAR FormattingImplementationInfo[34];
     *     WCHAR LastModifyingImplementationInfo[34];
     * } *PFILE_QUERY_ON_DISK_VOL_INFO_BUFFER
     * }
     */
    public static final AddressLayout PFILE_QUERY_ON_DISK_VOL_INFO_BUFFER = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef DWORDLONG CLSN
     * }
     */
    public static final OfLong CLSN = winapi.C_LONG_LONG;
    /**
     * {@snippet lang=c :
     * typedef struct _FILE_INITIATE_REPAIR_OUTPUT_BUFFER {
     *     DWORDLONG Hint1;
     *     DWORDLONG Hint2;
     *     CLSN Clsn;
     *     DWORD Status;
     * } *PFILE_INITIATE_REPAIR_OUTPUT_BUFFER
     * }
     */
    public static final AddressLayout PFILE_INITIATE_REPAIR_OUTPUT_BUFFER = winapi.C_POINTER;
    private static final int ShrinkPrepare = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _SHRINK_VOLUME_REQUEST_TYPES.ShrinkPrepare = 1
     * }
     */
    public static int ShrinkPrepare() {
        return ShrinkPrepare;
    }
    private static final int ShrinkCommit = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _SHRINK_VOLUME_REQUEST_TYPES.ShrinkCommit = 2
     * }
     */
    public static int ShrinkCommit() {
        return ShrinkCommit;
    }
    private static final int ShrinkAbort = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _SHRINK_VOLUME_REQUEST_TYPES.ShrinkAbort = 3
     * }
     */
    public static int ShrinkAbort() {
        return ShrinkAbort;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _SHRINK_VOLUME_REQUEST_TYPES {
     *     ShrinkPrepare = 1,
     *     ShrinkCommit,
     *     ShrinkAbort
     * } *PSHRINK_VOLUME_REQUEST_TYPES
     * }
     */
    public static final AddressLayout PSHRINK_VOLUME_REQUEST_TYPES = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SHRINK_VOLUME_INFORMATION {
     *     SHRINK_VOLUME_REQUEST_TYPES ShrinkRequestType;
     *     DWORDLONG Flags;
     *     LONGLONG NewNumberOfSectors;
     * } *PSHRINK_VOLUME_INFORMATION
     * }
     */
    public static final AddressLayout PSHRINK_VOLUME_INFORMATION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _TXFS_MODIFY_RM {
     *     DWORD Flags;
     *     DWORD LogContainerCountMax;
     *     DWORD LogContainerCountMin;
     *     DWORD LogContainerCount;
     *     DWORD LogGrowthIncrement;
     *     DWORD LogAutoShrinkPercentage;
     *     DWORDLONG Reserved;
     *     WORD LoggingMode;
     * } *PTXFS_MODIFY_RM
     * }
     */
    public static final AddressLayout PTXFS_MODIFY_RM = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _TXFS_QUERY_RM_INFORMATION {
     *     DWORD BytesRequired;
     *     DWORDLONG TailLsn;
     *     DWORDLONG CurrentLsn;
     *     DWORDLONG ArchiveTailLsn;
     *     DWORDLONG LogContainerSize;
     *     LARGE_INTEGER HighestVirtualClock;
     *     DWORD LogContainerCount;
     *     DWORD LogContainerCountMax;
     *     DWORD LogContainerCountMin;
     *     DWORD LogGrowthIncrement;
     *     DWORD LogAutoShrinkPercentage;
     *     DWORD Flags;
     *     WORD LoggingMode;
     *     WORD Reserved;
     *     DWORD RmState;
     *     DWORDLONG LogCapacity;
     *     DWORDLONG LogFree;
     *     DWORDLONG TopsSize;
     *     DWORDLONG TopsUsed;
     *     DWORDLONG TransactionCount;
     *     DWORDLONG OnePCCount;
     *     DWORDLONG TwoPCCount;
     *     DWORDLONG NumberLogFileFull;
     *     DWORDLONG OldestTransactionAge;
     *     GUID RMName;
     *     DWORD TmLogPathOffset;
     * } *PTXFS_QUERY_RM_INFORMATION
     * }
     */
    public static final AddressLayout PTXFS_QUERY_RM_INFORMATION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _TXFS_ROLLFORWARD_REDO_INFORMATION {
     *     LARGE_INTEGER LastVirtualClock;
     *     DWORDLONG LastRedoLsn;
     *     DWORDLONG HighestRecoveryLsn;
     *     DWORD Flags;
     * } *PTXFS_ROLLFORWARD_REDO_INFORMATION
     * }
     */
    public static final AddressLayout PTXFS_ROLLFORWARD_REDO_INFORMATION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _TXFS_START_RM_INFORMATION {
     *     DWORD Flags;
     *     DWORDLONG LogContainerSize;
     *     DWORD LogContainerCountMin;
     *     DWORD LogContainerCountMax;
     *     DWORD LogGrowthIncrement;
     *     DWORD LogAutoShrinkPercentage;
     *     DWORD TmLogPathOffset;
     *     WORD TmLogPathLength;
     *     WORD LoggingMode;
     *     WORD LogPathLength;
     *     WORD Reserved;
     *     WCHAR LogPath[1];
     * } *PTXFS_START_RM_INFORMATION
     * }
     */
    public static final AddressLayout PTXFS_START_RM_INFORMATION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _TXFS_GET_METADATA_INFO_OUT {
     *     struct {
     *         LONGLONG LowPart;
     *         LONGLONG HighPart;
     *     } TxfFileId;
     *     GUID LockingTransaction;
     *     DWORDLONG LastLsn;
     *     DWORD TransactionState;
     * } *PTXFS_GET_METADATA_INFO_OUT
     * }
     */
    public static final AddressLayout PTXFS_GET_METADATA_INFO_OUT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY {
     *     DWORDLONG Offset;
     *     DWORD NameFlags;
     *     LONGLONG FileId;
     *     DWORD Reserved1;
     *     DWORD Reserved2;
     *     LONGLONG Reserved3;
     *     WCHAR FileName[1];
     * } *PTXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY
     * }
     */
    public static final AddressLayout PTXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _TXFS_LIST_TRANSACTION_LOCKED_FILES {
     *     GUID KtmTransaction;
     *     DWORDLONG NumberOfFiles;
     *     DWORDLONG BufferSizeRequired;
     *     DWORDLONG Offset;
     * } *PTXFS_LIST_TRANSACTION_LOCKED_FILES
     * }
     */
    public static final AddressLayout PTXFS_LIST_TRANSACTION_LOCKED_FILES = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _TXFS_LIST_TRANSACTIONS_ENTRY {
     *     GUID TransactionId;
     *     DWORD TransactionState;
     *     DWORD Reserved1;
     *     DWORD Reserved2;
     *     LONGLONG Reserved3;
     * } *PTXFS_LIST_TRANSACTIONS_ENTRY
     * }
     */
    public static final AddressLayout PTXFS_LIST_TRANSACTIONS_ENTRY = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _TXFS_LIST_TRANSACTIONS {
     *     DWORDLONG NumberOfTransactions;
     *     DWORDLONG BufferSizeRequired;
     * } *PTXFS_LIST_TRANSACTIONS
     * }
     */
    public static final AddressLayout PTXFS_LIST_TRANSACTIONS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _TXFS_READ_BACKUP_INFORMATION_OUT {
     *     union {
     *         DWORD BufferLength;
     *         BYTE Buffer[1];
     *     };
     * } *PTXFS_READ_BACKUP_INFORMATION_OUT
     * }
     */
    public static final AddressLayout PTXFS_READ_BACKUP_INFORMATION_OUT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _TXFS_WRITE_BACKUP_INFORMATION {
     *     BYTE Buffer[1];
     * } *PTXFS_WRITE_BACKUP_INFORMATION
     * }
     */
    public static final AddressLayout PTXFS_WRITE_BACKUP_INFORMATION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _TXFS_GET_TRANSACTED_VERSION {
     *     DWORD ThisBaseVersion;
     *     DWORD LatestVersion;
     *     WORD ThisMiniVersion;
     *     WORD FirstMiniVersion;
     *     WORD LatestMiniVersion;
     * } *PTXFS_GET_TRANSACTED_VERSION
     * }
     */
    public static final AddressLayout PTXFS_GET_TRANSACTED_VERSION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _TXFS_SAVEPOINT_INFORMATION {
     *     HANDLE KtmTransaction;
     *     DWORD ActionCode;
     *     DWORD SavepointId;
     * } *PTXFS_SAVEPOINT_INFORMATION
     * }
     */
    public static final AddressLayout PTXFS_SAVEPOINT_INFORMATION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _TXFS_CREATE_MINIVERSION_INFO {
     *     WORD StructureVersion;
     *     WORD StructureLength;
     *     DWORD BaseVersion;
     *     WORD MiniVersion;
     * } *PTXFS_CREATE_MINIVERSION_INFO
     * }
     */
    public static final AddressLayout PTXFS_CREATE_MINIVERSION_INFO = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _TXFS_TRANSACTION_ACTIVE_INFO {
     *     BOOLEAN TransactionsActiveAtSnapshot;
     * } *PTXFS_TRANSACTION_ACTIVE_INFO
     * }
     */
    public static final AddressLayout PTXFS_TRANSACTION_ACTIVE_INFO = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _BOOT_AREA_INFO {
     *     DWORD BootSectorCount;
     *     struct {
     *         LARGE_INTEGER Offset;
     *     } BootSectors[2];
     * } *PBOOT_AREA_INFO
     * }
     */
    public static final AddressLayout PBOOT_AREA_INFO = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _RETRIEVAL_POINTER_BASE {
     *     LARGE_INTEGER FileAreaOffset;
     * } *PRETRIEVAL_POINTER_BASE
     * }
     */
    public static final AddressLayout PRETRIEVAL_POINTER_BASE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _FILE_FS_PERSISTENT_VOLUME_INFORMATION {
     *     DWORD VolumeFlags;
     *     DWORD FlagMask;
     *     DWORD Version;
     *     DWORD Reserved;
     * } *PFILE_FS_PERSISTENT_VOLUME_INFORMATION
     * }
     */
    public static final AddressLayout PFILE_FS_PERSISTENT_VOLUME_INFORMATION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _FILE_SYSTEM_RECOGNITION_INFORMATION {
     *     CHAR FileSystem[9];
     * } *PFILE_SYSTEM_RECOGNITION_INFORMATION
     * }
     */
    public static final AddressLayout PFILE_SYSTEM_RECOGNITION_INFORMATION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _REQUEST_OPLOCK_INPUT_BUFFER {
     *     WORD StructureVersion;
     *     WORD StructureLength;
     *     DWORD RequestedOplockLevel;
     *     DWORD Flags;
     * } *PREQUEST_OPLOCK_INPUT_BUFFER
     * }
     */
    public static final AddressLayout PREQUEST_OPLOCK_INPUT_BUFFER = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _REQUEST_OPLOCK_OUTPUT_BUFFER {
     *     WORD StructureVersion;
     *     WORD StructureLength;
     *     DWORD OriginalOplockLevel;
     *     DWORD NewOplockLevel;
     *     DWORD Flags;
     *     ACCESS_MASK AccessMode;
     *     WORD ShareMode;
     * } *PREQUEST_OPLOCK_OUTPUT_BUFFER
     * }
     */
    public static final AddressLayout PREQUEST_OPLOCK_OUTPUT_BUFFER = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _VIRTUAL_STORAGE_TYPE {
     *     DWORD DeviceId;
     *     GUID VendorId;
     * } *PVIRTUAL_STORAGE_TYPE
     * }
     */
    public static final AddressLayout PVIRTUAL_STORAGE_TYPE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_QUERY_DEPENDENT_VOLUME_REQUEST {
     *     DWORD RequestLevel;
     *     DWORD RequestFlags;
     * } *PSTORAGE_QUERY_DEPENDENT_VOLUME_REQUEST
     * }
     */
    public static final AddressLayout PSTORAGE_QUERY_DEPENDENT_VOLUME_REQUEST = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_QUERY_DEPENDENT_VOLUME_LEV1_ENTRY {
     *     DWORD EntryLength;
     *     DWORD DependencyTypeFlags;
     *     DWORD ProviderSpecificFlags;
     *     VIRTUAL_STORAGE_TYPE VirtualStorageType;
     * } *PSTORAGE_QUERY_DEPENDENT_VOLUME_LEV1_ENTRY
     * }
     */
    public static final AddressLayout PSTORAGE_QUERY_DEPENDENT_VOLUME_LEV1_ENTRY = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_QUERY_DEPENDENT_VOLUME_LEV2_ENTRY {
     *     DWORD EntryLength;
     *     DWORD DependencyTypeFlags;
     *     DWORD ProviderSpecificFlags;
     *     VIRTUAL_STORAGE_TYPE VirtualStorageType;
     *     DWORD AncestorLevel;
     *     DWORD HostVolumeNameOffset;
     *     DWORD HostVolumeNameSize;
     *     DWORD DependentVolumeNameOffset;
     *     DWORD DependentVolumeNameSize;
     *     DWORD RelativePathOffset;
     *     DWORD RelativePathSize;
     *     DWORD DependentDeviceNameOffset;
     *     DWORD DependentDeviceNameSize;
     * } *PSTORAGE_QUERY_DEPENDENT_VOLUME_LEV2_ENTRY
     * }
     */
    public static final AddressLayout PSTORAGE_QUERY_DEPENDENT_VOLUME_LEV2_ENTRY = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _STORAGE_QUERY_DEPENDENT_VOLUME_RESPONSE {
     *     DWORD ResponseLevel;
     *     DWORD NumberEntries;
     *     union {
     *         STORAGE_QUERY_DEPENDENT_VOLUME_LEV1_ENTRY Lev1Depends[];
     *         STORAGE_QUERY_DEPENDENT_VOLUME_LEV2_ENTRY Lev2Depends[];
     *     };
     * } *PSTORAGE_QUERY_DEPENDENT_VOLUME_RESPONSE
     * }
     */
    public static final AddressLayout PSTORAGE_QUERY_DEPENDENT_VOLUME_RESPONSE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SD_CHANGE_MACHINE_SID_INPUT {
     *     WORD CurrentMachineSIDOffset;
     *     WORD CurrentMachineSIDLength;
     *     WORD NewMachineSIDOffset;
     *     WORD NewMachineSIDLength;
     * } *PSD_CHANGE_MACHINE_SID_INPUT
     * }
     */
    public static final AddressLayout PSD_CHANGE_MACHINE_SID_INPUT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SD_CHANGE_MACHINE_SID_OUTPUT {
     *     DWORDLONG NumSDChangedSuccess;
     *     DWORDLONG NumSDChangedFail;
     *     DWORDLONG NumSDUnused;
     *     DWORDLONG NumSDTotal;
     *     DWORDLONG NumMftSDChangedSuccess;
     *     DWORDLONG NumMftSDChangedFail;
     *     DWORDLONG NumMftSDTotal;
     * } *PSD_CHANGE_MACHINE_SID_OUTPUT
     * }
     */
    public static final AddressLayout PSD_CHANGE_MACHINE_SID_OUTPUT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SD_QUERY_STATS_INPUT {
     *     DWORD Reserved;
     * } *PSD_QUERY_STATS_INPUT
     * }
     */
    public static final AddressLayout PSD_QUERY_STATS_INPUT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SD_QUERY_STATS_OUTPUT {
     *     DWORDLONG SdsStreamSize;
     *     DWORDLONG SdsAllocationSize;
     *     DWORDLONG SiiStreamSize;
     *     DWORDLONG SiiAllocationSize;
     *     DWORDLONG SdhStreamSize;
     *     DWORDLONG SdhAllocationSize;
     *     DWORDLONG NumSDTotal;
     *     DWORDLONG NumSDUnused;
     * } *PSD_QUERY_STATS_OUTPUT
     * }
     */
    public static final AddressLayout PSD_QUERY_STATS_OUTPUT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SD_ENUM_SDS_INPUT {
     *     DWORDLONG StartingOffset;
     *     DWORDLONG MaxSDEntriesToReturn;
     * } *PSD_ENUM_SDS_INPUT
     * }
     */
    public static final AddressLayout PSD_ENUM_SDS_INPUT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SD_ENUM_SDS_ENTRY {
     *     DWORD Hash;
     *     DWORD SecurityId;
     *     DWORDLONG Offset;
     *     DWORD Length;
     *     BYTE Descriptor[1];
     * } *PSD_ENUM_SDS_ENTRY
     * }
     */
    public static final AddressLayout PSD_ENUM_SDS_ENTRY = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SD_ENUM_SDS_OUTPUT {
     *     DWORDLONG NextOffset;
     *     DWORDLONG NumSDEntriesReturned;
     *     DWORDLONG NumSDBytesReturned;
     *     SD_ENUM_SDS_ENTRY SDEntry[1];
     * } *PSD_ENUM_SDS_OUTPUT
     * }
     */
    public static final AddressLayout PSD_ENUM_SDS_OUTPUT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SD_GLOBAL_CHANGE_INPUT {
     *     DWORD Flags;
     *     DWORD ChangeType;
     *     union {
     *         SD_CHANGE_MACHINE_SID_INPUT SdChange;
     *         SD_QUERY_STATS_INPUT SdQueryStats;
     *         SD_ENUM_SDS_INPUT SdEnumSds;
     *     };
     * } *PSD_GLOBAL_CHANGE_INPUT
     * }
     */
    public static final AddressLayout PSD_GLOBAL_CHANGE_INPUT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SD_GLOBAL_CHANGE_OUTPUT {
     *     DWORD Flags;
     *     DWORD ChangeType;
     *     union {
     *         SD_CHANGE_MACHINE_SID_OUTPUT SdChange;
     *         SD_QUERY_STATS_OUTPUT SdQueryStats;
     *         SD_ENUM_SDS_OUTPUT SdEnumSds;
     *     };
     * } *PSD_GLOBAL_CHANGE_OUTPUT
     * }
     */
    public static final AddressLayout PSD_GLOBAL_CHANGE_OUTPUT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _LOOKUP_STREAM_FROM_CLUSTER_INPUT {
     *     DWORD Flags;
     *     DWORD NumberOfClusters;
     *     LARGE_INTEGER Cluster[1];
     * } *PLOOKUP_STREAM_FROM_CLUSTER_INPUT
     * }
     */
    public static final AddressLayout PLOOKUP_STREAM_FROM_CLUSTER_INPUT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _LOOKUP_STREAM_FROM_CLUSTER_OUTPUT {
     *     DWORD Offset;
     *     DWORD NumberOfMatches;
     *     DWORD BufferSizeRequired;
     * } *PLOOKUP_STREAM_FROM_CLUSTER_OUTPUT
     * }
     */
    public static final AddressLayout PLOOKUP_STREAM_FROM_CLUSTER_OUTPUT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _LOOKUP_STREAM_FROM_CLUSTER_ENTRY {
     *     DWORD OffsetToNext;
     *     DWORD Flags;
     *     LARGE_INTEGER Reserved;
     *     LARGE_INTEGER Cluster;
     *     WCHAR FileName[1];
     * } *PLOOKUP_STREAM_FROM_CLUSTER_ENTRY
     * }
     */
    public static final AddressLayout PLOOKUP_STREAM_FROM_CLUSTER_ENTRY = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _FILE_TYPE_NOTIFICATION_INPUT {
     *     DWORD Flags;
     *     DWORD NumFileTypeIDs;
     *     GUID FileTypeID[1];
     * } *PFILE_TYPE_NOTIFICATION_INPUT
     * }
     */
    public static final AddressLayout PFILE_TYPE_NOTIFICATION_INPUT = winapi.C_POINTER;

    private static class FILE_TYPE_NOTIFICATION_GUID_PAGE_FILE$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("FILE_TYPE_NOTIFICATION_GUID_PAGE_FILE").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID FILE_TYPE_NOTIFICATION_GUID_PAGE_FILE
     * }
     */
    public static GroupLayout FILE_TYPE_NOTIFICATION_GUID_PAGE_FILE$layout() {
        return FILE_TYPE_NOTIFICATION_GUID_PAGE_FILE$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID FILE_TYPE_NOTIFICATION_GUID_PAGE_FILE
     * }
     */
    public static MemorySegment FILE_TYPE_NOTIFICATION_GUID_PAGE_FILE() {
        return FILE_TYPE_NOTIFICATION_GUID_PAGE_FILE$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID FILE_TYPE_NOTIFICATION_GUID_PAGE_FILE
     * }
     */
    public static void FILE_TYPE_NOTIFICATION_GUID_PAGE_FILE(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, FILE_TYPE_NOTIFICATION_GUID_PAGE_FILE$constants.SEGMENT, 0L, FILE_TYPE_NOTIFICATION_GUID_PAGE_FILE$constants.LAYOUT.byteSize());
    }

    private static class FILE_TYPE_NOTIFICATION_GUID_HIBERNATION_FILE$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("FILE_TYPE_NOTIFICATION_GUID_HIBERNATION_FILE").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID FILE_TYPE_NOTIFICATION_GUID_HIBERNATION_FILE
     * }
     */
    public static GroupLayout FILE_TYPE_NOTIFICATION_GUID_HIBERNATION_FILE$layout() {
        return FILE_TYPE_NOTIFICATION_GUID_HIBERNATION_FILE$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID FILE_TYPE_NOTIFICATION_GUID_HIBERNATION_FILE
     * }
     */
    public static MemorySegment FILE_TYPE_NOTIFICATION_GUID_HIBERNATION_FILE() {
        return FILE_TYPE_NOTIFICATION_GUID_HIBERNATION_FILE$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID FILE_TYPE_NOTIFICATION_GUID_HIBERNATION_FILE
     * }
     */
    public static void FILE_TYPE_NOTIFICATION_GUID_HIBERNATION_FILE(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, FILE_TYPE_NOTIFICATION_GUID_HIBERNATION_FILE$constants.SEGMENT, 0L, FILE_TYPE_NOTIFICATION_GUID_HIBERNATION_FILE$constants.LAYOUT.byteSize());
    }

    private static class FILE_TYPE_NOTIFICATION_GUID_CRASHDUMP_FILE$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("FILE_TYPE_NOTIFICATION_GUID_CRASHDUMP_FILE").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID FILE_TYPE_NOTIFICATION_GUID_CRASHDUMP_FILE
     * }
     */
    public static GroupLayout FILE_TYPE_NOTIFICATION_GUID_CRASHDUMP_FILE$layout() {
        return FILE_TYPE_NOTIFICATION_GUID_CRASHDUMP_FILE$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID FILE_TYPE_NOTIFICATION_GUID_CRASHDUMP_FILE
     * }
     */
    public static MemorySegment FILE_TYPE_NOTIFICATION_GUID_CRASHDUMP_FILE() {
        return FILE_TYPE_NOTIFICATION_GUID_CRASHDUMP_FILE$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID FILE_TYPE_NOTIFICATION_GUID_CRASHDUMP_FILE
     * }
     */
    public static void FILE_TYPE_NOTIFICATION_GUID_CRASHDUMP_FILE(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, FILE_TYPE_NOTIFICATION_GUID_CRASHDUMP_FILE$constants.SEGMENT, 0L, FILE_TYPE_NOTIFICATION_GUID_CRASHDUMP_FILE$constants.LAYOUT.byteSize());
    }
    /**
     * {@snippet lang=c :
     * typedef struct _CSV_MGMT_LOCK {
     *     DWORD Flags;
     * } *PCSV_MGMT_LOCK
     * }
     */
    public static final AddressLayout PCSV_MGMT_LOCK = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _CSV_NAMESPACE_INFO {
     *     DWORD Version;
     *     DWORD DeviceNumber;
     *     LARGE_INTEGER StartingOffset;
     *     DWORD SectorSize;
     * } *PCSV_NAMESPACE_INFO
     * }
     */
    public static final AddressLayout PCSV_NAMESPACE_INFO = winapi.C_POINTER;
    private static final int CsvControlStartRedirectFile = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _CSV_CONTROL_OP.CsvControlStartRedirectFile = 2
     * }
     */
    public static int CsvControlStartRedirectFile() {
        return CsvControlStartRedirectFile;
    }
    private static final int CsvControlStopRedirectFile = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _CSV_CONTROL_OP.CsvControlStopRedirectFile = 3
     * }
     */
    public static int CsvControlStopRedirectFile() {
        return CsvControlStopRedirectFile;
    }
    private static final int CsvControlQueryRedirectState = (int)4L;
    /**
     * {@snippet lang=c :
     * enum _CSV_CONTROL_OP.CsvControlQueryRedirectState = 4
     * }
     */
    public static int CsvControlQueryRedirectState() {
        return CsvControlQueryRedirectState;
    }
    private static final int CsvControlQueryFileRevision = (int)6L;
    /**
     * {@snippet lang=c :
     * enum _CSV_CONTROL_OP.CsvControlQueryFileRevision = 6
     * }
     */
    public static int CsvControlQueryFileRevision() {
        return CsvControlQueryFileRevision;
    }
    private static final int CsvControlQueryMdsPath = (int)8L;
    /**
     * {@snippet lang=c :
     * enum _CSV_CONTROL_OP.CsvControlQueryMdsPath = 8
     * }
     */
    public static int CsvControlQueryMdsPath() {
        return CsvControlQueryMdsPath;
    }
    private static final int CsvControlQueryFileRevisionFileId128 = (int)9L;
    /**
     * {@snippet lang=c :
     * enum _CSV_CONTROL_OP.CsvControlQueryFileRevisionFileId128 = 9
     * }
     */
    public static int CsvControlQueryFileRevisionFileId128() {
        return CsvControlQueryFileRevisionFileId128;
    }
    private static final int CsvControlQueryVolumeRedirectState = (int)10L;
    /**
     * {@snippet lang=c :
     * enum _CSV_CONTROL_OP.CsvControlQueryVolumeRedirectState = 10
     * }
     */
    public static int CsvControlQueryVolumeRedirectState() {
        return CsvControlQueryVolumeRedirectState;
    }
    private static final int CsvControlEnableUSNRangeModificationTracking = (int)13L;
    /**
     * {@snippet lang=c :
     * enum _CSV_CONTROL_OP.CsvControlEnableUSNRangeModificationTracking = 13
     * }
     */
    public static int CsvControlEnableUSNRangeModificationTracking() {
        return CsvControlEnableUSNRangeModificationTracking;
    }
    private static final int CsvControlMarkHandleLocalVolumeMount = (int)14L;
    /**
     * {@snippet lang=c :
     * enum _CSV_CONTROL_OP.CsvControlMarkHandleLocalVolumeMount = 14
     * }
     */
    public static int CsvControlMarkHandleLocalVolumeMount() {
        return CsvControlMarkHandleLocalVolumeMount;
    }
    private static final int CsvControlUnmarkHandleLocalVolumeMount = (int)15L;
    /**
     * {@snippet lang=c :
     * enum _CSV_CONTROL_OP.CsvControlUnmarkHandleLocalVolumeMount = 15
     * }
     */
    public static int CsvControlUnmarkHandleLocalVolumeMount() {
        return CsvControlUnmarkHandleLocalVolumeMount;
    }
    private static final int CsvControlGetCsvFsMdsPathV2 = (int)18L;
    /**
     * {@snippet lang=c :
     * enum _CSV_CONTROL_OP.CsvControlGetCsvFsMdsPathV2 = 18
     * }
     */
    public static int CsvControlGetCsvFsMdsPathV2() {
        return CsvControlGetCsvFsMdsPathV2;
    }
    private static final int CsvControlDisableCaching = (int)19L;
    /**
     * {@snippet lang=c :
     * enum _CSV_CONTROL_OP.CsvControlDisableCaching = 19
     * }
     */
    public static int CsvControlDisableCaching() {
        return CsvControlDisableCaching;
    }
    private static final int CsvControlEnableCaching = (int)20L;
    /**
     * {@snippet lang=c :
     * enum _CSV_CONTROL_OP.CsvControlEnableCaching = 20
     * }
     */
    public static int CsvControlEnableCaching() {
        return CsvControlEnableCaching;
    }
    private static final int CsvControlStartForceDFO = (int)21L;
    /**
     * {@snippet lang=c :
     * enum _CSV_CONTROL_OP.CsvControlStartForceDFO = 21
     * }
     */
    public static int CsvControlStartForceDFO() {
        return CsvControlStartForceDFO;
    }
    private static final int CsvControlStopForceDFO = (int)22L;
    /**
     * {@snippet lang=c :
     * enum _CSV_CONTROL_OP.CsvControlStopForceDFO = 22
     * }
     */
    public static int CsvControlStopForceDFO() {
        return CsvControlStopForceDFO;
    }
    private static final int CsvControlQueryMdsPathNoPause = (int)23L;
    /**
     * {@snippet lang=c :
     * enum _CSV_CONTROL_OP.CsvControlQueryMdsPathNoPause = 23
     * }
     */
    public static int CsvControlQueryMdsPathNoPause() {
        return CsvControlQueryMdsPathNoPause;
    }
    private static final int CsvControlSetVolumeId = (int)24L;
    /**
     * {@snippet lang=c :
     * enum _CSV_CONTROL_OP.CsvControlSetVolumeId = 24
     * }
     */
    public static int CsvControlSetVolumeId() {
        return CsvControlSetVolumeId;
    }
    private static final int CsvControlQueryVolumeId = (int)25L;
    /**
     * {@snippet lang=c :
     * enum _CSV_CONTROL_OP.CsvControlQueryVolumeId = 25
     * }
     */
    public static int CsvControlQueryVolumeId() {
        return CsvControlQueryVolumeId;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _CSV_CONTROL_OP {
     *     CsvControlStartRedirectFile = 2,
     *     CsvControlStopRedirectFile = 3,
     *     CsvControlQueryRedirectState = 4,
     *     CsvControlQueryFileRevision = 6,
     *     CsvControlQueryMdsPath = 8,
     *     CsvControlQueryFileRevisionFileId128 = 9,
     *     CsvControlQueryVolumeRedirectState = 10,
     *     CsvControlEnableUSNRangeModificationTracking = 13,
     *     CsvControlMarkHandleLocalVolumeMount = 14,
     *     CsvControlUnmarkHandleLocalVolumeMount = 15,
     *     CsvControlGetCsvFsMdsPathV2 = 18,
     *     CsvControlDisableCaching = 19,
     *     CsvControlEnableCaching = 20,
     *     CsvControlStartForceDFO = 21,
     *     CsvControlStopForceDFO = 22,
     *     CsvControlQueryMdsPathNoPause = 23,
     *     CsvControlSetVolumeId = 24,
     *     CsvControlQueryVolumeId = 25
     * } *PCSV_CONTROL_OP
     * }
     */
    public static final AddressLayout PCSV_CONTROL_OP = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _CSV_CONTROL_PARAM {
     *     CSV_CONTROL_OP Operation;
     *     LONGLONG Unused;
     * } *PCSV_CONTROL_PARAM
     * }
     */
    public static final AddressLayout PCSV_CONTROL_PARAM = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _CSV_QUERY_REDIRECT_STATE {
     *     DWORD MdsNodeId;
     *     DWORD DsNodeId;
     *     BOOLEAN FileRedirected;
     * } *PCSV_QUERY_REDIRECT_STATE
     * }
     */
    public static final AddressLayout PCSV_QUERY_REDIRECT_STATE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _CSV_QUERY_FILE_REVISION {
     *     LONGLONG FileId;
     *     LONGLONG FileRevision[3];
     * } *PCSV_QUERY_FILE_REVISION
     * }
     */
    public static final AddressLayout PCSV_QUERY_FILE_REVISION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _CSV_QUERY_FILE_REVISION_FILE_ID_128 {
     *     FILE_ID_128 FileId;
     *     LONGLONG FileRevision[3];
     * } *PCSV_QUERY_FILE_REVISION_FILE_ID_128
     * }
     */
    public static final AddressLayout PCSV_QUERY_FILE_REVISION_FILE_ID_128 = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _CSV_QUERY_MDS_PATH {
     *     DWORD MdsNodeId;
     *     DWORD DsNodeId;
     *     DWORD PathLength;
     *     WCHAR Path[1];
     * } *PCSV_QUERY_MDS_PATH
     * }
     */
    public static final AddressLayout PCSV_QUERY_MDS_PATH = winapi.C_POINTER;
    private static final int CsvFsDiskConnectivityNone = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _CSVFS_DISK_CONNECTIVITY.CsvFsDiskConnectivityNone = 0
     * }
     */
    public static int CsvFsDiskConnectivityNone() {
        return CsvFsDiskConnectivityNone;
    }
    private static final int CsvFsDiskConnectivityMdsNodeOnly = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _CSVFS_DISK_CONNECTIVITY.CsvFsDiskConnectivityMdsNodeOnly = 1
     * }
     */
    public static int CsvFsDiskConnectivityMdsNodeOnly() {
        return CsvFsDiskConnectivityMdsNodeOnly;
    }
    private static final int CsvFsDiskConnectivitySubsetOfNodes = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _CSVFS_DISK_CONNECTIVITY.CsvFsDiskConnectivitySubsetOfNodes = 2
     * }
     */
    public static int CsvFsDiskConnectivitySubsetOfNodes() {
        return CsvFsDiskConnectivitySubsetOfNodes;
    }
    private static final int CsvFsDiskConnectivityAllNodes = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _CSVFS_DISK_CONNECTIVITY.CsvFsDiskConnectivityAllNodes = 3
     * }
     */
    public static int CsvFsDiskConnectivityAllNodes() {
        return CsvFsDiskConnectivityAllNodes;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _CSVFS_DISK_CONNECTIVITY {
     *     CsvFsDiskConnectivityNone = 0,
     *     CsvFsDiskConnectivityMdsNodeOnly = 1,
     *     CsvFsDiskConnectivitySubsetOfNodes = 2,
     *     CsvFsDiskConnectivityAllNodes = 3
     * } *PCSVFS_DISK_CONNECTIVITY
     * }
     */
    public static final AddressLayout PCSVFS_DISK_CONNECTIVITY = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _CSV_QUERY_VOLUME_REDIRECT_STATE {
     *     DWORD MdsNodeId;
     *     DWORD DsNodeId;
     *     BOOLEAN IsDiskConnected;
     *     BOOLEAN ClusterEnableDirectIo;
     *     CSVFS_DISK_CONNECTIVITY DiskConnectivity;
     * } *PCSV_QUERY_VOLUME_REDIRECT_STATE
     * }
     */
    public static final AddressLayout PCSV_QUERY_VOLUME_REDIRECT_STATE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _CSV_QUERY_MDS_PATH_V2 {
     *     LONGLONG Version;
     *     DWORD RequiredSize;
     *     DWORD MdsNodeId;
     *     DWORD DsNodeId;
     *     DWORD Flags;
     *     CSVFS_DISK_CONNECTIVITY DiskConnectivity;
     *     GUID VolumeId;
     *     DWORD IpAddressOffset;
     *     DWORD IpAddressLength;
     *     DWORD PathOffset;
     *     DWORD PathLength;
     * } *PCSV_QUERY_MDS_PATH_V2
     * }
     */
    public static final AddressLayout PCSV_QUERY_MDS_PATH_V2 = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _CSV_SET_VOLUME_ID {
     *     GUID VolumeId;
     * } *PCSV_SET_VOLUME_ID
     * }
     */
    public static final AddressLayout PCSV_SET_VOLUME_ID = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _CSV_QUERY_VOLUME_ID {
     *     GUID VolumeId;
     * } *PCSV_QUERY_VOLUME_ID
     * }
     */
    public static final AddressLayout PCSV_QUERY_VOLUME_ID = winapi.C_POINTER;
    private static final int LMRQuerySessionInfo = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _LMR_QUERY_INFO_CLASS.LMRQuerySessionInfo = 1
     * }
     */
    public static int LMRQuerySessionInfo() {
        return LMRQuerySessionInfo;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _LMR_QUERY_INFO_CLASS {
     *     LMRQuerySessionInfo = 1
     * } *PLMR_QUERY_INFO_CLASS
     * }
     */
    public static final AddressLayout PLMR_QUERY_INFO_CLASS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _LMR_QUERY_INFO_PARAM {
     *     LMR_QUERY_INFO_CLASS Operation;
     * } *PLMR_QUERY_INFO_PARAM
     * }
     */
    public static final AddressLayout PLMR_QUERY_INFO_PARAM = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _LMR_QUERY_SESSION_INFO {
     *     UINT64 SessionId;
     * } *PLMR_QUERY_SESSION_INFO
     * }
     */
    public static final AddressLayout PLMR_QUERY_SESSION_INFO = winapi.C_POINTER;
}

