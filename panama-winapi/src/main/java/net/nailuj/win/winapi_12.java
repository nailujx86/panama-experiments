// Generated by jextract

package net.nailuj.win;

import java.lang.invoke.*;
import java.lang.foreign.*;
import java.nio.ByteOrder;
import java.util.*;
import java.util.function.*;
import java.util.stream.*;

import static java.lang.foreign.ValueLayout.*;
import static java.lang.foreign.MemoryLayout.PathElement.*;

public class winapi_12 extends winapi_13 {

    winapi_12() {
        // Should not be called directly
    }
    private static final int FAST_FAIL_INVALID_FAST_FAIL_CODE = (int)4294967295L;
    /**
     * {@snippet lang=c :
     * #define FAST_FAIL_INVALID_FAST_FAIL_CODE 4294967295
     * }
     */
    public static int FAST_FAIL_INVALID_FAST_FAIL_CODE() {
        return FAST_FAIL_INVALID_FAST_FAIL_CODE;
    }
    private static final int COMPRESSION_FORMAT_NONE = (int)0L;
    /**
     * {@snippet lang=c :
     * #define COMPRESSION_FORMAT_NONE 0
     * }
     */
    public static int COMPRESSION_FORMAT_NONE() {
        return COMPRESSION_FORMAT_NONE;
    }
    private static final int COMPRESSION_FORMAT_DEFAULT = (int)1L;
    /**
     * {@snippet lang=c :
     * #define COMPRESSION_FORMAT_DEFAULT 1
     * }
     */
    public static int COMPRESSION_FORMAT_DEFAULT() {
        return COMPRESSION_FORMAT_DEFAULT;
    }
    private static final int COMPRESSION_FORMAT_LZNT1 = (int)2L;
    /**
     * {@snippet lang=c :
     * #define COMPRESSION_FORMAT_LZNT1 2
     * }
     */
    public static int COMPRESSION_FORMAT_LZNT1() {
        return COMPRESSION_FORMAT_LZNT1;
    }
    private static final int COMPRESSION_FORMAT_XPRESS = (int)3L;
    /**
     * {@snippet lang=c :
     * #define COMPRESSION_FORMAT_XPRESS 3
     * }
     */
    public static int COMPRESSION_FORMAT_XPRESS() {
        return COMPRESSION_FORMAT_XPRESS;
    }
    private static final int COMPRESSION_FORMAT_XPRESS_HUFF = (int)4L;
    /**
     * {@snippet lang=c :
     * #define COMPRESSION_FORMAT_XPRESS_HUFF 4
     * }
     */
    public static int COMPRESSION_FORMAT_XPRESS_HUFF() {
        return COMPRESSION_FORMAT_XPRESS_HUFF;
    }
    private static final int COMPRESSION_FORMAT_XP10 = (int)5L;
    /**
     * {@snippet lang=c :
     * #define COMPRESSION_FORMAT_XP10 5
     * }
     */
    public static int COMPRESSION_FORMAT_XP10() {
        return COMPRESSION_FORMAT_XP10;
    }
    private static final int COMPRESSION_FORMAT_LZ4 = (int)6L;
    /**
     * {@snippet lang=c :
     * #define COMPRESSION_FORMAT_LZ4 6
     * }
     */
    public static int COMPRESSION_FORMAT_LZ4() {
        return COMPRESSION_FORMAT_LZ4;
    }
    private static final int COMPRESSION_FORMAT_DEFLATE = (int)7L;
    /**
     * {@snippet lang=c :
     * #define COMPRESSION_FORMAT_DEFLATE 7
     * }
     */
    public static int COMPRESSION_FORMAT_DEFLATE() {
        return COMPRESSION_FORMAT_DEFLATE;
    }
    private static final int COMPRESSION_FORMAT_ZLIB = (int)8L;
    /**
     * {@snippet lang=c :
     * #define COMPRESSION_FORMAT_ZLIB 8
     * }
     */
    public static int COMPRESSION_FORMAT_ZLIB() {
        return COMPRESSION_FORMAT_ZLIB;
    }
    private static final int COMPRESSION_ENGINE_STANDARD = (int)0L;
    /**
     * {@snippet lang=c :
     * #define COMPRESSION_ENGINE_STANDARD 0
     * }
     */
    public static int COMPRESSION_ENGINE_STANDARD() {
        return COMPRESSION_ENGINE_STANDARD;
    }
    private static final int COMPRESSION_ENGINE_MAXIMUM = (int)256L;
    /**
     * {@snippet lang=c :
     * #define COMPRESSION_ENGINE_MAXIMUM 256
     * }
     */
    public static int COMPRESSION_ENGINE_MAXIMUM() {
        return COMPRESSION_ENGINE_MAXIMUM;
    }
    private static final int COMPRESSION_ENGINE_HIBER = (int)512L;
    /**
     * {@snippet lang=c :
     * #define COMPRESSION_ENGINE_HIBER 512
     * }
     */
    public static int COMPRESSION_ENGINE_HIBER() {
        return COMPRESSION_ENGINE_HIBER;
    }
    private static final int SEF_MACL_VALID_FLAGS = (int)1792L;
    /**
     * {@snippet lang=c :
     * #define SEF_MACL_VALID_FLAGS 1792
     * }
     */
    public static int SEF_MACL_VALID_FLAGS() {
        return SEF_MACL_VALID_FLAGS;
    }
    private static final int RTL_UMS_VERSION = (int)256L;
    /**
     * {@snippet lang=c :
     * #define RTL_UMS_VERSION 256
     * }
     */
    public static int RTL_UMS_VERSION() {
        return RTL_UMS_VERSION;
    }
    private static final int VRL_PREDEFINED_CLASS_BEGIN = (int)1L;
    /**
     * {@snippet lang=c :
     * #define VRL_PREDEFINED_CLASS_BEGIN 1
     * }
     */
    public static int VRL_PREDEFINED_CLASS_BEGIN() {
        return VRL_PREDEFINED_CLASS_BEGIN;
    }
    private static final int VRL_CUSTOM_CLASS_BEGIN = (int)256L;
    /**
     * {@snippet lang=c :
     * #define VRL_CUSTOM_CLASS_BEGIN 256
     * }
     */
    public static int VRL_CUSTOM_CLASS_BEGIN() {
        return VRL_CUSTOM_CLASS_BEGIN;
    }
    private static final int VRL_CLASS_CONSISTENCY = (int)1L;
    /**
     * {@snippet lang=c :
     * #define VRL_CLASS_CONSISTENCY 1
     * }
     */
    public static int VRL_CLASS_CONSISTENCY() {
        return VRL_CLASS_CONSISTENCY;
    }
    private static final int VRL_ENABLE_KERNEL_BREAKS = (int)-2147483648L;
    /**
     * {@snippet lang=c :
     * #define VRL_ENABLE_KERNEL_BREAKS -2147483648
     * }
     */
    public static int VRL_ENABLE_KERNEL_BREAKS() {
        return VRL_ENABLE_KERNEL_BREAKS;
    }
    private static final int CTMF_INCLUDE_APPCONTAINER = (int)1L;
    /**
     * {@snippet lang=c :
     * #define CTMF_INCLUDE_APPCONTAINER 1
     * }
     */
    public static int CTMF_INCLUDE_APPCONTAINER() {
        return CTMF_INCLUDE_APPCONTAINER;
    }
    private static final int CTMF_INCLUDE_LPAC = (int)2L;
    /**
     * {@snippet lang=c :
     * #define CTMF_INCLUDE_LPAC 2
     * }
     */
    public static int CTMF_INCLUDE_LPAC() {
        return CTMF_INCLUDE_LPAC;
    }
    private static final int CTMF_VALID_FLAGS = (int)3L;
    /**
     * {@snippet lang=c :
     * #define CTMF_VALID_FLAGS 3
     * }
     */
    public static int CTMF_VALID_FLAGS() {
        return CTMF_VALID_FLAGS;
    }
    private static final int FLUSH_NV_MEMORY_IN_FLAG_NO_DRAIN = (int)1L;
    /**
     * {@snippet lang=c :
     * #define FLUSH_NV_MEMORY_IN_FLAG_NO_DRAIN 1
     * }
     */
    public static int FLUSH_NV_MEMORY_IN_FLAG_NO_DRAIN() {
        return FLUSH_NV_MEMORY_IN_FLAG_NO_DRAIN;
    }
    private static final long FLUSH_NV_MEMORY_DEFAULT_TOKEN = -1L;
    /**
     * {@snippet lang=c :
     * #define FLUSH_NV_MEMORY_DEFAULT_TOKEN -1
     * }
     */
    public static long FLUSH_NV_MEMORY_DEFAULT_TOKEN() {
        return FLUSH_NV_MEMORY_DEFAULT_TOKEN;
    }
    private static final int WRITE_NV_MEMORY_FLAG_FLUSH = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WRITE_NV_MEMORY_FLAG_FLUSH 1
     * }
     */
    public static int WRITE_NV_MEMORY_FLAG_FLUSH() {
        return WRITE_NV_MEMORY_FLAG_FLUSH;
    }
    private static final int WRITE_NV_MEMORY_FLAG_NON_TEMPORAL = (int)2L;
    /**
     * {@snippet lang=c :
     * #define WRITE_NV_MEMORY_FLAG_NON_TEMPORAL 2
     * }
     */
    public static int WRITE_NV_MEMORY_FLAG_NON_TEMPORAL() {
        return WRITE_NV_MEMORY_FLAG_NON_TEMPORAL;
    }
    private static final int WRITE_NV_MEMORY_FLAG_PERSIST = (int)3L;
    /**
     * {@snippet lang=c :
     * #define WRITE_NV_MEMORY_FLAG_PERSIST 3
     * }
     */
    public static int WRITE_NV_MEMORY_FLAG_PERSIST() {
        return WRITE_NV_MEMORY_FLAG_PERSIST;
    }
    private static final int WRITE_NV_MEMORY_FLAG_NO_DRAIN = (int)256L;
    /**
     * {@snippet lang=c :
     * #define WRITE_NV_MEMORY_FLAG_NO_DRAIN 256
     * }
     */
    public static int WRITE_NV_MEMORY_FLAG_NO_DRAIN() {
        return WRITE_NV_MEMORY_FLAG_NO_DRAIN;
    }
    private static final int FILL_NV_MEMORY_FLAG_FLUSH = (int)1L;
    /**
     * {@snippet lang=c :
     * #define FILL_NV_MEMORY_FLAG_FLUSH 1
     * }
     */
    public static int FILL_NV_MEMORY_FLAG_FLUSH() {
        return FILL_NV_MEMORY_FLAG_FLUSH;
    }
    private static final int FILL_NV_MEMORY_FLAG_NON_TEMPORAL = (int)2L;
    /**
     * {@snippet lang=c :
     * #define FILL_NV_MEMORY_FLAG_NON_TEMPORAL 2
     * }
     */
    public static int FILL_NV_MEMORY_FLAG_NON_TEMPORAL() {
        return FILL_NV_MEMORY_FLAG_NON_TEMPORAL;
    }
    private static final int FILL_NV_MEMORY_FLAG_PERSIST = (int)3L;
    /**
     * {@snippet lang=c :
     * #define FILL_NV_MEMORY_FLAG_PERSIST 3
     * }
     */
    public static int FILL_NV_MEMORY_FLAG_PERSIST() {
        return FILL_NV_MEMORY_FLAG_PERSIST;
    }
    private static final int FILL_NV_MEMORY_FLAG_NO_DRAIN = (int)256L;
    /**
     * {@snippet lang=c :
     * #define FILL_NV_MEMORY_FLAG_NO_DRAIN 256
     * }
     */
    public static int FILL_NV_MEMORY_FLAG_NO_DRAIN() {
        return FILL_NV_MEMORY_FLAG_NO_DRAIN;
    }
    private static final byte RTL_CORRELATION_VECTOR_VERSION_1 = (byte)1L;
    /**
     * {@snippet lang=c :
     * #define RTL_CORRELATION_VECTOR_VERSION_1 1
     * }
     */
    public static byte RTL_CORRELATION_VECTOR_VERSION_1() {
        return RTL_CORRELATION_VECTOR_VERSION_1;
    }
    private static final byte RTL_CORRELATION_VECTOR_VERSION_2 = (byte)2L;
    /**
     * {@snippet lang=c :
     * #define RTL_CORRELATION_VECTOR_VERSION_2 2
     * }
     */
    public static byte RTL_CORRELATION_VECTOR_VERSION_2() {
        return RTL_CORRELATION_VECTOR_VERSION_2;
    }
    private static final byte RTL_CORRELATION_VECTOR_VERSION_CURRENT = (byte)2L;
    /**
     * {@snippet lang=c :
     * #define RTL_CORRELATION_VECTOR_VERSION_CURRENT 2
     * }
     */
    public static byte RTL_CORRELATION_VECTOR_VERSION_CURRENT() {
        return RTL_CORRELATION_VECTOR_VERSION_CURRENT;
    }
    private static final int RTL_CORRELATION_VECTOR_V1_PREFIX_LENGTH = (int)16L;
    /**
     * {@snippet lang=c :
     * #define RTL_CORRELATION_VECTOR_V1_PREFIX_LENGTH 16
     * }
     */
    public static int RTL_CORRELATION_VECTOR_V1_PREFIX_LENGTH() {
        return RTL_CORRELATION_VECTOR_V1_PREFIX_LENGTH;
    }
    private static final int RTL_CORRELATION_VECTOR_V1_LENGTH = (int)64L;
    /**
     * {@snippet lang=c :
     * #define RTL_CORRELATION_VECTOR_V1_LENGTH 64
     * }
     */
    public static int RTL_CORRELATION_VECTOR_V1_LENGTH() {
        return RTL_CORRELATION_VECTOR_V1_LENGTH;
    }
    private static final int RTL_CORRELATION_VECTOR_V2_PREFIX_LENGTH = (int)22L;
    /**
     * {@snippet lang=c :
     * #define RTL_CORRELATION_VECTOR_V2_PREFIX_LENGTH 22
     * }
     */
    public static int RTL_CORRELATION_VECTOR_V2_PREFIX_LENGTH() {
        return RTL_CORRELATION_VECTOR_V2_PREFIX_LENGTH;
    }
    private static final int RTL_CORRELATION_VECTOR_V2_LENGTH = (int)128L;
    /**
     * {@snippet lang=c :
     * #define RTL_CORRELATION_VECTOR_V2_LENGTH 128
     * }
     */
    public static int RTL_CORRELATION_VECTOR_V2_LENGTH() {
        return RTL_CORRELATION_VECTOR_V2_LENGTH;
    }
    /**
     * {@snippet lang=c :
     * #define IMAGE_POLICY_SECTION_NAME ".tPolicy"
     * }
     */
    public static MemorySegment IMAGE_POLICY_SECTION_NAME() {
        class Holder {
            static final MemorySegment IMAGE_POLICY_SECTION_NAME
                = winapi.LIBRARY_ARENA.allocateFrom(".tPolicy");
        }
        return Holder.IMAGE_POLICY_SECTION_NAME;
    }
    private static final int RTL_VIRTUAL_UNWIND2_VALIDATE_PAC = (int)1L;
    /**
     * {@snippet lang=c :
     * #define RTL_VIRTUAL_UNWIND2_VALIDATE_PAC 1
     * }
     */
    public static int RTL_VIRTUAL_UNWIND2_VALIDATE_PAC() {
        return RTL_VIRTUAL_UNWIND2_VALIDATE_PAC;
    }
    private static final int RTL_CRITICAL_SECTION_ALL_FLAG_BITS = (int)4278190080L;
    /**
     * {@snippet lang=c :
     * #define RTL_CRITICAL_SECTION_ALL_FLAG_BITS 4278190080
     * }
     */
    public static int RTL_CRITICAL_SECTION_ALL_FLAG_BITS() {
        return RTL_CRITICAL_SECTION_ALL_FLAG_BITS;
    }
    private static final int RTL_CRITICAL_SECTION_FLAG_RESERVED = (int)3758096384L;
    /**
     * {@snippet lang=c :
     * #define RTL_CRITICAL_SECTION_FLAG_RESERVED 3758096384
     * }
     */
    public static int RTL_CRITICAL_SECTION_FLAG_RESERVED() {
        return RTL_CRITICAL_SECTION_FLAG_RESERVED;
    }
    private static final int ACTIVATION_CONTEXT_PATH_TYPE_NONE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define ACTIVATION_CONTEXT_PATH_TYPE_NONE 1
     * }
     */
    public static int ACTIVATION_CONTEXT_PATH_TYPE_NONE() {
        return ACTIVATION_CONTEXT_PATH_TYPE_NONE;
    }
    private static final int ACTIVATION_CONTEXT_PATH_TYPE_WIN32_FILE = (int)2L;
    /**
     * {@snippet lang=c :
     * #define ACTIVATION_CONTEXT_PATH_TYPE_WIN32_FILE 2
     * }
     */
    public static int ACTIVATION_CONTEXT_PATH_TYPE_WIN32_FILE() {
        return ACTIVATION_CONTEXT_PATH_TYPE_WIN32_FILE;
    }
    private static final int ACTIVATION_CONTEXT_PATH_TYPE_URL = (int)3L;
    /**
     * {@snippet lang=c :
     * #define ACTIVATION_CONTEXT_PATH_TYPE_URL 3
     * }
     */
    public static int ACTIVATION_CONTEXT_PATH_TYPE_URL() {
        return ACTIVATION_CONTEXT_PATH_TYPE_URL;
    }
    private static final int ACTIVATION_CONTEXT_PATH_TYPE_ASSEMBLYREF = (int)4L;
    /**
     * {@snippet lang=c :
     * #define ACTIVATION_CONTEXT_PATH_TYPE_ASSEMBLYREF 4
     * }
     */
    public static int ACTIVATION_CONTEXT_PATH_TYPE_ASSEMBLYREF() {
        return ACTIVATION_CONTEXT_PATH_TYPE_ASSEMBLYREF;
    }
    /**
     * {@snippet lang=c :
     * #define UNIFIEDBUILDREVISION_KEY "\"
     * }
     */
    public static MemorySegment UNIFIEDBUILDREVISION_KEY() {
        class Holder {
            static final MemorySegment UNIFIEDBUILDREVISION_KEY
                = winapi.LIBRARY_ARENA.allocateFrom("\\");
        }
        return Holder.UNIFIEDBUILDREVISION_KEY;
    }
    /**
     * {@snippet lang=c :
     * #define UNIFIEDBUILDREVISION_VALUE "U"
     * }
     */
    public static MemorySegment UNIFIEDBUILDREVISION_VALUE() {
        class Holder {
            static final MemorySegment UNIFIEDBUILDREVISION_VALUE
                = winapi.LIBRARY_ARENA.allocateFrom("U");
        }
        return Holder.UNIFIEDBUILDREVISION_VALUE;
    }
    /**
     * {@snippet lang=c :
     * #define DEVICEFAMILYDEVICEFORM_KEY "\"
     * }
     */
    public static MemorySegment DEVICEFAMILYDEVICEFORM_KEY() {
        class Holder {
            static final MemorySegment DEVICEFAMILYDEVICEFORM_KEY
                = winapi.LIBRARY_ARENA.allocateFrom("\\");
        }
        return Holder.DEVICEFAMILYDEVICEFORM_KEY;
    }
    /**
     * {@snippet lang=c :
     * #define DEVICEFAMILYDEVICEFORM_VALUE "D"
     * }
     */
    public static MemorySegment DEVICEFAMILYDEVICEFORM_VALUE() {
        class Holder {
            static final MemorySegment DEVICEFAMILYDEVICEFORM_VALUE
                = winapi.LIBRARY_ARENA.allocateFrom("D");
        }
        return Holder.DEVICEFAMILYDEVICEFORM_VALUE;
    }
    private static final int KEY_QUERY_VALUE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define KEY_QUERY_VALUE 1
     * }
     */
    public static int KEY_QUERY_VALUE() {
        return KEY_QUERY_VALUE;
    }
    private static final int KEY_SET_VALUE = (int)2L;
    /**
     * {@snippet lang=c :
     * #define KEY_SET_VALUE 2
     * }
     */
    public static int KEY_SET_VALUE() {
        return KEY_SET_VALUE;
    }
    private static final int KEY_CREATE_SUB_KEY = (int)4L;
    /**
     * {@snippet lang=c :
     * #define KEY_CREATE_SUB_KEY 4
     * }
     */
    public static int KEY_CREATE_SUB_KEY() {
        return KEY_CREATE_SUB_KEY;
    }
    private static final int KEY_ENUMERATE_SUB_KEYS = (int)8L;
    /**
     * {@snippet lang=c :
     * #define KEY_ENUMERATE_SUB_KEYS 8
     * }
     */
    public static int KEY_ENUMERATE_SUB_KEYS() {
        return KEY_ENUMERATE_SUB_KEYS;
    }
    private static final int KEY_NOTIFY = (int)16L;
    /**
     * {@snippet lang=c :
     * #define KEY_NOTIFY 16
     * }
     */
    public static int KEY_NOTIFY() {
        return KEY_NOTIFY;
    }
    private static final int KEY_CREATE_LINK = (int)32L;
    /**
     * {@snippet lang=c :
     * #define KEY_CREATE_LINK 32
     * }
     */
    public static int KEY_CREATE_LINK() {
        return KEY_CREATE_LINK;
    }
    private static final int KEY_WOW64_32KEY = (int)512L;
    /**
     * {@snippet lang=c :
     * #define KEY_WOW64_32KEY 512
     * }
     */
    public static int KEY_WOW64_32KEY() {
        return KEY_WOW64_32KEY;
    }
    private static final int KEY_WOW64_64KEY = (int)256L;
    /**
     * {@snippet lang=c :
     * #define KEY_WOW64_64KEY 256
     * }
     */
    public static int KEY_WOW64_64KEY() {
        return KEY_WOW64_64KEY;
    }
    private static final int KEY_WOW64_RES = (int)768L;
    /**
     * {@snippet lang=c :
     * #define KEY_WOW64_RES 768
     * }
     */
    public static int KEY_WOW64_RES() {
        return KEY_WOW64_RES;
    }
    private static final int KEY_READ = (int)131097L;
    /**
     * {@snippet lang=c :
     * #define KEY_READ 131097
     * }
     */
    public static int KEY_READ() {
        return KEY_READ;
    }
    private static final int KEY_WRITE = (int)131078L;
    /**
     * {@snippet lang=c :
     * #define KEY_WRITE 131078
     * }
     */
    public static int KEY_WRITE() {
        return KEY_WRITE;
    }
    private static final int KEY_EXECUTE = (int)131097L;
    /**
     * {@snippet lang=c :
     * #define KEY_EXECUTE 131097
     * }
     */
    public static int KEY_EXECUTE() {
        return KEY_EXECUTE;
    }
    private static final int KEY_ALL_ACCESS = (int)983103L;
    /**
     * {@snippet lang=c :
     * #define KEY_ALL_ACCESS 983103
     * }
     */
    public static int KEY_ALL_ACCESS() {
        return KEY_ALL_ACCESS;
    }
    private static final int REG_OPTION_RESERVED = (int)0L;
    /**
     * {@snippet lang=c :
     * #define REG_OPTION_RESERVED 0
     * }
     */
    public static int REG_OPTION_RESERVED() {
        return REG_OPTION_RESERVED;
    }
    private static final int REG_OPTION_NON_VOLATILE = (int)0L;
    /**
     * {@snippet lang=c :
     * #define REG_OPTION_NON_VOLATILE 0
     * }
     */
    public static int REG_OPTION_NON_VOLATILE() {
        return REG_OPTION_NON_VOLATILE;
    }
    private static final int REG_OPTION_VOLATILE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define REG_OPTION_VOLATILE 1
     * }
     */
    public static int REG_OPTION_VOLATILE() {
        return REG_OPTION_VOLATILE;
    }
    private static final int REG_OPTION_CREATE_LINK = (int)2L;
    /**
     * {@snippet lang=c :
     * #define REG_OPTION_CREATE_LINK 2
     * }
     */
    public static int REG_OPTION_CREATE_LINK() {
        return REG_OPTION_CREATE_LINK;
    }
    private static final int REG_OPTION_BACKUP_RESTORE = (int)4L;
    /**
     * {@snippet lang=c :
     * #define REG_OPTION_BACKUP_RESTORE 4
     * }
     */
    public static int REG_OPTION_BACKUP_RESTORE() {
        return REG_OPTION_BACKUP_RESTORE;
    }
    private static final int REG_OPTION_OPEN_LINK = (int)8L;
    /**
     * {@snippet lang=c :
     * #define REG_OPTION_OPEN_LINK 8
     * }
     */
    public static int REG_OPTION_OPEN_LINK() {
        return REG_OPTION_OPEN_LINK;
    }
    private static final int REG_OPTION_DONT_VIRTUALIZE = (int)16L;
    /**
     * {@snippet lang=c :
     * #define REG_OPTION_DONT_VIRTUALIZE 16
     * }
     */
    public static int REG_OPTION_DONT_VIRTUALIZE() {
        return REG_OPTION_DONT_VIRTUALIZE;
    }
    private static final int REG_LEGAL_OPTION = (int)31L;
    /**
     * {@snippet lang=c :
     * #define REG_LEGAL_OPTION 31
     * }
     */
    public static int REG_LEGAL_OPTION() {
        return REG_LEGAL_OPTION;
    }
    private static final int REG_OPEN_LEGAL_OPTION = (int)28L;
    /**
     * {@snippet lang=c :
     * #define REG_OPEN_LEGAL_OPTION 28
     * }
     */
    public static int REG_OPEN_LEGAL_OPTION() {
        return REG_OPEN_LEGAL_OPTION;
    }
    private static final int REG_CREATED_NEW_KEY = (int)1L;
    /**
     * {@snippet lang=c :
     * #define REG_CREATED_NEW_KEY 1
     * }
     */
    public static int REG_CREATED_NEW_KEY() {
        return REG_CREATED_NEW_KEY;
    }
    private static final int REG_OPENED_EXISTING_KEY = (int)2L;
    /**
     * {@snippet lang=c :
     * #define REG_OPENED_EXISTING_KEY 2
     * }
     */
    public static int REG_OPENED_EXISTING_KEY() {
        return REG_OPENED_EXISTING_KEY;
    }
    private static final int REG_WHOLE_HIVE_VOLATILE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define REG_WHOLE_HIVE_VOLATILE 1
     * }
     */
    public static int REG_WHOLE_HIVE_VOLATILE() {
        return REG_WHOLE_HIVE_VOLATILE;
    }
    private static final int REG_REFRESH_HIVE = (int)2L;
    /**
     * {@snippet lang=c :
     * #define REG_REFRESH_HIVE 2
     * }
     */
    public static int REG_REFRESH_HIVE() {
        return REG_REFRESH_HIVE;
    }
    private static final int REG_NO_LAZY_FLUSH = (int)4L;
    /**
     * {@snippet lang=c :
     * #define REG_NO_LAZY_FLUSH 4
     * }
     */
    public static int REG_NO_LAZY_FLUSH() {
        return REG_NO_LAZY_FLUSH;
    }
    private static final int REG_FORCE_RESTORE = (int)8L;
    /**
     * {@snippet lang=c :
     * #define REG_FORCE_RESTORE 8
     * }
     */
    public static int REG_FORCE_RESTORE() {
        return REG_FORCE_RESTORE;
    }
    private static final int REG_APP_HIVE = (int)16L;
    /**
     * {@snippet lang=c :
     * #define REG_APP_HIVE 16
     * }
     */
    public static int REG_APP_HIVE() {
        return REG_APP_HIVE;
    }
    private static final int REG_PROCESS_PRIVATE = (int)32L;
    /**
     * {@snippet lang=c :
     * #define REG_PROCESS_PRIVATE 32
     * }
     */
    public static int REG_PROCESS_PRIVATE() {
        return REG_PROCESS_PRIVATE;
    }
    private static final int REG_START_JOURNAL = (int)64L;
    /**
     * {@snippet lang=c :
     * #define REG_START_JOURNAL 64
     * }
     */
    public static int REG_START_JOURNAL() {
        return REG_START_JOURNAL;
    }
    private static final int REG_HIVE_EXACT_FILE_GROWTH = (int)128L;
    /**
     * {@snippet lang=c :
     * #define REG_HIVE_EXACT_FILE_GROWTH 128
     * }
     */
    public static int REG_HIVE_EXACT_FILE_GROWTH() {
        return REG_HIVE_EXACT_FILE_GROWTH;
    }
    private static final int REG_HIVE_NO_RM = (int)256L;
    /**
     * {@snippet lang=c :
     * #define REG_HIVE_NO_RM 256
     * }
     */
    public static int REG_HIVE_NO_RM() {
        return REG_HIVE_NO_RM;
    }
    private static final int REG_HIVE_SINGLE_LOG = (int)512L;
    /**
     * {@snippet lang=c :
     * #define REG_HIVE_SINGLE_LOG 512
     * }
     */
    public static int REG_HIVE_SINGLE_LOG() {
        return REG_HIVE_SINGLE_LOG;
    }
    private static final int REG_BOOT_HIVE = (int)1024L;
    /**
     * {@snippet lang=c :
     * #define REG_BOOT_HIVE 1024
     * }
     */
    public static int REG_BOOT_HIVE() {
        return REG_BOOT_HIVE;
    }
    private static final int REG_LOAD_HIVE_OPEN_HANDLE = (int)2048L;
    /**
     * {@snippet lang=c :
     * #define REG_LOAD_HIVE_OPEN_HANDLE 2048
     * }
     */
    public static int REG_LOAD_HIVE_OPEN_HANDLE() {
        return REG_LOAD_HIVE_OPEN_HANDLE;
    }
    private static final int REG_FLUSH_HIVE_FILE_GROWTH = (int)4096L;
    /**
     * {@snippet lang=c :
     * #define REG_FLUSH_HIVE_FILE_GROWTH 4096
     * }
     */
    public static int REG_FLUSH_HIVE_FILE_GROWTH() {
        return REG_FLUSH_HIVE_FILE_GROWTH;
    }
    private static final int REG_OPEN_READ_ONLY = (int)8192L;
    /**
     * {@snippet lang=c :
     * #define REG_OPEN_READ_ONLY 8192
     * }
     */
    public static int REG_OPEN_READ_ONLY() {
        return REG_OPEN_READ_ONLY;
    }
    private static final int REG_IMMUTABLE = (int)16384L;
    /**
     * {@snippet lang=c :
     * #define REG_IMMUTABLE 16384
     * }
     */
    public static int REG_IMMUTABLE() {
        return REG_IMMUTABLE;
    }
    private static final int REG_NO_IMPERSONATION_FALLBACK = (int)32768L;
    /**
     * {@snippet lang=c :
     * #define REG_NO_IMPERSONATION_FALLBACK 32768
     * }
     */
    public static int REG_NO_IMPERSONATION_FALLBACK() {
        return REG_NO_IMPERSONATION_FALLBACK;
    }
    private static final int REG_APP_HIVE_OPEN_READ_ONLY = (int)8192L;
    /**
     * {@snippet lang=c :
     * #define REG_APP_HIVE_OPEN_READ_ONLY 8192
     * }
     */
    public static int REG_APP_HIVE_OPEN_READ_ONLY() {
        return REG_APP_HIVE_OPEN_READ_ONLY;
    }
    private static final int REG_UNLOAD_LEGAL_FLAGS = (int)1L;
    /**
     * {@snippet lang=c :
     * #define REG_UNLOAD_LEGAL_FLAGS 1
     * }
     */
    public static int REG_UNLOAD_LEGAL_FLAGS() {
        return REG_UNLOAD_LEGAL_FLAGS;
    }
    private static final int REG_NOTIFY_CHANGE_NAME = (int)1L;
    /**
     * {@snippet lang=c :
     * #define REG_NOTIFY_CHANGE_NAME 1
     * }
     */
    public static int REG_NOTIFY_CHANGE_NAME() {
        return REG_NOTIFY_CHANGE_NAME;
    }
    private static final int REG_NOTIFY_CHANGE_ATTRIBUTES = (int)2L;
    /**
     * {@snippet lang=c :
     * #define REG_NOTIFY_CHANGE_ATTRIBUTES 2
     * }
     */
    public static int REG_NOTIFY_CHANGE_ATTRIBUTES() {
        return REG_NOTIFY_CHANGE_ATTRIBUTES;
    }
    private static final int REG_NOTIFY_CHANGE_LAST_SET = (int)4L;
    /**
     * {@snippet lang=c :
     * #define REG_NOTIFY_CHANGE_LAST_SET 4
     * }
     */
    public static int REG_NOTIFY_CHANGE_LAST_SET() {
        return REG_NOTIFY_CHANGE_LAST_SET;
    }
    private static final int REG_NOTIFY_CHANGE_SECURITY = (int)8L;
    /**
     * {@snippet lang=c :
     * #define REG_NOTIFY_CHANGE_SECURITY 8
     * }
     */
    public static int REG_NOTIFY_CHANGE_SECURITY() {
        return REG_NOTIFY_CHANGE_SECURITY;
    }
    private static final int REG_NOTIFY_THREAD_AGNOSTIC = (int)268435456L;
    /**
     * {@snippet lang=c :
     * #define REG_NOTIFY_THREAD_AGNOSTIC 268435456
     * }
     */
    public static int REG_NOTIFY_THREAD_AGNOSTIC() {
        return REG_NOTIFY_THREAD_AGNOSTIC;
    }
    private static final int REG_LEGAL_CHANGE_FILTER = (int)268435471L;
    /**
     * {@snippet lang=c :
     * #define REG_LEGAL_CHANGE_FILTER 268435471
     * }
     */
    public static int REG_LEGAL_CHANGE_FILTER() {
        return REG_LEGAL_CHANGE_FILTER;
    }
    private static final int REG_NONE = (int)0L;
    /**
     * {@snippet lang=c :
     * #define REG_NONE 0
     * }
     */
    public static int REG_NONE() {
        return REG_NONE;
    }
    private static final int REG_SZ = (int)1L;
    /**
     * {@snippet lang=c :
     * #define REG_SZ 1
     * }
     */
    public static int REG_SZ() {
        return REG_SZ;
    }
    private static final int REG_EXPAND_SZ = (int)2L;
    /**
     * {@snippet lang=c :
     * #define REG_EXPAND_SZ 2
     * }
     */
    public static int REG_EXPAND_SZ() {
        return REG_EXPAND_SZ;
    }
    private static final int REG_BINARY = (int)3L;
    /**
     * {@snippet lang=c :
     * #define REG_BINARY 3
     * }
     */
    public static int REG_BINARY() {
        return REG_BINARY;
    }
    private static final int REG_DWORD = (int)4L;
    /**
     * {@snippet lang=c :
     * #define REG_DWORD 4
     * }
     */
    public static int REG_DWORD() {
        return REG_DWORD;
    }
    private static final int REG_DWORD_LITTLE_ENDIAN = (int)4L;
    /**
     * {@snippet lang=c :
     * #define REG_DWORD_LITTLE_ENDIAN 4
     * }
     */
    public static int REG_DWORD_LITTLE_ENDIAN() {
        return REG_DWORD_LITTLE_ENDIAN;
    }
    private static final int REG_DWORD_BIG_ENDIAN = (int)5L;
    /**
     * {@snippet lang=c :
     * #define REG_DWORD_BIG_ENDIAN 5
     * }
     */
    public static int REG_DWORD_BIG_ENDIAN() {
        return REG_DWORD_BIG_ENDIAN;
    }
    private static final int REG_LINK = (int)6L;
    /**
     * {@snippet lang=c :
     * #define REG_LINK 6
     * }
     */
    public static int REG_LINK() {
        return REG_LINK;
    }
    private static final int REG_MULTI_SZ = (int)7L;
    /**
     * {@snippet lang=c :
     * #define REG_MULTI_SZ 7
     * }
     */
    public static int REG_MULTI_SZ() {
        return REG_MULTI_SZ;
    }
    private static final int REG_RESOURCE_LIST = (int)8L;
    /**
     * {@snippet lang=c :
     * #define REG_RESOURCE_LIST 8
     * }
     */
    public static int REG_RESOURCE_LIST() {
        return REG_RESOURCE_LIST;
    }
    private static final int REG_FULL_RESOURCE_DESCRIPTOR = (int)9L;
    /**
     * {@snippet lang=c :
     * #define REG_FULL_RESOURCE_DESCRIPTOR 9
     * }
     */
    public static int REG_FULL_RESOURCE_DESCRIPTOR() {
        return REG_FULL_RESOURCE_DESCRIPTOR;
    }
    private static final int REG_RESOURCE_REQUIREMENTS_LIST = (int)10L;
    /**
     * {@snippet lang=c :
     * #define REG_RESOURCE_REQUIREMENTS_LIST 10
     * }
     */
    public static int REG_RESOURCE_REQUIREMENTS_LIST() {
        return REG_RESOURCE_REQUIREMENTS_LIST;
    }
    private static final int REG_QWORD = (int)11L;
    /**
     * {@snippet lang=c :
     * #define REG_QWORD 11
     * }
     */
    public static int REG_QWORD() {
        return REG_QWORD;
    }
    private static final int REG_QWORD_LITTLE_ENDIAN = (int)11L;
    /**
     * {@snippet lang=c :
     * #define REG_QWORD_LITTLE_ENDIAN 11
     * }
     */
    public static int REG_QWORD_LITTLE_ENDIAN() {
        return REG_QWORD_LITTLE_ENDIAN;
    }
    private static final int SERVICE_DRIVER = (int)11L;
    /**
     * {@snippet lang=c :
     * #define SERVICE_DRIVER 11
     * }
     */
    public static int SERVICE_DRIVER() {
        return SERVICE_DRIVER;
    }
    private static final int SERVICE_WIN32 = (int)48L;
    /**
     * {@snippet lang=c :
     * #define SERVICE_WIN32 48
     * }
     */
    public static int SERVICE_WIN32() {
        return SERVICE_WIN32;
    }
    private static final int SERVICE_USER_SHARE_PROCESS = (int)96L;
    /**
     * {@snippet lang=c :
     * #define SERVICE_USER_SHARE_PROCESS 96
     * }
     */
    public static int SERVICE_USER_SHARE_PROCESS() {
        return SERVICE_USER_SHARE_PROCESS;
    }
    private static final int SERVICE_USER_OWN_PROCESS = (int)80L;
    /**
     * {@snippet lang=c :
     * #define SERVICE_USER_OWN_PROCESS 80
     * }
     */
    public static int SERVICE_USER_OWN_PROCESS() {
        return SERVICE_USER_OWN_PROCESS;
    }
    private static final int SERVICE_TYPE_ALL = (int)1023L;
    /**
     * {@snippet lang=c :
     * #define SERVICE_TYPE_ALL 1023
     * }
     */
    public static int SERVICE_TYPE_ALL() {
        return SERVICE_TYPE_ALL;
    }
    private static final int CM_SERVICE_VALID_PROMOTION_MASK = (int)511L;
    /**
     * {@snippet lang=c :
     * #define CM_SERVICE_VALID_PROMOTION_MASK 511
     * }
     */
    public static int CM_SERVICE_VALID_PROMOTION_MASK() {
        return CM_SERVICE_VALID_PROMOTION_MASK;
    }
    private static final int TAPE_ERASE_SHORT = (int)0L;
    /**
     * {@snippet lang=c :
     * #define TAPE_ERASE_SHORT 0
     * }
     */
    public static int TAPE_ERASE_SHORT() {
        return TAPE_ERASE_SHORT;
    }
    private static final int TAPE_ERASE_LONG = (int)1L;
    /**
     * {@snippet lang=c :
     * #define TAPE_ERASE_LONG 1
     * }
     */
    public static int TAPE_ERASE_LONG() {
        return TAPE_ERASE_LONG;
    }
    private static final int TAPE_LOAD = (int)0L;
    /**
     * {@snippet lang=c :
     * #define TAPE_LOAD 0
     * }
     */
    public static int TAPE_LOAD() {
        return TAPE_LOAD;
    }
    private static final int TAPE_UNLOAD = (int)1L;
    /**
     * {@snippet lang=c :
     * #define TAPE_UNLOAD 1
     * }
     */
    public static int TAPE_UNLOAD() {
        return TAPE_UNLOAD;
    }
    private static final int TAPE_TENSION = (int)2L;
    /**
     * {@snippet lang=c :
     * #define TAPE_TENSION 2
     * }
     */
    public static int TAPE_TENSION() {
        return TAPE_TENSION;
    }
    private static final int TAPE_LOCK = (int)3L;
    /**
     * {@snippet lang=c :
     * #define TAPE_LOCK 3
     * }
     */
    public static int TAPE_LOCK() {
        return TAPE_LOCK;
    }
    private static final int TAPE_UNLOCK = (int)4L;
    /**
     * {@snippet lang=c :
     * #define TAPE_UNLOCK 4
     * }
     */
    public static int TAPE_UNLOCK() {
        return TAPE_UNLOCK;
    }
    private static final int TAPE_FORMAT = (int)5L;
    /**
     * {@snippet lang=c :
     * #define TAPE_FORMAT 5
     * }
     */
    public static int TAPE_FORMAT() {
        return TAPE_FORMAT;
    }
    private static final int TAPE_SETMARKS = (int)0L;
    /**
     * {@snippet lang=c :
     * #define TAPE_SETMARKS 0
     * }
     */
    public static int TAPE_SETMARKS() {
        return TAPE_SETMARKS;
    }
    private static final int TAPE_FILEMARKS = (int)1L;
    /**
     * {@snippet lang=c :
     * #define TAPE_FILEMARKS 1
     * }
     */
    public static int TAPE_FILEMARKS() {
        return TAPE_FILEMARKS;
    }
    private static final int TAPE_SHORT_FILEMARKS = (int)2L;
    /**
     * {@snippet lang=c :
     * #define TAPE_SHORT_FILEMARKS 2
     * }
     */
    public static int TAPE_SHORT_FILEMARKS() {
        return TAPE_SHORT_FILEMARKS;
    }
    private static final int TAPE_LONG_FILEMARKS = (int)3L;
    /**
     * {@snippet lang=c :
     * #define TAPE_LONG_FILEMARKS 3
     * }
     */
    public static int TAPE_LONG_FILEMARKS() {
        return TAPE_LONG_FILEMARKS;
    }
    private static final int TAPE_ABSOLUTE_POSITION = (int)0L;
    /**
     * {@snippet lang=c :
     * #define TAPE_ABSOLUTE_POSITION 0
     * }
     */
    public static int TAPE_ABSOLUTE_POSITION() {
        return TAPE_ABSOLUTE_POSITION;
    }
    private static final int TAPE_LOGICAL_POSITION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define TAPE_LOGICAL_POSITION 1
     * }
     */
    public static int TAPE_LOGICAL_POSITION() {
        return TAPE_LOGICAL_POSITION;
    }
    private static final int TAPE_PSEUDO_LOGICAL_POSITION = (int)2L;
    /**
     * {@snippet lang=c :
     * #define TAPE_PSEUDO_LOGICAL_POSITION 2
     * }
     */
    public static int TAPE_PSEUDO_LOGICAL_POSITION() {
        return TAPE_PSEUDO_LOGICAL_POSITION;
    }
    private static final int TAPE_REWIND = (int)0L;
    /**
     * {@snippet lang=c :
     * #define TAPE_REWIND 0
     * }
     */
    public static int TAPE_REWIND() {
        return TAPE_REWIND;
    }
    private static final int TAPE_ABSOLUTE_BLOCK = (int)1L;
    /**
     * {@snippet lang=c :
     * #define TAPE_ABSOLUTE_BLOCK 1
     * }
     */
    public static int TAPE_ABSOLUTE_BLOCK() {
        return TAPE_ABSOLUTE_BLOCK;
    }
    private static final int TAPE_LOGICAL_BLOCK = (int)2L;
    /**
     * {@snippet lang=c :
     * #define TAPE_LOGICAL_BLOCK 2
     * }
     */
    public static int TAPE_LOGICAL_BLOCK() {
        return TAPE_LOGICAL_BLOCK;
    }
    private static final int TAPE_PSEUDO_LOGICAL_BLOCK = (int)3L;
    /**
     * {@snippet lang=c :
     * #define TAPE_PSEUDO_LOGICAL_BLOCK 3
     * }
     */
    public static int TAPE_PSEUDO_LOGICAL_BLOCK() {
        return TAPE_PSEUDO_LOGICAL_BLOCK;
    }
    private static final int TAPE_SPACE_END_OF_DATA = (int)4L;
    /**
     * {@snippet lang=c :
     * #define TAPE_SPACE_END_OF_DATA 4
     * }
     */
    public static int TAPE_SPACE_END_OF_DATA() {
        return TAPE_SPACE_END_OF_DATA;
    }
    private static final int TAPE_SPACE_RELATIVE_BLOCKS = (int)5L;
    /**
     * {@snippet lang=c :
     * #define TAPE_SPACE_RELATIVE_BLOCKS 5
     * }
     */
    public static int TAPE_SPACE_RELATIVE_BLOCKS() {
        return TAPE_SPACE_RELATIVE_BLOCKS;
    }
    private static final int TAPE_SPACE_FILEMARKS = (int)6L;
    /**
     * {@snippet lang=c :
     * #define TAPE_SPACE_FILEMARKS 6
     * }
     */
    public static int TAPE_SPACE_FILEMARKS() {
        return TAPE_SPACE_FILEMARKS;
    }
    private static final int TAPE_SPACE_SEQUENTIAL_FMKS = (int)7L;
    /**
     * {@snippet lang=c :
     * #define TAPE_SPACE_SEQUENTIAL_FMKS 7
     * }
     */
    public static int TAPE_SPACE_SEQUENTIAL_FMKS() {
        return TAPE_SPACE_SEQUENTIAL_FMKS;
    }
    private static final int TAPE_SPACE_SETMARKS = (int)8L;
    /**
     * {@snippet lang=c :
     * #define TAPE_SPACE_SETMARKS 8
     * }
     */
    public static int TAPE_SPACE_SETMARKS() {
        return TAPE_SPACE_SETMARKS;
    }
    private static final int TAPE_SPACE_SEQUENTIAL_SMKS = (int)9L;
    /**
     * {@snippet lang=c :
     * #define TAPE_SPACE_SEQUENTIAL_SMKS 9
     * }
     */
    public static int TAPE_SPACE_SEQUENTIAL_SMKS() {
        return TAPE_SPACE_SEQUENTIAL_SMKS;
    }
    private static final int TAPE_DRIVE_RESERVED_BIT = (int)2147483648L;
    /**
     * {@snippet lang=c :
     * #define TAPE_DRIVE_RESERVED_BIT 2147483648
     * }
     */
    public static int TAPE_DRIVE_RESERVED_BIT() {
        return TAPE_DRIVE_RESERVED_BIT;
    }
    private static final int TAPE_DRIVE_LOAD_UNLOAD = (int)2147483649L;
    /**
     * {@snippet lang=c :
     * #define TAPE_DRIVE_LOAD_UNLOAD 2147483649
     * }
     */
    public static int TAPE_DRIVE_LOAD_UNLOAD() {
        return TAPE_DRIVE_LOAD_UNLOAD;
    }
    private static final int TAPE_DRIVE_TENSION = (int)2147483650L;
    /**
     * {@snippet lang=c :
     * #define TAPE_DRIVE_TENSION 2147483650
     * }
     */
    public static int TAPE_DRIVE_TENSION() {
        return TAPE_DRIVE_TENSION;
    }
    private static final int TAPE_DRIVE_LOCK_UNLOCK = (int)2147483652L;
    /**
     * {@snippet lang=c :
     * #define TAPE_DRIVE_LOCK_UNLOCK 2147483652
     * }
     */
    public static int TAPE_DRIVE_LOCK_UNLOCK() {
        return TAPE_DRIVE_LOCK_UNLOCK;
    }
    private static final int TAPE_DRIVE_REWIND_IMMEDIATE = (int)2147483656L;
    /**
     * {@snippet lang=c :
     * #define TAPE_DRIVE_REWIND_IMMEDIATE 2147483656
     * }
     */
    public static int TAPE_DRIVE_REWIND_IMMEDIATE() {
        return TAPE_DRIVE_REWIND_IMMEDIATE;
    }
    private static final int TAPE_DRIVE_SET_BLOCK_SIZE = (int)2147483664L;
    /**
     * {@snippet lang=c :
     * #define TAPE_DRIVE_SET_BLOCK_SIZE 2147483664
     * }
     */
    public static int TAPE_DRIVE_SET_BLOCK_SIZE() {
        return TAPE_DRIVE_SET_BLOCK_SIZE;
    }
    private static final int TAPE_DRIVE_LOAD_UNLD_IMMED = (int)2147483680L;
    /**
     * {@snippet lang=c :
     * #define TAPE_DRIVE_LOAD_UNLD_IMMED 2147483680
     * }
     */
    public static int TAPE_DRIVE_LOAD_UNLD_IMMED() {
        return TAPE_DRIVE_LOAD_UNLD_IMMED;
    }
    private static final int TAPE_DRIVE_TENSION_IMMED = (int)2147483712L;
    /**
     * {@snippet lang=c :
     * #define TAPE_DRIVE_TENSION_IMMED 2147483712
     * }
     */
    public static int TAPE_DRIVE_TENSION_IMMED() {
        return TAPE_DRIVE_TENSION_IMMED;
    }
    private static final int TAPE_DRIVE_LOCK_UNLK_IMMED = (int)2147483776L;
    /**
     * {@snippet lang=c :
     * #define TAPE_DRIVE_LOCK_UNLK_IMMED 2147483776
     * }
     */
    public static int TAPE_DRIVE_LOCK_UNLK_IMMED() {
        return TAPE_DRIVE_LOCK_UNLK_IMMED;
    }
    private static final int TAPE_DRIVE_SET_ECC = (int)2147483904L;
    /**
     * {@snippet lang=c :
     * #define TAPE_DRIVE_SET_ECC 2147483904
     * }
     */
    public static int TAPE_DRIVE_SET_ECC() {
        return TAPE_DRIVE_SET_ECC;
    }
    private static final int TAPE_DRIVE_SET_COMPRESSION = (int)2147484160L;
    /**
     * {@snippet lang=c :
     * #define TAPE_DRIVE_SET_COMPRESSION 2147484160
     * }
     */
    public static int TAPE_DRIVE_SET_COMPRESSION() {
        return TAPE_DRIVE_SET_COMPRESSION;
    }
    private static final int TAPE_DRIVE_SET_PADDING = (int)2147484672L;
    /**
     * {@snippet lang=c :
     * #define TAPE_DRIVE_SET_PADDING 2147484672
     * }
     */
    public static int TAPE_DRIVE_SET_PADDING() {
        return TAPE_DRIVE_SET_PADDING;
    }
    private static final int TAPE_DRIVE_SET_REPORT_SMKS = (int)2147485696L;
    /**
     * {@snippet lang=c :
     * #define TAPE_DRIVE_SET_REPORT_SMKS 2147485696
     * }
     */
    public static int TAPE_DRIVE_SET_REPORT_SMKS() {
        return TAPE_DRIVE_SET_REPORT_SMKS;
    }
    private static final int TAPE_DRIVE_ABSOLUTE_BLK = (int)2147487744L;
    /**
     * {@snippet lang=c :
     * #define TAPE_DRIVE_ABSOLUTE_BLK 2147487744
     * }
     */
    public static int TAPE_DRIVE_ABSOLUTE_BLK() {
        return TAPE_DRIVE_ABSOLUTE_BLK;
    }
    private static final int TAPE_DRIVE_ABS_BLK_IMMED = (int)2147491840L;
    /**
     * {@snippet lang=c :
     * #define TAPE_DRIVE_ABS_BLK_IMMED 2147491840
     * }
     */
    public static int TAPE_DRIVE_ABS_BLK_IMMED() {
        return TAPE_DRIVE_ABS_BLK_IMMED;
    }
    private static final int TAPE_DRIVE_LOGICAL_BLK = (int)2147500032L;
    /**
     * {@snippet lang=c :
     * #define TAPE_DRIVE_LOGICAL_BLK 2147500032
     * }
     */
    public static int TAPE_DRIVE_LOGICAL_BLK() {
        return TAPE_DRIVE_LOGICAL_BLK;
    }
    private static final int TAPE_DRIVE_LOG_BLK_IMMED = (int)2147516416L;
    /**
     * {@snippet lang=c :
     * #define TAPE_DRIVE_LOG_BLK_IMMED 2147516416
     * }
     */
    public static int TAPE_DRIVE_LOG_BLK_IMMED() {
        return TAPE_DRIVE_LOG_BLK_IMMED;
    }
    private static final int TAPE_DRIVE_END_OF_DATA = (int)2147549184L;
    /**
     * {@snippet lang=c :
     * #define TAPE_DRIVE_END_OF_DATA 2147549184
     * }
     */
    public static int TAPE_DRIVE_END_OF_DATA() {
        return TAPE_DRIVE_END_OF_DATA;
    }
    private static final int TAPE_DRIVE_RELATIVE_BLKS = (int)2147614720L;
    /**
     * {@snippet lang=c :
     * #define TAPE_DRIVE_RELATIVE_BLKS 2147614720
     * }
     */
    public static int TAPE_DRIVE_RELATIVE_BLKS() {
        return TAPE_DRIVE_RELATIVE_BLKS;
    }
    private static final int TAPE_DRIVE_FILEMARKS = (int)2147745792L;
    /**
     * {@snippet lang=c :
     * #define TAPE_DRIVE_FILEMARKS 2147745792
     * }
     */
    public static int TAPE_DRIVE_FILEMARKS() {
        return TAPE_DRIVE_FILEMARKS;
    }
    private static final int TAPE_DRIVE_SEQUENTIAL_FMKS = (int)2148007936L;
    /**
     * {@snippet lang=c :
     * #define TAPE_DRIVE_SEQUENTIAL_FMKS 2148007936
     * }
     */
    public static int TAPE_DRIVE_SEQUENTIAL_FMKS() {
        return TAPE_DRIVE_SEQUENTIAL_FMKS;
    }
    private static final int TAPE_DRIVE_SETMARKS = (int)2148532224L;
    /**
     * {@snippet lang=c :
     * #define TAPE_DRIVE_SETMARKS 2148532224
     * }
     */
    public static int TAPE_DRIVE_SETMARKS() {
        return TAPE_DRIVE_SETMARKS;
    }
    private static final int TAPE_DRIVE_SEQUENTIAL_SMKS = (int)2149580800L;
    /**
     * {@snippet lang=c :
     * #define TAPE_DRIVE_SEQUENTIAL_SMKS 2149580800
     * }
     */
    public static int TAPE_DRIVE_SEQUENTIAL_SMKS() {
        return TAPE_DRIVE_SEQUENTIAL_SMKS;
    }
    private static final int TAPE_DRIVE_REVERSE_POSITION = (int)2151677952L;
    /**
     * {@snippet lang=c :
     * #define TAPE_DRIVE_REVERSE_POSITION 2151677952
     * }
     */
    public static int TAPE_DRIVE_REVERSE_POSITION() {
        return TAPE_DRIVE_REVERSE_POSITION;
    }
    private static final int TAPE_DRIVE_SPACE_IMMEDIATE = (int)2155872256L;
    /**
     * {@snippet lang=c :
     * #define TAPE_DRIVE_SPACE_IMMEDIATE 2155872256
     * }
     */
    public static int TAPE_DRIVE_SPACE_IMMEDIATE() {
        return TAPE_DRIVE_SPACE_IMMEDIATE;
    }
    private static final int TAPE_DRIVE_WRITE_SETMARKS = (int)2164260864L;
    /**
     * {@snippet lang=c :
     * #define TAPE_DRIVE_WRITE_SETMARKS 2164260864
     * }
     */
    public static int TAPE_DRIVE_WRITE_SETMARKS() {
        return TAPE_DRIVE_WRITE_SETMARKS;
    }
    private static final int TAPE_DRIVE_WRITE_FILEMARKS = (int)2181038080L;
    /**
     * {@snippet lang=c :
     * #define TAPE_DRIVE_WRITE_FILEMARKS 2181038080
     * }
     */
    public static int TAPE_DRIVE_WRITE_FILEMARKS() {
        return TAPE_DRIVE_WRITE_FILEMARKS;
    }
    private static final int TAPE_DRIVE_WRITE_SHORT_FMKS = (int)2214592512L;
    /**
     * {@snippet lang=c :
     * #define TAPE_DRIVE_WRITE_SHORT_FMKS 2214592512
     * }
     */
    public static int TAPE_DRIVE_WRITE_SHORT_FMKS() {
        return TAPE_DRIVE_WRITE_SHORT_FMKS;
    }
    private static final int TAPE_DRIVE_WRITE_LONG_FMKS = (int)2281701376L;
    /**
     * {@snippet lang=c :
     * #define TAPE_DRIVE_WRITE_LONG_FMKS 2281701376
     * }
     */
    public static int TAPE_DRIVE_WRITE_LONG_FMKS() {
        return TAPE_DRIVE_WRITE_LONG_FMKS;
    }
    private static final int TAPE_DRIVE_WRITE_MARK_IMMED = (int)2415919104L;
    /**
     * {@snippet lang=c :
     * #define TAPE_DRIVE_WRITE_MARK_IMMED 2415919104
     * }
     */
    public static int TAPE_DRIVE_WRITE_MARK_IMMED() {
        return TAPE_DRIVE_WRITE_MARK_IMMED;
    }
    private static final int TAPE_DRIVE_FORMAT = (int)2684354560L;
    /**
     * {@snippet lang=c :
     * #define TAPE_DRIVE_FORMAT 2684354560
     * }
     */
    public static int TAPE_DRIVE_FORMAT() {
        return TAPE_DRIVE_FORMAT;
    }
    private static final int TAPE_DRIVE_FORMAT_IMMEDIATE = (int)3221225472L;
    /**
     * {@snippet lang=c :
     * #define TAPE_DRIVE_FORMAT_IMMEDIATE 3221225472
     * }
     */
    public static int TAPE_DRIVE_FORMAT_IMMEDIATE() {
        return TAPE_DRIVE_FORMAT_IMMEDIATE;
    }
    private static final int TAPE_DRIVE_HIGH_FEATURES = (int)2147483648L;
    /**
     * {@snippet lang=c :
     * #define TAPE_DRIVE_HIGH_FEATURES 2147483648
     * }
     */
    public static int TAPE_DRIVE_HIGH_FEATURES() {
        return TAPE_DRIVE_HIGH_FEATURES;
    }
    private static final int TAPE_FIXED_PARTITIONS = (int)0L;
    /**
     * {@snippet lang=c :
     * #define TAPE_FIXED_PARTITIONS 0
     * }
     */
    public static int TAPE_FIXED_PARTITIONS() {
        return TAPE_FIXED_PARTITIONS;
    }
    private static final int TAPE_SELECT_PARTITIONS = (int)1L;
    /**
     * {@snippet lang=c :
     * #define TAPE_SELECT_PARTITIONS 1
     * }
     */
    public static int TAPE_SELECT_PARTITIONS() {
        return TAPE_SELECT_PARTITIONS;
    }
    private static final int TAPE_INITIATOR_PARTITIONS = (int)2L;
    /**
     * {@snippet lang=c :
     * #define TAPE_INITIATOR_PARTITIONS 2
     * }
     */
    public static int TAPE_INITIATOR_PARTITIONS() {
        return TAPE_INITIATOR_PARTITIONS;
    }
    private static final int TAPE_QUERY_DRIVE_PARAMETERS = (int)0L;
    /**
     * {@snippet lang=c :
     * #define TAPE_QUERY_DRIVE_PARAMETERS 0
     * }
     */
    public static int TAPE_QUERY_DRIVE_PARAMETERS() {
        return TAPE_QUERY_DRIVE_PARAMETERS;
    }
    private static final int TAPE_QUERY_MEDIA_CAPACITY = (int)1L;
    /**
     * {@snippet lang=c :
     * #define TAPE_QUERY_MEDIA_CAPACITY 1
     * }
     */
    public static int TAPE_QUERY_MEDIA_CAPACITY() {
        return TAPE_QUERY_MEDIA_CAPACITY;
    }
    private static final int TAPE_CHECK_FOR_DRIVE_PROBLEM = (int)2L;
    /**
     * {@snippet lang=c :
     * #define TAPE_CHECK_FOR_DRIVE_PROBLEM 2
     * }
     */
    public static int TAPE_CHECK_FOR_DRIVE_PROBLEM() {
        return TAPE_CHECK_FOR_DRIVE_PROBLEM;
    }
    private static final int TAPE_QUERY_IO_ERROR_DATA = (int)3L;
    /**
     * {@snippet lang=c :
     * #define TAPE_QUERY_IO_ERROR_DATA 3
     * }
     */
    public static int TAPE_QUERY_IO_ERROR_DATA() {
        return TAPE_QUERY_IO_ERROR_DATA;
    }
    private static final int TAPE_QUERY_DEVICE_ERROR_DATA = (int)4L;
    /**
     * {@snippet lang=c :
     * #define TAPE_QUERY_DEVICE_ERROR_DATA 4
     * }
     */
    public static int TAPE_QUERY_DEVICE_ERROR_DATA() {
        return TAPE_QUERY_DEVICE_ERROR_DATA;
    }
    /**
     * {@snippet lang=c :
     * #define TRANSACTIONMANAGER_OBJECT_PATH "\"
     * }
     */
    public static MemorySegment TRANSACTIONMANAGER_OBJECT_PATH() {
        class Holder {
            static final MemorySegment TRANSACTIONMANAGER_OBJECT_PATH
                = winapi.LIBRARY_ARENA.allocateFrom("\\");
        }
        return Holder.TRANSACTIONMANAGER_OBJECT_PATH;
    }
    /**
     * {@snippet lang=c :
     * #define TRANSACTION_OBJECT_PATH "\"
     * }
     */
    public static MemorySegment TRANSACTION_OBJECT_PATH() {
        class Holder {
            static final MemorySegment TRANSACTION_OBJECT_PATH
                = winapi.LIBRARY_ARENA.allocateFrom("\\");
        }
        return Holder.TRANSACTION_OBJECT_PATH;
    }
    /**
     * {@snippet lang=c :
     * #define ENLISTMENT_OBJECT_PATH "\"
     * }
     */
    public static MemorySegment ENLISTMENT_OBJECT_PATH() {
        class Holder {
            static final MemorySegment ENLISTMENT_OBJECT_PATH
                = winapi.LIBRARY_ARENA.allocateFrom("\\");
        }
        return Holder.ENLISTMENT_OBJECT_PATH;
    }
    /**
     * {@snippet lang=c :
     * #define RESOURCE_MANAGER_OBJECT_PATH "\"
     * }
     */
    public static MemorySegment RESOURCE_MANAGER_OBJECT_PATH() {
        class Holder {
            static final MemorySegment RESOURCE_MANAGER_OBJECT_PATH
                = winapi.LIBRARY_ARENA.allocateFrom("\\");
        }
        return Holder.RESOURCE_MANAGER_OBJECT_PATH;
    }
    private static final long TRANSACTIONMANAGER_OBJECT_NAME_LENGTH_IN_BYTES = 118L;
    /**
     * {@snippet lang=c :
     * #define TRANSACTIONMANAGER_OBJECT_NAME_LENGTH_IN_BYTES 118
     * }
     */
    public static long TRANSACTIONMANAGER_OBJECT_NAME_LENGTH_IN_BYTES() {
        return TRANSACTIONMANAGER_OBJECT_NAME_LENGTH_IN_BYTES;
    }
    private static final long TRANSACTION_OBJECT_NAME_LENGTH_IN_BYTES = 104L;
    /**
     * {@snippet lang=c :
     * #define TRANSACTION_OBJECT_NAME_LENGTH_IN_BYTES 104
     * }
     */
    public static long TRANSACTION_OBJECT_NAME_LENGTH_IN_BYTES() {
        return TRANSACTION_OBJECT_NAME_LENGTH_IN_BYTES;
    }
    private static final long ENLISTMENT_OBJECT_NAME_LENGTH_IN_BYTES = 102L;
    /**
     * {@snippet lang=c :
     * #define ENLISTMENT_OBJECT_NAME_LENGTH_IN_BYTES 102
     * }
     */
    public static long ENLISTMENT_OBJECT_NAME_LENGTH_IN_BYTES() {
        return ENLISTMENT_OBJECT_NAME_LENGTH_IN_BYTES;
    }
    private static final long RESOURCE_MANAGER_OBJECT_NAME_LENGTH_IN_BYTES = 112L;
    /**
     * {@snippet lang=c :
     * #define RESOURCE_MANAGER_OBJECT_NAME_LENGTH_IN_BYTES 112
     * }
     */
    public static long RESOURCE_MANAGER_OBJECT_NAME_LENGTH_IN_BYTES() {
        return RESOURCE_MANAGER_OBJECT_NAME_LENGTH_IN_BYTES;
    }
    private static final int TRANSACTIONMANAGER_QUERY_INFORMATION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define TRANSACTIONMANAGER_QUERY_INFORMATION 1
     * }
     */
    public static int TRANSACTIONMANAGER_QUERY_INFORMATION() {
        return TRANSACTIONMANAGER_QUERY_INFORMATION;
    }
    private static final int TRANSACTIONMANAGER_SET_INFORMATION = (int)2L;
    /**
     * {@snippet lang=c :
     * #define TRANSACTIONMANAGER_SET_INFORMATION 2
     * }
     */
    public static int TRANSACTIONMANAGER_SET_INFORMATION() {
        return TRANSACTIONMANAGER_SET_INFORMATION;
    }
    private static final int TRANSACTIONMANAGER_RECOVER = (int)4L;
    /**
     * {@snippet lang=c :
     * #define TRANSACTIONMANAGER_RECOVER 4
     * }
     */
    public static int TRANSACTIONMANAGER_RECOVER() {
        return TRANSACTIONMANAGER_RECOVER;
    }
    private static final int TRANSACTIONMANAGER_RENAME = (int)8L;
    /**
     * {@snippet lang=c :
     * #define TRANSACTIONMANAGER_RENAME 8
     * }
     */
    public static int TRANSACTIONMANAGER_RENAME() {
        return TRANSACTIONMANAGER_RENAME;
    }
    private static final int TRANSACTIONMANAGER_CREATE_RM = (int)16L;
    /**
     * {@snippet lang=c :
     * #define TRANSACTIONMANAGER_CREATE_RM 16
     * }
     */
    public static int TRANSACTIONMANAGER_CREATE_RM() {
        return TRANSACTIONMANAGER_CREATE_RM;
    }
    private static final int TRANSACTIONMANAGER_BIND_TRANSACTION = (int)32L;
    /**
     * {@snippet lang=c :
     * #define TRANSACTIONMANAGER_BIND_TRANSACTION 32
     * }
     */
    public static int TRANSACTIONMANAGER_BIND_TRANSACTION() {
        return TRANSACTIONMANAGER_BIND_TRANSACTION;
    }
    private static final int TRANSACTIONMANAGER_GENERIC_READ = (int)131073L;
    /**
     * {@snippet lang=c :
     * #define TRANSACTIONMANAGER_GENERIC_READ 131073
     * }
     */
    public static int TRANSACTIONMANAGER_GENERIC_READ() {
        return TRANSACTIONMANAGER_GENERIC_READ;
    }
    private static final int TRANSACTIONMANAGER_GENERIC_WRITE = (int)131102L;
    /**
     * {@snippet lang=c :
     * #define TRANSACTIONMANAGER_GENERIC_WRITE 131102
     * }
     */
    public static int TRANSACTIONMANAGER_GENERIC_WRITE() {
        return TRANSACTIONMANAGER_GENERIC_WRITE;
    }
    private static final int TRANSACTIONMANAGER_GENERIC_EXECUTE = (int)131072L;
    /**
     * {@snippet lang=c :
     * #define TRANSACTIONMANAGER_GENERIC_EXECUTE 131072
     * }
     */
    public static int TRANSACTIONMANAGER_GENERIC_EXECUTE() {
        return TRANSACTIONMANAGER_GENERIC_EXECUTE;
    }
    private static final int TRANSACTIONMANAGER_ALL_ACCESS = (int)983103L;
    /**
     * {@snippet lang=c :
     * #define TRANSACTIONMANAGER_ALL_ACCESS 983103
     * }
     */
    public static int TRANSACTIONMANAGER_ALL_ACCESS() {
        return TRANSACTIONMANAGER_ALL_ACCESS;
    }
    private static final int TRANSACTION_QUERY_INFORMATION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define TRANSACTION_QUERY_INFORMATION 1
     * }
     */
    public static int TRANSACTION_QUERY_INFORMATION() {
        return TRANSACTION_QUERY_INFORMATION;
    }
    private static final int TRANSACTION_SET_INFORMATION = (int)2L;
    /**
     * {@snippet lang=c :
     * #define TRANSACTION_SET_INFORMATION 2
     * }
     */
    public static int TRANSACTION_SET_INFORMATION() {
        return TRANSACTION_SET_INFORMATION;
    }
    private static final int TRANSACTION_ENLIST = (int)4L;
    /**
     * {@snippet lang=c :
     * #define TRANSACTION_ENLIST 4
     * }
     */
    public static int TRANSACTION_ENLIST() {
        return TRANSACTION_ENLIST;
    }
    private static final int TRANSACTION_COMMIT = (int)8L;
    /**
     * {@snippet lang=c :
     * #define TRANSACTION_COMMIT 8
     * }
     */
    public static int TRANSACTION_COMMIT() {
        return TRANSACTION_COMMIT;
    }
    private static final int TRANSACTION_ROLLBACK = (int)16L;
    /**
     * {@snippet lang=c :
     * #define TRANSACTION_ROLLBACK 16
     * }
     */
    public static int TRANSACTION_ROLLBACK() {
        return TRANSACTION_ROLLBACK;
    }
    private static final int TRANSACTION_PROPAGATE = (int)32L;
    /**
     * {@snippet lang=c :
     * #define TRANSACTION_PROPAGATE 32
     * }
     */
    public static int TRANSACTION_PROPAGATE() {
        return TRANSACTION_PROPAGATE;
    }
    private static final int TRANSACTION_RIGHT_RESERVED1 = (int)64L;
    /**
     * {@snippet lang=c :
     * #define TRANSACTION_RIGHT_RESERVED1 64
     * }
     */
    public static int TRANSACTION_RIGHT_RESERVED1() {
        return TRANSACTION_RIGHT_RESERVED1;
    }
    private static final int TRANSACTION_GENERIC_READ = (int)1179649L;
    /**
     * {@snippet lang=c :
     * #define TRANSACTION_GENERIC_READ 1179649
     * }
     */
    public static int TRANSACTION_GENERIC_READ() {
        return TRANSACTION_GENERIC_READ;
    }
    private static final int TRANSACTION_GENERIC_WRITE = (int)1179710L;
    /**
     * {@snippet lang=c :
     * #define TRANSACTION_GENERIC_WRITE 1179710
     * }
     */
    public static int TRANSACTION_GENERIC_WRITE() {
        return TRANSACTION_GENERIC_WRITE;
    }
    private static final int TRANSACTION_GENERIC_EXECUTE = (int)1179672L;
    /**
     * {@snippet lang=c :
     * #define TRANSACTION_GENERIC_EXECUTE 1179672
     * }
     */
    public static int TRANSACTION_GENERIC_EXECUTE() {
        return TRANSACTION_GENERIC_EXECUTE;
    }
    private static final int TRANSACTION_ALL_ACCESS = (int)2031679L;
    /**
     * {@snippet lang=c :
     * #define TRANSACTION_ALL_ACCESS 2031679
     * }
     */
    public static int TRANSACTION_ALL_ACCESS() {
        return TRANSACTION_ALL_ACCESS;
    }
    private static final int TRANSACTION_RESOURCE_MANAGER_RIGHTS = (int)1179703L;
    /**
     * {@snippet lang=c :
     * #define TRANSACTION_RESOURCE_MANAGER_RIGHTS 1179703
     * }
     */
    public static int TRANSACTION_RESOURCE_MANAGER_RIGHTS() {
        return TRANSACTION_RESOURCE_MANAGER_RIGHTS;
    }
    private static final int RESOURCEMANAGER_QUERY_INFORMATION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define RESOURCEMANAGER_QUERY_INFORMATION 1
     * }
     */
    public static int RESOURCEMANAGER_QUERY_INFORMATION() {
        return RESOURCEMANAGER_QUERY_INFORMATION;
    }
    private static final int RESOURCEMANAGER_SET_INFORMATION = (int)2L;
    /**
     * {@snippet lang=c :
     * #define RESOURCEMANAGER_SET_INFORMATION 2
     * }
     */
    public static int RESOURCEMANAGER_SET_INFORMATION() {
        return RESOURCEMANAGER_SET_INFORMATION;
    }
    private static final int RESOURCEMANAGER_RECOVER = (int)4L;
    /**
     * {@snippet lang=c :
     * #define RESOURCEMANAGER_RECOVER 4
     * }
     */
    public static int RESOURCEMANAGER_RECOVER() {
        return RESOURCEMANAGER_RECOVER;
    }
    private static final int RESOURCEMANAGER_ENLIST = (int)8L;
    /**
     * {@snippet lang=c :
     * #define RESOURCEMANAGER_ENLIST 8
     * }
     */
    public static int RESOURCEMANAGER_ENLIST() {
        return RESOURCEMANAGER_ENLIST;
    }
    private static final int RESOURCEMANAGER_GET_NOTIFICATION = (int)16L;
    /**
     * {@snippet lang=c :
     * #define RESOURCEMANAGER_GET_NOTIFICATION 16
     * }
     */
    public static int RESOURCEMANAGER_GET_NOTIFICATION() {
        return RESOURCEMANAGER_GET_NOTIFICATION;
    }
    private static final int RESOURCEMANAGER_REGISTER_PROTOCOL = (int)32L;
    /**
     * {@snippet lang=c :
     * #define RESOURCEMANAGER_REGISTER_PROTOCOL 32
     * }
     */
    public static int RESOURCEMANAGER_REGISTER_PROTOCOL() {
        return RESOURCEMANAGER_REGISTER_PROTOCOL;
    }
    private static final int RESOURCEMANAGER_COMPLETE_PROPAGATION = (int)64L;
    /**
     * {@snippet lang=c :
     * #define RESOURCEMANAGER_COMPLETE_PROPAGATION 64
     * }
     */
    public static int RESOURCEMANAGER_COMPLETE_PROPAGATION() {
        return RESOURCEMANAGER_COMPLETE_PROPAGATION;
    }
    private static final int RESOURCEMANAGER_GENERIC_READ = (int)1179649L;
    /**
     * {@snippet lang=c :
     * #define RESOURCEMANAGER_GENERIC_READ 1179649
     * }
     */
    public static int RESOURCEMANAGER_GENERIC_READ() {
        return RESOURCEMANAGER_GENERIC_READ;
    }
    private static final int RESOURCEMANAGER_GENERIC_WRITE = (int)1179774L;
    /**
     * {@snippet lang=c :
     * #define RESOURCEMANAGER_GENERIC_WRITE 1179774
     * }
     */
    public static int RESOURCEMANAGER_GENERIC_WRITE() {
        return RESOURCEMANAGER_GENERIC_WRITE;
    }
    private static final int RESOURCEMANAGER_GENERIC_EXECUTE = (int)1179740L;
    /**
     * {@snippet lang=c :
     * #define RESOURCEMANAGER_GENERIC_EXECUTE 1179740
     * }
     */
    public static int RESOURCEMANAGER_GENERIC_EXECUTE() {
        return RESOURCEMANAGER_GENERIC_EXECUTE;
    }
    private static final int RESOURCEMANAGER_ALL_ACCESS = (int)2031743L;
    /**
     * {@snippet lang=c :
     * #define RESOURCEMANAGER_ALL_ACCESS 2031743
     * }
     */
    public static int RESOURCEMANAGER_ALL_ACCESS() {
        return RESOURCEMANAGER_ALL_ACCESS;
    }
    private static final int ENLISTMENT_QUERY_INFORMATION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define ENLISTMENT_QUERY_INFORMATION 1
     * }
     */
    public static int ENLISTMENT_QUERY_INFORMATION() {
        return ENLISTMENT_QUERY_INFORMATION;
    }
    private static final int ENLISTMENT_SET_INFORMATION = (int)2L;
    /**
     * {@snippet lang=c :
     * #define ENLISTMENT_SET_INFORMATION 2
     * }
     */
    public static int ENLISTMENT_SET_INFORMATION() {
        return ENLISTMENT_SET_INFORMATION;
    }
    private static final int ENLISTMENT_RECOVER = (int)4L;
    /**
     * {@snippet lang=c :
     * #define ENLISTMENT_RECOVER 4
     * }
     */
    public static int ENLISTMENT_RECOVER() {
        return ENLISTMENT_RECOVER;
    }
    private static final int ENLISTMENT_SUBORDINATE_RIGHTS = (int)8L;
    /**
     * {@snippet lang=c :
     * #define ENLISTMENT_SUBORDINATE_RIGHTS 8
     * }
     */
    public static int ENLISTMENT_SUBORDINATE_RIGHTS() {
        return ENLISTMENT_SUBORDINATE_RIGHTS;
    }
    private static final int ENLISTMENT_SUPERIOR_RIGHTS = (int)16L;
    /**
     * {@snippet lang=c :
     * #define ENLISTMENT_SUPERIOR_RIGHTS 16
     * }
     */
    public static int ENLISTMENT_SUPERIOR_RIGHTS() {
        return ENLISTMENT_SUPERIOR_RIGHTS;
    }
    private static final int ENLISTMENT_GENERIC_READ = (int)131073L;
    /**
     * {@snippet lang=c :
     * #define ENLISTMENT_GENERIC_READ 131073
     * }
     */
    public static int ENLISTMENT_GENERIC_READ() {
        return ENLISTMENT_GENERIC_READ;
    }
    private static final int ENLISTMENT_GENERIC_WRITE = (int)131102L;
    /**
     * {@snippet lang=c :
     * #define ENLISTMENT_GENERIC_WRITE 131102
     * }
     */
    public static int ENLISTMENT_GENERIC_WRITE() {
        return ENLISTMENT_GENERIC_WRITE;
    }
    private static final int ENLISTMENT_GENERIC_EXECUTE = (int)131100L;
    /**
     * {@snippet lang=c :
     * #define ENLISTMENT_GENERIC_EXECUTE 131100
     * }
     */
    public static int ENLISTMENT_GENERIC_EXECUTE() {
        return ENLISTMENT_GENERIC_EXECUTE;
    }
    private static final int ENLISTMENT_ALL_ACCESS = (int)983071L;
    /**
     * {@snippet lang=c :
     * #define ENLISTMENT_ALL_ACCESS 983071
     * }
     */
    public static int ENLISTMENT_ALL_ACCESS() {
        return ENLISTMENT_ALL_ACCESS;
    }
    private static final int ACTIVATION_CONTEXT_SECTION_ASSEMBLY_INFORMATION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define ACTIVATION_CONTEXT_SECTION_ASSEMBLY_INFORMATION 1
     * }
     */
    public static int ACTIVATION_CONTEXT_SECTION_ASSEMBLY_INFORMATION() {
        return ACTIVATION_CONTEXT_SECTION_ASSEMBLY_INFORMATION;
    }
    private static final int ACTIVATION_CONTEXT_SECTION_DLL_REDIRECTION = (int)2L;
    /**
     * {@snippet lang=c :
     * #define ACTIVATION_CONTEXT_SECTION_DLL_REDIRECTION 2
     * }
     */
    public static int ACTIVATION_CONTEXT_SECTION_DLL_REDIRECTION() {
        return ACTIVATION_CONTEXT_SECTION_DLL_REDIRECTION;
    }
    private static final int ACTIVATION_CONTEXT_SECTION_WINDOW_CLASS_REDIRECTION = (int)3L;
    /**
     * {@snippet lang=c :
     * #define ACTIVATION_CONTEXT_SECTION_WINDOW_CLASS_REDIRECTION 3
     * }
     */
    public static int ACTIVATION_CONTEXT_SECTION_WINDOW_CLASS_REDIRECTION() {
        return ACTIVATION_CONTEXT_SECTION_WINDOW_CLASS_REDIRECTION;
    }
    private static final int ACTIVATION_CONTEXT_SECTION_COM_SERVER_REDIRECTION = (int)4L;
    /**
     * {@snippet lang=c :
     * #define ACTIVATION_CONTEXT_SECTION_COM_SERVER_REDIRECTION 4
     * }
     */
    public static int ACTIVATION_CONTEXT_SECTION_COM_SERVER_REDIRECTION() {
        return ACTIVATION_CONTEXT_SECTION_COM_SERVER_REDIRECTION;
    }
    private static final int ACTIVATION_CONTEXT_SECTION_COM_INTERFACE_REDIRECTION = (int)5L;
    /**
     * {@snippet lang=c :
     * #define ACTIVATION_CONTEXT_SECTION_COM_INTERFACE_REDIRECTION 5
     * }
     */
    public static int ACTIVATION_CONTEXT_SECTION_COM_INTERFACE_REDIRECTION() {
        return ACTIVATION_CONTEXT_SECTION_COM_INTERFACE_REDIRECTION;
    }
    private static final int ACTIVATION_CONTEXT_SECTION_COM_TYPE_LIBRARY_REDIRECTION = (int)6L;
    /**
     * {@snippet lang=c :
     * #define ACTIVATION_CONTEXT_SECTION_COM_TYPE_LIBRARY_REDIRECTION 6
     * }
     */
    public static int ACTIVATION_CONTEXT_SECTION_COM_TYPE_LIBRARY_REDIRECTION() {
        return ACTIVATION_CONTEXT_SECTION_COM_TYPE_LIBRARY_REDIRECTION;
    }
    private static final int ACTIVATION_CONTEXT_SECTION_COM_PROGID_REDIRECTION = (int)7L;
    /**
     * {@snippet lang=c :
     * #define ACTIVATION_CONTEXT_SECTION_COM_PROGID_REDIRECTION 7
     * }
     */
    public static int ACTIVATION_CONTEXT_SECTION_COM_PROGID_REDIRECTION() {
        return ACTIVATION_CONTEXT_SECTION_COM_PROGID_REDIRECTION;
    }
    private static final int ACTIVATION_CONTEXT_SECTION_GLOBAL_OBJECT_RENAME_TABLE = (int)8L;
    /**
     * {@snippet lang=c :
     * #define ACTIVATION_CONTEXT_SECTION_GLOBAL_OBJECT_RENAME_TABLE 8
     * }
     */
    public static int ACTIVATION_CONTEXT_SECTION_GLOBAL_OBJECT_RENAME_TABLE() {
        return ACTIVATION_CONTEXT_SECTION_GLOBAL_OBJECT_RENAME_TABLE;
    }
    private static final int ACTIVATION_CONTEXT_SECTION_CLR_SURROGATES = (int)9L;
    /**
     * {@snippet lang=c :
     * #define ACTIVATION_CONTEXT_SECTION_CLR_SURROGATES 9
     * }
     */
    public static int ACTIVATION_CONTEXT_SECTION_CLR_SURROGATES() {
        return ACTIVATION_CONTEXT_SECTION_CLR_SURROGATES;
    }
    private static final int ACTIVATION_CONTEXT_SECTION_APPLICATION_SETTINGS = (int)10L;
    /**
     * {@snippet lang=c :
     * #define ACTIVATION_CONTEXT_SECTION_APPLICATION_SETTINGS 10
     * }
     */
    public static int ACTIVATION_CONTEXT_SECTION_APPLICATION_SETTINGS() {
        return ACTIVATION_CONTEXT_SECTION_APPLICATION_SETTINGS;
    }
    private static final int ACTIVATION_CONTEXT_SECTION_COMPATIBILITY_INFO = (int)11L;
    /**
     * {@snippet lang=c :
     * #define ACTIVATION_CONTEXT_SECTION_COMPATIBILITY_INFO 11
     * }
     */
    public static int ACTIVATION_CONTEXT_SECTION_COMPATIBILITY_INFO() {
        return ACTIVATION_CONTEXT_SECTION_COMPATIBILITY_INFO;
    }
    private static final int ACTIVATION_CONTEXT_SECTION_WINRT_ACTIVATABLE_CLASSES = (int)12L;
    /**
     * {@snippet lang=c :
     * #define ACTIVATION_CONTEXT_SECTION_WINRT_ACTIVATABLE_CLASSES 12
     * }
     */
    public static int ACTIVATION_CONTEXT_SECTION_WINRT_ACTIVATABLE_CLASSES() {
        return ACTIVATION_CONTEXT_SECTION_WINRT_ACTIVATABLE_CLASSES;
    }
    private static final int HFILE_ERROR = (int)-1L;
    /**
     * {@snippet lang=c :
     * #define HFILE_ERROR -1
     * }
     */
    public static int HFILE_ERROR() {
        return HFILE_ERROR;
    }
    private static final int DM_IN_BUFFER = (int)8L;
    /**
     * {@snippet lang=c :
     * #define DM_IN_BUFFER 8
     * }
     */
    public static int DM_IN_BUFFER() {
        return DM_IN_BUFFER;
    }
    private static final int DM_IN_PROMPT = (int)4L;
    /**
     * {@snippet lang=c :
     * #define DM_IN_PROMPT 4
     * }
     */
    public static int DM_IN_PROMPT() {
        return DM_IN_PROMPT;
    }
    private static final int DM_OUT_BUFFER = (int)2L;
    /**
     * {@snippet lang=c :
     * #define DM_OUT_BUFFER 2
     * }
     */
    public static int DM_OUT_BUFFER() {
        return DM_OUT_BUFFER;
    }
    private static final int DM_OUT_DEFAULT = (int)1L;
    /**
     * {@snippet lang=c :
     * #define DM_OUT_DEFAULT 1
     * }
     */
    public static int DM_OUT_DEFAULT() {
        return DM_OUT_DEFAULT;
    }
    private static final MemorySegment DPI_AWARENESS_CONTEXT_UNAWARE = MemorySegment.ofAddress(-1L);
    /**
     * {@snippet lang=c :
     * #define DPI_AWARENESS_CONTEXT_UNAWARE (void*) -1
     * }
     */
    public static MemorySegment DPI_AWARENESS_CONTEXT_UNAWARE() {
        return DPI_AWARENESS_CONTEXT_UNAWARE;
    }
    private static final MemorySegment DPI_AWARENESS_CONTEXT_SYSTEM_AWARE = MemorySegment.ofAddress(-2L);
    /**
     * {@snippet lang=c :
     * #define DPI_AWARENESS_CONTEXT_SYSTEM_AWARE (void*) -2
     * }
     */
    public static MemorySegment DPI_AWARENESS_CONTEXT_SYSTEM_AWARE() {
        return DPI_AWARENESS_CONTEXT_SYSTEM_AWARE;
    }
    private static final MemorySegment DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE = MemorySegment.ofAddress(-3L);
    /**
     * {@snippet lang=c :
     * #define DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE (void*) -3
     * }
     */
    public static MemorySegment DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE() {
        return DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE;
    }
    private static final MemorySegment DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2 = MemorySegment.ofAddress(-4L);
    /**
     * {@snippet lang=c :
     * #define DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2 (void*) -4
     * }
     */
    public static MemorySegment DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2() {
        return DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2;
    }
    private static final MemorySegment DPI_AWARENESS_CONTEXT_UNAWARE_GDISCALED = MemorySegment.ofAddress(-5L);
    /**
     * {@snippet lang=c :
     * #define DPI_AWARENESS_CONTEXT_UNAWARE_GDISCALED (void*) -5
     * }
     */
    public static MemorySegment DPI_AWARENESS_CONTEXT_UNAWARE_GDISCALED() {
        return DPI_AWARENESS_CONTEXT_UNAWARE_GDISCALED;
    }
    private static final int STILL_ACTIVE = (int)259L;
    /**
     * {@snippet lang=c :
     * #define STILL_ACTIVE 259
     * }
     */
    public static int STILL_ACTIVE() {
        return STILL_ACTIVE;
    }
    private static final int EXCEPTION_ACCESS_VIOLATION = (int)3221225477L;
    /**
     * {@snippet lang=c :
     * #define EXCEPTION_ACCESS_VIOLATION 3221225477
     * }
     */
    public static int EXCEPTION_ACCESS_VIOLATION() {
        return EXCEPTION_ACCESS_VIOLATION;
    }
    private static final int EXCEPTION_DATATYPE_MISALIGNMENT = (int)2147483650L;
    /**
     * {@snippet lang=c :
     * #define EXCEPTION_DATATYPE_MISALIGNMENT 2147483650
     * }
     */
    public static int EXCEPTION_DATATYPE_MISALIGNMENT() {
        return EXCEPTION_DATATYPE_MISALIGNMENT;
    }
    private static final int EXCEPTION_BREAKPOINT = (int)2147483651L;
    /**
     * {@snippet lang=c :
     * #define EXCEPTION_BREAKPOINT 2147483651
     * }
     */
    public static int EXCEPTION_BREAKPOINT() {
        return EXCEPTION_BREAKPOINT;
    }
    private static final int EXCEPTION_SINGLE_STEP = (int)2147483652L;
    /**
     * {@snippet lang=c :
     * #define EXCEPTION_SINGLE_STEP 2147483652
     * }
     */
    public static int EXCEPTION_SINGLE_STEP() {
        return EXCEPTION_SINGLE_STEP;
    }
    private static final int EXCEPTION_ARRAY_BOUNDS_EXCEEDED = (int)3221225612L;
    /**
     * {@snippet lang=c :
     * #define EXCEPTION_ARRAY_BOUNDS_EXCEEDED 3221225612
     * }
     */
    public static int EXCEPTION_ARRAY_BOUNDS_EXCEEDED() {
        return EXCEPTION_ARRAY_BOUNDS_EXCEEDED;
    }
    private static final int EXCEPTION_FLT_DENORMAL_OPERAND = (int)3221225613L;
    /**
     * {@snippet lang=c :
     * #define EXCEPTION_FLT_DENORMAL_OPERAND 3221225613
     * }
     */
    public static int EXCEPTION_FLT_DENORMAL_OPERAND() {
        return EXCEPTION_FLT_DENORMAL_OPERAND;
    }
    private static final int EXCEPTION_FLT_DIVIDE_BY_ZERO = (int)3221225614L;
    /**
     * {@snippet lang=c :
     * #define EXCEPTION_FLT_DIVIDE_BY_ZERO 3221225614
     * }
     */
    public static int EXCEPTION_FLT_DIVIDE_BY_ZERO() {
        return EXCEPTION_FLT_DIVIDE_BY_ZERO;
    }
    private static final int EXCEPTION_FLT_INEXACT_RESULT = (int)3221225615L;
    /**
     * {@snippet lang=c :
     * #define EXCEPTION_FLT_INEXACT_RESULT 3221225615
     * }
     */
    public static int EXCEPTION_FLT_INEXACT_RESULT() {
        return EXCEPTION_FLT_INEXACT_RESULT;
    }
    private static final int EXCEPTION_FLT_INVALID_OPERATION = (int)3221225616L;
    /**
     * {@snippet lang=c :
     * #define EXCEPTION_FLT_INVALID_OPERATION 3221225616
     * }
     */
    public static int EXCEPTION_FLT_INVALID_OPERATION() {
        return EXCEPTION_FLT_INVALID_OPERATION;
    }
    private static final int EXCEPTION_FLT_OVERFLOW = (int)3221225617L;
    /**
     * {@snippet lang=c :
     * #define EXCEPTION_FLT_OVERFLOW 3221225617
     * }
     */
    public static int EXCEPTION_FLT_OVERFLOW() {
        return EXCEPTION_FLT_OVERFLOW;
    }
    private static final int EXCEPTION_FLT_STACK_CHECK = (int)3221225618L;
    /**
     * {@snippet lang=c :
     * #define EXCEPTION_FLT_STACK_CHECK 3221225618
     * }
     */
    public static int EXCEPTION_FLT_STACK_CHECK() {
        return EXCEPTION_FLT_STACK_CHECK;
    }
    private static final int EXCEPTION_FLT_UNDERFLOW = (int)3221225619L;
    /**
     * {@snippet lang=c :
     * #define EXCEPTION_FLT_UNDERFLOW 3221225619
     * }
     */
    public static int EXCEPTION_FLT_UNDERFLOW() {
        return EXCEPTION_FLT_UNDERFLOW;
    }
    private static final int EXCEPTION_INT_DIVIDE_BY_ZERO = (int)3221225620L;
    /**
     * {@snippet lang=c :
     * #define EXCEPTION_INT_DIVIDE_BY_ZERO 3221225620
     * }
     */
    public static int EXCEPTION_INT_DIVIDE_BY_ZERO() {
        return EXCEPTION_INT_DIVIDE_BY_ZERO;
    }
    private static final int EXCEPTION_INT_OVERFLOW = (int)3221225621L;
    /**
     * {@snippet lang=c :
     * #define EXCEPTION_INT_OVERFLOW 3221225621
     * }
     */
    public static int EXCEPTION_INT_OVERFLOW() {
        return EXCEPTION_INT_OVERFLOW;
    }
    private static final int EXCEPTION_PRIV_INSTRUCTION = (int)3221225622L;
    /**
     * {@snippet lang=c :
     * #define EXCEPTION_PRIV_INSTRUCTION 3221225622
     * }
     */
    public static int EXCEPTION_PRIV_INSTRUCTION() {
        return EXCEPTION_PRIV_INSTRUCTION;
    }
    private static final int EXCEPTION_IN_PAGE_ERROR = (int)3221225478L;
    /**
     * {@snippet lang=c :
     * #define EXCEPTION_IN_PAGE_ERROR 3221225478
     * }
     */
    public static int EXCEPTION_IN_PAGE_ERROR() {
        return EXCEPTION_IN_PAGE_ERROR;
    }
    private static final int EXCEPTION_ILLEGAL_INSTRUCTION = (int)3221225501L;
    /**
     * {@snippet lang=c :
     * #define EXCEPTION_ILLEGAL_INSTRUCTION 3221225501
     * }
     */
    public static int EXCEPTION_ILLEGAL_INSTRUCTION() {
        return EXCEPTION_ILLEGAL_INSTRUCTION;
    }
    private static final int EXCEPTION_NONCONTINUABLE_EXCEPTION = (int)3221225509L;
    /**
     * {@snippet lang=c :
     * #define EXCEPTION_NONCONTINUABLE_EXCEPTION 3221225509
     * }
     */
    public static int EXCEPTION_NONCONTINUABLE_EXCEPTION() {
        return EXCEPTION_NONCONTINUABLE_EXCEPTION;
    }
    private static final int EXCEPTION_STACK_OVERFLOW = (int)3221225725L;
    /**
     * {@snippet lang=c :
     * #define EXCEPTION_STACK_OVERFLOW 3221225725
     * }
     */
    public static int EXCEPTION_STACK_OVERFLOW() {
        return EXCEPTION_STACK_OVERFLOW;
    }
    private static final int EXCEPTION_INVALID_DISPOSITION = (int)3221225510L;
    /**
     * {@snippet lang=c :
     * #define EXCEPTION_INVALID_DISPOSITION 3221225510
     * }
     */
    public static int EXCEPTION_INVALID_DISPOSITION() {
        return EXCEPTION_INVALID_DISPOSITION;
    }
    private static final int EXCEPTION_GUARD_PAGE = (int)2147483649L;
    /**
     * {@snippet lang=c :
     * #define EXCEPTION_GUARD_PAGE 2147483649
     * }
     */
    public static int EXCEPTION_GUARD_PAGE() {
        return EXCEPTION_GUARD_PAGE;
    }
    private static final int EXCEPTION_INVALID_HANDLE = (int)3221225480L;
    /**
     * {@snippet lang=c :
     * #define EXCEPTION_INVALID_HANDLE 3221225480
     * }
     */
    public static int EXCEPTION_INVALID_HANDLE() {
        return EXCEPTION_INVALID_HANDLE;
    }
    private static final int CONTROL_C_EXIT = (int)3221225786L;
    /**
     * {@snippet lang=c :
     * #define CONTROL_C_EXIT 3221225786
     * }
     */
    public static int CONTROL_C_EXIT() {
        return CONTROL_C_EXIT;
    }
    private static final int LHND = (int)66L;
    /**
     * {@snippet lang=c :
     * #define LHND 66
     * }
     */
    public static int LHND() {
        return LHND;
    }
    private static final int LPTR = (int)64L;
    /**
     * {@snippet lang=c :
     * #define LPTR 64
     * }
     */
    public static int LPTR() {
        return LPTR;
    }
    private static final int NONZEROLHND = (int)2L;
    /**
     * {@snippet lang=c :
     * #define NONZEROLHND 2
     * }
     */
    public static int NONZEROLHND() {
        return NONZEROLHND;
    }
    private static final int NONZEROLPTR = (int)0L;
    /**
     * {@snippet lang=c :
     * #define NONZEROLPTR 0
     * }
     */
    public static int NONZEROLPTR() {
        return NONZEROLPTR;
    }
    private static final int NUMA_NO_PREFERRED_NODE = (int)4294967295L;
    /**
     * {@snippet lang=c :
     * #define NUMA_NO_PREFERRED_NODE 4294967295
     * }
     */
    public static int NUMA_NO_PREFERRED_NODE() {
        return NUMA_NO_PREFERRED_NODE;
    }
    private static final int INVALID_FILE_SIZE = (int)4294967295L;
    /**
     * {@snippet lang=c :
     * #define INVALID_FILE_SIZE 4294967295
     * }
     */
    public static int INVALID_FILE_SIZE() {
        return INVALID_FILE_SIZE;
    }
    private static final int INVALID_SET_FILE_POINTER = (int)4294967295L;
    /**
     * {@snippet lang=c :
     * #define INVALID_SET_FILE_POINTER 4294967295
     * }
     */
    public static int INVALID_SET_FILE_POINTER() {
        return INVALID_SET_FILE_POINTER;
    }
    private static final int INVALID_FILE_ATTRIBUTES = (int)4294967295L;
    /**
     * {@snippet lang=c :
     * #define INVALID_FILE_ATTRIBUTES 4294967295
     * }
     */
    public static int INVALID_FILE_ATTRIBUTES() {
        return INVALID_FILE_ATTRIBUTES;
    }
    private static final MemorySegment INVALID_HANDLE_VALUE = MemorySegment.ofAddress(-1L);
    /**
     * {@snippet lang=c :
     * #define INVALID_HANDLE_VALUE (void*) -1
     * }
     */
    public static MemorySegment INVALID_HANDLE_VALUE() {
        return INVALID_HANDLE_VALUE;
    }
    private static final int FLS_OUT_OF_INDEXES = (int)4294967295L;
    /**
     * {@snippet lang=c :
     * #define FLS_OUT_OF_INDEXES 4294967295
     * }
     */
    public static int FLS_OUT_OF_INDEXES() {
        return FLS_OUT_OF_INDEXES;
    }
    private static final int INIT_ONCE_CHECK_ONLY = (int)1L;
    /**
     * {@snippet lang=c :
     * #define INIT_ONCE_CHECK_ONLY 1
     * }
     */
    public static int INIT_ONCE_CHECK_ONLY() {
        return INIT_ONCE_CHECK_ONLY;
    }
    private static final int INIT_ONCE_ASYNC = (int)2L;
    /**
     * {@snippet lang=c :
     * #define INIT_ONCE_ASYNC 2
     * }
     */
    public static int INIT_ONCE_ASYNC() {
        return INIT_ONCE_ASYNC;
    }
    private static final int INIT_ONCE_INIT_FAILED = (int)4L;
    /**
     * {@snippet lang=c :
     * #define INIT_ONCE_INIT_FAILED 4
     * }
     */
    public static int INIT_ONCE_INIT_FAILED() {
        return INIT_ONCE_INIT_FAILED;
    }
    private static final int INIT_ONCE_CTX_RESERVED_BITS = (int)2L;
    /**
     * {@snippet lang=c :
     * #define INIT_ONCE_CTX_RESERVED_BITS 2
     * }
     */
    public static int INIT_ONCE_CTX_RESERVED_BITS() {
        return INIT_ONCE_CTX_RESERVED_BITS;
    }
    private static final int CONDITION_VARIABLE_LOCKMODE_SHARED = (int)1L;
    /**
     * {@snippet lang=c :
     * #define CONDITION_VARIABLE_LOCKMODE_SHARED 1
     * }
     */
    public static int CONDITION_VARIABLE_LOCKMODE_SHARED() {
        return CONDITION_VARIABLE_LOCKMODE_SHARED;
    }
    private static final int MUTEX_MODIFY_STATE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define MUTEX_MODIFY_STATE 1
     * }
     */
    public static int MUTEX_MODIFY_STATE() {
        return MUTEX_MODIFY_STATE;
    }
    private static final int MUTEX_ALL_ACCESS = (int)2031617L;
    /**
     * {@snippet lang=c :
     * #define MUTEX_ALL_ACCESS 2031617
     * }
     */
    public static int MUTEX_ALL_ACCESS() {
        return MUTEX_ALL_ACCESS;
    }
    private static final int TLS_OUT_OF_INDEXES = (int)4294967295L;
    /**
     * {@snippet lang=c :
     * #define TLS_OUT_OF_INDEXES 4294967295
     * }
     */
    public static int TLS_OUT_OF_INDEXES() {
        return TLS_OUT_OF_INDEXES;
    }
    private static final int PROCESS_AFFINITY_ENABLE_AUTO_UPDATE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_AFFINITY_ENABLE_AUTO_UPDATE 1
     * }
     */
    public static int PROCESS_AFFINITY_ENABLE_AUTO_UPDATE() {
        return PROCESS_AFFINITY_ENABLE_AUTO_UPDATE;
    }
    private static final int THREAD_POWER_THROTTLING_VALID_FLAGS = (int)1L;
    /**
     * {@snippet lang=c :
     * #define THREAD_POWER_THROTTLING_VALID_FLAGS 1
     * }
     */
    public static int THREAD_POWER_THROTTLING_VALID_FLAGS() {
        return THREAD_POWER_THROTTLING_VALID_FLAGS;
    }
    private static final int PROCESS_POWER_THROTTLING_VALID_FLAGS = (int)5L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_POWER_THROTTLING_VALID_FLAGS 5
     * }
     */
    public static int PROCESS_POWER_THROTTLING_VALID_FLAGS() {
        return PROCESS_POWER_THROTTLING_VALID_FLAGS;
    }
    private static final int PROCESS_LEAP_SECOND_INFO_VALID_FLAGS = (int)1L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_LEAP_SECOND_INFO_VALID_FLAGS 1
     * }
     */
    public static int PROCESS_LEAP_SECOND_INFO_VALID_FLAGS() {
        return PROCESS_LEAP_SECOND_INFO_VALID_FLAGS;
    }
    private static final int FILE_MAP_WRITE = (int)2L;
    /**
     * {@snippet lang=c :
     * #define FILE_MAP_WRITE 2
     * }
     */
    public static int FILE_MAP_WRITE() {
        return FILE_MAP_WRITE;
    }
    private static final int FILE_MAP_READ = (int)4L;
    /**
     * {@snippet lang=c :
     * #define FILE_MAP_READ 4
     * }
     */
    public static int FILE_MAP_READ() {
        return FILE_MAP_READ;
    }
    private static final int FILE_MAP_ALL_ACCESS = (int)983071L;
    /**
     * {@snippet lang=c :
     * #define FILE_MAP_ALL_ACCESS 983071
     * }
     */
    public static int FILE_MAP_ALL_ACCESS() {
        return FILE_MAP_ALL_ACCESS;
    }
    private static final int FILE_MAP_EXECUTE = (int)32L;
    /**
     * {@snippet lang=c :
     * #define FILE_MAP_EXECUTE 32
     * }
     */
    public static int FILE_MAP_EXECUTE() {
        return FILE_MAP_EXECUTE;
    }
    private static final int FILE_MAP_RESERVE = (int)2147483648L;
    /**
     * {@snippet lang=c :
     * #define FILE_MAP_RESERVE 2147483648
     * }
     */
    public static int FILE_MAP_RESERVE() {
        return FILE_MAP_RESERVE;
    }
    private static final int WIN32_MEMORY_NUMA_PERFORMANCE_ALL_TARGET_NODE = (int)4294967295L;
    /**
     * {@snippet lang=c :
     * #define WIN32_MEMORY_NUMA_PERFORMANCE_ALL_TARGET_NODE 4294967295
     * }
     */
    public static int WIN32_MEMORY_NUMA_PERFORMANCE_ALL_TARGET_NODE() {
        return WIN32_MEMORY_NUMA_PERFORMANCE_ALL_TARGET_NODE;
    }
    private static final int FIND_RESOURCE_DIRECTORY_TYPES = (int)256L;
    /**
     * {@snippet lang=c :
     * #define FIND_RESOURCE_DIRECTORY_TYPES 256
     * }
     */
    public static int FIND_RESOURCE_DIRECTORY_TYPES() {
        return FIND_RESOURCE_DIRECTORY_TYPES;
    }
    private static final int FIND_RESOURCE_DIRECTORY_NAMES = (int)512L;
    /**
     * {@snippet lang=c :
     * #define FIND_RESOURCE_DIRECTORY_NAMES 512
     * }
     */
    public static int FIND_RESOURCE_DIRECTORY_NAMES() {
        return FIND_RESOURCE_DIRECTORY_NAMES;
    }
    private static final int FIND_RESOURCE_DIRECTORY_LANGUAGES = (int)1024L;
    /**
     * {@snippet lang=c :
     * #define FIND_RESOURCE_DIRECTORY_LANGUAGES 1024
     * }
     */
    public static int FIND_RESOURCE_DIRECTORY_LANGUAGES() {
        return FIND_RESOURCE_DIRECTORY_LANGUAGES;
    }
    private static final int RESOURCE_ENUM_LN = (int)1L;
    /**
     * {@snippet lang=c :
     * #define RESOURCE_ENUM_LN 1
     * }
     */
    public static int RESOURCE_ENUM_LN() {
        return RESOURCE_ENUM_LN;
    }
    private static final int RESOURCE_ENUM_MUI = (int)2L;
    /**
     * {@snippet lang=c :
     * #define RESOURCE_ENUM_MUI 2
     * }
     */
    public static int RESOURCE_ENUM_MUI() {
        return RESOURCE_ENUM_MUI;
    }
    private static final int RESOURCE_ENUM_MUI_SYSTEM = (int)4L;
    /**
     * {@snippet lang=c :
     * #define RESOURCE_ENUM_MUI_SYSTEM 4
     * }
     */
    public static int RESOURCE_ENUM_MUI_SYSTEM() {
        return RESOURCE_ENUM_MUI_SYSTEM;
    }
    private static final int RESOURCE_ENUM_VALIDATE = (int)8L;
    /**
     * {@snippet lang=c :
     * #define RESOURCE_ENUM_VALIDATE 8
     * }
     */
    public static int RESOURCE_ENUM_VALIDATE() {
        return RESOURCE_ENUM_VALIDATE;
    }
    private static final int RESOURCE_ENUM_MODULE_EXACT = (int)16L;
    /**
     * {@snippet lang=c :
     * #define RESOURCE_ENUM_MODULE_EXACT 16
     * }
     */
    public static int RESOURCE_ENUM_MODULE_EXACT() {
        return RESOURCE_ENUM_MODULE_EXACT;
    }
    private static final int GET_MODULE_HANDLE_EX_FLAG_PIN = (int)1L;
    /**
     * {@snippet lang=c :
     * #define GET_MODULE_HANDLE_EX_FLAG_PIN 1
     * }
     */
    public static int GET_MODULE_HANDLE_EX_FLAG_PIN() {
        return GET_MODULE_HANDLE_EX_FLAG_PIN;
    }
    private static final int GET_MODULE_HANDLE_EX_FLAG_UNCHANGED_REFCOUNT = (int)2L;
    /**
     * {@snippet lang=c :
     * #define GET_MODULE_HANDLE_EX_FLAG_UNCHANGED_REFCOUNT 2
     * }
     */
    public static int GET_MODULE_HANDLE_EX_FLAG_UNCHANGED_REFCOUNT() {
        return GET_MODULE_HANDLE_EX_FLAG_UNCHANGED_REFCOUNT;
    }
    private static final int GET_MODULE_HANDLE_EX_FLAG_FROM_ADDRESS = (int)4L;
    /**
     * {@snippet lang=c :
     * #define GET_MODULE_HANDLE_EX_FLAG_FROM_ADDRESS 4
     * }
     */
    public static int GET_MODULE_HANDLE_EX_FLAG_FROM_ADDRESS() {
        return GET_MODULE_HANDLE_EX_FLAG_FROM_ADDRESS;
    }
    private static final int WAIT_FAILED = (int)4294967295L;
    /**
     * {@snippet lang=c :
     * #define WAIT_FAILED 4294967295
     * }
     */
    public static int WAIT_FAILED() {
        return WAIT_FAILED;
    }
    private static final int WAIT_OBJECT_0 = (int)0L;
    /**
     * {@snippet lang=c :
     * #define WAIT_OBJECT_0 0
     * }
     */
    public static int WAIT_OBJECT_0() {
        return WAIT_OBJECT_0;
    }
    private static final int WAIT_ABANDONED = (int)128L;
    /**
     * {@snippet lang=c :
     * #define WAIT_ABANDONED 128
     * }
     */
    public static int WAIT_ABANDONED() {
        return WAIT_ABANDONED;
    }
    private static final int WAIT_ABANDONED_0 = (int)128L;
    /**
     * {@snippet lang=c :
     * #define WAIT_ABANDONED_0 128
     * }
     */
    public static int WAIT_ABANDONED_0() {
        return WAIT_ABANDONED_0;
    }
    private static final int WAIT_IO_COMPLETION = (int)192L;
    /**
     * {@snippet lang=c :
     * #define WAIT_IO_COMPLETION 192
     * }
     */
    public static int WAIT_IO_COMPLETION() {
        return WAIT_IO_COMPLETION;
    }
    private static final int FILE_FLAG_WRITE_THROUGH = (int)2147483648L;
    /**
     * {@snippet lang=c :
     * #define FILE_FLAG_WRITE_THROUGH 2147483648
     * }
     */
    public static int FILE_FLAG_WRITE_THROUGH() {
        return FILE_FLAG_WRITE_THROUGH;
    }
    private static final int COPY_FILE_DISABLE_SPARSE_COPY = (int)2147483648L;
    /**
     * {@snippet lang=c :
     * #define COPY_FILE_DISABLE_SPARSE_COPY 2147483648
     * }
     */
    public static int COPY_FILE_DISABLE_SPARSE_COPY() {
        return COPY_FILE_DISABLE_SPARSE_COPY;
    }
    private static final int SECURITY_ANONYMOUS = (int)0L;
    /**
     * {@snippet lang=c :
     * #define SECURITY_ANONYMOUS 0
     * }
     */
    public static int SECURITY_ANONYMOUS() {
        return SECURITY_ANONYMOUS;
    }
    private static final int SECURITY_IDENTIFICATION = (int)65536L;
    /**
     * {@snippet lang=c :
     * #define SECURITY_IDENTIFICATION 65536
     * }
     */
    public static int SECURITY_IDENTIFICATION() {
        return SECURITY_IDENTIFICATION;
    }
    private static final int SECURITY_IMPERSONATION = (int)131072L;
    /**
     * {@snippet lang=c :
     * #define SECURITY_IMPERSONATION 131072
     * }
     */
    public static int SECURITY_IMPERSONATION() {
        return SECURITY_IMPERSONATION;
    }
    private static final int SECURITY_DELEGATION = (int)196608L;
    /**
     * {@snippet lang=c :
     * #define SECURITY_DELEGATION 196608
     * }
     */
    public static int SECURITY_DELEGATION() {
        return SECURITY_DELEGATION;
    }
    private static final int SP_SERIALCOMM = (int)1L;
    /**
     * {@snippet lang=c :
     * #define SP_SERIALCOMM 1
     * }
     */
    public static int SP_SERIALCOMM() {
        return SP_SERIALCOMM;
    }
    private static final int PST_UNSPECIFIED = (int)0L;
    /**
     * {@snippet lang=c :
     * #define PST_UNSPECIFIED 0
     * }
     */
    public static int PST_UNSPECIFIED() {
        return PST_UNSPECIFIED;
    }
    private static final int PST_RS232 = (int)1L;
    /**
     * {@snippet lang=c :
     * #define PST_RS232 1
     * }
     */
    public static int PST_RS232() {
        return PST_RS232;
    }
    private static final int PST_PARALLELPORT = (int)2L;
    /**
     * {@snippet lang=c :
     * #define PST_PARALLELPORT 2
     * }
     */
    public static int PST_PARALLELPORT() {
        return PST_PARALLELPORT;
    }
    private static final int PST_RS422 = (int)3L;
    /**
     * {@snippet lang=c :
     * #define PST_RS422 3
     * }
     */
    public static int PST_RS422() {
        return PST_RS422;
    }
    private static final int PST_RS423 = (int)4L;
    /**
     * {@snippet lang=c :
     * #define PST_RS423 4
     * }
     */
    public static int PST_RS423() {
        return PST_RS423;
    }
    private static final int PST_RS449 = (int)5L;
    /**
     * {@snippet lang=c :
     * #define PST_RS449 5
     * }
     */
    public static int PST_RS449() {
        return PST_RS449;
    }
    private static final int PST_MODEM = (int)6L;
    /**
     * {@snippet lang=c :
     * #define PST_MODEM 6
     * }
     */
    public static int PST_MODEM() {
        return PST_MODEM;
    }
    private static final int PST_FAX = (int)33L;
    /**
     * {@snippet lang=c :
     * #define PST_FAX 33
     * }
     */
    public static int PST_FAX() {
        return PST_FAX;
    }
    private static final int PST_SCANNER = (int)34L;
    /**
     * {@snippet lang=c :
     * #define PST_SCANNER 34
     * }
     */
    public static int PST_SCANNER() {
        return PST_SCANNER;
    }
    private static final int PST_NETWORK_BRIDGE = (int)256L;
    /**
     * {@snippet lang=c :
     * #define PST_NETWORK_BRIDGE 256
     * }
     */
    public static int PST_NETWORK_BRIDGE() {
        return PST_NETWORK_BRIDGE;
    }
    private static final int PST_LAT = (int)257L;
    /**
     * {@snippet lang=c :
     * #define PST_LAT 257
     * }
     */
    public static int PST_LAT() {
        return PST_LAT;
    }
    private static final int PST_TCPIP_TELNET = (int)258L;
    /**
     * {@snippet lang=c :
     * #define PST_TCPIP_TELNET 258
     * }
     */
    public static int PST_TCPIP_TELNET() {
        return PST_TCPIP_TELNET;
    }
    private static final int PST_X25 = (int)259L;
    /**
     * {@snippet lang=c :
     * #define PST_X25 259
     * }
     */
    public static int PST_X25() {
        return PST_X25;
    }
    private static final int PCF_DTRDSR = (int)1L;
    /**
     * {@snippet lang=c :
     * #define PCF_DTRDSR 1
     * }
     */
    public static int PCF_DTRDSR() {
        return PCF_DTRDSR;
    }
    private static final int PCF_RTSCTS = (int)2L;
    /**
     * {@snippet lang=c :
     * #define PCF_RTSCTS 2
     * }
     */
    public static int PCF_RTSCTS() {
        return PCF_RTSCTS;
    }
    private static final int PCF_RLSD = (int)4L;
    /**
     * {@snippet lang=c :
     * #define PCF_RLSD 4
     * }
     */
    public static int PCF_RLSD() {
        return PCF_RLSD;
    }
    private static final int PCF_PARITY_CHECK = (int)8L;
    /**
     * {@snippet lang=c :
     * #define PCF_PARITY_CHECK 8
     * }
     */
    public static int PCF_PARITY_CHECK() {
        return PCF_PARITY_CHECK;
    }
    private static final int PCF_XONXOFF = (int)16L;
    /**
     * {@snippet lang=c :
     * #define PCF_XONXOFF 16
     * }
     */
    public static int PCF_XONXOFF() {
        return PCF_XONXOFF;
    }
    private static final int PCF_SETXCHAR = (int)32L;
    /**
     * {@snippet lang=c :
     * #define PCF_SETXCHAR 32
     * }
     */
    public static int PCF_SETXCHAR() {
        return PCF_SETXCHAR;
    }
    private static final int PCF_TOTALTIMEOUTS = (int)64L;
    /**
     * {@snippet lang=c :
     * #define PCF_TOTALTIMEOUTS 64
     * }
     */
    public static int PCF_TOTALTIMEOUTS() {
        return PCF_TOTALTIMEOUTS;
    }
    private static final int PCF_INTTIMEOUTS = (int)128L;
    /**
     * {@snippet lang=c :
     * #define PCF_INTTIMEOUTS 128
     * }
     */
    public static int PCF_INTTIMEOUTS() {
        return PCF_INTTIMEOUTS;
    }
    private static final int PCF_SPECIALCHARS = (int)256L;
    /**
     * {@snippet lang=c :
     * #define PCF_SPECIALCHARS 256
     * }
     */
    public static int PCF_SPECIALCHARS() {
        return PCF_SPECIALCHARS;
    }
    private static final int PCF_16BITMODE = (int)512L;
    /**
     * {@snippet lang=c :
     * #define PCF_16BITMODE 512
     * }
     */
    public static int PCF_16BITMODE() {
        return PCF_16BITMODE;
    }
    private static final int SP_PARITY = (int)1L;
    /**
     * {@snippet lang=c :
     * #define SP_PARITY 1
     * }
     */
    public static int SP_PARITY() {
        return SP_PARITY;
    }
    private static final int SP_BAUD = (int)2L;
    /**
     * {@snippet lang=c :
     * #define SP_BAUD 2
     * }
     */
    public static int SP_BAUD() {
        return SP_BAUD;
    }
    private static final int SP_DATABITS = (int)4L;
    /**
     * {@snippet lang=c :
     * #define SP_DATABITS 4
     * }
     */
    public static int SP_DATABITS() {
        return SP_DATABITS;
    }
    private static final int SP_STOPBITS = (int)8L;
    /**
     * {@snippet lang=c :
     * #define SP_STOPBITS 8
     * }
     */
    public static int SP_STOPBITS() {
        return SP_STOPBITS;
    }
    private static final int SP_HANDSHAKING = (int)16L;
    /**
     * {@snippet lang=c :
     * #define SP_HANDSHAKING 16
     * }
     */
    public static int SP_HANDSHAKING() {
        return SP_HANDSHAKING;
    }
    private static final int SP_PARITY_CHECK = (int)32L;
    /**
     * {@snippet lang=c :
     * #define SP_PARITY_CHECK 32
     * }
     */
    public static int SP_PARITY_CHECK() {
        return SP_PARITY_CHECK;
    }
    private static final int SP_RLSD = (int)64L;
    /**
     * {@snippet lang=c :
     * #define SP_RLSD 64
     * }
     */
    public static int SP_RLSD() {
        return SP_RLSD;
    }
    private static final int BAUD_075 = (int)1L;
    /**
     * {@snippet lang=c :
     * #define BAUD_075 1
     * }
     */
    public static int BAUD_075() {
        return BAUD_075;
    }
    private static final int BAUD_110 = (int)2L;
    /**
     * {@snippet lang=c :
     * #define BAUD_110 2
     * }
     */
    public static int BAUD_110() {
        return BAUD_110;
    }
    private static final int BAUD_134_5 = (int)4L;
    /**
     * {@snippet lang=c :
     * #define BAUD_134_5 4
     * }
     */
    public static int BAUD_134_5() {
        return BAUD_134_5;
    }
    private static final int BAUD_150 = (int)8L;
    /**
     * {@snippet lang=c :
     * #define BAUD_150 8
     * }
     */
    public static int BAUD_150() {
        return BAUD_150;
    }
    private static final int BAUD_300 = (int)16L;
    /**
     * {@snippet lang=c :
     * #define BAUD_300 16
     * }
     */
    public static int BAUD_300() {
        return BAUD_300;
    }
    private static final int BAUD_600 = (int)32L;
    /**
     * {@snippet lang=c :
     * #define BAUD_600 32
     * }
     */
    public static int BAUD_600() {
        return BAUD_600;
    }
    private static final int BAUD_1200 = (int)64L;
    /**
     * {@snippet lang=c :
     * #define BAUD_1200 64
     * }
     */
    public static int BAUD_1200() {
        return BAUD_1200;
    }
    private static final int BAUD_1800 = (int)128L;
    /**
     * {@snippet lang=c :
     * #define BAUD_1800 128
     * }
     */
    public static int BAUD_1800() {
        return BAUD_1800;
    }
    private static final int BAUD_2400 = (int)256L;
    /**
     * {@snippet lang=c :
     * #define BAUD_2400 256
     * }
     */
    public static int BAUD_2400() {
        return BAUD_2400;
    }
    private static final int BAUD_4800 = (int)512L;
    /**
     * {@snippet lang=c :
     * #define BAUD_4800 512
     * }
     */
    public static int BAUD_4800() {
        return BAUD_4800;
    }
    private static final int BAUD_7200 = (int)1024L;
    /**
     * {@snippet lang=c :
     * #define BAUD_7200 1024
     * }
     */
    public static int BAUD_7200() {
        return BAUD_7200;
    }
    private static final int BAUD_9600 = (int)2048L;
    /**
     * {@snippet lang=c :
     * #define BAUD_9600 2048
     * }
     */
    public static int BAUD_9600() {
        return BAUD_9600;
    }
    private static final int BAUD_14400 = (int)4096L;
    /**
     * {@snippet lang=c :
     * #define BAUD_14400 4096
     * }
     */
    public static int BAUD_14400() {
        return BAUD_14400;
    }
    private static final int BAUD_19200 = (int)8192L;
    /**
     * {@snippet lang=c :
     * #define BAUD_19200 8192
     * }
     */
    public static int BAUD_19200() {
        return BAUD_19200;
    }
    private static final int BAUD_38400 = (int)16384L;
    /**
     * {@snippet lang=c :
     * #define BAUD_38400 16384
     * }
     */
    public static int BAUD_38400() {
        return BAUD_38400;
    }
    private static final int BAUD_56K = (int)32768L;
    /**
     * {@snippet lang=c :
     * #define BAUD_56K 32768
     * }
     */
    public static int BAUD_56K() {
        return BAUD_56K;
    }
    private static final int BAUD_128K = (int)65536L;
    /**
     * {@snippet lang=c :
     * #define BAUD_128K 65536
     * }
     */
    public static int BAUD_128K() {
        return BAUD_128K;
    }
    private static final int BAUD_115200 = (int)131072L;
    /**
     * {@snippet lang=c :
     * #define BAUD_115200 131072
     * }
     */
    public static int BAUD_115200() {
        return BAUD_115200;
    }
    private static final int BAUD_57600 = (int)262144L;
    /**
     * {@snippet lang=c :
     * #define BAUD_57600 262144
     * }
     */
    public static int BAUD_57600() {
        return BAUD_57600;
    }
    private static final int BAUD_USER = (int)268435456L;
    /**
     * {@snippet lang=c :
     * #define BAUD_USER 268435456
     * }
     */
    public static int BAUD_USER() {
        return BAUD_USER;
    }
    private static final short DATABITS_5 = (short)1L;
    /**
     * {@snippet lang=c :
     * #define DATABITS_5 1
     * }
     */
    public static short DATABITS_5() {
        return DATABITS_5;
    }
    private static final short DATABITS_6 = (short)2L;
    /**
     * {@snippet lang=c :
     * #define DATABITS_6 2
     * }
     */
    public static short DATABITS_6() {
        return DATABITS_6;
    }
    private static final short DATABITS_7 = (short)4L;
    /**
     * {@snippet lang=c :
     * #define DATABITS_7 4
     * }
     */
    public static short DATABITS_7() {
        return DATABITS_7;
    }
    private static final short DATABITS_8 = (short)8L;
    /**
     * {@snippet lang=c :
     * #define DATABITS_8 8
     * }
     */
    public static short DATABITS_8() {
        return DATABITS_8;
    }
    private static final short DATABITS_16 = (short)16L;
    /**
     * {@snippet lang=c :
     * #define DATABITS_16 16
     * }
     */
    public static short DATABITS_16() {
        return DATABITS_16;
    }
    private static final short DATABITS_16X = (short)32L;
    /**
     * {@snippet lang=c :
     * #define DATABITS_16X 32
     * }
     */
    public static short DATABITS_16X() {
        return DATABITS_16X;
    }
    private static final short STOPBITS_10 = (short)1L;
    /**
     * {@snippet lang=c :
     * #define STOPBITS_10 1
     * }
     */
    public static short STOPBITS_10() {
        return STOPBITS_10;
    }
    private static final short STOPBITS_15 = (short)2L;
    /**
     * {@snippet lang=c :
     * #define STOPBITS_15 2
     * }
     */
    public static short STOPBITS_15() {
        return STOPBITS_15;
    }
    private static final short STOPBITS_20 = (short)4L;
    /**
     * {@snippet lang=c :
     * #define STOPBITS_20 4
     * }
     */
    public static short STOPBITS_20() {
        return STOPBITS_20;
    }
    private static final short PARITY_NONE = (short)256L;
    /**
     * {@snippet lang=c :
     * #define PARITY_NONE 256
     * }
     */
    public static short PARITY_NONE() {
        return PARITY_NONE;
    }
    private static final short PARITY_ODD = (short)512L;
    /**
     * {@snippet lang=c :
     * #define PARITY_ODD 512
     * }
     */
    public static short PARITY_ODD() {
        return PARITY_ODD;
    }
    private static final short PARITY_EVEN = (short)1024L;
    /**
     * {@snippet lang=c :
     * #define PARITY_EVEN 1024
     * }
     */
    public static short PARITY_EVEN() {
        return PARITY_EVEN;
    }
    private static final short PARITY_MARK = (short)2048L;
    /**
     * {@snippet lang=c :
     * #define PARITY_MARK 2048
     * }
     */
    public static short PARITY_MARK() {
        return PARITY_MARK;
    }
    private static final short PARITY_SPACE = (short)4096L;
    /**
     * {@snippet lang=c :
     * #define PARITY_SPACE 4096
     * }
     */
    public static short PARITY_SPACE() {
        return PARITY_SPACE;
    }
    private static final int COMMPROP_INITIALIZED = (int)3879531822L;
    /**
     * {@snippet lang=c :
     * #define COMMPROP_INITIALIZED 3879531822
     * }
     */
    public static int COMMPROP_INITIALIZED() {
        return COMMPROP_INITIALIZED;
    }
    private static final int GMEM_LOWER = (int)4096L;
    /**
     * {@snippet lang=c :
     * #define GMEM_LOWER 4096
     * }
     */
    public static int GMEM_LOWER() {
        return GMEM_LOWER;
    }
    private static final int GHND = (int)66L;
    /**
     * {@snippet lang=c :
     * #define GHND 66
     * }
     */
    public static int GHND() {
        return GHND;
    }
    private static final int GPTR = (int)64L;
    /**
     * {@snippet lang=c :
     * #define GPTR 64
     * }
     */
    public static int GPTR() {
        return GPTR;
    }
    private static final int CREATE_IGNORE_SYSTEM_DEFAULT = (int)2147483648L;
    /**
     * {@snippet lang=c :
     * #define CREATE_IGNORE_SYSTEM_DEFAULT 2147483648
     * }
     */
    public static int CREATE_IGNORE_SYSTEM_DEFAULT() {
        return CREATE_IGNORE_SYSTEM_DEFAULT;
    }
    private static final int THREAD_PRIORITY_LOWEST = (int)-2L;
    /**
     * {@snippet lang=c :
     * #define THREAD_PRIORITY_LOWEST -2
     * }
     */
    public static int THREAD_PRIORITY_LOWEST() {
        return THREAD_PRIORITY_LOWEST;
    }
    private static final int THREAD_PRIORITY_BELOW_NORMAL = (int)-1L;
    /**
     * {@snippet lang=c :
     * #define THREAD_PRIORITY_BELOW_NORMAL -1
     * }
     */
    public static int THREAD_PRIORITY_BELOW_NORMAL() {
        return THREAD_PRIORITY_BELOW_NORMAL;
    }
    private static final int THREAD_PRIORITY_HIGHEST = (int)2L;
    /**
     * {@snippet lang=c :
     * #define THREAD_PRIORITY_HIGHEST 2
     * }
     */
    public static int THREAD_PRIORITY_HIGHEST() {
        return THREAD_PRIORITY_HIGHEST;
    }
    private static final int THREAD_PRIORITY_ABOVE_NORMAL = (int)1L;
    /**
     * {@snippet lang=c :
     * #define THREAD_PRIORITY_ABOVE_NORMAL 1
     * }
     */
    public static int THREAD_PRIORITY_ABOVE_NORMAL() {
        return THREAD_PRIORITY_ABOVE_NORMAL;
    }
    private static final int THREAD_PRIORITY_ERROR_RETURN = (int)2147483647L;
    /**
     * {@snippet lang=c :
     * #define THREAD_PRIORITY_ERROR_RETURN 2147483647
     * }
     */
    public static int THREAD_PRIORITY_ERROR_RETURN() {
        return THREAD_PRIORITY_ERROR_RETURN;
    }
    private static final int THREAD_PRIORITY_TIME_CRITICAL = (int)15L;
    /**
     * {@snippet lang=c :
     * #define THREAD_PRIORITY_TIME_CRITICAL 15
     * }
     */
    public static int THREAD_PRIORITY_TIME_CRITICAL() {
        return THREAD_PRIORITY_TIME_CRITICAL;
    }
    private static final int THREAD_PRIORITY_IDLE = (int)-15L;
    /**
     * {@snippet lang=c :
     * #define THREAD_PRIORITY_IDLE -15
     * }
     */
    public static int THREAD_PRIORITY_IDLE() {
        return THREAD_PRIORITY_IDLE;
    }
    private static final int STD_INPUT_HANDLE = (int)4294967286L;
    /**
     * {@snippet lang=c :
     * #define STD_INPUT_HANDLE 4294967286
     * }
     */
    public static int STD_INPUT_HANDLE() {
        return STD_INPUT_HANDLE;
    }
    private static final int STD_OUTPUT_HANDLE = (int)4294967285L;
    /**
     * {@snippet lang=c :
     * #define STD_OUTPUT_HANDLE 4294967285
     * }
     */
    public static int STD_OUTPUT_HANDLE() {
        return STD_OUTPUT_HANDLE;
    }
    private static final int STD_ERROR_HANDLE = (int)4294967284L;
    /**
     * {@snippet lang=c :
     * #define STD_ERROR_HANDLE 4294967284
     * }
     */
    public static int STD_ERROR_HANDLE() {
        return STD_ERROR_HANDLE;
    }
    private static final int INFINITE = (int)4294967295L;
    /**
     * {@snippet lang=c :
     * #define INFINITE 4294967295
     * }
     */
    public static int INFINITE() {
        return INFINITE;
    }
    private static final int IE_BADID = (int)-1L;
    /**
     * {@snippet lang=c :
     * #define IE_BADID -1
     * }
     */
    public static int IE_BADID() {
        return IE_BADID;
    }
    private static final int IE_OPEN = (int)-2L;
    /**
     * {@snippet lang=c :
     * #define IE_OPEN -2
     * }
     */
    public static int IE_OPEN() {
        return IE_OPEN;
    }
    private static final int IE_NOPEN = (int)-3L;
    /**
     * {@snippet lang=c :
     * #define IE_NOPEN -3
     * }
     */
    public static int IE_NOPEN() {
        return IE_NOPEN;
    }
    private static final int IE_MEMORY = (int)-4L;
    /**
     * {@snippet lang=c :
     * #define IE_MEMORY -4
     * }
     */
    public static int IE_MEMORY() {
        return IE_MEMORY;
    }
    private static final int IE_DEFAULT = (int)-5L;
    /**
     * {@snippet lang=c :
     * #define IE_DEFAULT -5
     * }
     */
    public static int IE_DEFAULT() {
        return IE_DEFAULT;
    }
    private static final int IE_HARDWARE = (int)-10L;
    /**
     * {@snippet lang=c :
     * #define IE_HARDWARE -10
     * }
     */
    public static int IE_HARDWARE() {
        return IE_HARDWARE;
    }
    private static final int IE_BYTESIZE = (int)-11L;
    /**
     * {@snippet lang=c :
     * #define IE_BYTESIZE -11
     * }
     */
    public static int IE_BYTESIZE() {
        return IE_BYTESIZE;
    }
    private static final int IE_BAUDRATE = (int)-12L;
    /**
     * {@snippet lang=c :
     * #define IE_BAUDRATE -12
     * }
     */
    public static int IE_BAUDRATE() {
        return IE_BAUDRATE;
    }
    private static final int MS_CTS_ON = (int)16L;
    /**
     * {@snippet lang=c :
     * #define MS_CTS_ON 16
     * }
     */
    public static int MS_CTS_ON() {
        return MS_CTS_ON;
    }
    private static final int MS_DSR_ON = (int)32L;
    /**
     * {@snippet lang=c :
     * #define MS_DSR_ON 32
     * }
     */
    public static int MS_DSR_ON() {
        return MS_DSR_ON;
    }
    private static final int MS_RING_ON = (int)64L;
    /**
     * {@snippet lang=c :
     * #define MS_RING_ON 64
     * }
     */
    public static int MS_RING_ON() {
        return MS_RING_ON;
    }
    private static final int MS_RLSD_ON = (int)128L;
    /**
     * {@snippet lang=c :
     * #define MS_RLSD_ON 128
     * }
     */
    public static int MS_RLSD_ON() {
        return MS_RLSD_ON;
    }
    private static final int S_SERDVNA = (int)-1L;
    /**
     * {@snippet lang=c :
     * #define S_SERDVNA -1
     * }
     */
    public static int S_SERDVNA() {
        return S_SERDVNA;
    }
    private static final int S_SEROFM = (int)-2L;
    /**
     * {@snippet lang=c :
     * #define S_SEROFM -2
     * }
     */
    public static int S_SEROFM() {
        return S_SEROFM;
    }
    private static final int S_SERMACT = (int)-3L;
    /**
     * {@snippet lang=c :
     * #define S_SERMACT -3
     * }
     */
    public static int S_SERMACT() {
        return S_SERMACT;
    }
    private static final int S_SERQFUL = (int)-4L;
    /**
     * {@snippet lang=c :
     * #define S_SERQFUL -4
     * }
     */
    public static int S_SERQFUL() {
        return S_SERQFUL;
    }
    private static final int S_SERBDNT = (int)-5L;
    /**
     * {@snippet lang=c :
     * #define S_SERBDNT -5
     * }
     */
    public static int S_SERBDNT() {
        return S_SERBDNT;
    }
    private static final int S_SERDLN = (int)-6L;
    /**
     * {@snippet lang=c :
     * #define S_SERDLN -6
     * }
     */
    public static int S_SERDLN() {
        return S_SERDLN;
    }
    private static final int S_SERDCC = (int)-7L;
    /**
     * {@snippet lang=c :
     * #define S_SERDCC -7
     * }
     */
    public static int S_SERDCC() {
        return S_SERDCC;
    }
    private static final int S_SERDTP = (int)-8L;
    /**
     * {@snippet lang=c :
     * #define S_SERDTP -8
     * }
     */
    public static int S_SERDTP() {
        return S_SERDTP;
    }
    private static final int S_SERDVL = (int)-9L;
    /**
     * {@snippet lang=c :
     * #define S_SERDVL -9
     * }
     */
    public static int S_SERDVL() {
        return S_SERDVL;
    }
    private static final int S_SERDMD = (int)-10L;
    /**
     * {@snippet lang=c :
     * #define S_SERDMD -10
     * }
     */
    public static int S_SERDMD() {
        return S_SERDMD;
    }
    private static final int S_SERDSH = (int)-11L;
    /**
     * {@snippet lang=c :
     * #define S_SERDSH -11
     * }
     */
    public static int S_SERDSH() {
        return S_SERDSH;
    }
    private static final int S_SERDPT = (int)-12L;
    /**
     * {@snippet lang=c :
     * #define S_SERDPT -12
     * }
     */
    public static int S_SERDPT() {
        return S_SERDPT;
    }
    private static final int S_SERDFQ = (int)-13L;
    /**
     * {@snippet lang=c :
     * #define S_SERDFQ -13
     * }
     */
    public static int S_SERDFQ() {
        return S_SERDFQ;
    }
    private static final int S_SERDDR = (int)-14L;
    /**
     * {@snippet lang=c :
     * #define S_SERDDR -14
     * }
     */
    public static int S_SERDDR() {
        return S_SERDDR;
    }
    private static final int S_SERDSR = (int)-15L;
    /**
     * {@snippet lang=c :
     * #define S_SERDSR -15
     * }
     */
    public static int S_SERDSR() {
        return S_SERDSR;
    }
    private static final int S_SERDST = (int)-16L;
    /**
     * {@snippet lang=c :
     * #define S_SERDST -16
     * }
     */
    public static int S_SERDST() {
        return S_SERDST;
    }
    private static final int NMPWAIT_WAIT_FOREVER = (int)4294967295L;
    /**
     * {@snippet lang=c :
     * #define NMPWAIT_WAIT_FOREVER 4294967295
     * }
     */
    public static int NMPWAIT_WAIT_FOREVER() {
        return NMPWAIT_WAIT_FOREVER;
    }
    private static final int FS_CASE_IS_PRESERVED = (int)2L;
    /**
     * {@snippet lang=c :
     * #define FS_CASE_IS_PRESERVED 2
     * }
     */
    public static int FS_CASE_IS_PRESERVED() {
        return FS_CASE_IS_PRESERVED;
    }
    private static final int FS_CASE_SENSITIVE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define FS_CASE_SENSITIVE 1
     * }
     */
    public static int FS_CASE_SENSITIVE() {
        return FS_CASE_SENSITIVE;
    }
    private static final int FS_UNICODE_STORED_ON_DISK = (int)4L;
    /**
     * {@snippet lang=c :
     * #define FS_UNICODE_STORED_ON_DISK 4
     * }
     */
    public static int FS_UNICODE_STORED_ON_DISK() {
        return FS_UNICODE_STORED_ON_DISK;
    }
    private static final int FS_PERSISTENT_ACLS = (int)8L;
    /**
     * {@snippet lang=c :
     * #define FS_PERSISTENT_ACLS 8
     * }
     */
    public static int FS_PERSISTENT_ACLS() {
        return FS_PERSISTENT_ACLS;
    }
    private static final int FS_VOL_IS_COMPRESSED = (int)32768L;
    /**
     * {@snippet lang=c :
     * #define FS_VOL_IS_COMPRESSED 32768
     * }
     */
    public static int FS_VOL_IS_COMPRESSED() {
        return FS_VOL_IS_COMPRESSED;
    }
    private static final int FS_FILE_COMPRESSION = (int)16L;
    /**
     * {@snippet lang=c :
     * #define FS_FILE_COMPRESSION 16
     * }
     */
    public static int FS_FILE_COMPRESSION() {
        return FS_FILE_COMPRESSION;
    }
    private static final int FS_FILE_ENCRYPTION = (int)131072L;
    /**
     * {@snippet lang=c :
     * #define FS_FILE_ENCRYPTION 131072
     * }
     */
    public static int FS_FILE_ENCRYPTION() {
        return FS_FILE_ENCRYPTION;
    }
    private static final short INVALID_ATOM = (short)0L;
    /**
     * {@snippet lang=c :
     * #define INVALID_ATOM 0
     * }
     */
    public static short INVALID_ATOM() {
        return INVALID_ATOM;
    }
    private static final int SCS_THIS_PLATFORM_BINARY = (int)6L;
    /**
     * {@snippet lang=c :
     * #define SCS_THIS_PLATFORM_BINARY 6
     * }
     */
    public static int SCS_THIS_PLATFORM_BINARY() {
        return SCS_THIS_PLATFORM_BINARY;
    }
    private static final int UMS_VERSION = (int)256L;
    /**
     * {@snippet lang=c :
     * #define UMS_VERSION 256
     * }
     */
    public static int UMS_VERSION() {
        return UMS_VERSION;
    }
    private static final int CRITICAL_SECTION_NO_DEBUG_INFO = (int)16777216L;
    /**
     * {@snippet lang=c :
     * #define CRITICAL_SECTION_NO_DEBUG_INFO 16777216
     * }
     */
    public static int CRITICAL_SECTION_NO_DEBUG_INFO() {
        return CRITICAL_SECTION_NO_DEBUG_INFO;
    }
    private static final int EFS_USE_RECOVERY_KEYS = (int)1L;
    /**
     * {@snippet lang=c :
     * #define EFS_USE_RECOVERY_KEYS 1
     * }
     */
    public static int EFS_USE_RECOVERY_KEYS() {
        return EFS_USE_RECOVERY_KEYS;
    }
    private static final int CREATE_FOR_IMPORT = (int)1L;
    /**
     * {@snippet lang=c :
     * #define CREATE_FOR_IMPORT 1
     * }
     */
    public static int CREATE_FOR_IMPORT() {
        return CREATE_FOR_IMPORT;
    }
    private static final int CREATE_FOR_DIR = (int)2L;
    /**
     * {@snippet lang=c :
     * #define CREATE_FOR_DIR 2
     * }
     */
    public static int CREATE_FOR_DIR() {
        return CREATE_FOR_DIR;
    }
    private static final int OVERWRITE_HIDDEN = (int)4L;
    /**
     * {@snippet lang=c :
     * #define OVERWRITE_HIDDEN 4
     * }
     */
    public static int OVERWRITE_HIDDEN() {
        return OVERWRITE_HIDDEN;
    }
    private static final int EFSRPC_SECURE_ONLY = (int)8L;
    /**
     * {@snippet lang=c :
     * #define EFSRPC_SECURE_ONLY 8
     * }
     */
    public static int EFSRPC_SECURE_ONLY() {
        return EFSRPC_SECURE_ONLY;
    }
    private static final int EFS_DROP_ALTERNATE_STREAMS = (int)16L;
    /**
     * {@snippet lang=c :
     * #define EFS_DROP_ALTERNATE_STREAMS 16
     * }
     */
    public static int EFS_DROP_ALTERNATE_STREAMS() {
        return EFS_DROP_ALTERNATE_STREAMS;
    }
    private static final int PROTECTION_LEVEL_SAME = (int)4294967295L;
    /**
     * {@snippet lang=c :
     * #define PROTECTION_LEVEL_SAME 4294967295
     * }
     */
    public static int PROTECTION_LEVEL_SAME() {
        return PROTECTION_LEVEL_SAME;
    }
    private static final int PROTECTION_LEVEL_NONE = (int)4294967294L;
    /**
     * {@snippet lang=c :
     * #define PROTECTION_LEVEL_NONE 4294967294
     * }
     */
    public static int PROTECTION_LEVEL_NONE() {
        return PROTECTION_LEVEL_NONE;
    }
    private static final int PROC_THREAD_ATTRIBUTE_PARENT_PROCESS = (int)131072L;
    /**
     * {@snippet lang=c :
     * #define PROC_THREAD_ATTRIBUTE_PARENT_PROCESS 131072
     * }
     */
    public static int PROC_THREAD_ATTRIBUTE_PARENT_PROCESS() {
        return PROC_THREAD_ATTRIBUTE_PARENT_PROCESS;
    }
    private static final int PROC_THREAD_ATTRIBUTE_HANDLE_LIST = (int)131074L;
    /**
     * {@snippet lang=c :
     * #define PROC_THREAD_ATTRIBUTE_HANDLE_LIST 131074
     * }
     */
    public static int PROC_THREAD_ATTRIBUTE_HANDLE_LIST() {
        return PROC_THREAD_ATTRIBUTE_HANDLE_LIST;
    }
    private static final int PROC_THREAD_ATTRIBUTE_GROUP_AFFINITY = (int)196611L;
    /**
     * {@snippet lang=c :
     * #define PROC_THREAD_ATTRIBUTE_GROUP_AFFINITY 196611
     * }
     */
    public static int PROC_THREAD_ATTRIBUTE_GROUP_AFFINITY() {
        return PROC_THREAD_ATTRIBUTE_GROUP_AFFINITY;
    }
    private static final int PROC_THREAD_ATTRIBUTE_PREFERRED_NODE = (int)131076L;
    /**
     * {@snippet lang=c :
     * #define PROC_THREAD_ATTRIBUTE_PREFERRED_NODE 131076
     * }
     */
    public static int PROC_THREAD_ATTRIBUTE_PREFERRED_NODE() {
        return PROC_THREAD_ATTRIBUTE_PREFERRED_NODE;
    }
    private static final int PROC_THREAD_ATTRIBUTE_IDEAL_PROCESSOR = (int)196613L;
    /**
     * {@snippet lang=c :
     * #define PROC_THREAD_ATTRIBUTE_IDEAL_PROCESSOR 196613
     * }
     */
    public static int PROC_THREAD_ATTRIBUTE_IDEAL_PROCESSOR() {
        return PROC_THREAD_ATTRIBUTE_IDEAL_PROCESSOR;
    }
    private static final int PROC_THREAD_ATTRIBUTE_UMS_THREAD = (int)196614L;
    /**
     * {@snippet lang=c :
     * #define PROC_THREAD_ATTRIBUTE_UMS_THREAD 196614
     * }
     */
    public static int PROC_THREAD_ATTRIBUTE_UMS_THREAD() {
        return PROC_THREAD_ATTRIBUTE_UMS_THREAD;
    }
    private static final int PROC_THREAD_ATTRIBUTE_MITIGATION_POLICY = (int)131079L;
    /**
     * {@snippet lang=c :
     * #define PROC_THREAD_ATTRIBUTE_MITIGATION_POLICY 131079
     * }
     */
    public static int PROC_THREAD_ATTRIBUTE_MITIGATION_POLICY() {
        return PROC_THREAD_ATTRIBUTE_MITIGATION_POLICY;
    }
    private static final int PROC_THREAD_ATTRIBUTE_SECURITY_CAPABILITIES = (int)131081L;
    /**
     * {@snippet lang=c :
     * #define PROC_THREAD_ATTRIBUTE_SECURITY_CAPABILITIES 131081
     * }
     */
    public static int PROC_THREAD_ATTRIBUTE_SECURITY_CAPABILITIES() {
        return PROC_THREAD_ATTRIBUTE_SECURITY_CAPABILITIES;
    }
    private static final int PROC_THREAD_ATTRIBUTE_PROTECTION_LEVEL = (int)131083L;
    /**
     * {@snippet lang=c :
     * #define PROC_THREAD_ATTRIBUTE_PROTECTION_LEVEL 131083
     * }
     */
    public static int PROC_THREAD_ATTRIBUTE_PROTECTION_LEVEL() {
        return PROC_THREAD_ATTRIBUTE_PROTECTION_LEVEL;
    }
    private static final int PROC_THREAD_ATTRIBUTE_PSEUDOCONSOLE = (int)131094L;
    /**
     * {@snippet lang=c :
     * #define PROC_THREAD_ATTRIBUTE_PSEUDOCONSOLE 131094
     * }
     */
    public static int PROC_THREAD_ATTRIBUTE_PSEUDOCONSOLE() {
        return PROC_THREAD_ATTRIBUTE_PSEUDOCONSOLE;
    }
    private static final int PROC_THREAD_ATTRIBUTE_MACHINE_TYPE = (int)131097L;
    /**
     * {@snippet lang=c :
     * #define PROC_THREAD_ATTRIBUTE_MACHINE_TYPE 131097
     * }
     */
    public static int PROC_THREAD_ATTRIBUTE_MACHINE_TYPE() {
        return PROC_THREAD_ATTRIBUTE_MACHINE_TYPE;
    }
    private static final int PROC_THREAD_ATTRIBUTE_ENABLE_OPTIONAL_XSTATE_FEATURES = (int)196635L;
    /**
     * {@snippet lang=c :
     * #define PROC_THREAD_ATTRIBUTE_ENABLE_OPTIONAL_XSTATE_FEATURES 196635
     * }
     */
    public static int PROC_THREAD_ATTRIBUTE_ENABLE_OPTIONAL_XSTATE_FEATURES() {
        return PROC_THREAD_ATTRIBUTE_ENABLE_OPTIONAL_XSTATE_FEATURES;
    }
    private static final int PROC_THREAD_ATTRIBUTE_SVE_VECTOR_LENGTH = (int)131102L;
    /**
     * {@snippet lang=c :
     * #define PROC_THREAD_ATTRIBUTE_SVE_VECTOR_LENGTH 131102
     * }
     */
    public static int PROC_THREAD_ATTRIBUTE_SVE_VECTOR_LENGTH() {
        return PROC_THREAD_ATTRIBUTE_SVE_VECTOR_LENGTH;
    }
    private static final int PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_MASK = (int)768L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_MASK 768
     * }
     */
    public static int PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_MASK() {
        return PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_MASK;
    }
    private static final int PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_DEFER = (int)0L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_DEFER 0
     * }
     */
    public static int PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_DEFER() {
        return PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_DEFER;
    }
    private static final int PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_ALWAYS_ON = (int)256L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_ALWAYS_ON 256
     * }
     */
    public static int PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_ALWAYS_ON() {
        return PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_ALWAYS_ON;
    }
    private static final int PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_ALWAYS_OFF = (int)512L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_ALWAYS_OFF 512
     * }
     */
    public static int PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_ALWAYS_OFF() {
        return PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_ALWAYS_OFF;
    }
    private static final int PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_ALWAYS_ON_REQ_RELOCS = (int)768L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_ALWAYS_ON_REQ_RELOCS 768
     * }
     */
    public static int PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_ALWAYS_ON_REQ_RELOCS() {
        return PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_ALWAYS_ON_REQ_RELOCS;
    }
    private static final int PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_MASK = (int)12288L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_MASK 12288
     * }
     */
    public static int PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_MASK() {
        return PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_MASK;
    }
    private static final int PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_DEFER = (int)0L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_DEFER 0
     * }
     */
    public static int PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_DEFER() {
        return PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_DEFER;
    }
    private static final int PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_ALWAYS_ON = (int)4096L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_ALWAYS_ON 4096
     * }
     */
    public static int PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_ALWAYS_ON() {
        return PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_ALWAYS_ON;
    }
    private static final int PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_ALWAYS_OFF = (int)8192L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_ALWAYS_OFF 8192
     * }
     */
    public static int PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_ALWAYS_OFF() {
        return PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_ALWAYS_OFF;
    }
    private static final int PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_RESERVED = (int)12288L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_RESERVED 12288
     * }
     */
    public static int PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_RESERVED() {
        return PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_RESERVED;
    }
    private static final int PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_MASK = (int)196608L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_MASK 196608
     * }
     */
    public static int PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_MASK() {
        return PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_MASK;
    }
    private static final int PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_DEFER = (int)0L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_DEFER 0
     * }
     */
    public static int PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_DEFER() {
        return PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_DEFER;
    }
    private static final int PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_ALWAYS_ON = (int)65536L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_ALWAYS_ON 65536
     * }
     */
    public static int PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_ALWAYS_ON() {
        return PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_ALWAYS_ON;
    }
    private static final int PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_ALWAYS_OFF = (int)131072L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_ALWAYS_OFF 131072
     * }
     */
    public static int PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_ALWAYS_OFF() {
        return PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_ALWAYS_OFF;
    }
    private static final int PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_RESERVED = (int)196608L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_RESERVED 196608
     * }
     */
    public static int PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_RESERVED() {
        return PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_RESERVED;
    }
    private static final int PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_MASK = (int)3145728L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_MASK 3145728
     * }
     */
    public static int PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_MASK() {
        return PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_MASK;
    }
    private static final int PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_DEFER = (int)0L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_DEFER 0
     * }
     */
    public static int PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_DEFER() {
        return PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_DEFER;
    }
    private static final int PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_ALWAYS_ON = (int)1048576L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_ALWAYS_ON 1048576
     * }
     */
    public static int PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_ALWAYS_ON() {
        return PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_ALWAYS_ON;
    }
    private static final int PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_ALWAYS_OFF = (int)2097152L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_ALWAYS_OFF 2097152
     * }
     */
    public static int PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_ALWAYS_OFF() {
        return PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_ALWAYS_OFF;
    }
    private static final int PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_RESERVED = (int)3145728L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_RESERVED 3145728
     * }
     */
    public static int PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_RESERVED() {
        return PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_RESERVED;
    }
    private static final int PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_MASK = (int)50331648L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_MASK 50331648
     * }
     */
    public static int PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_MASK() {
        return PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_MASK;
    }
    private static final int PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_DEFER = (int)0L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_DEFER 0
     * }
     */
    public static int PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_DEFER() {
        return PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_DEFER;
    }
    private static final int PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_ALWAYS_ON = (int)16777216L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_ALWAYS_ON 16777216
     * }
     */
    public static int PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_ALWAYS_ON() {
        return PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_ALWAYS_ON;
    }
    private static final int PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_ALWAYS_OFF = (int)33554432L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_ALWAYS_OFF 33554432
     * }
     */
    public static int PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_ALWAYS_OFF() {
        return PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_ALWAYS_OFF;
    }
    private static final int PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_RESERVED = (int)50331648L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_RESERVED 50331648
     * }
     */
    public static int PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_RESERVED() {
        return PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_RESERVED;
    }
    private static final int PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_MASK = (int)805306368L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_MASK 805306368
     * }
     */
    public static int PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_MASK() {
        return PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_MASK;
    }
    private static final int PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_DEFER = (int)0L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_DEFER 0
     * }
     */
    public static int PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_DEFER() {
        return PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_DEFER;
    }
    private static final int PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_ALWAYS_ON = (int)268435456L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_ALWAYS_ON 268435456
     * }
     */
    public static int PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_ALWAYS_ON() {
        return PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_ALWAYS_ON;
    }
    private static final int PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_ALWAYS_OFF = (int)536870912L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_ALWAYS_OFF 536870912
     * }
     */
    public static int PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_ALWAYS_OFF() {
        return PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_ALWAYS_OFF;
    }
    private static final int PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_RESERVED = (int)805306368L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_RESERVED 805306368
     * }
     */
    public static int PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_RESERVED() {
        return PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_RESERVED;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY_EXTENSION_POINT_DISABLE_MASK = 12884901888L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_EXTENSION_POINT_DISABLE_MASK 12884901888
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY_EXTENSION_POINT_DISABLE_MASK() {
        return PROCESS_CREATION_MITIGATION_POLICY_EXTENSION_POINT_DISABLE_MASK;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY_EXTENSION_POINT_DISABLE_DEFER = 0L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_EXTENSION_POINT_DISABLE_DEFER 0
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY_EXTENSION_POINT_DISABLE_DEFER() {
        return PROCESS_CREATION_MITIGATION_POLICY_EXTENSION_POINT_DISABLE_DEFER;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY_EXTENSION_POINT_DISABLE_ALWAYS_ON = 4294967296L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_EXTENSION_POINT_DISABLE_ALWAYS_ON 4294967296
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY_EXTENSION_POINT_DISABLE_ALWAYS_ON() {
        return PROCESS_CREATION_MITIGATION_POLICY_EXTENSION_POINT_DISABLE_ALWAYS_ON;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY_EXTENSION_POINT_DISABLE_ALWAYS_OFF = 8589934592L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_EXTENSION_POINT_DISABLE_ALWAYS_OFF 8589934592
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY_EXTENSION_POINT_DISABLE_ALWAYS_OFF() {
        return PROCESS_CREATION_MITIGATION_POLICY_EXTENSION_POINT_DISABLE_ALWAYS_OFF;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY_EXTENSION_POINT_DISABLE_RESERVED = 12884901888L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_EXTENSION_POINT_DISABLE_RESERVED 12884901888
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY_EXTENSION_POINT_DISABLE_RESERVED() {
        return PROCESS_CREATION_MITIGATION_POLICY_EXTENSION_POINT_DISABLE_RESERVED;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY_PROHIBIT_DYNAMIC_CODE_MASK = 206158430208L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_PROHIBIT_DYNAMIC_CODE_MASK 206158430208
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY_PROHIBIT_DYNAMIC_CODE_MASK() {
        return PROCESS_CREATION_MITIGATION_POLICY_PROHIBIT_DYNAMIC_CODE_MASK;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY_PROHIBIT_DYNAMIC_CODE_DEFER = 0L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_PROHIBIT_DYNAMIC_CODE_DEFER 0
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY_PROHIBIT_DYNAMIC_CODE_DEFER() {
        return PROCESS_CREATION_MITIGATION_POLICY_PROHIBIT_DYNAMIC_CODE_DEFER;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY_PROHIBIT_DYNAMIC_CODE_ALWAYS_ON = 68719476736L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_PROHIBIT_DYNAMIC_CODE_ALWAYS_ON 68719476736
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY_PROHIBIT_DYNAMIC_CODE_ALWAYS_ON() {
        return PROCESS_CREATION_MITIGATION_POLICY_PROHIBIT_DYNAMIC_CODE_ALWAYS_ON;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY_PROHIBIT_DYNAMIC_CODE_ALWAYS_OFF = 137438953472L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_PROHIBIT_DYNAMIC_CODE_ALWAYS_OFF 137438953472
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY_PROHIBIT_DYNAMIC_CODE_ALWAYS_OFF() {
        return PROCESS_CREATION_MITIGATION_POLICY_PROHIBIT_DYNAMIC_CODE_ALWAYS_OFF;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY_PROHIBIT_DYNAMIC_CODE_ALWAYS_ON_ALLOW_OPT_OUT = 206158430208L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_PROHIBIT_DYNAMIC_CODE_ALWAYS_ON_ALLOW_OPT_OUT 206158430208
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY_PROHIBIT_DYNAMIC_CODE_ALWAYS_ON_ALLOW_OPT_OUT() {
        return PROCESS_CREATION_MITIGATION_POLICY_PROHIBIT_DYNAMIC_CODE_ALWAYS_ON_ALLOW_OPT_OUT;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY_CONTROL_FLOW_GUARD_MASK = 3298534883328L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_CONTROL_FLOW_GUARD_MASK 3298534883328
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY_CONTROL_FLOW_GUARD_MASK() {
        return PROCESS_CREATION_MITIGATION_POLICY_CONTROL_FLOW_GUARD_MASK;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY_CONTROL_FLOW_GUARD_DEFER = 0L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_CONTROL_FLOW_GUARD_DEFER 0
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY_CONTROL_FLOW_GUARD_DEFER() {
        return PROCESS_CREATION_MITIGATION_POLICY_CONTROL_FLOW_GUARD_DEFER;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY_CONTROL_FLOW_GUARD_ALWAYS_ON = 1099511627776L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_CONTROL_FLOW_GUARD_ALWAYS_ON 1099511627776
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY_CONTROL_FLOW_GUARD_ALWAYS_ON() {
        return PROCESS_CREATION_MITIGATION_POLICY_CONTROL_FLOW_GUARD_ALWAYS_ON;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY_CONTROL_FLOW_GUARD_ALWAYS_OFF = 2199023255552L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_CONTROL_FLOW_GUARD_ALWAYS_OFF 2199023255552
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY_CONTROL_FLOW_GUARD_ALWAYS_OFF() {
        return PROCESS_CREATION_MITIGATION_POLICY_CONTROL_FLOW_GUARD_ALWAYS_OFF;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY_CONTROL_FLOW_GUARD_EXPORT_SUPPRESSION = 3298534883328L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_CONTROL_FLOW_GUARD_EXPORT_SUPPRESSION 3298534883328
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY_CONTROL_FLOW_GUARD_EXPORT_SUPPRESSION() {
        return PROCESS_CREATION_MITIGATION_POLICY_CONTROL_FLOW_GUARD_EXPORT_SUPPRESSION;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_MASK = 52776558133248L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_MASK 52776558133248
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_MASK() {
        return PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_MASK;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_DEFER = 0L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_DEFER 0
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_DEFER() {
        return PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_DEFER;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_ALWAYS_ON = 17592186044416L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_ALWAYS_ON 17592186044416
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_ALWAYS_ON() {
        return PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_ALWAYS_ON;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_ALWAYS_OFF = 35184372088832L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_ALWAYS_OFF 35184372088832
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_ALWAYS_OFF() {
        return PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_ALWAYS_OFF;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_ALLOW_STORE = 52776558133248L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_ALLOW_STORE 52776558133248
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_ALLOW_STORE() {
        return PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_ALLOW_STORE;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY_FONT_DISABLE_MASK = 844424930131968L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_FONT_DISABLE_MASK 844424930131968
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY_FONT_DISABLE_MASK() {
        return PROCESS_CREATION_MITIGATION_POLICY_FONT_DISABLE_MASK;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY_FONT_DISABLE_DEFER = 0L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_FONT_DISABLE_DEFER 0
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY_FONT_DISABLE_DEFER() {
        return PROCESS_CREATION_MITIGATION_POLICY_FONT_DISABLE_DEFER;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY_FONT_DISABLE_ALWAYS_ON = 281474976710656L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_FONT_DISABLE_ALWAYS_ON 281474976710656
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY_FONT_DISABLE_ALWAYS_ON() {
        return PROCESS_CREATION_MITIGATION_POLICY_FONT_DISABLE_ALWAYS_ON;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY_FONT_DISABLE_ALWAYS_OFF = 562949953421312L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_FONT_DISABLE_ALWAYS_OFF 562949953421312
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY_FONT_DISABLE_ALWAYS_OFF() {
        return PROCESS_CREATION_MITIGATION_POLICY_FONT_DISABLE_ALWAYS_OFF;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY_AUDIT_NONSYSTEM_FONTS = 844424930131968L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_AUDIT_NONSYSTEM_FONTS 844424930131968
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY_AUDIT_NONSYSTEM_FONTS() {
        return PROCESS_CREATION_MITIGATION_POLICY_AUDIT_NONSYSTEM_FONTS;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_REMOTE_MASK = 13510798882111488L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_REMOTE_MASK 13510798882111488
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_REMOTE_MASK() {
        return PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_REMOTE_MASK;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_REMOTE_DEFER = 0L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_REMOTE_DEFER 0
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_REMOTE_DEFER() {
        return PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_REMOTE_DEFER;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_REMOTE_ALWAYS_ON = 4503599627370496L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_REMOTE_ALWAYS_ON 4503599627370496
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_REMOTE_ALWAYS_ON() {
        return PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_REMOTE_ALWAYS_ON;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_REMOTE_ALWAYS_OFF = 9007199254740992L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_REMOTE_ALWAYS_OFF 9007199254740992
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_REMOTE_ALWAYS_OFF() {
        return PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_REMOTE_ALWAYS_OFF;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_REMOTE_RESERVED = 13510798882111488L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_REMOTE_RESERVED 13510798882111488
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_REMOTE_RESERVED() {
        return PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_REMOTE_RESERVED;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_LOW_LABEL_MASK = 216172782113783808L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_LOW_LABEL_MASK 216172782113783808
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_LOW_LABEL_MASK() {
        return PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_LOW_LABEL_MASK;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_LOW_LABEL_DEFER = 0L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_LOW_LABEL_DEFER 0
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_LOW_LABEL_DEFER() {
        return PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_LOW_LABEL_DEFER;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_LOW_LABEL_ALWAYS_ON = 72057594037927936L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_LOW_LABEL_ALWAYS_ON 72057594037927936
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_LOW_LABEL_ALWAYS_ON() {
        return PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_LOW_LABEL_ALWAYS_ON;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_LOW_LABEL_ALWAYS_OFF = 144115188075855872L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_LOW_LABEL_ALWAYS_OFF 144115188075855872
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_LOW_LABEL_ALWAYS_OFF() {
        return PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_LOW_LABEL_ALWAYS_OFF;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_LOW_LABEL_RESERVED = 216172782113783808L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_LOW_LABEL_RESERVED 216172782113783808
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_LOW_LABEL_RESERVED() {
        return PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_LOW_LABEL_RESERVED;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_PREFER_SYSTEM32_MASK = 3458764513820540928L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_PREFER_SYSTEM32_MASK 3458764513820540928
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_PREFER_SYSTEM32_MASK() {
        return PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_PREFER_SYSTEM32_MASK;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_PREFER_SYSTEM32_DEFER = 0L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_PREFER_SYSTEM32_DEFER 0
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_PREFER_SYSTEM32_DEFER() {
        return PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_PREFER_SYSTEM32_DEFER;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_PREFER_SYSTEM32_ALWAYS_ON = 1152921504606846976L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_PREFER_SYSTEM32_ALWAYS_ON 1152921504606846976
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_PREFER_SYSTEM32_ALWAYS_ON() {
        return PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_PREFER_SYSTEM32_ALWAYS_ON;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_PREFER_SYSTEM32_ALWAYS_OFF = 2305843009213693952L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_PREFER_SYSTEM32_ALWAYS_OFF 2305843009213693952
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_PREFER_SYSTEM32_ALWAYS_OFF() {
        return PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_PREFER_SYSTEM32_ALWAYS_OFF;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_PREFER_SYSTEM32_RESERVED = 3458764513820540928L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_PREFER_SYSTEM32_RESERVED 3458764513820540928
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_PREFER_SYSTEM32_RESERVED() {
        return PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_PREFER_SYSTEM32_RESERVED;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_LOADER_INTEGRITY_CONTINUITY_MASK = 48L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_LOADER_INTEGRITY_CONTINUITY_MASK 48
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_LOADER_INTEGRITY_CONTINUITY_MASK() {
        return PROCESS_CREATION_MITIGATION_POLICY2_LOADER_INTEGRITY_CONTINUITY_MASK;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_LOADER_INTEGRITY_CONTINUITY_DEFER = 0L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_LOADER_INTEGRITY_CONTINUITY_DEFER 0
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_LOADER_INTEGRITY_CONTINUITY_DEFER() {
        return PROCESS_CREATION_MITIGATION_POLICY2_LOADER_INTEGRITY_CONTINUITY_DEFER;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_LOADER_INTEGRITY_CONTINUITY_ALWAYS_ON = 16L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_LOADER_INTEGRITY_CONTINUITY_ALWAYS_ON 16
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_LOADER_INTEGRITY_CONTINUITY_ALWAYS_ON() {
        return PROCESS_CREATION_MITIGATION_POLICY2_LOADER_INTEGRITY_CONTINUITY_ALWAYS_ON;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_LOADER_INTEGRITY_CONTINUITY_ALWAYS_OFF = 32L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_LOADER_INTEGRITY_CONTINUITY_ALWAYS_OFF 32
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_LOADER_INTEGRITY_CONTINUITY_ALWAYS_OFF() {
        return PROCESS_CREATION_MITIGATION_POLICY2_LOADER_INTEGRITY_CONTINUITY_ALWAYS_OFF;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_LOADER_INTEGRITY_CONTINUITY_AUDIT = 48L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_LOADER_INTEGRITY_CONTINUITY_AUDIT 48
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_LOADER_INTEGRITY_CONTINUITY_AUDIT() {
        return PROCESS_CREATION_MITIGATION_POLICY2_LOADER_INTEGRITY_CONTINUITY_AUDIT;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_STRICT_CONTROL_FLOW_GUARD_MASK = 768L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_STRICT_CONTROL_FLOW_GUARD_MASK 768
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_STRICT_CONTROL_FLOW_GUARD_MASK() {
        return PROCESS_CREATION_MITIGATION_POLICY2_STRICT_CONTROL_FLOW_GUARD_MASK;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_STRICT_CONTROL_FLOW_GUARD_DEFER = 0L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_STRICT_CONTROL_FLOW_GUARD_DEFER 0
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_STRICT_CONTROL_FLOW_GUARD_DEFER() {
        return PROCESS_CREATION_MITIGATION_POLICY2_STRICT_CONTROL_FLOW_GUARD_DEFER;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_STRICT_CONTROL_FLOW_GUARD_ALWAYS_ON = 256L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_STRICT_CONTROL_FLOW_GUARD_ALWAYS_ON 256
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_STRICT_CONTROL_FLOW_GUARD_ALWAYS_ON() {
        return PROCESS_CREATION_MITIGATION_POLICY2_STRICT_CONTROL_FLOW_GUARD_ALWAYS_ON;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_STRICT_CONTROL_FLOW_GUARD_ALWAYS_OFF = 512L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_STRICT_CONTROL_FLOW_GUARD_ALWAYS_OFF 512
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_STRICT_CONTROL_FLOW_GUARD_ALWAYS_OFF() {
        return PROCESS_CREATION_MITIGATION_POLICY2_STRICT_CONTROL_FLOW_GUARD_ALWAYS_OFF;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_STRICT_CONTROL_FLOW_GUARD_RESERVED = 768L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_STRICT_CONTROL_FLOW_GUARD_RESERVED 768
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_STRICT_CONTROL_FLOW_GUARD_RESERVED() {
        return PROCESS_CREATION_MITIGATION_POLICY2_STRICT_CONTROL_FLOW_GUARD_RESERVED;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_MODULE_TAMPERING_PROTECTION_MASK = 12288L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_MODULE_TAMPERING_PROTECTION_MASK 12288
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_MODULE_TAMPERING_PROTECTION_MASK() {
        return PROCESS_CREATION_MITIGATION_POLICY2_MODULE_TAMPERING_PROTECTION_MASK;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_MODULE_TAMPERING_PROTECTION_DEFER = 0L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_MODULE_TAMPERING_PROTECTION_DEFER 0
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_MODULE_TAMPERING_PROTECTION_DEFER() {
        return PROCESS_CREATION_MITIGATION_POLICY2_MODULE_TAMPERING_PROTECTION_DEFER;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_MODULE_TAMPERING_PROTECTION_ALWAYS_ON = 4096L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_MODULE_TAMPERING_PROTECTION_ALWAYS_ON 4096
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_MODULE_TAMPERING_PROTECTION_ALWAYS_ON() {
        return PROCESS_CREATION_MITIGATION_POLICY2_MODULE_TAMPERING_PROTECTION_ALWAYS_ON;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_MODULE_TAMPERING_PROTECTION_ALWAYS_OFF = 8192L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_MODULE_TAMPERING_PROTECTION_ALWAYS_OFF 8192
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_MODULE_TAMPERING_PROTECTION_ALWAYS_OFF() {
        return PROCESS_CREATION_MITIGATION_POLICY2_MODULE_TAMPERING_PROTECTION_ALWAYS_OFF;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_MODULE_TAMPERING_PROTECTION_NOINHERIT = 12288L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_MODULE_TAMPERING_PROTECTION_NOINHERIT 12288
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_MODULE_TAMPERING_PROTECTION_NOINHERIT() {
        return PROCESS_CREATION_MITIGATION_POLICY2_MODULE_TAMPERING_PROTECTION_NOINHERIT;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_INDIRECT_BRANCH_PREDICTION_MASK = 196608L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_INDIRECT_BRANCH_PREDICTION_MASK 196608
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_INDIRECT_BRANCH_PREDICTION_MASK() {
        return PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_INDIRECT_BRANCH_PREDICTION_MASK;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_INDIRECT_BRANCH_PREDICTION_DEFER = 0L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_INDIRECT_BRANCH_PREDICTION_DEFER 0
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_INDIRECT_BRANCH_PREDICTION_DEFER() {
        return PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_INDIRECT_BRANCH_PREDICTION_DEFER;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_INDIRECT_BRANCH_PREDICTION_ALWAYS_ON = 65536L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_INDIRECT_BRANCH_PREDICTION_ALWAYS_ON 65536
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_INDIRECT_BRANCH_PREDICTION_ALWAYS_ON() {
        return PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_INDIRECT_BRANCH_PREDICTION_ALWAYS_ON;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_INDIRECT_BRANCH_PREDICTION_ALWAYS_OFF = 131072L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_INDIRECT_BRANCH_PREDICTION_ALWAYS_OFF 131072
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_INDIRECT_BRANCH_PREDICTION_ALWAYS_OFF() {
        return PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_INDIRECT_BRANCH_PREDICTION_ALWAYS_OFF;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_INDIRECT_BRANCH_PREDICTION_RESERVED = 196608L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_INDIRECT_BRANCH_PREDICTION_RESERVED 196608
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_INDIRECT_BRANCH_PREDICTION_RESERVED() {
        return PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_INDIRECT_BRANCH_PREDICTION_RESERVED;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY_MASK = 3145728L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY_MASK 3145728
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY_MASK() {
        return PROCESS_CREATION_MITIGATION_POLICY2_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY_MASK;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY_DEFER = 0L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY_DEFER 0
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY_DEFER() {
        return PROCESS_CREATION_MITIGATION_POLICY2_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY_DEFER;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY_ALWAYS_ON = 1048576L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY_ALWAYS_ON 1048576
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY_ALWAYS_ON() {
        return PROCESS_CREATION_MITIGATION_POLICY2_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY_ALWAYS_ON;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY_ALWAYS_OFF = 2097152L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY_ALWAYS_OFF 2097152
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY_ALWAYS_OFF() {
        return PROCESS_CREATION_MITIGATION_POLICY2_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY_ALWAYS_OFF;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY_RESERVED = 3145728L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY_RESERVED 3145728
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY_RESERVED() {
        return PROCESS_CREATION_MITIGATION_POLICY2_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY_RESERVED;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_SPECULATIVE_STORE_BYPASS_DISABLE_MASK = 50331648L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_SPECULATIVE_STORE_BYPASS_DISABLE_MASK 50331648
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_SPECULATIVE_STORE_BYPASS_DISABLE_MASK() {
        return PROCESS_CREATION_MITIGATION_POLICY2_SPECULATIVE_STORE_BYPASS_DISABLE_MASK;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_SPECULATIVE_STORE_BYPASS_DISABLE_DEFER = 0L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_SPECULATIVE_STORE_BYPASS_DISABLE_DEFER 0
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_SPECULATIVE_STORE_BYPASS_DISABLE_DEFER() {
        return PROCESS_CREATION_MITIGATION_POLICY2_SPECULATIVE_STORE_BYPASS_DISABLE_DEFER;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_SPECULATIVE_STORE_BYPASS_DISABLE_ALWAYS_ON = 16777216L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_SPECULATIVE_STORE_BYPASS_DISABLE_ALWAYS_ON 16777216
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_SPECULATIVE_STORE_BYPASS_DISABLE_ALWAYS_ON() {
        return PROCESS_CREATION_MITIGATION_POLICY2_SPECULATIVE_STORE_BYPASS_DISABLE_ALWAYS_ON;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_SPECULATIVE_STORE_BYPASS_DISABLE_ALWAYS_OFF = 33554432L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_SPECULATIVE_STORE_BYPASS_DISABLE_ALWAYS_OFF 33554432
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_SPECULATIVE_STORE_BYPASS_DISABLE_ALWAYS_OFF() {
        return PROCESS_CREATION_MITIGATION_POLICY2_SPECULATIVE_STORE_BYPASS_DISABLE_ALWAYS_OFF;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_SPECULATIVE_STORE_BYPASS_DISABLE_RESERVED = 50331648L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_SPECULATIVE_STORE_BYPASS_DISABLE_RESERVED 50331648
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_SPECULATIVE_STORE_BYPASS_DISABLE_RESERVED() {
        return PROCESS_CREATION_MITIGATION_POLICY2_SPECULATIVE_STORE_BYPASS_DISABLE_RESERVED;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_CET_USER_SHADOW_STACKS_MASK = 805306368L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_CET_USER_SHADOW_STACKS_MASK 805306368
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_CET_USER_SHADOW_STACKS_MASK() {
        return PROCESS_CREATION_MITIGATION_POLICY2_CET_USER_SHADOW_STACKS_MASK;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_CET_USER_SHADOW_STACKS_DEFER = 0L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_CET_USER_SHADOW_STACKS_DEFER 0
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_CET_USER_SHADOW_STACKS_DEFER() {
        return PROCESS_CREATION_MITIGATION_POLICY2_CET_USER_SHADOW_STACKS_DEFER;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_CET_USER_SHADOW_STACKS_ALWAYS_ON = 268435456L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_CET_USER_SHADOW_STACKS_ALWAYS_ON 268435456
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_CET_USER_SHADOW_STACKS_ALWAYS_ON() {
        return PROCESS_CREATION_MITIGATION_POLICY2_CET_USER_SHADOW_STACKS_ALWAYS_ON;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_CET_USER_SHADOW_STACKS_ALWAYS_OFF = 536870912L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_CET_USER_SHADOW_STACKS_ALWAYS_OFF 536870912
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_CET_USER_SHADOW_STACKS_ALWAYS_OFF() {
        return PROCESS_CREATION_MITIGATION_POLICY2_CET_USER_SHADOW_STACKS_ALWAYS_OFF;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_CET_USER_SHADOW_STACKS_STRICT_MODE = 805306368L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_CET_USER_SHADOW_STACKS_STRICT_MODE 805306368
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_CET_USER_SHADOW_STACKS_STRICT_MODE() {
        return PROCESS_CREATION_MITIGATION_POLICY2_CET_USER_SHADOW_STACKS_STRICT_MODE;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_MASK = 12884901888L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_MASK 12884901888
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_MASK() {
        return PROCESS_CREATION_MITIGATION_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_MASK;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_DEFER = 0L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_DEFER 0
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_DEFER() {
        return PROCESS_CREATION_MITIGATION_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_DEFER;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_ALWAYS_ON = 4294967296L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_ALWAYS_ON 4294967296
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_ALWAYS_ON() {
        return PROCESS_CREATION_MITIGATION_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_ALWAYS_ON;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_ALWAYS_OFF = 8589934592L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_ALWAYS_OFF 8589934592
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_ALWAYS_OFF() {
        return PROCESS_CREATION_MITIGATION_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_ALWAYS_OFF;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_RELAXED_MODE = 12884901888L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_RELAXED_MODE 12884901888
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_RELAXED_MODE() {
        return PROCESS_CREATION_MITIGATION_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_RELAXED_MODE;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_BLOCK_NON_CET_BINARIES_MASK = 206158430208L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_BLOCK_NON_CET_BINARIES_MASK 206158430208
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_BLOCK_NON_CET_BINARIES_MASK() {
        return PROCESS_CREATION_MITIGATION_POLICY2_BLOCK_NON_CET_BINARIES_MASK;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_BLOCK_NON_CET_BINARIES_DEFER = 0L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_BLOCK_NON_CET_BINARIES_DEFER 0
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_BLOCK_NON_CET_BINARIES_DEFER() {
        return PROCESS_CREATION_MITIGATION_POLICY2_BLOCK_NON_CET_BINARIES_DEFER;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_BLOCK_NON_CET_BINARIES_ALWAYS_ON = 68719476736L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_BLOCK_NON_CET_BINARIES_ALWAYS_ON 68719476736
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_BLOCK_NON_CET_BINARIES_ALWAYS_ON() {
        return PROCESS_CREATION_MITIGATION_POLICY2_BLOCK_NON_CET_BINARIES_ALWAYS_ON;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_BLOCK_NON_CET_BINARIES_ALWAYS_OFF = 137438953472L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_BLOCK_NON_CET_BINARIES_ALWAYS_OFF 137438953472
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_BLOCK_NON_CET_BINARIES_ALWAYS_OFF() {
        return PROCESS_CREATION_MITIGATION_POLICY2_BLOCK_NON_CET_BINARIES_ALWAYS_OFF;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_BLOCK_NON_CET_BINARIES_NON_EHCONT = 206158430208L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_BLOCK_NON_CET_BINARIES_NON_EHCONT 206158430208
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_BLOCK_NON_CET_BINARIES_NON_EHCONT() {
        return PROCESS_CREATION_MITIGATION_POLICY2_BLOCK_NON_CET_BINARIES_NON_EHCONT;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_XTENDED_CONTROL_FLOW_GUARD_MASK = 3298534883328L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_XTENDED_CONTROL_FLOW_GUARD_MASK 3298534883328
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_XTENDED_CONTROL_FLOW_GUARD_MASK() {
        return PROCESS_CREATION_MITIGATION_POLICY2_XTENDED_CONTROL_FLOW_GUARD_MASK;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_XTENDED_CONTROL_FLOW_GUARD_DEFER = 0L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_XTENDED_CONTROL_FLOW_GUARD_DEFER 0
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_XTENDED_CONTROL_FLOW_GUARD_DEFER() {
        return PROCESS_CREATION_MITIGATION_POLICY2_XTENDED_CONTROL_FLOW_GUARD_DEFER;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_XTENDED_CONTROL_FLOW_GUARD_ALWAYS_ON = 1099511627776L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_XTENDED_CONTROL_FLOW_GUARD_ALWAYS_ON 1099511627776
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_XTENDED_CONTROL_FLOW_GUARD_ALWAYS_ON() {
        return PROCESS_CREATION_MITIGATION_POLICY2_XTENDED_CONTROL_FLOW_GUARD_ALWAYS_ON;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_XTENDED_CONTROL_FLOW_GUARD_ALWAYS_OFF = 2199023255552L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_XTENDED_CONTROL_FLOW_GUARD_ALWAYS_OFF 2199023255552
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_XTENDED_CONTROL_FLOW_GUARD_ALWAYS_OFF() {
        return PROCESS_CREATION_MITIGATION_POLICY2_XTENDED_CONTROL_FLOW_GUARD_ALWAYS_OFF;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_XTENDED_CONTROL_FLOW_GUARD_RESERVED = 3298534883328L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_XTENDED_CONTROL_FLOW_GUARD_RESERVED 3298534883328
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_XTENDED_CONTROL_FLOW_GUARD_RESERVED() {
        return PROCESS_CREATION_MITIGATION_POLICY2_XTENDED_CONTROL_FLOW_GUARD_RESERVED;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_POINTER_AUTH_USER_IP_MASK = 52776558133248L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_POINTER_AUTH_USER_IP_MASK 52776558133248
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_POINTER_AUTH_USER_IP_MASK() {
        return PROCESS_CREATION_MITIGATION_POLICY2_POINTER_AUTH_USER_IP_MASK;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_POINTER_AUTH_USER_IP_DEFER = 0L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_POINTER_AUTH_USER_IP_DEFER 0
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_POINTER_AUTH_USER_IP_DEFER() {
        return PROCESS_CREATION_MITIGATION_POLICY2_POINTER_AUTH_USER_IP_DEFER;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_POINTER_AUTH_USER_IP_ALWAYS_ON = 17592186044416L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_POINTER_AUTH_USER_IP_ALWAYS_ON 17592186044416
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_POINTER_AUTH_USER_IP_ALWAYS_ON() {
        return PROCESS_CREATION_MITIGATION_POLICY2_POINTER_AUTH_USER_IP_ALWAYS_ON;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_POINTER_AUTH_USER_IP_ALWAYS_OFF = 35184372088832L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_POINTER_AUTH_USER_IP_ALWAYS_OFF 35184372088832
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_POINTER_AUTH_USER_IP_ALWAYS_OFF() {
        return PROCESS_CREATION_MITIGATION_POLICY2_POINTER_AUTH_USER_IP_ALWAYS_OFF;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_POINTER_AUTH_USER_IP_RESERVED = 52776558133248L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_POINTER_AUTH_USER_IP_RESERVED 52776558133248
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_POINTER_AUTH_USER_IP_RESERVED() {
        return PROCESS_CREATION_MITIGATION_POLICY2_POINTER_AUTH_USER_IP_RESERVED;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_CET_DYNAMIC_APIS_OUT_OF_PROC_ONLY_MASK = 844424930131968L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_CET_DYNAMIC_APIS_OUT_OF_PROC_ONLY_MASK 844424930131968
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_CET_DYNAMIC_APIS_OUT_OF_PROC_ONLY_MASK() {
        return PROCESS_CREATION_MITIGATION_POLICY2_CET_DYNAMIC_APIS_OUT_OF_PROC_ONLY_MASK;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_CET_DYNAMIC_APIS_OUT_OF_PROC_ONLY_DEFER = 0L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_CET_DYNAMIC_APIS_OUT_OF_PROC_ONLY_DEFER 0
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_CET_DYNAMIC_APIS_OUT_OF_PROC_ONLY_DEFER() {
        return PROCESS_CREATION_MITIGATION_POLICY2_CET_DYNAMIC_APIS_OUT_OF_PROC_ONLY_DEFER;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_CET_DYNAMIC_APIS_OUT_OF_PROC_ONLY_ALWAYS_ON = 281474976710656L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_CET_DYNAMIC_APIS_OUT_OF_PROC_ONLY_ALWAYS_ON 281474976710656
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_CET_DYNAMIC_APIS_OUT_OF_PROC_ONLY_ALWAYS_ON() {
        return PROCESS_CREATION_MITIGATION_POLICY2_CET_DYNAMIC_APIS_OUT_OF_PROC_ONLY_ALWAYS_ON;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_CET_DYNAMIC_APIS_OUT_OF_PROC_ONLY_ALWAYS_OFF = 562949953421312L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_CET_DYNAMIC_APIS_OUT_OF_PROC_ONLY_ALWAYS_OFF 562949953421312
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_CET_DYNAMIC_APIS_OUT_OF_PROC_ONLY_ALWAYS_OFF() {
        return PROCESS_CREATION_MITIGATION_POLICY2_CET_DYNAMIC_APIS_OUT_OF_PROC_ONLY_ALWAYS_OFF;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_CET_DYNAMIC_APIS_OUT_OF_PROC_ONLY_RESERVED = 844424930131968L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_CET_DYNAMIC_APIS_OUT_OF_PROC_ONLY_RESERVED 844424930131968
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_CET_DYNAMIC_APIS_OUT_OF_PROC_ONLY_RESERVED() {
        return PROCESS_CREATION_MITIGATION_POLICY2_CET_DYNAMIC_APIS_OUT_OF_PROC_ONLY_RESERVED;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_CORE_SHARING_MASK = 13510798882111488L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_CORE_SHARING_MASK 13510798882111488
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_CORE_SHARING_MASK() {
        return PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_CORE_SHARING_MASK;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_CORE_SHARING_DEFER = 0L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_CORE_SHARING_DEFER 0
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_CORE_SHARING_DEFER() {
        return PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_CORE_SHARING_DEFER;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_CORE_SHARING_ALWAYS_ON = 4503599627370496L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_CORE_SHARING_ALWAYS_ON 4503599627370496
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_CORE_SHARING_ALWAYS_ON() {
        return PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_CORE_SHARING_ALWAYS_ON;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_CORE_SHARING_ALWAYS_OFF = 9007199254740992L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_CORE_SHARING_ALWAYS_OFF 9007199254740992
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_CORE_SHARING_ALWAYS_OFF() {
        return PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_CORE_SHARING_ALWAYS_OFF;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_CORE_SHARING_RESERVED = 13510798882111488L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_CORE_SHARING_RESERVED 13510798882111488
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_CORE_SHARING_RESERVED() {
        return PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_CORE_SHARING_RESERVED;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_FSCTL_SYSTEM_CALL_DISABLE_MASK = 216172782113783808L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_FSCTL_SYSTEM_CALL_DISABLE_MASK 216172782113783808
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_FSCTL_SYSTEM_CALL_DISABLE_MASK() {
        return PROCESS_CREATION_MITIGATION_POLICY2_FSCTL_SYSTEM_CALL_DISABLE_MASK;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_FSCTL_SYSTEM_CALL_DISABLE_DEFER = 0L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_FSCTL_SYSTEM_CALL_DISABLE_DEFER 0
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_FSCTL_SYSTEM_CALL_DISABLE_DEFER() {
        return PROCESS_CREATION_MITIGATION_POLICY2_FSCTL_SYSTEM_CALL_DISABLE_DEFER;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_FSCTL_SYSTEM_CALL_DISABLE_ALWAYS_ON = 72057594037927936L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_FSCTL_SYSTEM_CALL_DISABLE_ALWAYS_ON 72057594037927936
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_FSCTL_SYSTEM_CALL_DISABLE_ALWAYS_ON() {
        return PROCESS_CREATION_MITIGATION_POLICY2_FSCTL_SYSTEM_CALL_DISABLE_ALWAYS_ON;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_FSCTL_SYSTEM_CALL_DISABLE_ALWAYS_OFF = 144115188075855872L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_FSCTL_SYSTEM_CALL_DISABLE_ALWAYS_OFF 144115188075855872
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_FSCTL_SYSTEM_CALL_DISABLE_ALWAYS_OFF() {
        return PROCESS_CREATION_MITIGATION_POLICY2_FSCTL_SYSTEM_CALL_DISABLE_ALWAYS_OFF;
    }
    private static final long PROCESS_CREATION_MITIGATION_POLICY2_FSCTL_SYSTEM_CALL_DISABLE_RESERVED = 216172782113783808L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_POLICY2_FSCTL_SYSTEM_CALL_DISABLE_RESERVED 216172782113783808
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_POLICY2_FSCTL_SYSTEM_CALL_DISABLE_RESERVED() {
        return PROCESS_CREATION_MITIGATION_POLICY2_FSCTL_SYSTEM_CALL_DISABLE_RESERVED;
    }
    private static final int PROC_THREAD_ATTRIBUTE_JOB_LIST = (int)131085L;
    /**
     * {@snippet lang=c :
     * #define PROC_THREAD_ATTRIBUTE_JOB_LIST 131085
     * }
     */
    public static int PROC_THREAD_ATTRIBUTE_JOB_LIST() {
        return PROC_THREAD_ATTRIBUTE_JOB_LIST;
    }
    private static final int PROC_THREAD_ATTRIBUTE_CHILD_PROCESS_POLICY = (int)131086L;
    /**
     * {@snippet lang=c :
     * #define PROC_THREAD_ATTRIBUTE_CHILD_PROCESS_POLICY 131086
     * }
     */
    public static int PROC_THREAD_ATTRIBUTE_CHILD_PROCESS_POLICY() {
        return PROC_THREAD_ATTRIBUTE_CHILD_PROCESS_POLICY;
    }
    private static final int PROC_THREAD_ATTRIBUTE_ALL_APPLICATION_PACKAGES_POLICY = (int)131087L;
    /**
     * {@snippet lang=c :
     * #define PROC_THREAD_ATTRIBUTE_ALL_APPLICATION_PACKAGES_POLICY 131087
     * }
     */
    public static int PROC_THREAD_ATTRIBUTE_ALL_APPLICATION_PACKAGES_POLICY() {
        return PROC_THREAD_ATTRIBUTE_ALL_APPLICATION_PACKAGES_POLICY;
    }
    private static final int PROC_THREAD_ATTRIBUTE_WIN32K_FILTER = (int)131088L;
    /**
     * {@snippet lang=c :
     * #define PROC_THREAD_ATTRIBUTE_WIN32K_FILTER 131088
     * }
     */
    public static int PROC_THREAD_ATTRIBUTE_WIN32K_FILTER() {
        return PROC_THREAD_ATTRIBUTE_WIN32K_FILTER;
    }
    private static final int PROC_THREAD_ATTRIBUTE_DESKTOP_APP_POLICY = (int)131090L;
    /**
     * {@snippet lang=c :
     * #define PROC_THREAD_ATTRIBUTE_DESKTOP_APP_POLICY 131090
     * }
     */
    public static int PROC_THREAD_ATTRIBUTE_DESKTOP_APP_POLICY() {
        return PROC_THREAD_ATTRIBUTE_DESKTOP_APP_POLICY;
    }
    private static final int PROC_THREAD_ATTRIBUTE_MITIGATION_AUDIT_POLICY = (int)131096L;
    /**
     * {@snippet lang=c :
     * #define PROC_THREAD_ATTRIBUTE_MITIGATION_AUDIT_POLICY 131096
     * }
     */
    public static int PROC_THREAD_ATTRIBUTE_MITIGATION_AUDIT_POLICY() {
        return PROC_THREAD_ATTRIBUTE_MITIGATION_AUDIT_POLICY;
    }
    private static final int PROC_THREAD_ATTRIBUTE_COMPONENT_FILTER = (int)131098L;
    /**
     * {@snippet lang=c :
     * #define PROC_THREAD_ATTRIBUTE_COMPONENT_FILTER 131098
     * }
     */
    public static int PROC_THREAD_ATTRIBUTE_COMPONENT_FILTER() {
        return PROC_THREAD_ATTRIBUTE_COMPONENT_FILTER;
    }
    private static final long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_CET_USER_SHADOW_STACKS_MASK = 805306368L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_CET_USER_SHADOW_STACKS_MASK 805306368
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_CET_USER_SHADOW_STACKS_MASK() {
        return PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_CET_USER_SHADOW_STACKS_MASK;
    }
    private static final long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_CET_USER_SHADOW_STACKS_DEFER = 0L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_CET_USER_SHADOW_STACKS_DEFER 0
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_CET_USER_SHADOW_STACKS_DEFER() {
        return PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_CET_USER_SHADOW_STACKS_DEFER;
    }
    private static final long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_CET_USER_SHADOW_STACKS_ALWAYS_ON = 268435456L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_CET_USER_SHADOW_STACKS_ALWAYS_ON 268435456
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_CET_USER_SHADOW_STACKS_ALWAYS_ON() {
        return PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_CET_USER_SHADOW_STACKS_ALWAYS_ON;
    }
    private static final long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_CET_USER_SHADOW_STACKS_ALWAYS_OFF = 536870912L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_CET_USER_SHADOW_STACKS_ALWAYS_OFF 536870912
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_CET_USER_SHADOW_STACKS_ALWAYS_OFF() {
        return PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_CET_USER_SHADOW_STACKS_ALWAYS_OFF;
    }
    private static final long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_CET_USER_SHADOW_STACKS_RESERVED = 805306368L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_CET_USER_SHADOW_STACKS_RESERVED 805306368
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_CET_USER_SHADOW_STACKS_RESERVED() {
        return PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_CET_USER_SHADOW_STACKS_RESERVED;
    }
    private static final long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_MASK = 12884901888L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_MASK 12884901888
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_MASK() {
        return PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_MASK;
    }
    private static final long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_DEFER = 0L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_DEFER 0
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_DEFER() {
        return PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_DEFER;
    }
    private static final long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_ALWAYS_ON = 4294967296L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_ALWAYS_ON 4294967296
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_ALWAYS_ON() {
        return PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_ALWAYS_ON;
    }
    private static final long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_ALWAYS_OFF = 8589934592L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_ALWAYS_OFF 8589934592
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_ALWAYS_OFF() {
        return PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_ALWAYS_OFF;
    }
    private static final long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_RESERVED = 12884901888L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_RESERVED 12884901888
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_RESERVED() {
        return PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_RESERVED;
    }
    private static final long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_BLOCK_NON_CET_BINARIES_MASK = 206158430208L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_BLOCK_NON_CET_BINARIES_MASK 206158430208
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_BLOCK_NON_CET_BINARIES_MASK() {
        return PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_BLOCK_NON_CET_BINARIES_MASK;
    }
    private static final long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_BLOCK_NON_CET_BINARIES_DEFER = 0L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_BLOCK_NON_CET_BINARIES_DEFER 0
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_BLOCK_NON_CET_BINARIES_DEFER() {
        return PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_BLOCK_NON_CET_BINARIES_DEFER;
    }
    private static final long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_BLOCK_NON_CET_BINARIES_ALWAYS_ON = 68719476736L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_BLOCK_NON_CET_BINARIES_ALWAYS_ON 68719476736
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_BLOCK_NON_CET_BINARIES_ALWAYS_ON() {
        return PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_BLOCK_NON_CET_BINARIES_ALWAYS_ON;
    }
    private static final long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_BLOCK_NON_CET_BINARIES_ALWAYS_OFF = 137438953472L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_BLOCK_NON_CET_BINARIES_ALWAYS_OFF 137438953472
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_BLOCK_NON_CET_BINARIES_ALWAYS_OFF() {
        return PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_BLOCK_NON_CET_BINARIES_ALWAYS_OFF;
    }
    private static final long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_BLOCK_NON_CET_BINARIES_RESERVED = 206158430208L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_BLOCK_NON_CET_BINARIES_RESERVED 206158430208
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_BLOCK_NON_CET_BINARIES_RESERVED() {
        return PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_BLOCK_NON_CET_BINARIES_RESERVED;
    }
    private static final long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_XTENDED_CONTROL_FLOW_GUARD_MASK = 3298534883328L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_XTENDED_CONTROL_FLOW_GUARD_MASK 3298534883328
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_XTENDED_CONTROL_FLOW_GUARD_MASK() {
        return PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_XTENDED_CONTROL_FLOW_GUARD_MASK;
    }
    private static final long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_XTENDED_CONTROL_FLOW_GUARD_DEFER = 0L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_XTENDED_CONTROL_FLOW_GUARD_DEFER 0
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_XTENDED_CONTROL_FLOW_GUARD_DEFER() {
        return PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_XTENDED_CONTROL_FLOW_GUARD_DEFER;
    }
    private static final long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_XTENDED_CONTROL_FLOW_GUARD_ALWAYS_ON = 1099511627776L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_XTENDED_CONTROL_FLOW_GUARD_ALWAYS_ON 1099511627776
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_XTENDED_CONTROL_FLOW_GUARD_ALWAYS_ON() {
        return PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_XTENDED_CONTROL_FLOW_GUARD_ALWAYS_ON;
    }
    private static final long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_XTENDED_CONTROL_FLOW_GUARD_ALWAYS_OFF = 2199023255552L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_XTENDED_CONTROL_FLOW_GUARD_ALWAYS_OFF 2199023255552
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_XTENDED_CONTROL_FLOW_GUARD_ALWAYS_OFF() {
        return PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_XTENDED_CONTROL_FLOW_GUARD_ALWAYS_OFF;
    }
    private static final long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_XTENDED_CONTROL_FLOW_GUARD_RESERVED = 3298534883328L;
    /**
     * {@snippet lang=c :
     * #define PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_XTENDED_CONTROL_FLOW_GUARD_RESERVED 3298534883328
     * }
     */
    public static long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_XTENDED_CONTROL_FLOW_GUARD_RESERVED() {
        return PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_XTENDED_CONTROL_FLOW_GUARD_RESERVED;
    }
    private static final int PROC_THREAD_ATTRIBUTE_TRUSTED_APP = (int)131101L;
    /**
     * {@snippet lang=c :
     * #define PROC_THREAD_ATTRIBUTE_TRUSTED_APP 131101
     * }
     */
    public static int PROC_THREAD_ATTRIBUTE_TRUSTED_APP() {
        return PROC_THREAD_ATTRIBUTE_TRUSTED_APP;
    }
    /**
     * {@snippet lang=c :
     * #define GET_SYSTEM_WOW64_DIRECTORY_NAME_A_A "GetSystemWow64DirectoryA"
     * }
     */
    public static MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_A_A() {
        class Holder {
            static final MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_A_A
                = winapi.LIBRARY_ARENA.allocateFrom("GetSystemWow64DirectoryA");
        }
        return Holder.GET_SYSTEM_WOW64_DIRECTORY_NAME_A_A;
    }
    /**
     * {@snippet lang=c :
     * #define GET_SYSTEM_WOW64_DIRECTORY_NAME_A_W "G"
     * }
     */
    public static MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_A_W() {
        class Holder {
            static final MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_A_W
                = winapi.LIBRARY_ARENA.allocateFrom("G");
        }
        return Holder.GET_SYSTEM_WOW64_DIRECTORY_NAME_A_W;
    }
    /**
     * {@snippet lang=c :
     * #define GET_SYSTEM_WOW64_DIRECTORY_NAME_A_T "GetSystemWow64DirectoryA"
     * }
     */
    public static MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_A_T() {
        class Holder {
            static final MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_A_T
                = winapi.LIBRARY_ARENA.allocateFrom("GetSystemWow64DirectoryA");
        }
        return Holder.GET_SYSTEM_WOW64_DIRECTORY_NAME_A_T;
    }
    /**
     * {@snippet lang=c :
     * #define GET_SYSTEM_WOW64_DIRECTORY_NAME_W_A "GetSystemWow64DirectoryW"
     * }
     */
    public static MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_W_A() {
        class Holder {
            static final MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_W_A
                = winapi.LIBRARY_ARENA.allocateFrom("GetSystemWow64DirectoryW");
        }
        return Holder.GET_SYSTEM_WOW64_DIRECTORY_NAME_W_A;
    }
    /**
     * {@snippet lang=c :
     * #define GET_SYSTEM_WOW64_DIRECTORY_NAME_W_W "G"
     * }
     */
    public static MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_W_W() {
        class Holder {
            static final MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_W_W
                = winapi.LIBRARY_ARENA.allocateFrom("G");
        }
        return Holder.GET_SYSTEM_WOW64_DIRECTORY_NAME_W_W;
    }
    /**
     * {@snippet lang=c :
     * #define GET_SYSTEM_WOW64_DIRECTORY_NAME_W_T "GetSystemWow64DirectoryW"
     * }
     */
    public static MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_W_T() {
        class Holder {
            static final MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_W_T
                = winapi.LIBRARY_ARENA.allocateFrom("GetSystemWow64DirectoryW");
        }
        return Holder.GET_SYSTEM_WOW64_DIRECTORY_NAME_W_T;
    }
    /**
     * {@snippet lang=c :
     * #define GET_SYSTEM_WOW64_DIRECTORY_NAME_T_A "GetSystemWow64DirectoryA"
     * }
     */
    public static MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_T_A() {
        class Holder {
            static final MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_T_A
                = winapi.LIBRARY_ARENA.allocateFrom("GetSystemWow64DirectoryA");
        }
        return Holder.GET_SYSTEM_WOW64_DIRECTORY_NAME_T_A;
    }
    /**
     * {@snippet lang=c :
     * #define GET_SYSTEM_WOW64_DIRECTORY_NAME_T_W "G"
     * }
     */
    public static MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_T_W() {
        class Holder {
            static final MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_T_W
                = winapi.LIBRARY_ARENA.allocateFrom("G");
        }
        return Holder.GET_SYSTEM_WOW64_DIRECTORY_NAME_T_W;
    }
    /**
     * {@snippet lang=c :
     * #define GET_SYSTEM_WOW64_DIRECTORY_NAME_T_T "GetSystemWow64DirectoryA"
     * }
     */
    public static MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_T_T() {
        class Holder {
            static final MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_T_T
                = winapi.LIBRARY_ARENA.allocateFrom("GetSystemWow64DirectoryA");
        }
        return Holder.GET_SYSTEM_WOW64_DIRECTORY_NAME_T_T;
    }
    private static final int BASE_SEARCH_PATH_INVALID_FLAGS = (int)-98306L;
    /**
     * {@snippet lang=c :
     * #define BASE_SEARCH_PATH_INVALID_FLAGS -98306
     * }
     */
    public static int BASE_SEARCH_PATH_INVALID_FLAGS() {
        return BASE_SEARCH_PATH_INVALID_FLAGS;
    }
    private static final int COPYFILE2_MESSAGE_COPY_OFFLOAD = (int)1L;
    /**
     * {@snippet lang=c :
     * #define COPYFILE2_MESSAGE_COPY_OFFLOAD 1
     * }
     */
    public static int COPYFILE2_MESSAGE_COPY_OFFLOAD() {
        return COPYFILE2_MESSAGE_COPY_OFFLOAD;
    }
    private static final int COPY_FILE2_V2_VALID_FLAGS = (int)3L;
    /**
     * {@snippet lang=c :
     * #define COPY_FILE2_V2_VALID_FLAGS 3
     * }
     */
    public static int COPY_FILE2_V2_VALID_FLAGS() {
        return COPY_FILE2_V2_VALID_FLAGS;
    }
    private static final int LOGON_ZERO_PASSWORD_BUFFER = (int)2147483648L;
    /**
     * {@snippet lang=c :
     * #define LOGON_ZERO_PASSWORD_BUFFER 2147483648
     * }
     */
    public static int LOGON_ZERO_PASSWORD_BUFFER() {
        return LOGON_ZERO_PASSWORD_BUFFER;
    }
    private static final int DOCKINFO_UNDOCKED = (int)1L;
    /**
     * {@snippet lang=c :
     * #define DOCKINFO_UNDOCKED 1
     * }
     */
    public static int DOCKINFO_UNDOCKED() {
        return DOCKINFO_UNDOCKED;
    }
    private static final int DOCKINFO_DOCKED = (int)2L;
    /**
     * {@snippet lang=c :
     * #define DOCKINFO_DOCKED 2
     * }
     */
    public static int DOCKINFO_DOCKED() {
        return DOCKINFO_DOCKED;
    }
    private static final int DOCKINFO_USER_SUPPLIED = (int)4L;
    /**
     * {@snippet lang=c :
     * #define DOCKINFO_USER_SUPPLIED 4
     * }
     */
    public static int DOCKINFO_USER_SUPPLIED() {
        return DOCKINFO_USER_SUPPLIED;
    }
    private static final int DOCKINFO_USER_UNDOCKED = (int)5L;
    /**
     * {@snippet lang=c :
     * #define DOCKINFO_USER_UNDOCKED 5
     * }
     */
    public static int DOCKINFO_USER_UNDOCKED() {
        return DOCKINFO_USER_UNDOCKED;
    }
    private static final int DOCKINFO_USER_DOCKED = (int)6L;
    /**
     * {@snippet lang=c :
     * #define DOCKINFO_USER_DOCKED 6
     * }
     */
    public static int DOCKINFO_USER_DOCKED() {
        return DOCKINFO_USER_DOCKED;
    }
    private static final int ERROR_SUCCESS = (int)0L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SUCCESS 0
     * }
     */
    public static int ERROR_SUCCESS() {
        return ERROR_SUCCESS;
    }
    private static final int NO_ERROR = (int)0L;
    /**
     * {@snippet lang=c :
     * #define NO_ERROR 0
     * }
     */
    public static int NO_ERROR() {
        return NO_ERROR;
    }
    private static final int SEC_E_OK = (int)0L;
    /**
     * {@snippet lang=c :
     * #define SEC_E_OK 0
     * }
     */
    public static int SEC_E_OK() {
        return SEC_E_OK;
    }
    private static final int ERROR_INVALID_FUNCTION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_FUNCTION 1
     * }
     */
    public static int ERROR_INVALID_FUNCTION() {
        return ERROR_INVALID_FUNCTION;
    }
    private static final int ERROR_FILE_NOT_FOUND = (int)2L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FILE_NOT_FOUND 2
     * }
     */
    public static int ERROR_FILE_NOT_FOUND() {
        return ERROR_FILE_NOT_FOUND;
    }
    private static final int ERROR_PATH_NOT_FOUND = (int)3L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PATH_NOT_FOUND 3
     * }
     */
    public static int ERROR_PATH_NOT_FOUND() {
        return ERROR_PATH_NOT_FOUND;
    }
    private static final int ERROR_TOO_MANY_OPEN_FILES = (int)4L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TOO_MANY_OPEN_FILES 4
     * }
     */
    public static int ERROR_TOO_MANY_OPEN_FILES() {
        return ERROR_TOO_MANY_OPEN_FILES;
    }
    private static final int ERROR_ACCESS_DENIED = (int)5L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ACCESS_DENIED 5
     * }
     */
    public static int ERROR_ACCESS_DENIED() {
        return ERROR_ACCESS_DENIED;
    }
    private static final int ERROR_INVALID_HANDLE = (int)6L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_HANDLE 6
     * }
     */
    public static int ERROR_INVALID_HANDLE() {
        return ERROR_INVALID_HANDLE;
    }
    private static final int ERROR_ARENA_TRASHED = (int)7L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ARENA_TRASHED 7
     * }
     */
    public static int ERROR_ARENA_TRASHED() {
        return ERROR_ARENA_TRASHED;
    }
    private static final int ERROR_NOT_ENOUGH_MEMORY = (int)8L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_ENOUGH_MEMORY 8
     * }
     */
    public static int ERROR_NOT_ENOUGH_MEMORY() {
        return ERROR_NOT_ENOUGH_MEMORY;
    }
    private static final int ERROR_INVALID_BLOCK = (int)9L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_BLOCK 9
     * }
     */
    public static int ERROR_INVALID_BLOCK() {
        return ERROR_INVALID_BLOCK;
    }
    private static final int ERROR_BAD_ENVIRONMENT = (int)10L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BAD_ENVIRONMENT 10
     * }
     */
    public static int ERROR_BAD_ENVIRONMENT() {
        return ERROR_BAD_ENVIRONMENT;
    }
    private static final int ERROR_BAD_FORMAT = (int)11L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BAD_FORMAT 11
     * }
     */
    public static int ERROR_BAD_FORMAT() {
        return ERROR_BAD_FORMAT;
    }
    private static final int ERROR_INVALID_ACCESS = (int)12L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_ACCESS 12
     * }
     */
    public static int ERROR_INVALID_ACCESS() {
        return ERROR_INVALID_ACCESS;
    }
    private static final int ERROR_INVALID_DATA = (int)13L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_DATA 13
     * }
     */
    public static int ERROR_INVALID_DATA() {
        return ERROR_INVALID_DATA;
    }
    private static final int ERROR_OUTOFMEMORY = (int)14L;
    /**
     * {@snippet lang=c :
     * #define ERROR_OUTOFMEMORY 14
     * }
     */
    public static int ERROR_OUTOFMEMORY() {
        return ERROR_OUTOFMEMORY;
    }
    private static final int ERROR_INVALID_DRIVE = (int)15L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_DRIVE 15
     * }
     */
    public static int ERROR_INVALID_DRIVE() {
        return ERROR_INVALID_DRIVE;
    }
    private static final int ERROR_CURRENT_DIRECTORY = (int)16L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CURRENT_DIRECTORY 16
     * }
     */
    public static int ERROR_CURRENT_DIRECTORY() {
        return ERROR_CURRENT_DIRECTORY;
    }
    private static final int ERROR_NOT_SAME_DEVICE = (int)17L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_SAME_DEVICE 17
     * }
     */
    public static int ERROR_NOT_SAME_DEVICE() {
        return ERROR_NOT_SAME_DEVICE;
    }
    private static final int ERROR_NO_MORE_FILES = (int)18L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_MORE_FILES 18
     * }
     */
    public static int ERROR_NO_MORE_FILES() {
        return ERROR_NO_MORE_FILES;
    }
    private static final int ERROR_WRITE_PROTECT = (int)19L;
    /**
     * {@snippet lang=c :
     * #define ERROR_WRITE_PROTECT 19
     * }
     */
    public static int ERROR_WRITE_PROTECT() {
        return ERROR_WRITE_PROTECT;
    }
    private static final int ERROR_BAD_UNIT = (int)20L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BAD_UNIT 20
     * }
     */
    public static int ERROR_BAD_UNIT() {
        return ERROR_BAD_UNIT;
    }
    private static final int ERROR_NOT_READY = (int)21L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_READY 21
     * }
     */
    public static int ERROR_NOT_READY() {
        return ERROR_NOT_READY;
    }
    private static final int ERROR_BAD_COMMAND = (int)22L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BAD_COMMAND 22
     * }
     */
    public static int ERROR_BAD_COMMAND() {
        return ERROR_BAD_COMMAND;
    }
    private static final int ERROR_CRC = (int)23L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CRC 23
     * }
     */
    public static int ERROR_CRC() {
        return ERROR_CRC;
    }
    private static final int ERROR_BAD_LENGTH = (int)24L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BAD_LENGTH 24
     * }
     */
    public static int ERROR_BAD_LENGTH() {
        return ERROR_BAD_LENGTH;
    }
    private static final int ERROR_SEEK = (int)25L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SEEK 25
     * }
     */
    public static int ERROR_SEEK() {
        return ERROR_SEEK;
    }
    private static final int ERROR_NOT_DOS_DISK = (int)26L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_DOS_DISK 26
     * }
     */
    public static int ERROR_NOT_DOS_DISK() {
        return ERROR_NOT_DOS_DISK;
    }
    private static final int ERROR_SECTOR_NOT_FOUND = (int)27L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SECTOR_NOT_FOUND 27
     * }
     */
    public static int ERROR_SECTOR_NOT_FOUND() {
        return ERROR_SECTOR_NOT_FOUND;
    }
    private static final int ERROR_OUT_OF_PAPER = (int)28L;
    /**
     * {@snippet lang=c :
     * #define ERROR_OUT_OF_PAPER 28
     * }
     */
    public static int ERROR_OUT_OF_PAPER() {
        return ERROR_OUT_OF_PAPER;
    }
    private static final int ERROR_WRITE_FAULT = (int)29L;
    /**
     * {@snippet lang=c :
     * #define ERROR_WRITE_FAULT 29
     * }
     */
    public static int ERROR_WRITE_FAULT() {
        return ERROR_WRITE_FAULT;
    }
    private static final int ERROR_READ_FAULT = (int)30L;
    /**
     * {@snippet lang=c :
     * #define ERROR_READ_FAULT 30
     * }
     */
    public static int ERROR_READ_FAULT() {
        return ERROR_READ_FAULT;
    }
    private static final int ERROR_GEN_FAILURE = (int)31L;
    /**
     * {@snippet lang=c :
     * #define ERROR_GEN_FAILURE 31
     * }
     */
    public static int ERROR_GEN_FAILURE() {
        return ERROR_GEN_FAILURE;
    }
    private static final int ERROR_SHARING_VIOLATION = (int)32L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SHARING_VIOLATION 32
     * }
     */
    public static int ERROR_SHARING_VIOLATION() {
        return ERROR_SHARING_VIOLATION;
    }
    private static final int ERROR_LOCK_VIOLATION = (int)33L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOCK_VIOLATION 33
     * }
     */
    public static int ERROR_LOCK_VIOLATION() {
        return ERROR_LOCK_VIOLATION;
    }
    private static final int ERROR_WRONG_DISK = (int)34L;
    /**
     * {@snippet lang=c :
     * #define ERROR_WRONG_DISK 34
     * }
     */
    public static int ERROR_WRONG_DISK() {
        return ERROR_WRONG_DISK;
    }
    private static final int ERROR_SHARING_BUFFER_EXCEEDED = (int)36L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SHARING_BUFFER_EXCEEDED 36
     * }
     */
    public static int ERROR_SHARING_BUFFER_EXCEEDED() {
        return ERROR_SHARING_BUFFER_EXCEEDED;
    }
    private static final int ERROR_HANDLE_EOF = (int)38L;
    /**
     * {@snippet lang=c :
     * #define ERROR_HANDLE_EOF 38
     * }
     */
    public static int ERROR_HANDLE_EOF() {
        return ERROR_HANDLE_EOF;
    }
    private static final int ERROR_HANDLE_DISK_FULL = (int)39L;
    /**
     * {@snippet lang=c :
     * #define ERROR_HANDLE_DISK_FULL 39
     * }
     */
    public static int ERROR_HANDLE_DISK_FULL() {
        return ERROR_HANDLE_DISK_FULL;
    }
    private static final int ERROR_NOT_SUPPORTED = (int)50L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_SUPPORTED 50
     * }
     */
    public static int ERROR_NOT_SUPPORTED() {
        return ERROR_NOT_SUPPORTED;
    }
    private static final int ERROR_REM_NOT_LIST = (int)51L;
    /**
     * {@snippet lang=c :
     * #define ERROR_REM_NOT_LIST 51
     * }
     */
    public static int ERROR_REM_NOT_LIST() {
        return ERROR_REM_NOT_LIST;
    }
    private static final int ERROR_DUP_NAME = (int)52L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DUP_NAME 52
     * }
     */
    public static int ERROR_DUP_NAME() {
        return ERROR_DUP_NAME;
    }
    private static final int ERROR_BAD_NETPATH = (int)53L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BAD_NETPATH 53
     * }
     */
    public static int ERROR_BAD_NETPATH() {
        return ERROR_BAD_NETPATH;
    }
    private static final int ERROR_NETWORK_BUSY = (int)54L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NETWORK_BUSY 54
     * }
     */
    public static int ERROR_NETWORK_BUSY() {
        return ERROR_NETWORK_BUSY;
    }
    private static final int ERROR_DEV_NOT_EXIST = (int)55L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DEV_NOT_EXIST 55
     * }
     */
    public static int ERROR_DEV_NOT_EXIST() {
        return ERROR_DEV_NOT_EXIST;
    }
    private static final int ERROR_TOO_MANY_CMDS = (int)56L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TOO_MANY_CMDS 56
     * }
     */
    public static int ERROR_TOO_MANY_CMDS() {
        return ERROR_TOO_MANY_CMDS;
    }
    private static final int ERROR_ADAP_HDW_ERR = (int)57L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ADAP_HDW_ERR 57
     * }
     */
    public static int ERROR_ADAP_HDW_ERR() {
        return ERROR_ADAP_HDW_ERR;
    }
    private static final int ERROR_BAD_NET_RESP = (int)58L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BAD_NET_RESP 58
     * }
     */
    public static int ERROR_BAD_NET_RESP() {
        return ERROR_BAD_NET_RESP;
    }
    private static final int ERROR_UNEXP_NET_ERR = (int)59L;
    /**
     * {@snippet lang=c :
     * #define ERROR_UNEXP_NET_ERR 59
     * }
     */
    public static int ERROR_UNEXP_NET_ERR() {
        return ERROR_UNEXP_NET_ERR;
    }
    private static final int ERROR_BAD_REM_ADAP = (int)60L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BAD_REM_ADAP 60
     * }
     */
    public static int ERROR_BAD_REM_ADAP() {
        return ERROR_BAD_REM_ADAP;
    }
    private static final int ERROR_PRINTQ_FULL = (int)61L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PRINTQ_FULL 61
     * }
     */
    public static int ERROR_PRINTQ_FULL() {
        return ERROR_PRINTQ_FULL;
    }
    private static final int ERROR_NO_SPOOL_SPACE = (int)62L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_SPOOL_SPACE 62
     * }
     */
    public static int ERROR_NO_SPOOL_SPACE() {
        return ERROR_NO_SPOOL_SPACE;
    }
    private static final int ERROR_PRINT_CANCELLED = (int)63L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PRINT_CANCELLED 63
     * }
     */
    public static int ERROR_PRINT_CANCELLED() {
        return ERROR_PRINT_CANCELLED;
    }
    private static final int ERROR_NETNAME_DELETED = (int)64L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NETNAME_DELETED 64
     * }
     */
    public static int ERROR_NETNAME_DELETED() {
        return ERROR_NETNAME_DELETED;
    }
    private static final int ERROR_NETWORK_ACCESS_DENIED = (int)65L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NETWORK_ACCESS_DENIED 65
     * }
     */
    public static int ERROR_NETWORK_ACCESS_DENIED() {
        return ERROR_NETWORK_ACCESS_DENIED;
    }
    private static final int ERROR_BAD_DEV_TYPE = (int)66L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BAD_DEV_TYPE 66
     * }
     */
    public static int ERROR_BAD_DEV_TYPE() {
        return ERROR_BAD_DEV_TYPE;
    }
    private static final int ERROR_BAD_NET_NAME = (int)67L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BAD_NET_NAME 67
     * }
     */
    public static int ERROR_BAD_NET_NAME() {
        return ERROR_BAD_NET_NAME;
    }
    private static final int ERROR_TOO_MANY_NAMES = (int)68L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TOO_MANY_NAMES 68
     * }
     */
    public static int ERROR_TOO_MANY_NAMES() {
        return ERROR_TOO_MANY_NAMES;
    }
    private static final int ERROR_TOO_MANY_SESS = (int)69L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TOO_MANY_SESS 69
     * }
     */
    public static int ERROR_TOO_MANY_SESS() {
        return ERROR_TOO_MANY_SESS;
    }
    private static final int ERROR_SHARING_PAUSED = (int)70L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SHARING_PAUSED 70
     * }
     */
    public static int ERROR_SHARING_PAUSED() {
        return ERROR_SHARING_PAUSED;
    }
    private static final int ERROR_REQ_NOT_ACCEP = (int)71L;
    /**
     * {@snippet lang=c :
     * #define ERROR_REQ_NOT_ACCEP 71
     * }
     */
    public static int ERROR_REQ_NOT_ACCEP() {
        return ERROR_REQ_NOT_ACCEP;
    }
    private static final int ERROR_REDIR_PAUSED = (int)72L;
    /**
     * {@snippet lang=c :
     * #define ERROR_REDIR_PAUSED 72
     * }
     */
    public static int ERROR_REDIR_PAUSED() {
        return ERROR_REDIR_PAUSED;
    }
    private static final int ERROR_FILE_EXISTS = (int)80L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FILE_EXISTS 80
     * }
     */
    public static int ERROR_FILE_EXISTS() {
        return ERROR_FILE_EXISTS;
    }
    private static final int ERROR_CANNOT_MAKE = (int)82L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CANNOT_MAKE 82
     * }
     */
    public static int ERROR_CANNOT_MAKE() {
        return ERROR_CANNOT_MAKE;
    }
    private static final int ERROR_FAIL_I24 = (int)83L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FAIL_I24 83
     * }
     */
    public static int ERROR_FAIL_I24() {
        return ERROR_FAIL_I24;
    }
    private static final int ERROR_OUT_OF_STRUCTURES = (int)84L;
    /**
     * {@snippet lang=c :
     * #define ERROR_OUT_OF_STRUCTURES 84
     * }
     */
    public static int ERROR_OUT_OF_STRUCTURES() {
        return ERROR_OUT_OF_STRUCTURES;
    }
    private static final int ERROR_ALREADY_ASSIGNED = (int)85L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ALREADY_ASSIGNED 85
     * }
     */
    public static int ERROR_ALREADY_ASSIGNED() {
        return ERROR_ALREADY_ASSIGNED;
    }
    private static final int ERROR_INVALID_PASSWORD = (int)86L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_PASSWORD 86
     * }
     */
    public static int ERROR_INVALID_PASSWORD() {
        return ERROR_INVALID_PASSWORD;
    }
    private static final int ERROR_INVALID_PARAMETER = (int)87L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_PARAMETER 87
     * }
     */
    public static int ERROR_INVALID_PARAMETER() {
        return ERROR_INVALID_PARAMETER;
    }
    private static final int ERROR_NET_WRITE_FAULT = (int)88L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NET_WRITE_FAULT 88
     * }
     */
    public static int ERROR_NET_WRITE_FAULT() {
        return ERROR_NET_WRITE_FAULT;
    }
    private static final int ERROR_NO_PROC_SLOTS = (int)89L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_PROC_SLOTS 89
     * }
     */
    public static int ERROR_NO_PROC_SLOTS() {
        return ERROR_NO_PROC_SLOTS;
    }
    private static final int ERROR_TOO_MANY_SEMAPHORES = (int)100L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TOO_MANY_SEMAPHORES 100
     * }
     */
    public static int ERROR_TOO_MANY_SEMAPHORES() {
        return ERROR_TOO_MANY_SEMAPHORES;
    }
    private static final int ERROR_EXCL_SEM_ALREADY_OWNED = (int)101L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EXCL_SEM_ALREADY_OWNED 101
     * }
     */
    public static int ERROR_EXCL_SEM_ALREADY_OWNED() {
        return ERROR_EXCL_SEM_ALREADY_OWNED;
    }
    private static final int ERROR_SEM_IS_SET = (int)102L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SEM_IS_SET 102
     * }
     */
    public static int ERROR_SEM_IS_SET() {
        return ERROR_SEM_IS_SET;
    }
    private static final int ERROR_TOO_MANY_SEM_REQUESTS = (int)103L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TOO_MANY_SEM_REQUESTS 103
     * }
     */
    public static int ERROR_TOO_MANY_SEM_REQUESTS() {
        return ERROR_TOO_MANY_SEM_REQUESTS;
    }
    private static final int ERROR_INVALID_AT_INTERRUPT_TIME = (int)104L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_AT_INTERRUPT_TIME 104
     * }
     */
    public static int ERROR_INVALID_AT_INTERRUPT_TIME() {
        return ERROR_INVALID_AT_INTERRUPT_TIME;
    }
    private static final int ERROR_SEM_OWNER_DIED = (int)105L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SEM_OWNER_DIED 105
     * }
     */
    public static int ERROR_SEM_OWNER_DIED() {
        return ERROR_SEM_OWNER_DIED;
    }
    private static final int ERROR_SEM_USER_LIMIT = (int)106L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SEM_USER_LIMIT 106
     * }
     */
    public static int ERROR_SEM_USER_LIMIT() {
        return ERROR_SEM_USER_LIMIT;
    }
    private static final int ERROR_DISK_CHANGE = (int)107L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DISK_CHANGE 107
     * }
     */
    public static int ERROR_DISK_CHANGE() {
        return ERROR_DISK_CHANGE;
    }
    private static final int ERROR_DRIVE_LOCKED = (int)108L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DRIVE_LOCKED 108
     * }
     */
    public static int ERROR_DRIVE_LOCKED() {
        return ERROR_DRIVE_LOCKED;
    }
    private static final int ERROR_BROKEN_PIPE = (int)109L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BROKEN_PIPE 109
     * }
     */
    public static int ERROR_BROKEN_PIPE() {
        return ERROR_BROKEN_PIPE;
    }
    private static final int ERROR_OPEN_FAILED = (int)110L;
    /**
     * {@snippet lang=c :
     * #define ERROR_OPEN_FAILED 110
     * }
     */
    public static int ERROR_OPEN_FAILED() {
        return ERROR_OPEN_FAILED;
    }
    private static final int ERROR_BUFFER_OVERFLOW = (int)111L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BUFFER_OVERFLOW 111
     * }
     */
    public static int ERROR_BUFFER_OVERFLOW() {
        return ERROR_BUFFER_OVERFLOW;
    }
    private static final int ERROR_DISK_FULL = (int)112L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DISK_FULL 112
     * }
     */
    public static int ERROR_DISK_FULL() {
        return ERROR_DISK_FULL;
    }
    private static final int ERROR_NO_MORE_SEARCH_HANDLES = (int)113L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_MORE_SEARCH_HANDLES 113
     * }
     */
    public static int ERROR_NO_MORE_SEARCH_HANDLES() {
        return ERROR_NO_MORE_SEARCH_HANDLES;
    }
    private static final int ERROR_INVALID_TARGET_HANDLE = (int)114L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_TARGET_HANDLE 114
     * }
     */
    public static int ERROR_INVALID_TARGET_HANDLE() {
        return ERROR_INVALID_TARGET_HANDLE;
    }
    private static final int ERROR_INVALID_CATEGORY = (int)117L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_CATEGORY 117
     * }
     */
    public static int ERROR_INVALID_CATEGORY() {
        return ERROR_INVALID_CATEGORY;
    }
    private static final int ERROR_INVALID_VERIFY_SWITCH = (int)118L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_VERIFY_SWITCH 118
     * }
     */
    public static int ERROR_INVALID_VERIFY_SWITCH() {
        return ERROR_INVALID_VERIFY_SWITCH;
    }
    private static final int ERROR_BAD_DRIVER_LEVEL = (int)119L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BAD_DRIVER_LEVEL 119
     * }
     */
    public static int ERROR_BAD_DRIVER_LEVEL() {
        return ERROR_BAD_DRIVER_LEVEL;
    }
    private static final int ERROR_CALL_NOT_IMPLEMENTED = (int)120L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CALL_NOT_IMPLEMENTED 120
     * }
     */
    public static int ERROR_CALL_NOT_IMPLEMENTED() {
        return ERROR_CALL_NOT_IMPLEMENTED;
    }
    private static final int ERROR_SEM_TIMEOUT = (int)121L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SEM_TIMEOUT 121
     * }
     */
    public static int ERROR_SEM_TIMEOUT() {
        return ERROR_SEM_TIMEOUT;
    }
    private static final int ERROR_INSUFFICIENT_BUFFER = (int)122L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INSUFFICIENT_BUFFER 122
     * }
     */
    public static int ERROR_INSUFFICIENT_BUFFER() {
        return ERROR_INSUFFICIENT_BUFFER;
    }
    private static final int ERROR_INVALID_NAME = (int)123L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_NAME 123
     * }
     */
    public static int ERROR_INVALID_NAME() {
        return ERROR_INVALID_NAME;
    }
    private static final int ERROR_INVALID_LEVEL = (int)124L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_LEVEL 124
     * }
     */
    public static int ERROR_INVALID_LEVEL() {
        return ERROR_INVALID_LEVEL;
    }
    private static final int ERROR_NO_VOLUME_LABEL = (int)125L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_VOLUME_LABEL 125
     * }
     */
    public static int ERROR_NO_VOLUME_LABEL() {
        return ERROR_NO_VOLUME_LABEL;
    }
    private static final int ERROR_MOD_NOT_FOUND = (int)126L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MOD_NOT_FOUND 126
     * }
     */
    public static int ERROR_MOD_NOT_FOUND() {
        return ERROR_MOD_NOT_FOUND;
    }
    private static final int ERROR_PROC_NOT_FOUND = (int)127L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PROC_NOT_FOUND 127
     * }
     */
    public static int ERROR_PROC_NOT_FOUND() {
        return ERROR_PROC_NOT_FOUND;
    }
    private static final int ERROR_WAIT_NO_CHILDREN = (int)128L;
    /**
     * {@snippet lang=c :
     * #define ERROR_WAIT_NO_CHILDREN 128
     * }
     */
    public static int ERROR_WAIT_NO_CHILDREN() {
        return ERROR_WAIT_NO_CHILDREN;
    }
    private static final int ERROR_CHILD_NOT_COMPLETE = (int)129L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CHILD_NOT_COMPLETE 129
     * }
     */
    public static int ERROR_CHILD_NOT_COMPLETE() {
        return ERROR_CHILD_NOT_COMPLETE;
    }
    private static final int ERROR_DIRECT_ACCESS_HANDLE = (int)130L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DIRECT_ACCESS_HANDLE 130
     * }
     */
    public static int ERROR_DIRECT_ACCESS_HANDLE() {
        return ERROR_DIRECT_ACCESS_HANDLE;
    }
    private static final int ERROR_NEGATIVE_SEEK = (int)131L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NEGATIVE_SEEK 131
     * }
     */
    public static int ERROR_NEGATIVE_SEEK() {
        return ERROR_NEGATIVE_SEEK;
    }
    private static final int ERROR_SEEK_ON_DEVICE = (int)132L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SEEK_ON_DEVICE 132
     * }
     */
    public static int ERROR_SEEK_ON_DEVICE() {
        return ERROR_SEEK_ON_DEVICE;
    }
    private static final int ERROR_IS_JOIN_TARGET = (int)133L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IS_JOIN_TARGET 133
     * }
     */
    public static int ERROR_IS_JOIN_TARGET() {
        return ERROR_IS_JOIN_TARGET;
    }
    private static final int ERROR_IS_JOINED = (int)134L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IS_JOINED 134
     * }
     */
    public static int ERROR_IS_JOINED() {
        return ERROR_IS_JOINED;
    }
    private static final int ERROR_IS_SUBSTED = (int)135L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IS_SUBSTED 135
     * }
     */
    public static int ERROR_IS_SUBSTED() {
        return ERROR_IS_SUBSTED;
    }
    private static final int ERROR_NOT_JOINED = (int)136L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_JOINED 136
     * }
     */
    public static int ERROR_NOT_JOINED() {
        return ERROR_NOT_JOINED;
    }
    private static final int ERROR_NOT_SUBSTED = (int)137L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_SUBSTED 137
     * }
     */
    public static int ERROR_NOT_SUBSTED() {
        return ERROR_NOT_SUBSTED;
    }
    private static final int ERROR_JOIN_TO_JOIN = (int)138L;
    /**
     * {@snippet lang=c :
     * #define ERROR_JOIN_TO_JOIN 138
     * }
     */
    public static int ERROR_JOIN_TO_JOIN() {
        return ERROR_JOIN_TO_JOIN;
    }
    private static final int ERROR_SUBST_TO_SUBST = (int)139L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SUBST_TO_SUBST 139
     * }
     */
    public static int ERROR_SUBST_TO_SUBST() {
        return ERROR_SUBST_TO_SUBST;
    }
    private static final int ERROR_JOIN_TO_SUBST = (int)140L;
    /**
     * {@snippet lang=c :
     * #define ERROR_JOIN_TO_SUBST 140
     * }
     */
    public static int ERROR_JOIN_TO_SUBST() {
        return ERROR_JOIN_TO_SUBST;
    }
    private static final int ERROR_SUBST_TO_JOIN = (int)141L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SUBST_TO_JOIN 141
     * }
     */
    public static int ERROR_SUBST_TO_JOIN() {
        return ERROR_SUBST_TO_JOIN;
    }
    private static final int ERROR_BUSY_DRIVE = (int)142L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BUSY_DRIVE 142
     * }
     */
    public static int ERROR_BUSY_DRIVE() {
        return ERROR_BUSY_DRIVE;
    }
    private static final int ERROR_SAME_DRIVE = (int)143L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SAME_DRIVE 143
     * }
     */
    public static int ERROR_SAME_DRIVE() {
        return ERROR_SAME_DRIVE;
    }
    private static final int ERROR_DIR_NOT_ROOT = (int)144L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DIR_NOT_ROOT 144
     * }
     */
    public static int ERROR_DIR_NOT_ROOT() {
        return ERROR_DIR_NOT_ROOT;
    }
    private static final int ERROR_DIR_NOT_EMPTY = (int)145L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DIR_NOT_EMPTY 145
     * }
     */
    public static int ERROR_DIR_NOT_EMPTY() {
        return ERROR_DIR_NOT_EMPTY;
    }
    private static final int ERROR_IS_SUBST_PATH = (int)146L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IS_SUBST_PATH 146
     * }
     */
    public static int ERROR_IS_SUBST_PATH() {
        return ERROR_IS_SUBST_PATH;
    }
    private static final int ERROR_IS_JOIN_PATH = (int)147L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IS_JOIN_PATH 147
     * }
     */
    public static int ERROR_IS_JOIN_PATH() {
        return ERROR_IS_JOIN_PATH;
    }
    private static final int ERROR_PATH_BUSY = (int)148L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PATH_BUSY 148
     * }
     */
    public static int ERROR_PATH_BUSY() {
        return ERROR_PATH_BUSY;
    }
    private static final int ERROR_IS_SUBST_TARGET = (int)149L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IS_SUBST_TARGET 149
     * }
     */
    public static int ERROR_IS_SUBST_TARGET() {
        return ERROR_IS_SUBST_TARGET;
    }
    private static final int ERROR_SYSTEM_TRACE = (int)150L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SYSTEM_TRACE 150
     * }
     */
    public static int ERROR_SYSTEM_TRACE() {
        return ERROR_SYSTEM_TRACE;
    }
    private static final int ERROR_INVALID_EVENT_COUNT = (int)151L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_EVENT_COUNT 151
     * }
     */
    public static int ERROR_INVALID_EVENT_COUNT() {
        return ERROR_INVALID_EVENT_COUNT;
    }
    private static final int ERROR_TOO_MANY_MUXWAITERS = (int)152L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TOO_MANY_MUXWAITERS 152
     * }
     */
    public static int ERROR_TOO_MANY_MUXWAITERS() {
        return ERROR_TOO_MANY_MUXWAITERS;
    }
    private static final int ERROR_INVALID_LIST_FORMAT = (int)153L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_LIST_FORMAT 153
     * }
     */
    public static int ERROR_INVALID_LIST_FORMAT() {
        return ERROR_INVALID_LIST_FORMAT;
    }
    private static final int ERROR_LABEL_TOO_LONG = (int)154L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LABEL_TOO_LONG 154
     * }
     */
    public static int ERROR_LABEL_TOO_LONG() {
        return ERROR_LABEL_TOO_LONG;
    }
    private static final int ERROR_TOO_MANY_TCBS = (int)155L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TOO_MANY_TCBS 155
     * }
     */
    public static int ERROR_TOO_MANY_TCBS() {
        return ERROR_TOO_MANY_TCBS;
    }
    private static final int ERROR_SIGNAL_REFUSED = (int)156L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SIGNAL_REFUSED 156
     * }
     */
    public static int ERROR_SIGNAL_REFUSED() {
        return ERROR_SIGNAL_REFUSED;
    }
    private static final int ERROR_DISCARDED = (int)157L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DISCARDED 157
     * }
     */
    public static int ERROR_DISCARDED() {
        return ERROR_DISCARDED;
    }
    private static final int ERROR_NOT_LOCKED = (int)158L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_LOCKED 158
     * }
     */
    public static int ERROR_NOT_LOCKED() {
        return ERROR_NOT_LOCKED;
    }
    private static final int ERROR_BAD_THREADID_ADDR = (int)159L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BAD_THREADID_ADDR 159
     * }
     */
    public static int ERROR_BAD_THREADID_ADDR() {
        return ERROR_BAD_THREADID_ADDR;
    }
    private static final int ERROR_BAD_ARGUMENTS = (int)160L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BAD_ARGUMENTS 160
     * }
     */
    public static int ERROR_BAD_ARGUMENTS() {
        return ERROR_BAD_ARGUMENTS;
    }
    private static final int ERROR_BAD_PATHNAME = (int)161L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BAD_PATHNAME 161
     * }
     */
    public static int ERROR_BAD_PATHNAME() {
        return ERROR_BAD_PATHNAME;
    }
    private static final int ERROR_SIGNAL_PENDING = (int)162L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SIGNAL_PENDING 162
     * }
     */
    public static int ERROR_SIGNAL_PENDING() {
        return ERROR_SIGNAL_PENDING;
    }
    private static final int ERROR_MAX_THRDS_REACHED = (int)164L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MAX_THRDS_REACHED 164
     * }
     */
    public static int ERROR_MAX_THRDS_REACHED() {
        return ERROR_MAX_THRDS_REACHED;
    }
    private static final int ERROR_LOCK_FAILED = (int)167L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOCK_FAILED 167
     * }
     */
    public static int ERROR_LOCK_FAILED() {
        return ERROR_LOCK_FAILED;
    }
    private static final int ERROR_BUSY = (int)170L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BUSY 170
     * }
     */
    public static int ERROR_BUSY() {
        return ERROR_BUSY;
    }
    private static final int ERROR_DEVICE_SUPPORT_IN_PROGRESS = (int)171L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DEVICE_SUPPORT_IN_PROGRESS 171
     * }
     */
    public static int ERROR_DEVICE_SUPPORT_IN_PROGRESS() {
        return ERROR_DEVICE_SUPPORT_IN_PROGRESS;
    }
    private static final int ERROR_CANCEL_VIOLATION = (int)173L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CANCEL_VIOLATION 173
     * }
     */
    public static int ERROR_CANCEL_VIOLATION() {
        return ERROR_CANCEL_VIOLATION;
    }
    private static final int ERROR_ATOMIC_LOCKS_NOT_SUPPORTED = (int)174L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ATOMIC_LOCKS_NOT_SUPPORTED 174
     * }
     */
    public static int ERROR_ATOMIC_LOCKS_NOT_SUPPORTED() {
        return ERROR_ATOMIC_LOCKS_NOT_SUPPORTED;
    }
    private static final int ERROR_INVALID_SEGMENT_NUMBER = (int)180L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_SEGMENT_NUMBER 180
     * }
     */
    public static int ERROR_INVALID_SEGMENT_NUMBER() {
        return ERROR_INVALID_SEGMENT_NUMBER;
    }
    private static final int ERROR_INVALID_ORDINAL = (int)182L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_ORDINAL 182
     * }
     */
    public static int ERROR_INVALID_ORDINAL() {
        return ERROR_INVALID_ORDINAL;
    }
    private static final int ERROR_ALREADY_EXISTS = (int)183L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ALREADY_EXISTS 183
     * }
     */
    public static int ERROR_ALREADY_EXISTS() {
        return ERROR_ALREADY_EXISTS;
    }
    private static final int ERROR_INVALID_FLAG_NUMBER = (int)186L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_FLAG_NUMBER 186
     * }
     */
    public static int ERROR_INVALID_FLAG_NUMBER() {
        return ERROR_INVALID_FLAG_NUMBER;
    }
    private static final int ERROR_SEM_NOT_FOUND = (int)187L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SEM_NOT_FOUND 187
     * }
     */
    public static int ERROR_SEM_NOT_FOUND() {
        return ERROR_SEM_NOT_FOUND;
    }
    private static final int ERROR_INVALID_STARTING_CODESEG = (int)188L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_STARTING_CODESEG 188
     * }
     */
    public static int ERROR_INVALID_STARTING_CODESEG() {
        return ERROR_INVALID_STARTING_CODESEG;
    }
    private static final int ERROR_INVALID_STACKSEG = (int)189L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_STACKSEG 189
     * }
     */
    public static int ERROR_INVALID_STACKSEG() {
        return ERROR_INVALID_STACKSEG;
    }
    private static final int ERROR_INVALID_MODULETYPE = (int)190L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_MODULETYPE 190
     * }
     */
    public static int ERROR_INVALID_MODULETYPE() {
        return ERROR_INVALID_MODULETYPE;
    }
    private static final int ERROR_INVALID_EXE_SIGNATURE = (int)191L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_EXE_SIGNATURE 191
     * }
     */
    public static int ERROR_INVALID_EXE_SIGNATURE() {
        return ERROR_INVALID_EXE_SIGNATURE;
    }
    private static final int ERROR_EXE_MARKED_INVALID = (int)192L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EXE_MARKED_INVALID 192
     * }
     */
    public static int ERROR_EXE_MARKED_INVALID() {
        return ERROR_EXE_MARKED_INVALID;
    }
    private static final int ERROR_BAD_EXE_FORMAT = (int)193L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BAD_EXE_FORMAT 193
     * }
     */
    public static int ERROR_BAD_EXE_FORMAT() {
        return ERROR_BAD_EXE_FORMAT;
    }
    private static final int ERROR_ITERATED_DATA_EXCEEDS_64k = (int)194L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ITERATED_DATA_EXCEEDS_64k 194
     * }
     */
    public static int ERROR_ITERATED_DATA_EXCEEDS_64k() {
        return ERROR_ITERATED_DATA_EXCEEDS_64k;
    }
    private static final int ERROR_INVALID_MINALLOCSIZE = (int)195L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_MINALLOCSIZE 195
     * }
     */
    public static int ERROR_INVALID_MINALLOCSIZE() {
        return ERROR_INVALID_MINALLOCSIZE;
    }
    private static final int ERROR_DYNLINK_FROM_INVALID_RING = (int)196L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DYNLINK_FROM_INVALID_RING 196
     * }
     */
    public static int ERROR_DYNLINK_FROM_INVALID_RING() {
        return ERROR_DYNLINK_FROM_INVALID_RING;
    }
    private static final int ERROR_IOPL_NOT_ENABLED = (int)197L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IOPL_NOT_ENABLED 197
     * }
     */
    public static int ERROR_IOPL_NOT_ENABLED() {
        return ERROR_IOPL_NOT_ENABLED;
    }
    private static final int ERROR_INVALID_SEGDPL = (int)198L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_SEGDPL 198
     * }
     */
    public static int ERROR_INVALID_SEGDPL() {
        return ERROR_INVALID_SEGDPL;
    }
    private static final int ERROR_AUTODATASEG_EXCEEDS_64k = (int)199L;
    /**
     * {@snippet lang=c :
     * #define ERROR_AUTODATASEG_EXCEEDS_64k 199
     * }
     */
    public static int ERROR_AUTODATASEG_EXCEEDS_64k() {
        return ERROR_AUTODATASEG_EXCEEDS_64k;
    }
    private static final int ERROR_RING2SEG_MUST_BE_MOVABLE = (int)200L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RING2SEG_MUST_BE_MOVABLE 200
     * }
     */
    public static int ERROR_RING2SEG_MUST_BE_MOVABLE() {
        return ERROR_RING2SEG_MUST_BE_MOVABLE;
    }
    private static final int ERROR_RELOC_CHAIN_XEEDS_SEGLIM = (int)201L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RELOC_CHAIN_XEEDS_SEGLIM 201
     * }
     */
    public static int ERROR_RELOC_CHAIN_XEEDS_SEGLIM() {
        return ERROR_RELOC_CHAIN_XEEDS_SEGLIM;
    }
    private static final int ERROR_INFLOOP_IN_RELOC_CHAIN = (int)202L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INFLOOP_IN_RELOC_CHAIN 202
     * }
     */
    public static int ERROR_INFLOOP_IN_RELOC_CHAIN() {
        return ERROR_INFLOOP_IN_RELOC_CHAIN;
    }
    private static final int ERROR_ENVVAR_NOT_FOUND = (int)203L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ENVVAR_NOT_FOUND 203
     * }
     */
    public static int ERROR_ENVVAR_NOT_FOUND() {
        return ERROR_ENVVAR_NOT_FOUND;
    }
    private static final int ERROR_NO_SIGNAL_SENT = (int)205L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_SIGNAL_SENT 205
     * }
     */
    public static int ERROR_NO_SIGNAL_SENT() {
        return ERROR_NO_SIGNAL_SENT;
    }
    private static final int ERROR_FILENAME_EXCED_RANGE = (int)206L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FILENAME_EXCED_RANGE 206
     * }
     */
    public static int ERROR_FILENAME_EXCED_RANGE() {
        return ERROR_FILENAME_EXCED_RANGE;
    }
    private static final int ERROR_RING2_STACK_IN_USE = (int)207L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RING2_STACK_IN_USE 207
     * }
     */
    public static int ERROR_RING2_STACK_IN_USE() {
        return ERROR_RING2_STACK_IN_USE;
    }
    private static final int ERROR_META_EXPANSION_TOO_LONG = (int)208L;
    /**
     * {@snippet lang=c :
     * #define ERROR_META_EXPANSION_TOO_LONG 208
     * }
     */
    public static int ERROR_META_EXPANSION_TOO_LONG() {
        return ERROR_META_EXPANSION_TOO_LONG;
    }
    private static final int ERROR_INVALID_SIGNAL_NUMBER = (int)209L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_SIGNAL_NUMBER 209
     * }
     */
    public static int ERROR_INVALID_SIGNAL_NUMBER() {
        return ERROR_INVALID_SIGNAL_NUMBER;
    }
    private static final int ERROR_THREAD_1_INACTIVE = (int)210L;
    /**
     * {@snippet lang=c :
     * #define ERROR_THREAD_1_INACTIVE 210
     * }
     */
    public static int ERROR_THREAD_1_INACTIVE() {
        return ERROR_THREAD_1_INACTIVE;
    }
    private static final int ERROR_LOCKED = (int)212L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOCKED 212
     * }
     */
    public static int ERROR_LOCKED() {
        return ERROR_LOCKED;
    }
    private static final int ERROR_TOO_MANY_MODULES = (int)214L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TOO_MANY_MODULES 214
     * }
     */
    public static int ERROR_TOO_MANY_MODULES() {
        return ERROR_TOO_MANY_MODULES;
    }
    private static final int ERROR_NESTING_NOT_ALLOWED = (int)215L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NESTING_NOT_ALLOWED 215
     * }
     */
    public static int ERROR_NESTING_NOT_ALLOWED() {
        return ERROR_NESTING_NOT_ALLOWED;
    }
    private static final int ERROR_EXE_MACHINE_TYPE_MISMATCH = (int)216L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EXE_MACHINE_TYPE_MISMATCH 216
     * }
     */
    public static int ERROR_EXE_MACHINE_TYPE_MISMATCH() {
        return ERROR_EXE_MACHINE_TYPE_MISMATCH;
    }
    private static final int ERROR_EXE_CANNOT_MODIFY_SIGNED_BINARY = (int)217L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EXE_CANNOT_MODIFY_SIGNED_BINARY 217
     * }
     */
    public static int ERROR_EXE_CANNOT_MODIFY_SIGNED_BINARY() {
        return ERROR_EXE_CANNOT_MODIFY_SIGNED_BINARY;
    }
    private static final int ERROR_EXE_CANNOT_MODIFY_STRONG_SIGNED_BINARY = (int)218L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EXE_CANNOT_MODIFY_STRONG_SIGNED_BINARY 218
     * }
     */
    public static int ERROR_EXE_CANNOT_MODIFY_STRONG_SIGNED_BINARY() {
        return ERROR_EXE_CANNOT_MODIFY_STRONG_SIGNED_BINARY;
    }
    private static final int ERROR_FILE_CHECKED_OUT = (int)220L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FILE_CHECKED_OUT 220
     * }
     */
    public static int ERROR_FILE_CHECKED_OUT() {
        return ERROR_FILE_CHECKED_OUT;
    }
    private static final int ERROR_CHECKOUT_REQUIRED = (int)221L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CHECKOUT_REQUIRED 221
     * }
     */
    public static int ERROR_CHECKOUT_REQUIRED() {
        return ERROR_CHECKOUT_REQUIRED;
    }
    private static final int ERROR_BAD_FILE_TYPE = (int)222L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BAD_FILE_TYPE 222
     * }
     */
    public static int ERROR_BAD_FILE_TYPE() {
        return ERROR_BAD_FILE_TYPE;
    }
    private static final int ERROR_FILE_TOO_LARGE = (int)223L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FILE_TOO_LARGE 223
     * }
     */
    public static int ERROR_FILE_TOO_LARGE() {
        return ERROR_FILE_TOO_LARGE;
    }
    private static final int ERROR_FORMS_AUTH_REQUIRED = (int)224L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FORMS_AUTH_REQUIRED 224
     * }
     */
    public static int ERROR_FORMS_AUTH_REQUIRED() {
        return ERROR_FORMS_AUTH_REQUIRED;
    }
    private static final int ERROR_VIRUS_INFECTED = (int)225L;
    /**
     * {@snippet lang=c :
     * #define ERROR_VIRUS_INFECTED 225
     * }
     */
    public static int ERROR_VIRUS_INFECTED() {
        return ERROR_VIRUS_INFECTED;
    }
    private static final int ERROR_VIRUS_DELETED = (int)226L;
    /**
     * {@snippet lang=c :
     * #define ERROR_VIRUS_DELETED 226
     * }
     */
    public static int ERROR_VIRUS_DELETED() {
        return ERROR_VIRUS_DELETED;
    }
    private static final int ERROR_PIPE_LOCAL = (int)229L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PIPE_LOCAL 229
     * }
     */
    public static int ERROR_PIPE_LOCAL() {
        return ERROR_PIPE_LOCAL;
    }
    private static final int ERROR_BAD_PIPE = (int)230L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BAD_PIPE 230
     * }
     */
    public static int ERROR_BAD_PIPE() {
        return ERROR_BAD_PIPE;
    }
    private static final int ERROR_PIPE_BUSY = (int)231L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PIPE_BUSY 231
     * }
     */
    public static int ERROR_PIPE_BUSY() {
        return ERROR_PIPE_BUSY;
    }
    private static final int ERROR_NO_DATA = (int)232L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_DATA 232
     * }
     */
    public static int ERROR_NO_DATA() {
        return ERROR_NO_DATA;
    }
    private static final int ERROR_PIPE_NOT_CONNECTED = (int)233L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PIPE_NOT_CONNECTED 233
     * }
     */
    public static int ERROR_PIPE_NOT_CONNECTED() {
        return ERROR_PIPE_NOT_CONNECTED;
    }
    private static final int ERROR_MORE_DATA = (int)234L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MORE_DATA 234
     * }
     */
    public static int ERROR_MORE_DATA() {
        return ERROR_MORE_DATA;
    }
    private static final int ERROR_NO_WORK_DONE = (int)235L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_WORK_DONE 235
     * }
     */
    public static int ERROR_NO_WORK_DONE() {
        return ERROR_NO_WORK_DONE;
    }
    private static final int ERROR_VC_DISCONNECTED = (int)240L;
    /**
     * {@snippet lang=c :
     * #define ERROR_VC_DISCONNECTED 240
     * }
     */
    public static int ERROR_VC_DISCONNECTED() {
        return ERROR_VC_DISCONNECTED;
    }
    private static final int ERROR_INVALID_EA_NAME = (int)254L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_EA_NAME 254
     * }
     */
    public static int ERROR_INVALID_EA_NAME() {
        return ERROR_INVALID_EA_NAME;
    }
    private static final int ERROR_EA_LIST_INCONSISTENT = (int)255L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EA_LIST_INCONSISTENT 255
     * }
     */
    public static int ERROR_EA_LIST_INCONSISTENT() {
        return ERROR_EA_LIST_INCONSISTENT;
    }
    private static final int WAIT_TIMEOUT = (int)258L;
    /**
     * {@snippet lang=c :
     * #define WAIT_TIMEOUT 258
     * }
     */
    public static int WAIT_TIMEOUT() {
        return WAIT_TIMEOUT;
    }
    private static final int ERROR_NO_MORE_ITEMS = (int)259L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_MORE_ITEMS 259
     * }
     */
    public static int ERROR_NO_MORE_ITEMS() {
        return ERROR_NO_MORE_ITEMS;
    }
    private static final int ERROR_CANNOT_COPY = (int)266L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CANNOT_COPY 266
     * }
     */
    public static int ERROR_CANNOT_COPY() {
        return ERROR_CANNOT_COPY;
    }
    private static final int ERROR_DIRECTORY = (int)267L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DIRECTORY 267
     * }
     */
    public static int ERROR_DIRECTORY() {
        return ERROR_DIRECTORY;
    }
    private static final int ERROR_EAS_DIDNT_FIT = (int)275L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EAS_DIDNT_FIT 275
     * }
     */
    public static int ERROR_EAS_DIDNT_FIT() {
        return ERROR_EAS_DIDNT_FIT;
    }
    private static final int ERROR_EA_FILE_CORRUPT = (int)276L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EA_FILE_CORRUPT 276
     * }
     */
    public static int ERROR_EA_FILE_CORRUPT() {
        return ERROR_EA_FILE_CORRUPT;
    }
    private static final int ERROR_EA_TABLE_FULL = (int)277L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EA_TABLE_FULL 277
     * }
     */
    public static int ERROR_EA_TABLE_FULL() {
        return ERROR_EA_TABLE_FULL;
    }
    private static final int ERROR_INVALID_EA_HANDLE = (int)278L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_EA_HANDLE 278
     * }
     */
    public static int ERROR_INVALID_EA_HANDLE() {
        return ERROR_INVALID_EA_HANDLE;
    }
    private static final int ERROR_EAS_NOT_SUPPORTED = (int)282L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EAS_NOT_SUPPORTED 282
     * }
     */
    public static int ERROR_EAS_NOT_SUPPORTED() {
        return ERROR_EAS_NOT_SUPPORTED;
    }
    private static final int ERROR_NOT_OWNER = (int)288L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_OWNER 288
     * }
     */
    public static int ERROR_NOT_OWNER() {
        return ERROR_NOT_OWNER;
    }
    private static final int ERROR_TOO_MANY_POSTS = (int)298L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TOO_MANY_POSTS 298
     * }
     */
    public static int ERROR_TOO_MANY_POSTS() {
        return ERROR_TOO_MANY_POSTS;
    }
    private static final int ERROR_PARTIAL_COPY = (int)299L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PARTIAL_COPY 299
     * }
     */
    public static int ERROR_PARTIAL_COPY() {
        return ERROR_PARTIAL_COPY;
    }
    private static final int ERROR_OPLOCK_NOT_GRANTED = (int)300L;
    /**
     * {@snippet lang=c :
     * #define ERROR_OPLOCK_NOT_GRANTED 300
     * }
     */
    public static int ERROR_OPLOCK_NOT_GRANTED() {
        return ERROR_OPLOCK_NOT_GRANTED;
    }
    private static final int ERROR_INVALID_OPLOCK_PROTOCOL = (int)301L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_OPLOCK_PROTOCOL 301
     * }
     */
    public static int ERROR_INVALID_OPLOCK_PROTOCOL() {
        return ERROR_INVALID_OPLOCK_PROTOCOL;
    }
    private static final int ERROR_DISK_TOO_FRAGMENTED = (int)302L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DISK_TOO_FRAGMENTED 302
     * }
     */
    public static int ERROR_DISK_TOO_FRAGMENTED() {
        return ERROR_DISK_TOO_FRAGMENTED;
    }
    private static final int ERROR_DELETE_PENDING = (int)303L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DELETE_PENDING 303
     * }
     */
    public static int ERROR_DELETE_PENDING() {
        return ERROR_DELETE_PENDING;
    }
    private static final int ERROR_INCOMPATIBLE_WITH_GLOBAL_SHORT_NAME_REGISTRY_SETTING = (int)304L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INCOMPATIBLE_WITH_GLOBAL_SHORT_NAME_REGISTRY_SETTING 304
     * }
     */
    public static int ERROR_INCOMPATIBLE_WITH_GLOBAL_SHORT_NAME_REGISTRY_SETTING() {
        return ERROR_INCOMPATIBLE_WITH_GLOBAL_SHORT_NAME_REGISTRY_SETTING;
    }
    private static final int ERROR_SHORT_NAMES_NOT_ENABLED_ON_VOLUME = (int)305L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SHORT_NAMES_NOT_ENABLED_ON_VOLUME 305
     * }
     */
    public static int ERROR_SHORT_NAMES_NOT_ENABLED_ON_VOLUME() {
        return ERROR_SHORT_NAMES_NOT_ENABLED_ON_VOLUME;
    }
    private static final int ERROR_SECURITY_STREAM_IS_INCONSISTENT = (int)306L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SECURITY_STREAM_IS_INCONSISTENT 306
     * }
     */
    public static int ERROR_SECURITY_STREAM_IS_INCONSISTENT() {
        return ERROR_SECURITY_STREAM_IS_INCONSISTENT;
    }
    private static final int ERROR_INVALID_LOCK_RANGE = (int)307L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_LOCK_RANGE 307
     * }
     */
    public static int ERROR_INVALID_LOCK_RANGE() {
        return ERROR_INVALID_LOCK_RANGE;
    }
    private static final int ERROR_IMAGE_SUBSYSTEM_NOT_PRESENT = (int)308L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IMAGE_SUBSYSTEM_NOT_PRESENT 308
     * }
     */
    public static int ERROR_IMAGE_SUBSYSTEM_NOT_PRESENT() {
        return ERROR_IMAGE_SUBSYSTEM_NOT_PRESENT;
    }
    private static final int ERROR_NOTIFICATION_GUID_ALREADY_DEFINED = (int)309L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOTIFICATION_GUID_ALREADY_DEFINED 309
     * }
     */
    public static int ERROR_NOTIFICATION_GUID_ALREADY_DEFINED() {
        return ERROR_NOTIFICATION_GUID_ALREADY_DEFINED;
    }
    private static final int ERROR_INVALID_EXCEPTION_HANDLER = (int)310L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_EXCEPTION_HANDLER 310
     * }
     */
    public static int ERROR_INVALID_EXCEPTION_HANDLER() {
        return ERROR_INVALID_EXCEPTION_HANDLER;
    }
    private static final int ERROR_DUPLICATE_PRIVILEGES = (int)311L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DUPLICATE_PRIVILEGES 311
     * }
     */
    public static int ERROR_DUPLICATE_PRIVILEGES() {
        return ERROR_DUPLICATE_PRIVILEGES;
    }
    private static final int ERROR_NO_RANGES_PROCESSED = (int)312L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_RANGES_PROCESSED 312
     * }
     */
    public static int ERROR_NO_RANGES_PROCESSED() {
        return ERROR_NO_RANGES_PROCESSED;
    }
    private static final int ERROR_NOT_ALLOWED_ON_SYSTEM_FILE = (int)313L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_ALLOWED_ON_SYSTEM_FILE 313
     * }
     */
    public static int ERROR_NOT_ALLOWED_ON_SYSTEM_FILE() {
        return ERROR_NOT_ALLOWED_ON_SYSTEM_FILE;
    }
    private static final int ERROR_DISK_RESOURCES_EXHAUSTED = (int)314L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DISK_RESOURCES_EXHAUSTED 314
     * }
     */
    public static int ERROR_DISK_RESOURCES_EXHAUSTED() {
        return ERROR_DISK_RESOURCES_EXHAUSTED;
    }
    private static final int ERROR_INVALID_TOKEN = (int)315L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_TOKEN 315
     * }
     */
    public static int ERROR_INVALID_TOKEN() {
        return ERROR_INVALID_TOKEN;
    }
    private static final int ERROR_DEVICE_FEATURE_NOT_SUPPORTED = (int)316L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DEVICE_FEATURE_NOT_SUPPORTED 316
     * }
     */
    public static int ERROR_DEVICE_FEATURE_NOT_SUPPORTED() {
        return ERROR_DEVICE_FEATURE_NOT_SUPPORTED;
    }
    private static final int ERROR_MR_MID_NOT_FOUND = (int)317L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MR_MID_NOT_FOUND 317
     * }
     */
    public static int ERROR_MR_MID_NOT_FOUND() {
        return ERROR_MR_MID_NOT_FOUND;
    }
    private static final int ERROR_SCOPE_NOT_FOUND = (int)318L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SCOPE_NOT_FOUND 318
     * }
     */
    public static int ERROR_SCOPE_NOT_FOUND() {
        return ERROR_SCOPE_NOT_FOUND;
    }
    private static final int ERROR_UNDEFINED_SCOPE = (int)319L;
    /**
     * {@snippet lang=c :
     * #define ERROR_UNDEFINED_SCOPE 319
     * }
     */
    public static int ERROR_UNDEFINED_SCOPE() {
        return ERROR_UNDEFINED_SCOPE;
    }
    private static final int ERROR_INVALID_CAP = (int)320L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_CAP 320
     * }
     */
    public static int ERROR_INVALID_CAP() {
        return ERROR_INVALID_CAP;
    }
    private static final int ERROR_DEVICE_UNREACHABLE = (int)321L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DEVICE_UNREACHABLE 321
     * }
     */
    public static int ERROR_DEVICE_UNREACHABLE() {
        return ERROR_DEVICE_UNREACHABLE;
    }
    private static final int ERROR_DEVICE_NO_RESOURCES = (int)322L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DEVICE_NO_RESOURCES 322
     * }
     */
    public static int ERROR_DEVICE_NO_RESOURCES() {
        return ERROR_DEVICE_NO_RESOURCES;
    }
    private static final int ERROR_DATA_CHECKSUM_ERROR = (int)323L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DATA_CHECKSUM_ERROR 323
     * }
     */
    public static int ERROR_DATA_CHECKSUM_ERROR() {
        return ERROR_DATA_CHECKSUM_ERROR;
    }
    private static final int ERROR_INTERMIXED_KERNEL_EA_OPERATION = (int)324L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INTERMIXED_KERNEL_EA_OPERATION 324
     * }
     */
    public static int ERROR_INTERMIXED_KERNEL_EA_OPERATION() {
        return ERROR_INTERMIXED_KERNEL_EA_OPERATION;
    }
    private static final int ERROR_FILE_LEVEL_TRIM_NOT_SUPPORTED = (int)326L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FILE_LEVEL_TRIM_NOT_SUPPORTED 326
     * }
     */
    public static int ERROR_FILE_LEVEL_TRIM_NOT_SUPPORTED() {
        return ERROR_FILE_LEVEL_TRIM_NOT_SUPPORTED;
    }
    private static final int ERROR_OFFSET_ALIGNMENT_VIOLATION = (int)327L;
    /**
     * {@snippet lang=c :
     * #define ERROR_OFFSET_ALIGNMENT_VIOLATION 327
     * }
     */
    public static int ERROR_OFFSET_ALIGNMENT_VIOLATION() {
        return ERROR_OFFSET_ALIGNMENT_VIOLATION;
    }
    private static final int ERROR_INVALID_FIELD_IN_PARAMETER_LIST = (int)328L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_FIELD_IN_PARAMETER_LIST 328
     * }
     */
    public static int ERROR_INVALID_FIELD_IN_PARAMETER_LIST() {
        return ERROR_INVALID_FIELD_IN_PARAMETER_LIST;
    }
    private static final int ERROR_OPERATION_IN_PROGRESS = (int)329L;
    /**
     * {@snippet lang=c :
     * #define ERROR_OPERATION_IN_PROGRESS 329
     * }
     */
    public static int ERROR_OPERATION_IN_PROGRESS() {
        return ERROR_OPERATION_IN_PROGRESS;
    }
    private static final int ERROR_BAD_DEVICE_PATH = (int)330L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BAD_DEVICE_PATH 330
     * }
     */
    public static int ERROR_BAD_DEVICE_PATH() {
        return ERROR_BAD_DEVICE_PATH;
    }
    private static final int ERROR_TOO_MANY_DESCRIPTORS = (int)331L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TOO_MANY_DESCRIPTORS 331
     * }
     */
    public static int ERROR_TOO_MANY_DESCRIPTORS() {
        return ERROR_TOO_MANY_DESCRIPTORS;
    }
    private static final int ERROR_SCRUB_DATA_DISABLED = (int)332L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SCRUB_DATA_DISABLED 332
     * }
     */
    public static int ERROR_SCRUB_DATA_DISABLED() {
        return ERROR_SCRUB_DATA_DISABLED;
    }
    private static final int ERROR_NOT_REDUNDANT_STORAGE = (int)333L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_REDUNDANT_STORAGE 333
     * }
     */
    public static int ERROR_NOT_REDUNDANT_STORAGE() {
        return ERROR_NOT_REDUNDANT_STORAGE;
    }
    private static final int ERROR_RESIDENT_FILE_NOT_SUPPORTED = (int)334L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RESIDENT_FILE_NOT_SUPPORTED 334
     * }
     */
    public static int ERROR_RESIDENT_FILE_NOT_SUPPORTED() {
        return ERROR_RESIDENT_FILE_NOT_SUPPORTED;
    }
    private static final int ERROR_COMPRESSED_FILE_NOT_SUPPORTED = (int)335L;
    /**
     * {@snippet lang=c :
     * #define ERROR_COMPRESSED_FILE_NOT_SUPPORTED 335
     * }
     */
    public static int ERROR_COMPRESSED_FILE_NOT_SUPPORTED() {
        return ERROR_COMPRESSED_FILE_NOT_SUPPORTED;
    }
    private static final int ERROR_DIRECTORY_NOT_SUPPORTED = (int)336L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DIRECTORY_NOT_SUPPORTED 336
     * }
     */
    public static int ERROR_DIRECTORY_NOT_SUPPORTED() {
        return ERROR_DIRECTORY_NOT_SUPPORTED;
    }
    private static final int ERROR_NOT_READ_FROM_COPY = (int)337L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_READ_FROM_COPY 337
     * }
     */
    public static int ERROR_NOT_READ_FROM_COPY() {
        return ERROR_NOT_READ_FROM_COPY;
    }
    private static final int ERROR_FT_WRITE_FAILURE = (int)338L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FT_WRITE_FAILURE 338
     * }
     */
    public static int ERROR_FT_WRITE_FAILURE() {
        return ERROR_FT_WRITE_FAILURE;
    }
    private static final int ERROR_FT_DI_SCAN_REQUIRED = (int)339L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FT_DI_SCAN_REQUIRED 339
     * }
     */
    public static int ERROR_FT_DI_SCAN_REQUIRED() {
        return ERROR_FT_DI_SCAN_REQUIRED;
    }
    private static final int ERROR_INVALID_KERNEL_INFO_VERSION = (int)340L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_KERNEL_INFO_VERSION 340
     * }
     */
    public static int ERROR_INVALID_KERNEL_INFO_VERSION() {
        return ERROR_INVALID_KERNEL_INFO_VERSION;
    }
    private static final int ERROR_INVALID_PEP_INFO_VERSION = (int)341L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_PEP_INFO_VERSION 341
     * }
     */
    public static int ERROR_INVALID_PEP_INFO_VERSION() {
        return ERROR_INVALID_PEP_INFO_VERSION;
    }
    private static final int ERROR_OBJECT_NOT_EXTERNALLY_BACKED = (int)342L;
    /**
     * {@snippet lang=c :
     * #define ERROR_OBJECT_NOT_EXTERNALLY_BACKED 342
     * }
     */
    public static int ERROR_OBJECT_NOT_EXTERNALLY_BACKED() {
        return ERROR_OBJECT_NOT_EXTERNALLY_BACKED;
    }
    private static final int ERROR_EXTERNAL_BACKING_PROVIDER_UNKNOWN = (int)343L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EXTERNAL_BACKING_PROVIDER_UNKNOWN 343
     * }
     */
    public static int ERROR_EXTERNAL_BACKING_PROVIDER_UNKNOWN() {
        return ERROR_EXTERNAL_BACKING_PROVIDER_UNKNOWN;
    }
    private static final int ERROR_COMPRESSION_NOT_BENEFICIAL = (int)344L;
    /**
     * {@snippet lang=c :
     * #define ERROR_COMPRESSION_NOT_BENEFICIAL 344
     * }
     */
    public static int ERROR_COMPRESSION_NOT_BENEFICIAL() {
        return ERROR_COMPRESSION_NOT_BENEFICIAL;
    }
    private static final int ERROR_STORAGE_TOPOLOGY_ID_MISMATCH = (int)345L;
    /**
     * {@snippet lang=c :
     * #define ERROR_STORAGE_TOPOLOGY_ID_MISMATCH 345
     * }
     */
    public static int ERROR_STORAGE_TOPOLOGY_ID_MISMATCH() {
        return ERROR_STORAGE_TOPOLOGY_ID_MISMATCH;
    }
    private static final int ERROR_BLOCKED_BY_PARENTAL_CONTROLS = (int)346L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BLOCKED_BY_PARENTAL_CONTROLS 346
     * }
     */
    public static int ERROR_BLOCKED_BY_PARENTAL_CONTROLS() {
        return ERROR_BLOCKED_BY_PARENTAL_CONTROLS;
    }
    private static final int ERROR_BLOCK_TOO_MANY_REFERENCES = (int)347L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BLOCK_TOO_MANY_REFERENCES 347
     * }
     */
    public static int ERROR_BLOCK_TOO_MANY_REFERENCES() {
        return ERROR_BLOCK_TOO_MANY_REFERENCES;
    }
    private static final int ERROR_MARKED_TO_DISALLOW_WRITES = (int)348L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MARKED_TO_DISALLOW_WRITES 348
     * }
     */
    public static int ERROR_MARKED_TO_DISALLOW_WRITES() {
        return ERROR_MARKED_TO_DISALLOW_WRITES;
    }
    private static final int ERROR_ENCLAVE_FAILURE = (int)349L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ENCLAVE_FAILURE 349
     * }
     */
    public static int ERROR_ENCLAVE_FAILURE() {
        return ERROR_ENCLAVE_FAILURE;
    }
    private static final int ERROR_FAIL_NOACTION_REBOOT = (int)350L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FAIL_NOACTION_REBOOT 350
     * }
     */
    public static int ERROR_FAIL_NOACTION_REBOOT() {
        return ERROR_FAIL_NOACTION_REBOOT;
    }
    private static final int ERROR_FAIL_SHUTDOWN = (int)351L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FAIL_SHUTDOWN 351
     * }
     */
    public static int ERROR_FAIL_SHUTDOWN() {
        return ERROR_FAIL_SHUTDOWN;
    }
    private static final int ERROR_FAIL_RESTART = (int)352L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FAIL_RESTART 352
     * }
     */
    public static int ERROR_FAIL_RESTART() {
        return ERROR_FAIL_RESTART;
    }
    private static final int ERROR_MAX_SESSIONS_REACHED = (int)353L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MAX_SESSIONS_REACHED 353
     * }
     */
    public static int ERROR_MAX_SESSIONS_REACHED() {
        return ERROR_MAX_SESSIONS_REACHED;
    }
    private static final int ERROR_NETWORK_ACCESS_DENIED_EDP = (int)354L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NETWORK_ACCESS_DENIED_EDP 354
     * }
     */
    public static int ERROR_NETWORK_ACCESS_DENIED_EDP() {
        return ERROR_NETWORK_ACCESS_DENIED_EDP;
    }
    private static final int ERROR_DEVICE_HINT_NAME_BUFFER_TOO_SMALL = (int)355L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DEVICE_HINT_NAME_BUFFER_TOO_SMALL 355
     * }
     */
    public static int ERROR_DEVICE_HINT_NAME_BUFFER_TOO_SMALL() {
        return ERROR_DEVICE_HINT_NAME_BUFFER_TOO_SMALL;
    }
    private static final int ERROR_EDP_POLICY_DENIES_OPERATION = (int)356L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EDP_POLICY_DENIES_OPERATION 356
     * }
     */
    public static int ERROR_EDP_POLICY_DENIES_OPERATION() {
        return ERROR_EDP_POLICY_DENIES_OPERATION;
    }
    private static final int ERROR_EDP_DPL_POLICY_CANT_BE_SATISFIED = (int)357L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EDP_DPL_POLICY_CANT_BE_SATISFIED 357
     * }
     */
    public static int ERROR_EDP_DPL_POLICY_CANT_BE_SATISFIED() {
        return ERROR_EDP_DPL_POLICY_CANT_BE_SATISFIED;
    }
    private static final int ERROR_CLOUD_FILE_SYNC_ROOT_METADATA_CORRUPT = (int)358L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLOUD_FILE_SYNC_ROOT_METADATA_CORRUPT 358
     * }
     */
    public static int ERROR_CLOUD_FILE_SYNC_ROOT_METADATA_CORRUPT() {
        return ERROR_CLOUD_FILE_SYNC_ROOT_METADATA_CORRUPT;
    }
    private static final int ERROR_DEVICE_IN_MAINTENANCE = (int)359L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DEVICE_IN_MAINTENANCE 359
     * }
     */
    public static int ERROR_DEVICE_IN_MAINTENANCE() {
        return ERROR_DEVICE_IN_MAINTENANCE;
    }
    private static final int ERROR_NOT_SUPPORTED_ON_DAX = (int)360L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_SUPPORTED_ON_DAX 360
     * }
     */
    public static int ERROR_NOT_SUPPORTED_ON_DAX() {
        return ERROR_NOT_SUPPORTED_ON_DAX;
    }
    private static final int ERROR_DAX_MAPPING_EXISTS = (int)361L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DAX_MAPPING_EXISTS 361
     * }
     */
    public static int ERROR_DAX_MAPPING_EXISTS() {
        return ERROR_DAX_MAPPING_EXISTS;
    }
    private static final int ERROR_CLOUD_FILE_PROVIDER_NOT_RUNNING = (int)362L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLOUD_FILE_PROVIDER_NOT_RUNNING 362
     * }
     */
    public static int ERROR_CLOUD_FILE_PROVIDER_NOT_RUNNING() {
        return ERROR_CLOUD_FILE_PROVIDER_NOT_RUNNING;
    }
    private static final int ERROR_CLOUD_FILE_METADATA_CORRUPT = (int)363L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLOUD_FILE_METADATA_CORRUPT 363
     * }
     */
    public static int ERROR_CLOUD_FILE_METADATA_CORRUPT() {
        return ERROR_CLOUD_FILE_METADATA_CORRUPT;
    }
    private static final int ERROR_CLOUD_FILE_METADATA_TOO_LARGE = (int)364L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLOUD_FILE_METADATA_TOO_LARGE 364
     * }
     */
    public static int ERROR_CLOUD_FILE_METADATA_TOO_LARGE() {
        return ERROR_CLOUD_FILE_METADATA_TOO_LARGE;
    }
    private static final int ERROR_CLOUD_FILE_PROPERTY_BLOB_TOO_LARGE = (int)365L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLOUD_FILE_PROPERTY_BLOB_TOO_LARGE 365
     * }
     */
    public static int ERROR_CLOUD_FILE_PROPERTY_BLOB_TOO_LARGE() {
        return ERROR_CLOUD_FILE_PROPERTY_BLOB_TOO_LARGE;
    }
    private static final int ERROR_CLOUD_FILE_PROPERTY_BLOB_CHECKSUM_MISMATCH = (int)366L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLOUD_FILE_PROPERTY_BLOB_CHECKSUM_MISMATCH 366
     * }
     */
    public static int ERROR_CLOUD_FILE_PROPERTY_BLOB_CHECKSUM_MISMATCH() {
        return ERROR_CLOUD_FILE_PROPERTY_BLOB_CHECKSUM_MISMATCH;
    }
    private static final int ERROR_CHILD_PROCESS_BLOCKED = (int)367L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CHILD_PROCESS_BLOCKED 367
     * }
     */
    public static int ERROR_CHILD_PROCESS_BLOCKED() {
        return ERROR_CHILD_PROCESS_BLOCKED;
    }
    private static final int ERROR_STORAGE_LOST_DATA_PERSISTENCE = (int)368L;
    /**
     * {@snippet lang=c :
     * #define ERROR_STORAGE_LOST_DATA_PERSISTENCE 368
     * }
     */
    public static int ERROR_STORAGE_LOST_DATA_PERSISTENCE() {
        return ERROR_STORAGE_LOST_DATA_PERSISTENCE;
    }
    private static final int ERROR_FILE_SYSTEM_VIRTUALIZATION_UNAVAILABLE = (int)369L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FILE_SYSTEM_VIRTUALIZATION_UNAVAILABLE 369
     * }
     */
    public static int ERROR_FILE_SYSTEM_VIRTUALIZATION_UNAVAILABLE() {
        return ERROR_FILE_SYSTEM_VIRTUALIZATION_UNAVAILABLE;
    }
    private static final int ERROR_FILE_SYSTEM_VIRTUALIZATION_METADATA_CORRUPT = (int)370L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FILE_SYSTEM_VIRTUALIZATION_METADATA_CORRUPT 370
     * }
     */
    public static int ERROR_FILE_SYSTEM_VIRTUALIZATION_METADATA_CORRUPT() {
        return ERROR_FILE_SYSTEM_VIRTUALIZATION_METADATA_CORRUPT;
    }
    private static final int ERROR_FILE_SYSTEM_VIRTUALIZATION_BUSY = (int)371L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FILE_SYSTEM_VIRTUALIZATION_BUSY 371
     * }
     */
    public static int ERROR_FILE_SYSTEM_VIRTUALIZATION_BUSY() {
        return ERROR_FILE_SYSTEM_VIRTUALIZATION_BUSY;
    }
    private static final int ERROR_FILE_SYSTEM_VIRTUALIZATION_PROVIDER_UNKNOWN = (int)372L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FILE_SYSTEM_VIRTUALIZATION_PROVIDER_UNKNOWN 372
     * }
     */
    public static int ERROR_FILE_SYSTEM_VIRTUALIZATION_PROVIDER_UNKNOWN() {
        return ERROR_FILE_SYSTEM_VIRTUALIZATION_PROVIDER_UNKNOWN;
    }
    private static final int ERROR_GDI_HANDLE_LEAK = (int)373L;
    /**
     * {@snippet lang=c :
     * #define ERROR_GDI_HANDLE_LEAK 373
     * }
     */
    public static int ERROR_GDI_HANDLE_LEAK() {
        return ERROR_GDI_HANDLE_LEAK;
    }
    private static final int ERROR_CLOUD_FILE_TOO_MANY_PROPERTY_BLOBS = (int)374L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLOUD_FILE_TOO_MANY_PROPERTY_BLOBS 374
     * }
     */
    public static int ERROR_CLOUD_FILE_TOO_MANY_PROPERTY_BLOBS() {
        return ERROR_CLOUD_FILE_TOO_MANY_PROPERTY_BLOBS;
    }
    private static final int ERROR_CLOUD_FILE_PROPERTY_VERSION_NOT_SUPPORTED = (int)375L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLOUD_FILE_PROPERTY_VERSION_NOT_SUPPORTED 375
     * }
     */
    public static int ERROR_CLOUD_FILE_PROPERTY_VERSION_NOT_SUPPORTED() {
        return ERROR_CLOUD_FILE_PROPERTY_VERSION_NOT_SUPPORTED;
    }
    private static final int ERROR_NOT_A_CLOUD_FILE = (int)376L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_A_CLOUD_FILE 376
     * }
     */
    public static int ERROR_NOT_A_CLOUD_FILE() {
        return ERROR_NOT_A_CLOUD_FILE;
    }
    private static final int ERROR_CLOUD_FILE_NOT_IN_SYNC = (int)377L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLOUD_FILE_NOT_IN_SYNC 377
     * }
     */
    public static int ERROR_CLOUD_FILE_NOT_IN_SYNC() {
        return ERROR_CLOUD_FILE_NOT_IN_SYNC;
    }
    private static final int ERROR_CLOUD_FILE_ALREADY_CONNECTED = (int)378L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLOUD_FILE_ALREADY_CONNECTED 378
     * }
     */
    public static int ERROR_CLOUD_FILE_ALREADY_CONNECTED() {
        return ERROR_CLOUD_FILE_ALREADY_CONNECTED;
    }
    private static final int ERROR_CLOUD_FILE_NOT_SUPPORTED = (int)379L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLOUD_FILE_NOT_SUPPORTED 379
     * }
     */
    public static int ERROR_CLOUD_FILE_NOT_SUPPORTED() {
        return ERROR_CLOUD_FILE_NOT_SUPPORTED;
    }
    private static final int ERROR_CLOUD_FILE_INVALID_REQUEST = (int)380L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLOUD_FILE_INVALID_REQUEST 380
     * }
     */
    public static int ERROR_CLOUD_FILE_INVALID_REQUEST() {
        return ERROR_CLOUD_FILE_INVALID_REQUEST;
    }
    private static final int ERROR_CLOUD_FILE_READ_ONLY_VOLUME = (int)381L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLOUD_FILE_READ_ONLY_VOLUME 381
     * }
     */
    public static int ERROR_CLOUD_FILE_READ_ONLY_VOLUME() {
        return ERROR_CLOUD_FILE_READ_ONLY_VOLUME;
    }
    private static final int ERROR_CLOUD_FILE_CONNECTED_PROVIDER_ONLY = (int)382L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLOUD_FILE_CONNECTED_PROVIDER_ONLY 382
     * }
     */
    public static int ERROR_CLOUD_FILE_CONNECTED_PROVIDER_ONLY() {
        return ERROR_CLOUD_FILE_CONNECTED_PROVIDER_ONLY;
    }
    private static final int ERROR_CLOUD_FILE_VALIDATION_FAILED = (int)383L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLOUD_FILE_VALIDATION_FAILED 383
     * }
     */
    public static int ERROR_CLOUD_FILE_VALIDATION_FAILED() {
        return ERROR_CLOUD_FILE_VALIDATION_FAILED;
    }
    private static final int ERROR_SMB1_NOT_AVAILABLE = (int)384L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SMB1_NOT_AVAILABLE 384
     * }
     */
    public static int ERROR_SMB1_NOT_AVAILABLE() {
        return ERROR_SMB1_NOT_AVAILABLE;
    }
    private static final int ERROR_FILE_SYSTEM_VIRTUALIZATION_INVALID_OPERATION = (int)385L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FILE_SYSTEM_VIRTUALIZATION_INVALID_OPERATION 385
     * }
     */
    public static int ERROR_FILE_SYSTEM_VIRTUALIZATION_INVALID_OPERATION() {
        return ERROR_FILE_SYSTEM_VIRTUALIZATION_INVALID_OPERATION;
    }
    private static final int ERROR_CLOUD_FILE_AUTHENTICATION_FAILED = (int)386L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLOUD_FILE_AUTHENTICATION_FAILED 386
     * }
     */
    public static int ERROR_CLOUD_FILE_AUTHENTICATION_FAILED() {
        return ERROR_CLOUD_FILE_AUTHENTICATION_FAILED;
    }
    private static final int ERROR_CLOUD_FILE_INSUFFICIENT_RESOURCES = (int)387L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLOUD_FILE_INSUFFICIENT_RESOURCES 387
     * }
     */
    public static int ERROR_CLOUD_FILE_INSUFFICIENT_RESOURCES() {
        return ERROR_CLOUD_FILE_INSUFFICIENT_RESOURCES;
    }
    private static final int ERROR_CLOUD_FILE_NETWORK_UNAVAILABLE = (int)388L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLOUD_FILE_NETWORK_UNAVAILABLE 388
     * }
     */
    public static int ERROR_CLOUD_FILE_NETWORK_UNAVAILABLE() {
        return ERROR_CLOUD_FILE_NETWORK_UNAVAILABLE;
    }
    private static final int ERROR_CLOUD_FILE_UNSUCCESSFUL = (int)389L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLOUD_FILE_UNSUCCESSFUL 389
     * }
     */
    public static int ERROR_CLOUD_FILE_UNSUCCESSFUL() {
        return ERROR_CLOUD_FILE_UNSUCCESSFUL;
    }
    private static final int ERROR_CLOUD_FILE_NOT_UNDER_SYNC_ROOT = (int)390L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLOUD_FILE_NOT_UNDER_SYNC_ROOT 390
     * }
     */
    public static int ERROR_CLOUD_FILE_NOT_UNDER_SYNC_ROOT() {
        return ERROR_CLOUD_FILE_NOT_UNDER_SYNC_ROOT;
    }
    private static final int ERROR_CLOUD_FILE_IN_USE = (int)391L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLOUD_FILE_IN_USE 391
     * }
     */
    public static int ERROR_CLOUD_FILE_IN_USE() {
        return ERROR_CLOUD_FILE_IN_USE;
    }
    private static final int ERROR_CLOUD_FILE_PINNED = (int)392L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLOUD_FILE_PINNED 392
     * }
     */
    public static int ERROR_CLOUD_FILE_PINNED() {
        return ERROR_CLOUD_FILE_PINNED;
    }
    private static final int ERROR_CLOUD_FILE_REQUEST_ABORTED = (int)393L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLOUD_FILE_REQUEST_ABORTED 393
     * }
     */
    public static int ERROR_CLOUD_FILE_REQUEST_ABORTED() {
        return ERROR_CLOUD_FILE_REQUEST_ABORTED;
    }
    private static final int ERROR_CLOUD_FILE_PROPERTY_CORRUPT = (int)394L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLOUD_FILE_PROPERTY_CORRUPT 394
     * }
     */
    public static int ERROR_CLOUD_FILE_PROPERTY_CORRUPT() {
        return ERROR_CLOUD_FILE_PROPERTY_CORRUPT;
    }
    private static final int ERROR_CLOUD_FILE_ACCESS_DENIED = (int)395L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLOUD_FILE_ACCESS_DENIED 395
     * }
     */
    public static int ERROR_CLOUD_FILE_ACCESS_DENIED() {
        return ERROR_CLOUD_FILE_ACCESS_DENIED;
    }
    private static final int ERROR_CLOUD_FILE_INCOMPATIBLE_HARDLINKS = (int)396L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLOUD_FILE_INCOMPATIBLE_HARDLINKS 396
     * }
     */
    public static int ERROR_CLOUD_FILE_INCOMPATIBLE_HARDLINKS() {
        return ERROR_CLOUD_FILE_INCOMPATIBLE_HARDLINKS;
    }
    private static final int ERROR_CLOUD_FILE_PROPERTY_LOCK_CONFLICT = (int)397L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLOUD_FILE_PROPERTY_LOCK_CONFLICT 397
     * }
     */
    public static int ERROR_CLOUD_FILE_PROPERTY_LOCK_CONFLICT() {
        return ERROR_CLOUD_FILE_PROPERTY_LOCK_CONFLICT;
    }
    private static final int ERROR_CLOUD_FILE_REQUEST_CANCELED = (int)398L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLOUD_FILE_REQUEST_CANCELED 398
     * }
     */
    public static int ERROR_CLOUD_FILE_REQUEST_CANCELED() {
        return ERROR_CLOUD_FILE_REQUEST_CANCELED;
    }
    private static final int ERROR_EXTERNAL_SYSKEY_NOT_SUPPORTED = (int)399L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EXTERNAL_SYSKEY_NOT_SUPPORTED 399
     * }
     */
    public static int ERROR_EXTERNAL_SYSKEY_NOT_SUPPORTED() {
        return ERROR_EXTERNAL_SYSKEY_NOT_SUPPORTED;
    }
    private static final int ERROR_THREAD_MODE_ALREADY_BACKGROUND = (int)400L;
    /**
     * {@snippet lang=c :
     * #define ERROR_THREAD_MODE_ALREADY_BACKGROUND 400
     * }
     */
    public static int ERROR_THREAD_MODE_ALREADY_BACKGROUND() {
        return ERROR_THREAD_MODE_ALREADY_BACKGROUND;
    }
    private static final int ERROR_THREAD_MODE_NOT_BACKGROUND = (int)401L;
    /**
     * {@snippet lang=c :
     * #define ERROR_THREAD_MODE_NOT_BACKGROUND 401
     * }
     */
    public static int ERROR_THREAD_MODE_NOT_BACKGROUND() {
        return ERROR_THREAD_MODE_NOT_BACKGROUND;
    }
    private static final int ERROR_PROCESS_MODE_ALREADY_BACKGROUND = (int)402L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PROCESS_MODE_ALREADY_BACKGROUND 402
     * }
     */
    public static int ERROR_PROCESS_MODE_ALREADY_BACKGROUND() {
        return ERROR_PROCESS_MODE_ALREADY_BACKGROUND;
    }
    private static final int ERROR_PROCESS_MODE_NOT_BACKGROUND = (int)403L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PROCESS_MODE_NOT_BACKGROUND 403
     * }
     */
    public static int ERROR_PROCESS_MODE_NOT_BACKGROUND() {
        return ERROR_PROCESS_MODE_NOT_BACKGROUND;
    }
    private static final int ERROR_CLOUD_FILE_PROVIDER_TERMINATED = (int)404L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLOUD_FILE_PROVIDER_TERMINATED 404
     * }
     */
    public static int ERROR_CLOUD_FILE_PROVIDER_TERMINATED() {
        return ERROR_CLOUD_FILE_PROVIDER_TERMINATED;
    }
    private static final int ERROR_NOT_A_CLOUD_SYNC_ROOT = (int)405L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_A_CLOUD_SYNC_ROOT 405
     * }
     */
    public static int ERROR_NOT_A_CLOUD_SYNC_ROOT() {
        return ERROR_NOT_A_CLOUD_SYNC_ROOT;
    }
    private static final int ERROR_FILE_PROTECTED_UNDER_DPL = (int)406L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FILE_PROTECTED_UNDER_DPL 406
     * }
     */
    public static int ERROR_FILE_PROTECTED_UNDER_DPL() {
        return ERROR_FILE_PROTECTED_UNDER_DPL;
    }
    private static final int ERROR_VOLUME_NOT_CLUSTER_ALIGNED = (int)407L;
    /**
     * {@snippet lang=c :
     * #define ERROR_VOLUME_NOT_CLUSTER_ALIGNED 407
     * }
     */
    public static int ERROR_VOLUME_NOT_CLUSTER_ALIGNED() {
        return ERROR_VOLUME_NOT_CLUSTER_ALIGNED;
    }
    private static final int ERROR_NO_PHYSICALLY_ALIGNED_FREE_SPACE_FOUND = (int)408L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_PHYSICALLY_ALIGNED_FREE_SPACE_FOUND 408
     * }
     */
    public static int ERROR_NO_PHYSICALLY_ALIGNED_FREE_SPACE_FOUND() {
        return ERROR_NO_PHYSICALLY_ALIGNED_FREE_SPACE_FOUND;
    }
    private static final int ERROR_APPX_FILE_NOT_ENCRYPTED = (int)409L;
    /**
     * {@snippet lang=c :
     * #define ERROR_APPX_FILE_NOT_ENCRYPTED 409
     * }
     */
    public static int ERROR_APPX_FILE_NOT_ENCRYPTED() {
        return ERROR_APPX_FILE_NOT_ENCRYPTED;
    }
    private static final int ERROR_RWRAW_ENCRYPTED_FILE_NOT_ENCRYPTED = (int)410L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RWRAW_ENCRYPTED_FILE_NOT_ENCRYPTED 410
     * }
     */
    public static int ERROR_RWRAW_ENCRYPTED_FILE_NOT_ENCRYPTED() {
        return ERROR_RWRAW_ENCRYPTED_FILE_NOT_ENCRYPTED;
    }
    private static final int ERROR_RWRAW_ENCRYPTED_INVALID_EDATAINFO_FILEOFFSET = (int)411L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RWRAW_ENCRYPTED_INVALID_EDATAINFO_FILEOFFSET 411
     * }
     */
    public static int ERROR_RWRAW_ENCRYPTED_INVALID_EDATAINFO_FILEOFFSET() {
        return ERROR_RWRAW_ENCRYPTED_INVALID_EDATAINFO_FILEOFFSET;
    }
    private static final int ERROR_RWRAW_ENCRYPTED_INVALID_EDATAINFO_FILERANGE = (int)412L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RWRAW_ENCRYPTED_INVALID_EDATAINFO_FILERANGE 412
     * }
     */
    public static int ERROR_RWRAW_ENCRYPTED_INVALID_EDATAINFO_FILERANGE() {
        return ERROR_RWRAW_ENCRYPTED_INVALID_EDATAINFO_FILERANGE;
    }
    private static final int ERROR_RWRAW_ENCRYPTED_INVALID_EDATAINFO_PARAMETER = (int)413L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RWRAW_ENCRYPTED_INVALID_EDATAINFO_PARAMETER 413
     * }
     */
    public static int ERROR_RWRAW_ENCRYPTED_INVALID_EDATAINFO_PARAMETER() {
        return ERROR_RWRAW_ENCRYPTED_INVALID_EDATAINFO_PARAMETER;
    }
    private static final int ERROR_LINUX_SUBSYSTEM_NOT_PRESENT = (int)414L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LINUX_SUBSYSTEM_NOT_PRESENT 414
     * }
     */
    public static int ERROR_LINUX_SUBSYSTEM_NOT_PRESENT() {
        return ERROR_LINUX_SUBSYSTEM_NOT_PRESENT;
    }
    private static final int ERROR_FT_READ_FAILURE = (int)415L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FT_READ_FAILURE 415
     * }
     */
    public static int ERROR_FT_READ_FAILURE() {
        return ERROR_FT_READ_FAILURE;
    }
    private static final int ERROR_STORAGE_RESERVE_ID_INVALID = (int)416L;
    /**
     * {@snippet lang=c :
     * #define ERROR_STORAGE_RESERVE_ID_INVALID 416
     * }
     */
    public static int ERROR_STORAGE_RESERVE_ID_INVALID() {
        return ERROR_STORAGE_RESERVE_ID_INVALID;
    }
    private static final int ERROR_STORAGE_RESERVE_DOES_NOT_EXIST = (int)417L;
    /**
     * {@snippet lang=c :
     * #define ERROR_STORAGE_RESERVE_DOES_NOT_EXIST 417
     * }
     */
    public static int ERROR_STORAGE_RESERVE_DOES_NOT_EXIST() {
        return ERROR_STORAGE_RESERVE_DOES_NOT_EXIST;
    }
    private static final int ERROR_STORAGE_RESERVE_ALREADY_EXISTS = (int)418L;
    /**
     * {@snippet lang=c :
     * #define ERROR_STORAGE_RESERVE_ALREADY_EXISTS 418
     * }
     */
    public static int ERROR_STORAGE_RESERVE_ALREADY_EXISTS() {
        return ERROR_STORAGE_RESERVE_ALREADY_EXISTS;
    }
    private static final int ERROR_STORAGE_RESERVE_NOT_EMPTY = (int)419L;
    /**
     * {@snippet lang=c :
     * #define ERROR_STORAGE_RESERVE_NOT_EMPTY 419
     * }
     */
    public static int ERROR_STORAGE_RESERVE_NOT_EMPTY() {
        return ERROR_STORAGE_RESERVE_NOT_EMPTY;
    }
    private static final int ERROR_NOT_A_DAX_VOLUME = (int)420L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_A_DAX_VOLUME 420
     * }
     */
    public static int ERROR_NOT_A_DAX_VOLUME() {
        return ERROR_NOT_A_DAX_VOLUME;
    }
    private static final int ERROR_NOT_DAX_MAPPABLE = (int)421L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_DAX_MAPPABLE 421
     * }
     */
    public static int ERROR_NOT_DAX_MAPPABLE() {
        return ERROR_NOT_DAX_MAPPABLE;
    }
    private static final int ERROR_TIME_SENSITIVE_THREAD = (int)422L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TIME_SENSITIVE_THREAD 422
     * }
     */
    public static int ERROR_TIME_SENSITIVE_THREAD() {
        return ERROR_TIME_SENSITIVE_THREAD;
    }
    private static final int ERROR_DPL_NOT_SUPPORTED_FOR_USER = (int)423L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DPL_NOT_SUPPORTED_FOR_USER 423
     * }
     */
    public static int ERROR_DPL_NOT_SUPPORTED_FOR_USER() {
        return ERROR_DPL_NOT_SUPPORTED_FOR_USER;
    }
    private static final int ERROR_CASE_DIFFERING_NAMES_IN_DIR = (int)424L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CASE_DIFFERING_NAMES_IN_DIR 424
     * }
     */
    public static int ERROR_CASE_DIFFERING_NAMES_IN_DIR() {
        return ERROR_CASE_DIFFERING_NAMES_IN_DIR;
    }
    private static final int ERROR_FILE_NOT_SUPPORTED = (int)425L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FILE_NOT_SUPPORTED 425
     * }
     */
    public static int ERROR_FILE_NOT_SUPPORTED() {
        return ERROR_FILE_NOT_SUPPORTED;
    }
    private static final int ERROR_CLOUD_FILE_REQUEST_TIMEOUT = (int)426L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLOUD_FILE_REQUEST_TIMEOUT 426
     * }
     */
    public static int ERROR_CLOUD_FILE_REQUEST_TIMEOUT() {
        return ERROR_CLOUD_FILE_REQUEST_TIMEOUT;
    }
    private static final int ERROR_NO_TASK_QUEUE = (int)427L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_TASK_QUEUE 427
     * }
     */
    public static int ERROR_NO_TASK_QUEUE() {
        return ERROR_NO_TASK_QUEUE;
    }
    private static final int ERROR_SRC_SRV_DLL_LOAD_FAILED = (int)428L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SRC_SRV_DLL_LOAD_FAILED 428
     * }
     */
    public static int ERROR_SRC_SRV_DLL_LOAD_FAILED() {
        return ERROR_SRC_SRV_DLL_LOAD_FAILED;
    }
    private static final int ERROR_NOT_SUPPORTED_WITH_BTT = (int)429L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_SUPPORTED_WITH_BTT 429
     * }
     */
    public static int ERROR_NOT_SUPPORTED_WITH_BTT() {
        return ERROR_NOT_SUPPORTED_WITH_BTT;
    }
    private static final int ERROR_ENCRYPTION_DISABLED = (int)430L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ENCRYPTION_DISABLED 430
     * }
     */
    public static int ERROR_ENCRYPTION_DISABLED() {
        return ERROR_ENCRYPTION_DISABLED;
    }
    private static final int ERROR_ENCRYPTING_METADATA_DISALLOWED = (int)431L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ENCRYPTING_METADATA_DISALLOWED 431
     * }
     */
    public static int ERROR_ENCRYPTING_METADATA_DISALLOWED() {
        return ERROR_ENCRYPTING_METADATA_DISALLOWED;
    }
    private static final int ERROR_CANT_CLEAR_ENCRYPTION_FLAG = (int)432L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CANT_CLEAR_ENCRYPTION_FLAG 432
     * }
     */
    public static int ERROR_CANT_CLEAR_ENCRYPTION_FLAG() {
        return ERROR_CANT_CLEAR_ENCRYPTION_FLAG;
    }
    private static final int ERROR_NO_SUCH_DEVICE = (int)433L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_SUCH_DEVICE 433
     * }
     */
    public static int ERROR_NO_SUCH_DEVICE() {
        return ERROR_NO_SUCH_DEVICE;
    }
    private static final int ERROR_CLOUD_FILE_DEHYDRATION_DISALLOWED = (int)434L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLOUD_FILE_DEHYDRATION_DISALLOWED 434
     * }
     */
    public static int ERROR_CLOUD_FILE_DEHYDRATION_DISALLOWED() {
        return ERROR_CLOUD_FILE_DEHYDRATION_DISALLOWED;
    }
    private static final int ERROR_FILE_SNAP_IN_PROGRESS = (int)435L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FILE_SNAP_IN_PROGRESS 435
     * }
     */
    public static int ERROR_FILE_SNAP_IN_PROGRESS() {
        return ERROR_FILE_SNAP_IN_PROGRESS;
    }
    private static final int ERROR_FILE_SNAP_USER_SECTION_NOT_SUPPORTED = (int)436L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FILE_SNAP_USER_SECTION_NOT_SUPPORTED 436
     * }
     */
    public static int ERROR_FILE_SNAP_USER_SECTION_NOT_SUPPORTED() {
        return ERROR_FILE_SNAP_USER_SECTION_NOT_SUPPORTED;
    }
    private static final int ERROR_FILE_SNAP_MODIFY_NOT_SUPPORTED = (int)437L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FILE_SNAP_MODIFY_NOT_SUPPORTED 437
     * }
     */
    public static int ERROR_FILE_SNAP_MODIFY_NOT_SUPPORTED() {
        return ERROR_FILE_SNAP_MODIFY_NOT_SUPPORTED;
    }
    private static final int ERROR_FILE_SNAP_IO_NOT_COORDINATED = (int)438L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FILE_SNAP_IO_NOT_COORDINATED 438
     * }
     */
    public static int ERROR_FILE_SNAP_IO_NOT_COORDINATED() {
        return ERROR_FILE_SNAP_IO_NOT_COORDINATED;
    }
    private static final int ERROR_FILE_SNAP_UNEXPECTED_ERROR = (int)439L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FILE_SNAP_UNEXPECTED_ERROR 439
     * }
     */
    public static int ERROR_FILE_SNAP_UNEXPECTED_ERROR() {
        return ERROR_FILE_SNAP_UNEXPECTED_ERROR;
    }
    private static final int ERROR_FILE_SNAP_INVALID_PARAMETER = (int)440L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FILE_SNAP_INVALID_PARAMETER 440
     * }
     */
    public static int ERROR_FILE_SNAP_INVALID_PARAMETER() {
        return ERROR_FILE_SNAP_INVALID_PARAMETER;
    }
}

