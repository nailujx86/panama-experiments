// Generated by jextract

package net.nailuj.win;

import java.lang.invoke.*;
import java.lang.foreign.*;
import java.nio.ByteOrder;
import java.util.*;
import java.util.function.*;
import java.util.stream.*;

import static java.lang.foreign.ValueLayout.*;
import static java.lang.foreign.MemoryLayout.PathElement.*;

public class winapi_26 extends winapi_27 {

    winapi_26() {
        // Should not be called directly
    }
    private static final int WinAccountDomainAdminsSid = (int)41L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinAccountDomainAdminsSid = 41
     * }
     */
    public static int WinAccountDomainAdminsSid() {
        return WinAccountDomainAdminsSid;
    }
    private static final int WinAccountDomainUsersSid = (int)42L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinAccountDomainUsersSid = 42
     * }
     */
    public static int WinAccountDomainUsersSid() {
        return WinAccountDomainUsersSid;
    }
    private static final int WinAccountDomainGuestsSid = (int)43L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinAccountDomainGuestsSid = 43
     * }
     */
    public static int WinAccountDomainGuestsSid() {
        return WinAccountDomainGuestsSid;
    }
    private static final int WinAccountComputersSid = (int)44L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinAccountComputersSid = 44
     * }
     */
    public static int WinAccountComputersSid() {
        return WinAccountComputersSid;
    }
    private static final int WinAccountControllersSid = (int)45L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinAccountControllersSid = 45
     * }
     */
    public static int WinAccountControllersSid() {
        return WinAccountControllersSid;
    }
    private static final int WinAccountCertAdminsSid = (int)46L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinAccountCertAdminsSid = 46
     * }
     */
    public static int WinAccountCertAdminsSid() {
        return WinAccountCertAdminsSid;
    }
    private static final int WinAccountSchemaAdminsSid = (int)47L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinAccountSchemaAdminsSid = 47
     * }
     */
    public static int WinAccountSchemaAdminsSid() {
        return WinAccountSchemaAdminsSid;
    }
    private static final int WinAccountEnterpriseAdminsSid = (int)48L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinAccountEnterpriseAdminsSid = 48
     * }
     */
    public static int WinAccountEnterpriseAdminsSid() {
        return WinAccountEnterpriseAdminsSid;
    }
    private static final int WinAccountPolicyAdminsSid = (int)49L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinAccountPolicyAdminsSid = 49
     * }
     */
    public static int WinAccountPolicyAdminsSid() {
        return WinAccountPolicyAdminsSid;
    }
    private static final int WinAccountRasAndIasServersSid = (int)50L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinAccountRasAndIasServersSid = 50
     * }
     */
    public static int WinAccountRasAndIasServersSid() {
        return WinAccountRasAndIasServersSid;
    }
    private static final int WinNTLMAuthenticationSid = (int)51L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinNTLMAuthenticationSid = 51
     * }
     */
    public static int WinNTLMAuthenticationSid() {
        return WinNTLMAuthenticationSid;
    }
    private static final int WinDigestAuthenticationSid = (int)52L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinDigestAuthenticationSid = 52
     * }
     */
    public static int WinDigestAuthenticationSid() {
        return WinDigestAuthenticationSid;
    }
    private static final int WinSChannelAuthenticationSid = (int)53L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinSChannelAuthenticationSid = 53
     * }
     */
    public static int WinSChannelAuthenticationSid() {
        return WinSChannelAuthenticationSid;
    }
    private static final int WinThisOrganizationSid = (int)54L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinThisOrganizationSid = 54
     * }
     */
    public static int WinThisOrganizationSid() {
        return WinThisOrganizationSid;
    }
    private static final int WinOtherOrganizationSid = (int)55L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinOtherOrganizationSid = 55
     * }
     */
    public static int WinOtherOrganizationSid() {
        return WinOtherOrganizationSid;
    }
    private static final int WinBuiltinIncomingForestTrustBuildersSid = (int)56L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinBuiltinIncomingForestTrustBuildersSid = 56
     * }
     */
    public static int WinBuiltinIncomingForestTrustBuildersSid() {
        return WinBuiltinIncomingForestTrustBuildersSid;
    }
    private static final int WinBuiltinPerfMonitoringUsersSid = (int)57L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinBuiltinPerfMonitoringUsersSid = 57
     * }
     */
    public static int WinBuiltinPerfMonitoringUsersSid() {
        return WinBuiltinPerfMonitoringUsersSid;
    }
    private static final int WinBuiltinPerfLoggingUsersSid = (int)58L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinBuiltinPerfLoggingUsersSid = 58
     * }
     */
    public static int WinBuiltinPerfLoggingUsersSid() {
        return WinBuiltinPerfLoggingUsersSid;
    }
    private static final int WinBuiltinAuthorizationAccessSid = (int)59L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinBuiltinAuthorizationAccessSid = 59
     * }
     */
    public static int WinBuiltinAuthorizationAccessSid() {
        return WinBuiltinAuthorizationAccessSid;
    }
    private static final int WinBuiltinTerminalServerLicenseServersSid = (int)60L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinBuiltinTerminalServerLicenseServersSid = 60
     * }
     */
    public static int WinBuiltinTerminalServerLicenseServersSid() {
        return WinBuiltinTerminalServerLicenseServersSid;
    }
    private static final int WinBuiltinDCOMUsersSid = (int)61L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinBuiltinDCOMUsersSid = 61
     * }
     */
    public static int WinBuiltinDCOMUsersSid() {
        return WinBuiltinDCOMUsersSid;
    }
    private static final int WinBuiltinIUsersSid = (int)62L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinBuiltinIUsersSid = 62
     * }
     */
    public static int WinBuiltinIUsersSid() {
        return WinBuiltinIUsersSid;
    }
    private static final int WinIUserSid = (int)63L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinIUserSid = 63
     * }
     */
    public static int WinIUserSid() {
        return WinIUserSid;
    }
    private static final int WinBuiltinCryptoOperatorsSid = (int)64L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinBuiltinCryptoOperatorsSid = 64
     * }
     */
    public static int WinBuiltinCryptoOperatorsSid() {
        return WinBuiltinCryptoOperatorsSid;
    }
    private static final int WinUntrustedLabelSid = (int)65L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinUntrustedLabelSid = 65
     * }
     */
    public static int WinUntrustedLabelSid() {
        return WinUntrustedLabelSid;
    }
    private static final int WinLowLabelSid = (int)66L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinLowLabelSid = 66
     * }
     */
    public static int WinLowLabelSid() {
        return WinLowLabelSid;
    }
    private static final int WinMediumLabelSid = (int)67L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinMediumLabelSid = 67
     * }
     */
    public static int WinMediumLabelSid() {
        return WinMediumLabelSid;
    }
    private static final int WinHighLabelSid = (int)68L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinHighLabelSid = 68
     * }
     */
    public static int WinHighLabelSid() {
        return WinHighLabelSid;
    }
    private static final int WinSystemLabelSid = (int)69L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinSystemLabelSid = 69
     * }
     */
    public static int WinSystemLabelSid() {
        return WinSystemLabelSid;
    }
    private static final int WinWriteRestrictedCodeSid = (int)70L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinWriteRestrictedCodeSid = 70
     * }
     */
    public static int WinWriteRestrictedCodeSid() {
        return WinWriteRestrictedCodeSid;
    }
    private static final int WinCreatorOwnerRightsSid = (int)71L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinCreatorOwnerRightsSid = 71
     * }
     */
    public static int WinCreatorOwnerRightsSid() {
        return WinCreatorOwnerRightsSid;
    }
    private static final int WinCacheablePrincipalsGroupSid = (int)72L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinCacheablePrincipalsGroupSid = 72
     * }
     */
    public static int WinCacheablePrincipalsGroupSid() {
        return WinCacheablePrincipalsGroupSid;
    }
    private static final int WinNonCacheablePrincipalsGroupSid = (int)73L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinNonCacheablePrincipalsGroupSid = 73
     * }
     */
    public static int WinNonCacheablePrincipalsGroupSid() {
        return WinNonCacheablePrincipalsGroupSid;
    }
    private static final int WinEnterpriseReadonlyControllersSid = (int)74L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinEnterpriseReadonlyControllersSid = 74
     * }
     */
    public static int WinEnterpriseReadonlyControllersSid() {
        return WinEnterpriseReadonlyControllersSid;
    }
    private static final int WinAccountReadonlyControllersSid = (int)75L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinAccountReadonlyControllersSid = 75
     * }
     */
    public static int WinAccountReadonlyControllersSid() {
        return WinAccountReadonlyControllersSid;
    }
    private static final int WinBuiltinEventLogReadersGroup = (int)76L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinBuiltinEventLogReadersGroup = 76
     * }
     */
    public static int WinBuiltinEventLogReadersGroup() {
        return WinBuiltinEventLogReadersGroup;
    }
    private static final int WinNewEnterpriseReadonlyControllersSid = (int)77L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinNewEnterpriseReadonlyControllersSid = 77
     * }
     */
    public static int WinNewEnterpriseReadonlyControllersSid() {
        return WinNewEnterpriseReadonlyControllersSid;
    }
    private static final int WinBuiltinCertSvcDComAccessGroup = (int)78L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinBuiltinCertSvcDComAccessGroup = 78
     * }
     */
    public static int WinBuiltinCertSvcDComAccessGroup() {
        return WinBuiltinCertSvcDComAccessGroup;
    }
    private static final int WinMediumPlusLabelSid = (int)79L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinMediumPlusLabelSid = 79
     * }
     */
    public static int WinMediumPlusLabelSid() {
        return WinMediumPlusLabelSid;
    }
    private static final int WinLocalLogonSid = (int)80L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinLocalLogonSid = 80
     * }
     */
    public static int WinLocalLogonSid() {
        return WinLocalLogonSid;
    }
    private static final int WinConsoleLogonSid = (int)81L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinConsoleLogonSid = 81
     * }
     */
    public static int WinConsoleLogonSid() {
        return WinConsoleLogonSid;
    }
    private static final int WinThisOrganizationCertificateSid = (int)82L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinThisOrganizationCertificateSid = 82
     * }
     */
    public static int WinThisOrganizationCertificateSid() {
        return WinThisOrganizationCertificateSid;
    }
    private static final int WinApplicationPackageAuthoritySid = (int)83L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinApplicationPackageAuthoritySid = 83
     * }
     */
    public static int WinApplicationPackageAuthoritySid() {
        return WinApplicationPackageAuthoritySid;
    }
    private static final int WinBuiltinAnyPackageSid = (int)84L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinBuiltinAnyPackageSid = 84
     * }
     */
    public static int WinBuiltinAnyPackageSid() {
        return WinBuiltinAnyPackageSid;
    }
    private static final int WinCapabilityInternetClientSid = (int)85L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinCapabilityInternetClientSid = 85
     * }
     */
    public static int WinCapabilityInternetClientSid() {
        return WinCapabilityInternetClientSid;
    }
    private static final int WinCapabilityInternetClientServerSid = (int)86L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinCapabilityInternetClientServerSid = 86
     * }
     */
    public static int WinCapabilityInternetClientServerSid() {
        return WinCapabilityInternetClientServerSid;
    }
    private static final int WinCapabilityPrivateNetworkClientServerSid = (int)87L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinCapabilityPrivateNetworkClientServerSid = 87
     * }
     */
    public static int WinCapabilityPrivateNetworkClientServerSid() {
        return WinCapabilityPrivateNetworkClientServerSid;
    }
    private static final int WinCapabilityPicturesLibrarySid = (int)88L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinCapabilityPicturesLibrarySid = 88
     * }
     */
    public static int WinCapabilityPicturesLibrarySid() {
        return WinCapabilityPicturesLibrarySid;
    }
    private static final int WinCapabilityVideosLibrarySid = (int)89L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinCapabilityVideosLibrarySid = 89
     * }
     */
    public static int WinCapabilityVideosLibrarySid() {
        return WinCapabilityVideosLibrarySid;
    }
    private static final int WinCapabilityMusicLibrarySid = (int)90L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinCapabilityMusicLibrarySid = 90
     * }
     */
    public static int WinCapabilityMusicLibrarySid() {
        return WinCapabilityMusicLibrarySid;
    }
    private static final int WinCapabilityDocumentsLibrarySid = (int)91L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinCapabilityDocumentsLibrarySid = 91
     * }
     */
    public static int WinCapabilityDocumentsLibrarySid() {
        return WinCapabilityDocumentsLibrarySid;
    }
    private static final int WinCapabilitySharedUserCertificatesSid = (int)92L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinCapabilitySharedUserCertificatesSid = 92
     * }
     */
    public static int WinCapabilitySharedUserCertificatesSid() {
        return WinCapabilitySharedUserCertificatesSid;
    }
    private static final int WinCapabilityEnterpriseAuthenticationSid = (int)93L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinCapabilityEnterpriseAuthenticationSid = 93
     * }
     */
    public static int WinCapabilityEnterpriseAuthenticationSid() {
        return WinCapabilityEnterpriseAuthenticationSid;
    }
    private static final int WinCapabilityRemovableStorageSid = (int)94L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinCapabilityRemovableStorageSid = 94
     * }
     */
    public static int WinCapabilityRemovableStorageSid() {
        return WinCapabilityRemovableStorageSid;
    }
    private static final int WinBuiltinRDSRemoteAccessServersSid = (int)95L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinBuiltinRDSRemoteAccessServersSid = 95
     * }
     */
    public static int WinBuiltinRDSRemoteAccessServersSid() {
        return WinBuiltinRDSRemoteAccessServersSid;
    }
    private static final int WinBuiltinRDSEndpointServersSid = (int)96L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinBuiltinRDSEndpointServersSid = 96
     * }
     */
    public static int WinBuiltinRDSEndpointServersSid() {
        return WinBuiltinRDSEndpointServersSid;
    }
    private static final int WinBuiltinRDSManagementServersSid = (int)97L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinBuiltinRDSManagementServersSid = 97
     * }
     */
    public static int WinBuiltinRDSManagementServersSid() {
        return WinBuiltinRDSManagementServersSid;
    }
    private static final int WinUserModeDriversSid = (int)98L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinUserModeDriversSid = 98
     * }
     */
    public static int WinUserModeDriversSid() {
        return WinUserModeDriversSid;
    }
    private static final int WinBuiltinHyperVAdminsSid = (int)99L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinBuiltinHyperVAdminsSid = 99
     * }
     */
    public static int WinBuiltinHyperVAdminsSid() {
        return WinBuiltinHyperVAdminsSid;
    }
    private static final int WinAccountCloneableControllersSid = (int)100L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinAccountCloneableControllersSid = 100
     * }
     */
    public static int WinAccountCloneableControllersSid() {
        return WinAccountCloneableControllersSid;
    }
    private static final int WinBuiltinAccessControlAssistanceOperatorsSid = (int)101L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinBuiltinAccessControlAssistanceOperatorsSid = 101
     * }
     */
    public static int WinBuiltinAccessControlAssistanceOperatorsSid() {
        return WinBuiltinAccessControlAssistanceOperatorsSid;
    }
    private static final int WinBuiltinRemoteManagementUsersSid = (int)102L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinBuiltinRemoteManagementUsersSid = 102
     * }
     */
    public static int WinBuiltinRemoteManagementUsersSid() {
        return WinBuiltinRemoteManagementUsersSid;
    }
    private static final int WinAuthenticationAuthorityAssertedSid = (int)103L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinAuthenticationAuthorityAssertedSid = 103
     * }
     */
    public static int WinAuthenticationAuthorityAssertedSid() {
        return WinAuthenticationAuthorityAssertedSid;
    }
    private static final int WinAuthenticationServiceAssertedSid = (int)104L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinAuthenticationServiceAssertedSid = 104
     * }
     */
    public static int WinAuthenticationServiceAssertedSid() {
        return WinAuthenticationServiceAssertedSid;
    }
    private static final int WinLocalAccountSid = (int)105L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinLocalAccountSid = 105
     * }
     */
    public static int WinLocalAccountSid() {
        return WinLocalAccountSid;
    }
    private static final int WinLocalAccountAndAdministratorSid = (int)106L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinLocalAccountAndAdministratorSid = 106
     * }
     */
    public static int WinLocalAccountAndAdministratorSid() {
        return WinLocalAccountAndAdministratorSid;
    }
    private static final int WinAccountProtectedUsersSid = (int)107L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinAccountProtectedUsersSid = 107
     * }
     */
    public static int WinAccountProtectedUsersSid() {
        return WinAccountProtectedUsersSid;
    }
    private static final int WinCapabilityAppointmentsSid = (int)108L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinCapabilityAppointmentsSid = 108
     * }
     */
    public static int WinCapabilityAppointmentsSid() {
        return WinCapabilityAppointmentsSid;
    }
    private static final int WinCapabilityContactsSid = (int)109L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinCapabilityContactsSid = 109
     * }
     */
    public static int WinCapabilityContactsSid() {
        return WinCapabilityContactsSid;
    }
    private static final int WinAccountDefaultSystemManagedSid = (int)110L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinAccountDefaultSystemManagedSid = 110
     * }
     */
    public static int WinAccountDefaultSystemManagedSid() {
        return WinAccountDefaultSystemManagedSid;
    }
    private static final int WinBuiltinDefaultSystemManagedGroupSid = (int)111L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinBuiltinDefaultSystemManagedGroupSid = 111
     * }
     */
    public static int WinBuiltinDefaultSystemManagedGroupSid() {
        return WinBuiltinDefaultSystemManagedGroupSid;
    }
    private static final int WinBuiltinStorageReplicaAdminsSid = (int)112L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinBuiltinStorageReplicaAdminsSid = 112
     * }
     */
    public static int WinBuiltinStorageReplicaAdminsSid() {
        return WinBuiltinStorageReplicaAdminsSid;
    }
    private static final int WinAccountKeyAdminsSid = (int)113L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinAccountKeyAdminsSid = 113
     * }
     */
    public static int WinAccountKeyAdminsSid() {
        return WinAccountKeyAdminsSid;
    }
    private static final int WinAccountEnterpriseKeyAdminsSid = (int)114L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinAccountEnterpriseKeyAdminsSid = 114
     * }
     */
    public static int WinAccountEnterpriseKeyAdminsSid() {
        return WinAccountEnterpriseKeyAdminsSid;
    }
    private static final int WinAuthenticationKeyTrustSid = (int)115L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinAuthenticationKeyTrustSid = 115
     * }
     */
    public static int WinAuthenticationKeyTrustSid() {
        return WinAuthenticationKeyTrustSid;
    }
    private static final int WinAuthenticationKeyPropertyMFASid = (int)116L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinAuthenticationKeyPropertyMFASid = 116
     * }
     */
    public static int WinAuthenticationKeyPropertyMFASid() {
        return WinAuthenticationKeyPropertyMFASid;
    }
    private static final int WinAuthenticationKeyPropertyAttestationSid = (int)117L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinAuthenticationKeyPropertyAttestationSid = 117
     * }
     */
    public static int WinAuthenticationKeyPropertyAttestationSid() {
        return WinAuthenticationKeyPropertyAttestationSid;
    }
    private static final int WinAuthenticationFreshKeyAuthSid = (int)118L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinAuthenticationFreshKeyAuthSid = 118
     * }
     */
    public static int WinAuthenticationFreshKeyAuthSid() {
        return WinAuthenticationFreshKeyAuthSid;
    }
    private static final int WinBuiltinDeviceOwnersSid = (int)119L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinBuiltinDeviceOwnersSid = 119
     * }
     */
    public static int WinBuiltinDeviceOwnersSid() {
        return WinBuiltinDeviceOwnersSid;
    }
    private static final int WinBuiltinUserModeHardwareOperatorsSid = (int)120L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinBuiltinUserModeHardwareOperatorsSid = 120
     * }
     */
    public static int WinBuiltinUserModeHardwareOperatorsSid() {
        return WinBuiltinUserModeHardwareOperatorsSid;
    }
    private static final int WinBuiltinOpenSSHUsersSid = (int)121L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WinBuiltinOpenSSHUsersSid = 121
     * }
     */
    public static int WinBuiltinOpenSSHUsersSid() {
        return WinBuiltinOpenSSHUsersSid;
    }
    /**
     * {@snippet lang=c :
     * typedef ACL *PACL
     * }
     */
    public static final AddressLayout PACL = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef ACE_HEADER *PACE_HEADER
     * }
     */
    public static final AddressLayout PACE_HEADER = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef ACCESS_ALLOWED_ACE *PACCESS_ALLOWED_ACE
     * }
     */
    public static final AddressLayout PACCESS_ALLOWED_ACE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef ACCESS_DENIED_ACE *PACCESS_DENIED_ACE
     * }
     */
    public static final AddressLayout PACCESS_DENIED_ACE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef SYSTEM_AUDIT_ACE *PSYSTEM_AUDIT_ACE
     * }
     */
    public static final AddressLayout PSYSTEM_AUDIT_ACE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef SYSTEM_ALARM_ACE *PSYSTEM_ALARM_ACE
     * }
     */
    public static final AddressLayout PSYSTEM_ALARM_ACE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SYSTEM_RESOURCE_ATTRIBUTE_ACE {
     *     ACE_HEADER Header;
     *     ACCESS_MASK Mask;
     *     DWORD SidStart;
     * } *PSYSTEM_RESOURCE_ATTRIBUTE_ACE
     * }
     */
    public static final AddressLayout PSYSTEM_RESOURCE_ATTRIBUTE_ACE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SYSTEM_SCOPED_POLICY_ID_ACE {
     *     ACE_HEADER Header;
     *     ACCESS_MASK Mask;
     *     DWORD SidStart;
     * } *PSYSTEM_SCOPED_POLICY_ID_ACE
     * }
     */
    public static final AddressLayout PSYSTEM_SCOPED_POLICY_ID_ACE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SYSTEM_MANDATORY_LABEL_ACE {
     *     ACE_HEADER Header;
     *     ACCESS_MASK Mask;
     *     DWORD SidStart;
     * } *PSYSTEM_MANDATORY_LABEL_ACE
     * }
     */
    public static final AddressLayout PSYSTEM_MANDATORY_LABEL_ACE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SYSTEM_PROCESS_TRUST_LABEL_ACE {
     *     ACE_HEADER Header;
     *     ACCESS_MASK Mask;
     *     DWORD SidStart;
     * } *PSYSTEM_PROCESS_TRUST_LABEL_ACE
     * }
     */
    public static final AddressLayout PSYSTEM_PROCESS_TRUST_LABEL_ACE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SYSTEM_ACCESS_FILTER_ACE {
     *     ACE_HEADER Header;
     *     ACCESS_MASK Mask;
     *     DWORD SidStart;
     * } *PSYSTEM_ACCESS_FILTER_ACE
     * }
     */
    public static final AddressLayout PSYSTEM_ACCESS_FILTER_ACE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _ACCESS_ALLOWED_OBJECT_ACE {
     *     ACE_HEADER Header;
     *     ACCESS_MASK Mask;
     *     DWORD Flags;
     *     GUID ObjectType;
     *     GUID InheritedObjectType;
     *     DWORD SidStart;
     * } *PACCESS_ALLOWED_OBJECT_ACE
     * }
     */
    public static final AddressLayout PACCESS_ALLOWED_OBJECT_ACE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _ACCESS_DENIED_OBJECT_ACE {
     *     ACE_HEADER Header;
     *     ACCESS_MASK Mask;
     *     DWORD Flags;
     *     GUID ObjectType;
     *     GUID InheritedObjectType;
     *     DWORD SidStart;
     * } *PACCESS_DENIED_OBJECT_ACE
     * }
     */
    public static final AddressLayout PACCESS_DENIED_OBJECT_ACE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SYSTEM_AUDIT_OBJECT_ACE {
     *     ACE_HEADER Header;
     *     ACCESS_MASK Mask;
     *     DWORD Flags;
     *     GUID ObjectType;
     *     GUID InheritedObjectType;
     *     DWORD SidStart;
     * } *PSYSTEM_AUDIT_OBJECT_ACE
     * }
     */
    public static final AddressLayout PSYSTEM_AUDIT_OBJECT_ACE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SYSTEM_ALARM_OBJECT_ACE {
     *     ACE_HEADER Header;
     *     ACCESS_MASK Mask;
     *     DWORD Flags;
     *     GUID ObjectType;
     *     GUID InheritedObjectType;
     *     DWORD SidStart;
     * } *PSYSTEM_ALARM_OBJECT_ACE
     * }
     */
    public static final AddressLayout PSYSTEM_ALARM_OBJECT_ACE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _ACCESS_ALLOWED_CALLBACK_ACE {
     *     ACE_HEADER Header;
     *     ACCESS_MASK Mask;
     *     DWORD SidStart;
     * } *PACCESS_ALLOWED_CALLBACK_ACE
     * }
     */
    public static final AddressLayout PACCESS_ALLOWED_CALLBACK_ACE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _ACCESS_DENIED_CALLBACK_ACE {
     *     ACE_HEADER Header;
     *     ACCESS_MASK Mask;
     *     DWORD SidStart;
     * } *PACCESS_DENIED_CALLBACK_ACE
     * }
     */
    public static final AddressLayout PACCESS_DENIED_CALLBACK_ACE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SYSTEM_AUDIT_CALLBACK_ACE {
     *     ACE_HEADER Header;
     *     ACCESS_MASK Mask;
     *     DWORD SidStart;
     * } *PSYSTEM_AUDIT_CALLBACK_ACE
     * }
     */
    public static final AddressLayout PSYSTEM_AUDIT_CALLBACK_ACE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SYSTEM_ALARM_CALLBACK_ACE {
     *     ACE_HEADER Header;
     *     ACCESS_MASK Mask;
     *     DWORD SidStart;
     * } *PSYSTEM_ALARM_CALLBACK_ACE
     * }
     */
    public static final AddressLayout PSYSTEM_ALARM_CALLBACK_ACE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE {
     *     ACE_HEADER Header;
     *     ACCESS_MASK Mask;
     *     DWORD Flags;
     *     GUID ObjectType;
     *     GUID InheritedObjectType;
     *     DWORD SidStart;
     * } *PACCESS_ALLOWED_CALLBACK_OBJECT_ACE
     * }
     */
    public static final AddressLayout PACCESS_ALLOWED_CALLBACK_OBJECT_ACE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _ACCESS_DENIED_CALLBACK_OBJECT_ACE {
     *     ACE_HEADER Header;
     *     ACCESS_MASK Mask;
     *     DWORD Flags;
     *     GUID ObjectType;
     *     GUID InheritedObjectType;
     *     DWORD SidStart;
     * } *PACCESS_DENIED_CALLBACK_OBJECT_ACE
     * }
     */
    public static final AddressLayout PACCESS_DENIED_CALLBACK_OBJECT_ACE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE {
     *     ACE_HEADER Header;
     *     ACCESS_MASK Mask;
     *     DWORD Flags;
     *     GUID ObjectType;
     *     GUID InheritedObjectType;
     *     DWORD SidStart;
     * } *PSYSTEM_AUDIT_CALLBACK_OBJECT_ACE
     * }
     */
    public static final AddressLayout PSYSTEM_AUDIT_CALLBACK_OBJECT_ACE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SYSTEM_ALARM_CALLBACK_OBJECT_ACE {
     *     ACE_HEADER Header;
     *     ACCESS_MASK Mask;
     *     DWORD Flags;
     *     GUID ObjectType;
     *     GUID InheritedObjectType;
     *     DWORD SidStart;
     * } *PSYSTEM_ALARM_CALLBACK_OBJECT_ACE
     * }
     */
    public static final AddressLayout PSYSTEM_ALARM_CALLBACK_OBJECT_ACE = winapi.C_POINTER;
    private static final int AclRevisionInformation = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _ACL_INFORMATION_CLASS.AclRevisionInformation = 1
     * }
     */
    public static int AclRevisionInformation() {
        return AclRevisionInformation;
    }
    private static final int AclSizeInformation = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _ACL_INFORMATION_CLASS.AclSizeInformation = 2
     * }
     */
    public static int AclSizeInformation() {
        return AclSizeInformation;
    }
    /**
     * {@snippet lang=c :
     * typedef ACL_REVISION_INFORMATION *PACL_REVISION_INFORMATION
     * }
     */
    public static final AddressLayout PACL_REVISION_INFORMATION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef ACL_SIZE_INFORMATION *PACL_SIZE_INFORMATION
     * }
     */
    public static final AddressLayout PACL_SIZE_INFORMATION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef WORD SECURITY_DESCRIPTOR_CONTROL
     * }
     */
    public static final OfShort SECURITY_DESCRIPTOR_CONTROL = winapi.C_SHORT;
    /**
     * {@snippet lang=c :
     * typedef WORD *PSECURITY_DESCRIPTOR_CONTROL
     * }
     */
    public static final AddressLayout PSECURITY_DESCRIPTOR_CONTROL = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SECURITY_DESCRIPTOR_RELATIVE {
     *     BYTE Revision;
     *     BYTE Sbz1;
     *     SECURITY_DESCRIPTOR_CONTROL Control;
     *     DWORD Owner;
     *     DWORD Group;
     *     DWORD Sacl;
     *     DWORD Dacl;
     * } *PISECURITY_DESCRIPTOR_RELATIVE
     * }
     */
    public static final AddressLayout PISECURITY_DESCRIPTOR_RELATIVE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SECURITY_DESCRIPTOR {
     *     BYTE Revision;
     *     BYTE Sbz1;
     *     SECURITY_DESCRIPTOR_CONTROL Control;
     *     PSID Owner;
     *     PSID Group;
     *     PACL Sacl;
     *     PACL Dacl;
     * } *PISECURITY_DESCRIPTOR
     * }
     */
    public static final AddressLayout PISECURITY_DESCRIPTOR = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SECURITY_OBJECT_AI_PARAMS {
     *     DWORD Size;
     *     DWORD ConstraintMask;
     * } *PSECURITY_OBJECT_AI_PARAMS
     * }
     */
    public static final AddressLayout PSECURITY_OBJECT_AI_PARAMS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _OBJECT_TYPE_LIST {
     *     WORD Level;
     *     WORD Sbz;
     *     GUID *ObjectType;
     * } *POBJECT_TYPE_LIST
     * }
     */
    public static final AddressLayout POBJECT_TYPE_LIST = winapi.C_POINTER;
    private static final int AuditEventObjectAccess = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _AUDIT_EVENT_TYPE.AuditEventObjectAccess = 0
     * }
     */
    public static int AuditEventObjectAccess() {
        return AuditEventObjectAccess;
    }
    private static final int AuditEventDirectoryServiceAccess = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _AUDIT_EVENT_TYPE.AuditEventDirectoryServiceAccess = 1
     * }
     */
    public static int AuditEventDirectoryServiceAccess() {
        return AuditEventDirectoryServiceAccess;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _AUDIT_EVENT_TYPE {
     *     AuditEventObjectAccess,
     *     AuditEventDirectoryServiceAccess
     * } *PAUDIT_EVENT_TYPE
     * }
     */
    public static final AddressLayout PAUDIT_EVENT_TYPE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _PRIVILEGE_SET {
     *     DWORD PrivilegeCount;
     *     DWORD Control;
     *     LUID_AND_ATTRIBUTES Privilege[1];
     * } *PPRIVILEGE_SET
     * }
     */
    public static final AddressLayout PPRIVILEGE_SET = winapi.C_POINTER;
    private static final int AccessReasonNone = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _ACCESS_REASON_TYPE.AccessReasonNone = 0
     * }
     */
    public static int AccessReasonNone() {
        return AccessReasonNone;
    }
    private static final int AccessReasonAllowedAce = (int)65536L;
    /**
     * {@snippet lang=c :
     * enum _ACCESS_REASON_TYPE.AccessReasonAllowedAce = 65536
     * }
     */
    public static int AccessReasonAllowedAce() {
        return AccessReasonAllowedAce;
    }
    private static final int AccessReasonDeniedAce = (int)131072L;
    /**
     * {@snippet lang=c :
     * enum _ACCESS_REASON_TYPE.AccessReasonDeniedAce = 131072
     * }
     */
    public static int AccessReasonDeniedAce() {
        return AccessReasonDeniedAce;
    }
    private static final int AccessReasonAllowedParentAce = (int)196608L;
    /**
     * {@snippet lang=c :
     * enum _ACCESS_REASON_TYPE.AccessReasonAllowedParentAce = 196608
     * }
     */
    public static int AccessReasonAllowedParentAce() {
        return AccessReasonAllowedParentAce;
    }
    private static final int AccessReasonDeniedParentAce = (int)262144L;
    /**
     * {@snippet lang=c :
     * enum _ACCESS_REASON_TYPE.AccessReasonDeniedParentAce = 262144
     * }
     */
    public static int AccessReasonDeniedParentAce() {
        return AccessReasonDeniedParentAce;
    }
    private static final int AccessReasonNotGrantedByCape = (int)327680L;
    /**
     * {@snippet lang=c :
     * enum _ACCESS_REASON_TYPE.AccessReasonNotGrantedByCape = 327680
     * }
     */
    public static int AccessReasonNotGrantedByCape() {
        return AccessReasonNotGrantedByCape;
    }
    private static final int AccessReasonNotGrantedByParentCape = (int)393216L;
    /**
     * {@snippet lang=c :
     * enum _ACCESS_REASON_TYPE.AccessReasonNotGrantedByParentCape = 393216
     * }
     */
    public static int AccessReasonNotGrantedByParentCape() {
        return AccessReasonNotGrantedByParentCape;
    }
    private static final int AccessReasonNotGrantedToAppContainer = (int)458752L;
    /**
     * {@snippet lang=c :
     * enum _ACCESS_REASON_TYPE.AccessReasonNotGrantedToAppContainer = 458752
     * }
     */
    public static int AccessReasonNotGrantedToAppContainer() {
        return AccessReasonNotGrantedToAppContainer;
    }
    private static final int AccessReasonMissingPrivilege = (int)1048576L;
    /**
     * {@snippet lang=c :
     * enum _ACCESS_REASON_TYPE.AccessReasonMissingPrivilege = 1048576
     * }
     */
    public static int AccessReasonMissingPrivilege() {
        return AccessReasonMissingPrivilege;
    }
    private static final int AccessReasonFromPrivilege = (int)2097152L;
    /**
     * {@snippet lang=c :
     * enum _ACCESS_REASON_TYPE.AccessReasonFromPrivilege = 2097152
     * }
     */
    public static int AccessReasonFromPrivilege() {
        return AccessReasonFromPrivilege;
    }
    private static final int AccessReasonIntegrityLevel = (int)3145728L;
    /**
     * {@snippet lang=c :
     * enum _ACCESS_REASON_TYPE.AccessReasonIntegrityLevel = 3145728
     * }
     */
    public static int AccessReasonIntegrityLevel() {
        return AccessReasonIntegrityLevel;
    }
    private static final int AccessReasonOwnership = (int)4194304L;
    /**
     * {@snippet lang=c :
     * enum _ACCESS_REASON_TYPE.AccessReasonOwnership = 4194304
     * }
     */
    public static int AccessReasonOwnership() {
        return AccessReasonOwnership;
    }
    private static final int AccessReasonNullDacl = (int)5242880L;
    /**
     * {@snippet lang=c :
     * enum _ACCESS_REASON_TYPE.AccessReasonNullDacl = 5242880
     * }
     */
    public static int AccessReasonNullDacl() {
        return AccessReasonNullDacl;
    }
    private static final int AccessReasonEmptyDacl = (int)6291456L;
    /**
     * {@snippet lang=c :
     * enum _ACCESS_REASON_TYPE.AccessReasonEmptyDacl = 6291456
     * }
     */
    public static int AccessReasonEmptyDacl() {
        return AccessReasonEmptyDacl;
    }
    private static final int AccessReasonNoSD = (int)7340032L;
    /**
     * {@snippet lang=c :
     * enum _ACCESS_REASON_TYPE.AccessReasonNoSD = 7340032
     * }
     */
    public static int AccessReasonNoSD() {
        return AccessReasonNoSD;
    }
    private static final int AccessReasonNoGrant = (int)8388608L;
    /**
     * {@snippet lang=c :
     * enum _ACCESS_REASON_TYPE.AccessReasonNoGrant = 8388608
     * }
     */
    public static int AccessReasonNoGrant() {
        return AccessReasonNoGrant;
    }
    private static final int AccessReasonTrustLabel = (int)9437184L;
    /**
     * {@snippet lang=c :
     * enum _ACCESS_REASON_TYPE.AccessReasonTrustLabel = 9437184
     * }
     */
    public static int AccessReasonTrustLabel() {
        return AccessReasonTrustLabel;
    }
    private static final int AccessReasonFilterAce = (int)10485760L;
    /**
     * {@snippet lang=c :
     * enum _ACCESS_REASON_TYPE.AccessReasonFilterAce = 10485760
     * }
     */
    public static int AccessReasonFilterAce() {
        return AccessReasonFilterAce;
    }
    /**
     * {@snippet lang=c :
     * typedef DWORD ACCESS_REASON
     * }
     */
    public static final OfInt ACCESS_REASON = winapi.C_LONG;
    /**
     * {@snippet lang=c :
     * typedef struct _ACCESS_REASONS {
     *     ACCESS_REASON Data[32];
     * } *PACCESS_REASONS
     * }
     */
    public static final AddressLayout PACCESS_REASONS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SE_SECURITY_DESCRIPTOR {
     *     DWORD Size;
     *     DWORD Flags;
     *     PSECURITY_DESCRIPTOR SecurityDescriptor;
     * } *PSE_SECURITY_DESCRIPTOR
     * }
     */
    public static final AddressLayout PSE_SECURITY_DESCRIPTOR = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SE_ACCESS_REQUEST {
     *     DWORD Size;
     *     PSE_SECURITY_DESCRIPTOR SeSecurityDescriptor;
     *     ACCESS_MASK DesiredAccess;
     *     ACCESS_MASK PreviouslyGrantedAccess;
     *     PSID PrincipalSelfSid;
     *     PGENERIC_MAPPING GenericMapping;
     *     DWORD ObjectTypeListCount;
     *     POBJECT_TYPE_LIST ObjectTypeList;
     * } *PSE_ACCESS_REQUEST
     * }
     */
    public static final AddressLayout PSE_ACCESS_REQUEST = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SE_ACCESS_REPLY {
     *     DWORD Size;
     *     DWORD ResultListCount;
     *     PACCESS_MASK GrantedAccess;
     *     PDWORD AccessStatus;
     *     PACCESS_REASONS AccessReason;
     *     PPRIVILEGE_SET *Privileges;
     * } *PSE_ACCESS_REPLY
     * }
     */
    public static final AddressLayout PSE_ACCESS_REPLY = winapi.C_POINTER;
    private static final int SecurityAnonymous = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _SECURITY_IMPERSONATION_LEVEL.SecurityAnonymous = 0
     * }
     */
    public static int SecurityAnonymous() {
        return SecurityAnonymous;
    }
    private static final int SecurityIdentification = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _SECURITY_IMPERSONATION_LEVEL.SecurityIdentification = 1
     * }
     */
    public static int SecurityIdentification() {
        return SecurityIdentification;
    }
    private static final int SecurityImpersonation = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _SECURITY_IMPERSONATION_LEVEL.SecurityImpersonation = 2
     * }
     */
    public static int SecurityImpersonation() {
        return SecurityImpersonation;
    }
    private static final int SecurityDelegation = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _SECURITY_IMPERSONATION_LEVEL.SecurityDelegation = 3
     * }
     */
    public static int SecurityDelegation() {
        return SecurityDelegation;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _SECURITY_IMPERSONATION_LEVEL {
     *     SecurityAnonymous,
     *     SecurityIdentification,
     *     SecurityImpersonation,
     *     SecurityDelegation
     * } *PSECURITY_IMPERSONATION_LEVEL
     * }
     */
    public static final AddressLayout PSECURITY_IMPERSONATION_LEVEL = winapi.C_POINTER;
    private static final int TokenPrimary = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_TYPE.TokenPrimary = 1
     * }
     */
    public static int TokenPrimary() {
        return TokenPrimary;
    }
    private static final int TokenImpersonation = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_TYPE.TokenImpersonation = 2
     * }
     */
    public static int TokenImpersonation() {
        return TokenImpersonation;
    }
    /**
     * {@snippet lang=c :
     * typedef TOKEN_TYPE *PTOKEN_TYPE
     * }
     */
    public static final AddressLayout PTOKEN_TYPE = winapi.C_POINTER;
    private static final int TokenElevationTypeDefault = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_ELEVATION_TYPE.TokenElevationTypeDefault = 1
     * }
     */
    public static int TokenElevationTypeDefault() {
        return TokenElevationTypeDefault;
    }
    private static final int TokenElevationTypeFull = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_ELEVATION_TYPE.TokenElevationTypeFull = 2
     * }
     */
    public static int TokenElevationTypeFull() {
        return TokenElevationTypeFull;
    }
    private static final int TokenElevationTypeLimited = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_ELEVATION_TYPE.TokenElevationTypeLimited = 3
     * }
     */
    public static int TokenElevationTypeLimited() {
        return TokenElevationTypeLimited;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _TOKEN_ELEVATION_TYPE {
     *     TokenElevationTypeDefault = 1,
     *     TokenElevationTypeFull,
     *     TokenElevationTypeLimited
     * } *PTOKEN_ELEVATION_TYPE
     * }
     */
    public static final AddressLayout PTOKEN_ELEVATION_TYPE = winapi.C_POINTER;
    private static final int TokenUser = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_INFORMATION_CLASS.TokenUser = 1
     * }
     */
    public static int TokenUser() {
        return TokenUser;
    }
    private static final int TokenGroups = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_INFORMATION_CLASS.TokenGroups = 2
     * }
     */
    public static int TokenGroups() {
        return TokenGroups;
    }
    private static final int TokenPrivileges = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_INFORMATION_CLASS.TokenPrivileges = 3
     * }
     */
    public static int TokenPrivileges() {
        return TokenPrivileges;
    }
    private static final int TokenOwner = (int)4L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_INFORMATION_CLASS.TokenOwner = 4
     * }
     */
    public static int TokenOwner() {
        return TokenOwner;
    }
    private static final int TokenPrimaryGroup = (int)5L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_INFORMATION_CLASS.TokenPrimaryGroup = 5
     * }
     */
    public static int TokenPrimaryGroup() {
        return TokenPrimaryGroup;
    }
    private static final int TokenDefaultDacl = (int)6L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_INFORMATION_CLASS.TokenDefaultDacl = 6
     * }
     */
    public static int TokenDefaultDacl() {
        return TokenDefaultDacl;
    }
    private static final int TokenSource = (int)7L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_INFORMATION_CLASS.TokenSource = 7
     * }
     */
    public static int TokenSource() {
        return TokenSource;
    }
    private static final int TokenType = (int)8L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_INFORMATION_CLASS.TokenType = 8
     * }
     */
    public static int TokenType() {
        return TokenType;
    }
    private static final int TokenImpersonationLevel = (int)9L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_INFORMATION_CLASS.TokenImpersonationLevel = 9
     * }
     */
    public static int TokenImpersonationLevel() {
        return TokenImpersonationLevel;
    }
    private static final int TokenStatistics = (int)10L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_INFORMATION_CLASS.TokenStatistics = 10
     * }
     */
    public static int TokenStatistics() {
        return TokenStatistics;
    }
    private static final int TokenRestrictedSids = (int)11L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_INFORMATION_CLASS.TokenRestrictedSids = 11
     * }
     */
    public static int TokenRestrictedSids() {
        return TokenRestrictedSids;
    }
    private static final int TokenSessionId = (int)12L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_INFORMATION_CLASS.TokenSessionId = 12
     * }
     */
    public static int TokenSessionId() {
        return TokenSessionId;
    }
    private static final int TokenGroupsAndPrivileges = (int)13L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_INFORMATION_CLASS.TokenGroupsAndPrivileges = 13
     * }
     */
    public static int TokenGroupsAndPrivileges() {
        return TokenGroupsAndPrivileges;
    }
    private static final int TokenSessionReference = (int)14L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_INFORMATION_CLASS.TokenSessionReference = 14
     * }
     */
    public static int TokenSessionReference() {
        return TokenSessionReference;
    }
    private static final int TokenSandBoxInert = (int)15L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_INFORMATION_CLASS.TokenSandBoxInert = 15
     * }
     */
    public static int TokenSandBoxInert() {
        return TokenSandBoxInert;
    }
    private static final int TokenAuditPolicy = (int)16L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_INFORMATION_CLASS.TokenAuditPolicy = 16
     * }
     */
    public static int TokenAuditPolicy() {
        return TokenAuditPolicy;
    }
    private static final int TokenOrigin = (int)17L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_INFORMATION_CLASS.TokenOrigin = 17
     * }
     */
    public static int TokenOrigin() {
        return TokenOrigin;
    }
    private static final int TokenElevationType = (int)18L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_INFORMATION_CLASS.TokenElevationType = 18
     * }
     */
    public static int TokenElevationType() {
        return TokenElevationType;
    }
    private static final int TokenLinkedToken = (int)19L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_INFORMATION_CLASS.TokenLinkedToken = 19
     * }
     */
    public static int TokenLinkedToken() {
        return TokenLinkedToken;
    }
    private static final int TokenElevation = (int)20L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_INFORMATION_CLASS.TokenElevation = 20
     * }
     */
    public static int TokenElevation() {
        return TokenElevation;
    }
    private static final int TokenHasRestrictions = (int)21L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_INFORMATION_CLASS.TokenHasRestrictions = 21
     * }
     */
    public static int TokenHasRestrictions() {
        return TokenHasRestrictions;
    }
    private static final int TokenAccessInformation = (int)22L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_INFORMATION_CLASS.TokenAccessInformation = 22
     * }
     */
    public static int TokenAccessInformation() {
        return TokenAccessInformation;
    }
    private static final int TokenVirtualizationAllowed = (int)23L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_INFORMATION_CLASS.TokenVirtualizationAllowed = 23
     * }
     */
    public static int TokenVirtualizationAllowed() {
        return TokenVirtualizationAllowed;
    }
    private static final int TokenVirtualizationEnabled = (int)24L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_INFORMATION_CLASS.TokenVirtualizationEnabled = 24
     * }
     */
    public static int TokenVirtualizationEnabled() {
        return TokenVirtualizationEnabled;
    }
    private static final int TokenIntegrityLevel = (int)25L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_INFORMATION_CLASS.TokenIntegrityLevel = 25
     * }
     */
    public static int TokenIntegrityLevel() {
        return TokenIntegrityLevel;
    }
    private static final int TokenUIAccess = (int)26L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_INFORMATION_CLASS.TokenUIAccess = 26
     * }
     */
    public static int TokenUIAccess() {
        return TokenUIAccess;
    }
    private static final int TokenMandatoryPolicy = (int)27L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_INFORMATION_CLASS.TokenMandatoryPolicy = 27
     * }
     */
    public static int TokenMandatoryPolicy() {
        return TokenMandatoryPolicy;
    }
    private static final int TokenLogonSid = (int)28L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_INFORMATION_CLASS.TokenLogonSid = 28
     * }
     */
    public static int TokenLogonSid() {
        return TokenLogonSid;
    }
    private static final int TokenIsAppContainer = (int)29L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_INFORMATION_CLASS.TokenIsAppContainer = 29
     * }
     */
    public static int TokenIsAppContainer() {
        return TokenIsAppContainer;
    }
    private static final int TokenCapabilities = (int)30L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_INFORMATION_CLASS.TokenCapabilities = 30
     * }
     */
    public static int TokenCapabilities() {
        return TokenCapabilities;
    }
    private static final int TokenAppContainerSid = (int)31L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_INFORMATION_CLASS.TokenAppContainerSid = 31
     * }
     */
    public static int TokenAppContainerSid() {
        return TokenAppContainerSid;
    }
    private static final int TokenAppContainerNumber = (int)32L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_INFORMATION_CLASS.TokenAppContainerNumber = 32
     * }
     */
    public static int TokenAppContainerNumber() {
        return TokenAppContainerNumber;
    }
    private static final int TokenUserClaimAttributes = (int)33L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_INFORMATION_CLASS.TokenUserClaimAttributes = 33
     * }
     */
    public static int TokenUserClaimAttributes() {
        return TokenUserClaimAttributes;
    }
    private static final int TokenDeviceClaimAttributes = (int)34L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_INFORMATION_CLASS.TokenDeviceClaimAttributes = 34
     * }
     */
    public static int TokenDeviceClaimAttributes() {
        return TokenDeviceClaimAttributes;
    }
    private static final int TokenRestrictedUserClaimAttributes = (int)35L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_INFORMATION_CLASS.TokenRestrictedUserClaimAttributes = 35
     * }
     */
    public static int TokenRestrictedUserClaimAttributes() {
        return TokenRestrictedUserClaimAttributes;
    }
    private static final int TokenRestrictedDeviceClaimAttributes = (int)36L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_INFORMATION_CLASS.TokenRestrictedDeviceClaimAttributes = 36
     * }
     */
    public static int TokenRestrictedDeviceClaimAttributes() {
        return TokenRestrictedDeviceClaimAttributes;
    }
    private static final int TokenDeviceGroups = (int)37L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_INFORMATION_CLASS.TokenDeviceGroups = 37
     * }
     */
    public static int TokenDeviceGroups() {
        return TokenDeviceGroups;
    }
    private static final int TokenRestrictedDeviceGroups = (int)38L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_INFORMATION_CLASS.TokenRestrictedDeviceGroups = 38
     * }
     */
    public static int TokenRestrictedDeviceGroups() {
        return TokenRestrictedDeviceGroups;
    }
    private static final int TokenSecurityAttributes = (int)39L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_INFORMATION_CLASS.TokenSecurityAttributes = 39
     * }
     */
    public static int TokenSecurityAttributes() {
        return TokenSecurityAttributes;
    }
    private static final int TokenIsRestricted = (int)40L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_INFORMATION_CLASS.TokenIsRestricted = 40
     * }
     */
    public static int TokenIsRestricted() {
        return TokenIsRestricted;
    }
    private static final int TokenProcessTrustLevel = (int)41L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_INFORMATION_CLASS.TokenProcessTrustLevel = 41
     * }
     */
    public static int TokenProcessTrustLevel() {
        return TokenProcessTrustLevel;
    }
    private static final int TokenPrivateNameSpace = (int)42L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_INFORMATION_CLASS.TokenPrivateNameSpace = 42
     * }
     */
    public static int TokenPrivateNameSpace() {
        return TokenPrivateNameSpace;
    }
    private static final int TokenSingletonAttributes = (int)43L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_INFORMATION_CLASS.TokenSingletonAttributes = 43
     * }
     */
    public static int TokenSingletonAttributes() {
        return TokenSingletonAttributes;
    }
    private static final int TokenBnoIsolation = (int)44L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_INFORMATION_CLASS.TokenBnoIsolation = 44
     * }
     */
    public static int TokenBnoIsolation() {
        return TokenBnoIsolation;
    }
    private static final int TokenChildProcessFlags = (int)45L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_INFORMATION_CLASS.TokenChildProcessFlags = 45
     * }
     */
    public static int TokenChildProcessFlags() {
        return TokenChildProcessFlags;
    }
    private static final int TokenIsLessPrivilegedAppContainer = (int)46L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_INFORMATION_CLASS.TokenIsLessPrivilegedAppContainer = 46
     * }
     */
    public static int TokenIsLessPrivilegedAppContainer() {
        return TokenIsLessPrivilegedAppContainer;
    }
    private static final int TokenIsSandboxed = (int)47L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_INFORMATION_CLASS.TokenIsSandboxed = 47
     * }
     */
    public static int TokenIsSandboxed() {
        return TokenIsSandboxed;
    }
    private static final int TokenIsAppSilo = (int)48L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_INFORMATION_CLASS.TokenIsAppSilo = 48
     * }
     */
    public static int TokenIsAppSilo() {
        return TokenIsAppSilo;
    }
    private static final int TokenLoggingInformation = (int)49L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_INFORMATION_CLASS.TokenLoggingInformation = 49
     * }
     */
    public static int TokenLoggingInformation() {
        return TokenLoggingInformation;
    }
    private static final int MaxTokenInfoClass = (int)50L;
    /**
     * {@snippet lang=c :
     * enum _TOKEN_INFORMATION_CLASS.MaxTokenInfoClass = 50
     * }
     */
    public static int MaxTokenInfoClass() {
        return MaxTokenInfoClass;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _TOKEN_INFORMATION_CLASS {
     *     TokenUser = 1,
     *     TokenGroups,
     *     TokenPrivileges,
     *     TokenOwner,
     *     TokenPrimaryGroup,
     *     TokenDefaultDacl,
     *     TokenSource,
     *     TokenType,
     *     TokenImpersonationLevel,
     *     TokenStatistics,
     *     TokenRestrictedSids,
     *     TokenSessionId,
     *     TokenGroupsAndPrivileges,
     *     TokenSessionReference,
     *     TokenSandBoxInert,
     *     TokenAuditPolicy,
     *     TokenOrigin,
     *     TokenElevationType,
     *     TokenLinkedToken,
     *     TokenElevation,
     *     TokenHasRestrictions,
     *     TokenAccessInformation,
     *     TokenVirtualizationAllowed,
     *     TokenVirtualizationEnabled,
     *     TokenIntegrityLevel,
     *     TokenUIAccess,
     *     TokenMandatoryPolicy,
     *     TokenLogonSid,
     *     TokenIsAppContainer,
     *     TokenCapabilities,
     *     TokenAppContainerSid,
     *     TokenAppContainerNumber,
     *     TokenUserClaimAttributes,
     *     TokenDeviceClaimAttributes,
     *     TokenRestrictedUserClaimAttributes,
     *     TokenRestrictedDeviceClaimAttributes,
     *     TokenDeviceGroups,
     *     TokenRestrictedDeviceGroups,
     *     TokenSecurityAttributes,
     *     TokenIsRestricted,
     *     TokenProcessTrustLevel,
     *     TokenPrivateNameSpace,
     *     TokenSingletonAttributes,
     *     TokenBnoIsolation,
     *     TokenChildProcessFlags,
     *     TokenIsLessPrivilegedAppContainer,
     *     TokenIsSandboxed,
     *     TokenIsAppSilo,
     *     TokenLoggingInformation,
     *     MaxTokenInfoClass
     * } *PTOKEN_INFORMATION_CLASS
     * }
     */
    public static final AddressLayout PTOKEN_INFORMATION_CLASS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _TOKEN_USER {
     *     SID_AND_ATTRIBUTES User;
     * } *PTOKEN_USER
     * }
     */
    public static final AddressLayout PTOKEN_USER = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _TOKEN_GROUPS {
     *     DWORD GroupCount;
     *     SID_AND_ATTRIBUTES Groups[1];
     * } *PTOKEN_GROUPS
     * }
     */
    public static final AddressLayout PTOKEN_GROUPS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _TOKEN_PRIVILEGES {
     *     DWORD PrivilegeCount;
     *     LUID_AND_ATTRIBUTES Privileges[1];
     * } *PTOKEN_PRIVILEGES
     * }
     */
    public static final AddressLayout PTOKEN_PRIVILEGES = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _TOKEN_OWNER {
     *     PSID Owner;
     * } *PTOKEN_OWNER
     * }
     */
    public static final AddressLayout PTOKEN_OWNER = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _TOKEN_PRIMARY_GROUP {
     *     PSID PrimaryGroup;
     * } *PTOKEN_PRIMARY_GROUP
     * }
     */
    public static final AddressLayout PTOKEN_PRIMARY_GROUP = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _TOKEN_DEFAULT_DACL {
     *     PACL DefaultDacl;
     * } *PTOKEN_DEFAULT_DACL
     * }
     */
    public static final AddressLayout PTOKEN_DEFAULT_DACL = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _TOKEN_USER_CLAIMS {
     *     PCLAIMS_BLOB UserClaims;
     * } *PTOKEN_USER_CLAIMS
     * }
     */
    public static final AddressLayout PTOKEN_USER_CLAIMS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _TOKEN_DEVICE_CLAIMS {
     *     PCLAIMS_BLOB DeviceClaims;
     * } *PTOKEN_DEVICE_CLAIMS
     * }
     */
    public static final AddressLayout PTOKEN_DEVICE_CLAIMS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _TOKEN_GROUPS_AND_PRIVILEGES {
     *     DWORD SidCount;
     *     DWORD SidLength;
     *     PSID_AND_ATTRIBUTES Sids;
     *     DWORD RestrictedSidCount;
     *     DWORD RestrictedSidLength;
     *     PSID_AND_ATTRIBUTES RestrictedSids;
     *     DWORD PrivilegeCount;
     *     DWORD PrivilegeLength;
     *     PLUID_AND_ATTRIBUTES Privileges;
     *     LUID AuthenticationId;
     * } *PTOKEN_GROUPS_AND_PRIVILEGES
     * }
     */
    public static final AddressLayout PTOKEN_GROUPS_AND_PRIVILEGES = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _TOKEN_LINKED_TOKEN {
     *     HANDLE LinkedToken;
     * } *PTOKEN_LINKED_TOKEN
     * }
     */
    public static final AddressLayout PTOKEN_LINKED_TOKEN = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _TOKEN_ELEVATION {
     *     DWORD TokenIsElevated;
     * } *PTOKEN_ELEVATION
     * }
     */
    public static final AddressLayout PTOKEN_ELEVATION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _TOKEN_MANDATORY_LABEL {
     *     SID_AND_ATTRIBUTES Label;
     * } *PTOKEN_MANDATORY_LABEL
     * }
     */
    public static final AddressLayout PTOKEN_MANDATORY_LABEL = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _TOKEN_MANDATORY_POLICY {
     *     DWORD Policy;
     * } *PTOKEN_MANDATORY_POLICY
     * }
     */
    public static final AddressLayout PTOKEN_MANDATORY_POLICY = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef PVOID PSECURITY_ATTRIBUTES_OPAQUE
     * }
     */
    public static final AddressLayout PSECURITY_ATTRIBUTES_OPAQUE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _TOKEN_ACCESS_INFORMATION {
     *     PSID_AND_ATTRIBUTES_HASH SidHash;
     *     PSID_AND_ATTRIBUTES_HASH RestrictedSidHash;
     *     PTOKEN_PRIVILEGES Privileges;
     *     LUID AuthenticationId;
     *     TOKEN_TYPE TokenType;
     *     SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
     *     TOKEN_MANDATORY_POLICY MandatoryPolicy;
     *     DWORD Flags;
     *     DWORD AppContainerNumber;
     *     PSID PackageSid;
     *     PSID_AND_ATTRIBUTES_HASH CapabilitiesHash;
     *     PSID TrustLevelSid;
     *     PSECURITY_ATTRIBUTES_OPAQUE SecurityAttributes;
     * } *PTOKEN_ACCESS_INFORMATION
     * }
     */
    public static final AddressLayout PTOKEN_ACCESS_INFORMATION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _TOKEN_LOGGING_INFORMATION {
     *     TOKEN_TYPE TokenType;
     *     TOKEN_ELEVATION TokenElevation;
     *     TOKEN_ELEVATION_TYPE TokenElevationType;
     *     SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
     *     DWORD IntegrityLevel;
     *     SID_AND_ATTRIBUTES User;
     *     PSID TrustLevelSid;
     *     DWORD SessionId;
     *     DWORD AppContainerNumber;
     *     LUID AuthenticationId;
     *     DWORD GroupCount;
     *     DWORD GroupsLength;
     *     PSID_AND_ATTRIBUTES Groups;
     * } *PTOKEN_LOGGING_INFORMATION
     * }
     */
    public static final AddressLayout PTOKEN_LOGGING_INFORMATION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _TOKEN_AUDIT_POLICY {
     *     BYTE PerUserPolicy[30];
     * } *PTOKEN_AUDIT_POLICY
     * }
     */
    public static final AddressLayout PTOKEN_AUDIT_POLICY = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _TOKEN_SOURCE {
     *     CHAR SourceName[8];
     *     LUID SourceIdentifier;
     * } *PTOKEN_SOURCE
     * }
     */
    public static final AddressLayout PTOKEN_SOURCE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _TOKEN_STATISTICS {
     *     LUID TokenId;
     *     LUID AuthenticationId;
     *     LARGE_INTEGER ExpirationTime;
     *     TOKEN_TYPE TokenType;
     *     SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
     *     DWORD DynamicCharged;
     *     DWORD DynamicAvailable;
     *     DWORD GroupCount;
     *     DWORD PrivilegeCount;
     *     LUID ModifiedId;
     * } *PTOKEN_STATISTICS
     * }
     */
    public static final AddressLayout PTOKEN_STATISTICS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _TOKEN_CONTROL {
     *     LUID TokenId;
     *     LUID AuthenticationId;
     *     LUID ModifiedId;
     *     TOKEN_SOURCE TokenSource;
     * } *PTOKEN_CONTROL
     * }
     */
    public static final AddressLayout PTOKEN_CONTROL = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _TOKEN_ORIGIN {
     *     LUID OriginatingLogonSession;
     * } *PTOKEN_ORIGIN
     * }
     */
    public static final AddressLayout PTOKEN_ORIGIN = winapi.C_POINTER;
    private static final int MandatoryLevelUntrusted = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _MANDATORY_LEVEL.MandatoryLevelUntrusted = 0
     * }
     */
    public static int MandatoryLevelUntrusted() {
        return MandatoryLevelUntrusted;
    }
    private static final int MandatoryLevelLow = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _MANDATORY_LEVEL.MandatoryLevelLow = 1
     * }
     */
    public static int MandatoryLevelLow() {
        return MandatoryLevelLow;
    }
    private static final int MandatoryLevelMedium = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _MANDATORY_LEVEL.MandatoryLevelMedium = 2
     * }
     */
    public static int MandatoryLevelMedium() {
        return MandatoryLevelMedium;
    }
    private static final int MandatoryLevelHigh = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _MANDATORY_LEVEL.MandatoryLevelHigh = 3
     * }
     */
    public static int MandatoryLevelHigh() {
        return MandatoryLevelHigh;
    }
    private static final int MandatoryLevelSystem = (int)4L;
    /**
     * {@snippet lang=c :
     * enum _MANDATORY_LEVEL.MandatoryLevelSystem = 4
     * }
     */
    public static int MandatoryLevelSystem() {
        return MandatoryLevelSystem;
    }
    private static final int MandatoryLevelSecureProcess = (int)5L;
    /**
     * {@snippet lang=c :
     * enum _MANDATORY_LEVEL.MandatoryLevelSecureProcess = 5
     * }
     */
    public static int MandatoryLevelSecureProcess() {
        return MandatoryLevelSecureProcess;
    }
    private static final int MandatoryLevelCount = (int)6L;
    /**
     * {@snippet lang=c :
     * enum _MANDATORY_LEVEL.MandatoryLevelCount = 6
     * }
     */
    public static int MandatoryLevelCount() {
        return MandatoryLevelCount;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _MANDATORY_LEVEL {
     *     MandatoryLevelUntrusted = 0,
     *     MandatoryLevelLow,
     *     MandatoryLevelMedium,
     *     MandatoryLevelHigh,
     *     MandatoryLevelSystem,
     *     MandatoryLevelSecureProcess,
     *     MandatoryLevelCount
     * } *PMANDATORY_LEVEL
     * }
     */
    public static final AddressLayout PMANDATORY_LEVEL = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _TOKEN_APPCONTAINER_INFORMATION {
     *     PSID TokenAppContainer;
     * } *PTOKEN_APPCONTAINER_INFORMATION
     * }
     */
    public static final AddressLayout PTOKEN_APPCONTAINER_INFORMATION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _TOKEN_SID_INFORMATION {
     *     PSID Sid;
     * } *PTOKEN_SID_INFORMATION
     * }
     */
    public static final AddressLayout PTOKEN_SID_INFORMATION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _TOKEN_BNO_ISOLATION_INFORMATION {
     *     PWSTR IsolationPrefix;
     *     BOOLEAN IsolationEnabled;
     * } *PTOKEN_BNO_ISOLATION_INFORMATION
     * }
     */
    public static final AddressLayout PTOKEN_BNO_ISOLATION_INFORMATION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE {
     *     DWORD64 Version;
     *     PWSTR Name;
     * } *PCLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE
     * }
     */
    public static final AddressLayout PCLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _CLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE {
     *     PVOID pValue;
     *     DWORD ValueLength;
     * } *PCLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE
     * }
     */
    public static final AddressLayout PCLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _CLAIM_SECURITY_ATTRIBUTE_V1 {
     *     PWSTR Name;
     *     WORD ValueType;
     *     WORD Reserved;
     *     DWORD Flags;
     *     DWORD ValueCount;
     *     union {
     *         PLONG64 pInt64;
     *         PDWORD64 pUint64;
     *         PWSTR *ppString;
     *         PCLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE pFqbn;
     *         PCLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE pOctetString;
     *     } Values;
     * } *PCLAIM_SECURITY_ATTRIBUTE_V1
     * }
     */
    public static final AddressLayout PCLAIM_SECURITY_ATTRIBUTE_V1 = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1 {
     *     DWORD Name;
     *     WORD ValueType;
     *     WORD Reserved;
     *     DWORD Flags;
     *     DWORD ValueCount;
     *     union {
     *         DWORD pInt64[1];
     *         DWORD pUint64[1];
     *         DWORD ppString[1];
     *         DWORD pFqbn[1];
     *         DWORD pOctetString[1];
     *     } Values;
     * } *PCLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1
     * }
     */
    public static final AddressLayout PCLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1 = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _CLAIM_SECURITY_ATTRIBUTES_INFORMATION {
     *     WORD Version;
     *     WORD Reserved;
     *     DWORD AttributeCount;
     *     union {
     *         PCLAIM_SECURITY_ATTRIBUTE_V1 pAttributeV1;
     *     } Attribute;
     * } *PCLAIM_SECURITY_ATTRIBUTES_INFORMATION
     * }
     */
    public static final AddressLayout PCLAIM_SECURITY_ATTRIBUTES_INFORMATION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef BOOLEAN SECURITY_CONTEXT_TRACKING_MODE
     * }
     */
    public static final OfByte SECURITY_CONTEXT_TRACKING_MODE = winapi.C_CHAR;
    /**
     * {@snippet lang=c :
     * typedef BOOLEAN *PSECURITY_CONTEXT_TRACKING_MODE
     * }
     */
    public static final AddressLayout PSECURITY_CONTEXT_TRACKING_MODE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SECURITY_QUALITY_OF_SERVICE {
     *     DWORD Length;
     *     SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
     *     SECURITY_CONTEXT_TRACKING_MODE ContextTrackingMode;
     *     BOOLEAN EffectiveOnly;
     * } *PSECURITY_QUALITY_OF_SERVICE
     * }
     */
    public static final AddressLayout PSECURITY_QUALITY_OF_SERVICE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SE_IMPERSONATION_STATE {
     *     PACCESS_TOKEN Token;
     *     BOOLEAN CopyOnOpen;
     *     BOOLEAN EffectiveOnly;
     *     SECURITY_IMPERSONATION_LEVEL Level;
     * } *PSE_IMPERSONATION_STATE
     * }
     */
    public static final AddressLayout PSE_IMPERSONATION_STATE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef DWORD SECURITY_INFORMATION
     * }
     */
    public static final OfInt SECURITY_INFORMATION = winapi.C_LONG;
    /**
     * {@snippet lang=c :
     * typedef DWORD *PSECURITY_INFORMATION
     * }
     */
    public static final AddressLayout PSECURITY_INFORMATION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef BYTE SE_SIGNING_LEVEL
     * }
     */
    public static final OfByte SE_SIGNING_LEVEL = winapi.C_CHAR;
    /**
     * {@snippet lang=c :
     * typedef BYTE *PSE_SIGNING_LEVEL
     * }
     */
    public static final AddressLayout PSE_SIGNING_LEVEL = winapi.C_POINTER;
    private static final int SeImageSignatureNone = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _SE_IMAGE_SIGNATURE_TYPE.SeImageSignatureNone = 0
     * }
     */
    public static int SeImageSignatureNone() {
        return SeImageSignatureNone;
    }
    private static final int SeImageSignatureEmbedded = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _SE_IMAGE_SIGNATURE_TYPE.SeImageSignatureEmbedded = 1
     * }
     */
    public static int SeImageSignatureEmbedded() {
        return SeImageSignatureEmbedded;
    }
    private static final int SeImageSignatureCache = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _SE_IMAGE_SIGNATURE_TYPE.SeImageSignatureCache = 2
     * }
     */
    public static int SeImageSignatureCache() {
        return SeImageSignatureCache;
    }
    private static final int SeImageSignatureCatalogCached = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _SE_IMAGE_SIGNATURE_TYPE.SeImageSignatureCatalogCached = 3
     * }
     */
    public static int SeImageSignatureCatalogCached() {
        return SeImageSignatureCatalogCached;
    }
    private static final int SeImageSignatureCatalogNotCached = (int)4L;
    /**
     * {@snippet lang=c :
     * enum _SE_IMAGE_SIGNATURE_TYPE.SeImageSignatureCatalogNotCached = 4
     * }
     */
    public static int SeImageSignatureCatalogNotCached() {
        return SeImageSignatureCatalogNotCached;
    }
    private static final int SeImageSignatureCatalogHint = (int)5L;
    /**
     * {@snippet lang=c :
     * enum _SE_IMAGE_SIGNATURE_TYPE.SeImageSignatureCatalogHint = 5
     * }
     */
    public static int SeImageSignatureCatalogHint() {
        return SeImageSignatureCatalogHint;
    }
    private static final int SeImageSignaturePackageCatalog = (int)6L;
    /**
     * {@snippet lang=c :
     * enum _SE_IMAGE_SIGNATURE_TYPE.SeImageSignaturePackageCatalog = 6
     * }
     */
    public static int SeImageSignaturePackageCatalog() {
        return SeImageSignaturePackageCatalog;
    }
    private static final int SeImageSignaturePplMitigated = (int)7L;
    /**
     * {@snippet lang=c :
     * enum _SE_IMAGE_SIGNATURE_TYPE.SeImageSignaturePplMitigated = 7
     * }
     */
    public static int SeImageSignaturePplMitigated() {
        return SeImageSignaturePplMitigated;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _SE_IMAGE_SIGNATURE_TYPE {
     *     SeImageSignatureNone = 0,
     *     SeImageSignatureEmbedded,
     *     SeImageSignatureCache,
     *     SeImageSignatureCatalogCached,
     *     SeImageSignatureCatalogNotCached,
     *     SeImageSignatureCatalogHint,
     *     SeImageSignaturePackageCatalog,
     *     SeImageSignaturePplMitigated
     * } *PSE_IMAGE_SIGNATURE_TYPE
     * }
     */
    public static final AddressLayout PSE_IMAGE_SIGNATURE_TYPE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SECURITY_CAPABILITIES {
     *     PSID AppContainerSid;
     *     PSID_AND_ATTRIBUTES Capabilities;
     *     DWORD CapabilityCount;
     *     DWORD Reserved;
     * } *PSECURITY_CAPABILITIES
     * }
     */
    public static final AddressLayout PSECURITY_CAPABILITIES = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SECURITY_CAPABILITIES {
     *     PSID AppContainerSid;
     *     PSID_AND_ATTRIBUTES Capabilities;
     *     DWORD CapabilityCount;
     *     DWORD Reserved;
     * } *LPSECURITY_CAPABILITIES
     * }
     */
    public static final AddressLayout LPSECURITY_CAPABILITIES = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _JOB_SET_ARRAY {
     *     HANDLE JobHandle;
     *     DWORD MemberLevel;
     *     DWORD Flags;
     * } *PJOB_SET_ARRAY
     * }
     */
    public static final AddressLayout PJOB_SET_ARRAY = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef EXCEPTION_REGISTRATION_RECORD *PEXCEPTION_REGISTRATION_RECORD
     * }
     */
    public static final AddressLayout PEXCEPTION_REGISTRATION_RECORD = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef NT_TIB *PNT_TIB
     * }
     */
    public static final AddressLayout PNT_TIB = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _NT_TIB32 {
     *     DWORD ExceptionList;
     *     DWORD StackBase;
     *     DWORD StackLimit;
     *     DWORD SubSystemTib;
     *     union {
     *         DWORD FiberData;
     *         DWORD Version;
     *     };
     *     DWORD ArbitraryUserPointer;
     *     DWORD Self;
     * } *PNT_TIB32
     * }
     */
    public static final AddressLayout PNT_TIB32 = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _NT_TIB64 {
     *     DWORD64 ExceptionList;
     *     DWORD64 StackBase;
     *     DWORD64 StackLimit;
     *     DWORD64 SubSystemTib;
     *     union {
     *         DWORD64 FiberData;
     *         DWORD Version;
     *     };
     *     DWORD64 ArbitraryUserPointer;
     *     DWORD64 Self;
     * } *PNT_TIB64
     * }
     */
    public static final AddressLayout PNT_TIB64 = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _UMS_CREATE_THREAD_ATTRIBUTES {
     *     DWORD UmsVersion;
     *     PVOID UmsContext;
     *     PVOID UmsCompletionList;
     * } *PUMS_CREATE_THREAD_ATTRIBUTES
     * }
     */
    public static final AddressLayout PUMS_CREATE_THREAD_ATTRIBUTES = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _COMPONENT_FILTER {
     *     DWORD ComponentFlags;
     * } *PCOMPONENT_FILTER
     * }
     */
    public static final AddressLayout PCOMPONENT_FILTER = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _PROCESS_DYNAMIC_EH_CONTINUATION_TARGET {
     *     ULONG_PTR TargetAddress;
     *     ULONG_PTR Flags;
     * } *PPROCESS_DYNAMIC_EH_CONTINUATION_TARGET
     * }
     */
    public static final AddressLayout PPROCESS_DYNAMIC_EH_CONTINUATION_TARGET = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _PROCESS_DYNAMIC_EH_CONTINUATION_TARGETS_INFORMATION {
     *     WORD NumberOfTargets;
     *     WORD Reserved;
     *     DWORD Reserved2;
     *     PPROCESS_DYNAMIC_EH_CONTINUATION_TARGET Targets;
     * } *PPROCESS_DYNAMIC_EH_CONTINUATION_TARGETS_INFORMATION
     * }
     */
    public static final AddressLayout PPROCESS_DYNAMIC_EH_CONTINUATION_TARGETS_INFORMATION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _PROCESS_DYNAMIC_ENFORCED_ADDRESS_RANGE {
     *     ULONG_PTR BaseAddress;
     *     SIZE_T Size;
     *     DWORD Flags;
     * } *PPROCESS_DYNAMIC_ENFORCED_ADDRESS_RANGE
     * }
     */
    public static final AddressLayout PPROCESS_DYNAMIC_ENFORCED_ADDRESS_RANGE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _PROCESS_DYNAMIC_ENFORCED_ADDRESS_RANGES_INFORMATION {
     *     WORD NumberOfRanges;
     *     WORD Reserved;
     *     DWORD Reserved2;
     *     PPROCESS_DYNAMIC_ENFORCED_ADDRESS_RANGE Ranges;
     * } *PPROCESS_DYNAMIC_ENFORCED_ADDRESS_RANGES_INFORMATION
     * }
     */
    public static final AddressLayout PPROCESS_DYNAMIC_ENFORCED_ADDRESS_RANGES_INFORMATION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _QUOTA_LIMITS {
     *     SIZE_T PagedPoolLimit;
     *     SIZE_T NonPagedPoolLimit;
     *     SIZE_T MinimumWorkingSetSize;
     *     SIZE_T MaximumWorkingSetSize;
     *     SIZE_T PagefileLimit;
     *     LARGE_INTEGER TimeLimit;
     * } *PQUOTA_LIMITS
     * }
     */
    public static final AddressLayout PQUOTA_LIMITS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef union _RATE_QUOTA_LIMIT {
     *     DWORD RateData;
     *     struct {
     *         DWORD RatePercent : 7;
     *         DWORD Reserved0 : 25;
     *     };
     * } *PRATE_QUOTA_LIMIT
     * }
     */
    public static final AddressLayout PRATE_QUOTA_LIMIT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _QUOTA_LIMITS_EX {
     *     SIZE_T PagedPoolLimit;
     *     SIZE_T NonPagedPoolLimit;
     *     SIZE_T MinimumWorkingSetSize;
     *     SIZE_T MaximumWorkingSetSize;
     *     SIZE_T PagefileLimit;
     *     LARGE_INTEGER TimeLimit;
     *     SIZE_T WorkingSetLimit;
     *     SIZE_T Reserved2;
     *     SIZE_T Reserved3;
     *     SIZE_T Reserved4;
     *     DWORD Flags;
     *     RATE_QUOTA_LIMIT CpuRateLimit;
     * } *PQUOTA_LIMITS_EX
     * }
     */
    public static final AddressLayout PQUOTA_LIMITS_EX = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef IO_COUNTERS *PIO_COUNTERS
     * }
     */
    public static final AddressLayout PIO_COUNTERS = winapi.C_POINTER;
    private static final int PMCCounter = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _HARDWARE_COUNTER_TYPE.PMCCounter = 0
     * }
     */
    public static int PMCCounter() {
        return PMCCounter;
    }
    private static final int MaxHardwareCounterType = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _HARDWARE_COUNTER_TYPE.MaxHardwareCounterType = 1
     * }
     */
    public static int MaxHardwareCounterType() {
        return MaxHardwareCounterType;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _HARDWARE_COUNTER_TYPE {
     *     PMCCounter,
     *     MaxHardwareCounterType
     * } *PHARDWARE_COUNTER_TYPE
     * }
     */
    public static final AddressLayout PHARDWARE_COUNTER_TYPE = winapi.C_POINTER;
    private static final int ProcessDEPPolicy = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _PROCESS_MITIGATION_POLICY.ProcessDEPPolicy = 0
     * }
     */
    public static int ProcessDEPPolicy() {
        return ProcessDEPPolicy;
    }
    private static final int ProcessASLRPolicy = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _PROCESS_MITIGATION_POLICY.ProcessASLRPolicy = 1
     * }
     */
    public static int ProcessASLRPolicy() {
        return ProcessASLRPolicy;
    }
    private static final int ProcessDynamicCodePolicy = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _PROCESS_MITIGATION_POLICY.ProcessDynamicCodePolicy = 2
     * }
     */
    public static int ProcessDynamicCodePolicy() {
        return ProcessDynamicCodePolicy;
    }
    private static final int ProcessStrictHandleCheckPolicy = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _PROCESS_MITIGATION_POLICY.ProcessStrictHandleCheckPolicy = 3
     * }
     */
    public static int ProcessStrictHandleCheckPolicy() {
        return ProcessStrictHandleCheckPolicy;
    }
    private static final int ProcessSystemCallDisablePolicy = (int)4L;
    /**
     * {@snippet lang=c :
     * enum _PROCESS_MITIGATION_POLICY.ProcessSystemCallDisablePolicy = 4
     * }
     */
    public static int ProcessSystemCallDisablePolicy() {
        return ProcessSystemCallDisablePolicy;
    }
    private static final int ProcessMitigationOptionsMask = (int)5L;
    /**
     * {@snippet lang=c :
     * enum _PROCESS_MITIGATION_POLICY.ProcessMitigationOptionsMask = 5
     * }
     */
    public static int ProcessMitigationOptionsMask() {
        return ProcessMitigationOptionsMask;
    }
    private static final int ProcessExtensionPointDisablePolicy = (int)6L;
    /**
     * {@snippet lang=c :
     * enum _PROCESS_MITIGATION_POLICY.ProcessExtensionPointDisablePolicy = 6
     * }
     */
    public static int ProcessExtensionPointDisablePolicy() {
        return ProcessExtensionPointDisablePolicy;
    }
    private static final int ProcessControlFlowGuardPolicy = (int)7L;
    /**
     * {@snippet lang=c :
     * enum _PROCESS_MITIGATION_POLICY.ProcessControlFlowGuardPolicy = 7
     * }
     */
    public static int ProcessControlFlowGuardPolicy() {
        return ProcessControlFlowGuardPolicy;
    }
    private static final int ProcessSignaturePolicy = (int)8L;
    /**
     * {@snippet lang=c :
     * enum _PROCESS_MITIGATION_POLICY.ProcessSignaturePolicy = 8
     * }
     */
    public static int ProcessSignaturePolicy() {
        return ProcessSignaturePolicy;
    }
    private static final int ProcessFontDisablePolicy = (int)9L;
    /**
     * {@snippet lang=c :
     * enum _PROCESS_MITIGATION_POLICY.ProcessFontDisablePolicy = 9
     * }
     */
    public static int ProcessFontDisablePolicy() {
        return ProcessFontDisablePolicy;
    }
    private static final int ProcessImageLoadPolicy = (int)10L;
    /**
     * {@snippet lang=c :
     * enum _PROCESS_MITIGATION_POLICY.ProcessImageLoadPolicy = 10
     * }
     */
    public static int ProcessImageLoadPolicy() {
        return ProcessImageLoadPolicy;
    }
    private static final int ProcessSystemCallFilterPolicy = (int)11L;
    /**
     * {@snippet lang=c :
     * enum _PROCESS_MITIGATION_POLICY.ProcessSystemCallFilterPolicy = 11
     * }
     */
    public static int ProcessSystemCallFilterPolicy() {
        return ProcessSystemCallFilterPolicy;
    }
    private static final int ProcessPayloadRestrictionPolicy = (int)12L;
    /**
     * {@snippet lang=c :
     * enum _PROCESS_MITIGATION_POLICY.ProcessPayloadRestrictionPolicy = 12
     * }
     */
    public static int ProcessPayloadRestrictionPolicy() {
        return ProcessPayloadRestrictionPolicy;
    }
    private static final int ProcessChildProcessPolicy = (int)13L;
    /**
     * {@snippet lang=c :
     * enum _PROCESS_MITIGATION_POLICY.ProcessChildProcessPolicy = 13
     * }
     */
    public static int ProcessChildProcessPolicy() {
        return ProcessChildProcessPolicy;
    }
    private static final int ProcessSideChannelIsolationPolicy = (int)14L;
    /**
     * {@snippet lang=c :
     * enum _PROCESS_MITIGATION_POLICY.ProcessSideChannelIsolationPolicy = 14
     * }
     */
    public static int ProcessSideChannelIsolationPolicy() {
        return ProcessSideChannelIsolationPolicy;
    }
    private static final int ProcessUserShadowStackPolicy = (int)15L;
    /**
     * {@snippet lang=c :
     * enum _PROCESS_MITIGATION_POLICY.ProcessUserShadowStackPolicy = 15
     * }
     */
    public static int ProcessUserShadowStackPolicy() {
        return ProcessUserShadowStackPolicy;
    }
    private static final int ProcessRedirectionTrustPolicy = (int)16L;
    /**
     * {@snippet lang=c :
     * enum _PROCESS_MITIGATION_POLICY.ProcessRedirectionTrustPolicy = 16
     * }
     */
    public static int ProcessRedirectionTrustPolicy() {
        return ProcessRedirectionTrustPolicy;
    }
    private static final int ProcessUserPointerAuthPolicy = (int)17L;
    /**
     * {@snippet lang=c :
     * enum _PROCESS_MITIGATION_POLICY.ProcessUserPointerAuthPolicy = 17
     * }
     */
    public static int ProcessUserPointerAuthPolicy() {
        return ProcessUserPointerAuthPolicy;
    }
    private static final int ProcessSEHOPPolicy = (int)18L;
    /**
     * {@snippet lang=c :
     * enum _PROCESS_MITIGATION_POLICY.ProcessSEHOPPolicy = 18
     * }
     */
    public static int ProcessSEHOPPolicy() {
        return ProcessSEHOPPolicy;
    }
    private static final int MaxProcessMitigationPolicy = (int)19L;
    /**
     * {@snippet lang=c :
     * enum _PROCESS_MITIGATION_POLICY.MaxProcessMitigationPolicy = 19
     * }
     */
    public static int MaxProcessMitigationPolicy() {
        return MaxProcessMitigationPolicy;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _PROCESS_MITIGATION_POLICY {
     *     ProcessDEPPolicy,
     *     ProcessASLRPolicy,
     *     ProcessDynamicCodePolicy,
     *     ProcessStrictHandleCheckPolicy,
     *     ProcessSystemCallDisablePolicy,
     *     ProcessMitigationOptionsMask,
     *     ProcessExtensionPointDisablePolicy,
     *     ProcessControlFlowGuardPolicy,
     *     ProcessSignaturePolicy,
     *     ProcessFontDisablePolicy,
     *     ProcessImageLoadPolicy,
     *     ProcessSystemCallFilterPolicy,
     *     ProcessPayloadRestrictionPolicy,
     *     ProcessChildProcessPolicy,
     *     ProcessSideChannelIsolationPolicy,
     *     ProcessUserShadowStackPolicy,
     *     ProcessRedirectionTrustPolicy,
     *     ProcessUserPointerAuthPolicy,
     *     ProcessSEHOPPolicy,
     *     MaxProcessMitigationPolicy
     * } *PPROCESS_MITIGATION_POLICY
     * }
     */
    public static final AddressLayout PPROCESS_MITIGATION_POLICY = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _PROCESS_MITIGATION_ASLR_POLICY {
     *     union {
     *         DWORD Flags;
     *         struct {
     *             DWORD EnableBottomUpRandomization : 1;
     *             DWORD EnableForceRelocateImages : 1;
     *             DWORD EnableHighEntropy : 1;
     *             DWORD DisallowStrippedImages : 1;
     *             DWORD ReservedFlags : 28;
     *         };
     *     };
     * } *PPROCESS_MITIGATION_ASLR_POLICY
     * }
     */
    public static final AddressLayout PPROCESS_MITIGATION_ASLR_POLICY = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _PROCESS_MITIGATION_DEP_POLICY {
     *     union {
     *         DWORD Flags;
     *         struct {
     *             DWORD Enable : 1;
     *             DWORD DisableAtlThunkEmulation : 1;
     *             DWORD ReservedFlags : 30;
     *         };
     *     };
     *     BOOLEAN Permanent;
     * } *PPROCESS_MITIGATION_DEP_POLICY
     * }
     */
    public static final AddressLayout PPROCESS_MITIGATION_DEP_POLICY = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _PROCESS_MITIGATION_SEHOP_POLICY {
     *     union {
     *         DWORD Flags;
     *         struct {
     *             DWORD EnableSehop : 1;
     *             DWORD ReservedFlags : 31;
     *         };
     *     };
     * } *PPROCESS_MITIGATION_SEHOP_POLICY
     * }
     */
    public static final AddressLayout PPROCESS_MITIGATION_SEHOP_POLICY = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY {
     *     union {
     *         DWORD Flags;
     *         struct {
     *             DWORD RaiseExceptionOnInvalidHandleReference : 1;
     *             DWORD HandleExceptionsPermanentlyEnabled : 1;
     *             DWORD ReservedFlags : 30;
     *         };
     *     };
     * } *PPROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY
     * }
     */
    public static final AddressLayout PPROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY {
     *     union {
     *         DWORD Flags;
     *         struct {
     *             DWORD DisallowWin32kSystemCalls : 1;
     *             DWORD AuditDisallowWin32kSystemCalls : 1;
     *             DWORD DisallowFsctlSystemCalls : 1;
     *             DWORD AuditDisallowFsctlSystemCalls : 1;
     *             DWORD ReservedFlags : 28;
     *         };
     *     };
     * } *PPROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY
     * }
     */
    public static final AddressLayout PPROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY {
     *     union {
     *         DWORD Flags;
     *         struct {
     *             DWORD DisableExtensionPoints : 1;
     *             DWORD ReservedFlags : 31;
     *         };
     *     };
     * } *PPROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY
     * }
     */
    public static final AddressLayout PPROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _PROCESS_MITIGATION_DYNAMIC_CODE_POLICY {
     *     union {
     *         DWORD Flags;
     *         struct {
     *             DWORD ProhibitDynamicCode : 1;
     *             DWORD AllowThreadOptOut : 1;
     *             DWORD AllowRemoteDowngrade : 1;
     *             DWORD AuditProhibitDynamicCode : 1;
     *             DWORD ReservedFlags : 28;
     *         };
     *     };
     * } *PPROCESS_MITIGATION_DYNAMIC_CODE_POLICY
     * }
     */
    public static final AddressLayout PPROCESS_MITIGATION_DYNAMIC_CODE_POLICY = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY {
     *     union {
     *         DWORD Flags;
     *         struct {
     *             DWORD EnableControlFlowGuard : 1;
     *             DWORD EnableExportSuppression : 1;
     *             DWORD StrictMode : 1;
     *             DWORD EnableXfg : 1;
     *             DWORD EnableXfgAuditMode : 1;
     *             DWORD ReservedFlags : 27;
     *         };
     *     };
     * } *PPROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY
     * }
     */
    public static final AddressLayout PPROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY {
     *     union {
     *         DWORD Flags;
     *         struct {
     *             DWORD MicrosoftSignedOnly : 1;
     *             DWORD StoreSignedOnly : 1;
     *             DWORD MitigationOptIn : 1;
     *             DWORD AuditMicrosoftSignedOnly : 1;
     *             DWORD AuditStoreSignedOnly : 1;
     *             DWORD ReservedFlags : 27;
     *         };
     *     };
     * } *PPROCESS_MITIGATION_BINARY_SIGNATURE_POLICY
     * }
     */
    public static final AddressLayout PPROCESS_MITIGATION_BINARY_SIGNATURE_POLICY = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _PROCESS_MITIGATION_FONT_DISABLE_POLICY {
     *     union {
     *         DWORD Flags;
     *         struct {
     *             DWORD DisableNonSystemFonts : 1;
     *             DWORD AuditNonSystemFontLoading : 1;
     *             DWORD ReservedFlags : 30;
     *         };
     *     };
     * } *PPROCESS_MITIGATION_FONT_DISABLE_POLICY
     * }
     */
    public static final AddressLayout PPROCESS_MITIGATION_FONT_DISABLE_POLICY = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _PROCESS_MITIGATION_IMAGE_LOAD_POLICY {
     *     union {
     *         DWORD Flags;
     *         struct {
     *             DWORD NoRemoteImages : 1;
     *             DWORD NoLowMandatoryLabelImages : 1;
     *             DWORD PreferSystem32Images : 1;
     *             DWORD AuditNoRemoteImages : 1;
     *             DWORD AuditNoLowMandatoryLabelImages : 1;
     *             DWORD ReservedFlags : 27;
     *         };
     *     };
     * } *PPROCESS_MITIGATION_IMAGE_LOAD_POLICY
     * }
     */
    public static final AddressLayout PPROCESS_MITIGATION_IMAGE_LOAD_POLICY = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY {
     *     union {
     *         DWORD Flags;
     *         struct {
     *             DWORD FilterId : 4;
     *             DWORD ReservedFlags : 28;
     *         };
     *     };
     * } *PPROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY
     * }
     */
    public static final AddressLayout PPROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY {
     *     union {
     *         DWORD Flags;
     *         struct {
     *             DWORD EnableExportAddressFilter : 1;
     *             DWORD AuditExportAddressFilter : 1;
     *             DWORD EnableExportAddressFilterPlus : 1;
     *             DWORD AuditExportAddressFilterPlus : 1;
     *             DWORD EnableImportAddressFilter : 1;
     *             DWORD AuditImportAddressFilter : 1;
     *             DWORD EnableRopStackPivot : 1;
     *             DWORD AuditRopStackPivot : 1;
     *             DWORD EnableRopCallerCheck : 1;
     *             DWORD AuditRopCallerCheck : 1;
     *             DWORD EnableRopSimExec : 1;
     *             DWORD AuditRopSimExec : 1;
     *             DWORD ReservedFlags : 20;
     *         };
     *     };
     * } *PPROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY
     * }
     */
    public static final AddressLayout PPROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _PROCESS_MITIGATION_CHILD_PROCESS_POLICY {
     *     union {
     *         DWORD Flags;
     *         struct {
     *             DWORD NoChildProcessCreation : 1;
     *             DWORD AuditNoChildProcessCreation : 1;
     *             DWORD AllowSecureProcessCreation : 1;
     *             DWORD ReservedFlags : 29;
     *         };
     *     };
     * } *PPROCESS_MITIGATION_CHILD_PROCESS_POLICY
     * }
     */
    public static final AddressLayout PPROCESS_MITIGATION_CHILD_PROCESS_POLICY = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _PROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY {
     *     union {
     *         DWORD Flags;
     *         struct {
     *             DWORD SmtBranchTargetIsolation : 1;
     *             DWORD IsolateSecurityDomain : 1;
     *             DWORD DisablePageCombine : 1;
     *             DWORD SpeculativeStoreBypassDisable : 1;
     *             DWORD RestrictCoreSharing : 1;
     *             DWORD ReservedFlags : 27;
     *         };
     *     };
     * } *PPROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY
     * }
     */
    public static final AddressLayout PPROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _PROCESS_MITIGATION_USER_SHADOW_STACK_POLICY {
     *     union {
     *         DWORD Flags;
     *         struct {
     *             DWORD EnableUserShadowStack : 1;
     *             DWORD AuditUserShadowStack : 1;
     *             DWORD SetContextIpValidation : 1;
     *             DWORD AuditSetContextIpValidation : 1;
     *             DWORD EnableUserShadowStackStrictMode : 1;
     *             DWORD BlockNonCetBinaries : 1;
     *             DWORD BlockNonCetBinariesNonEhcont : 1;
     *             DWORD AuditBlockNonCetBinaries : 1;
     *             DWORD CetDynamicApisOutOfProcOnly : 1;
     *             DWORD SetContextIpValidationRelaxedMode : 1;
     *             DWORD ReservedFlags : 22;
     *         };
     *     };
     * } *PPROCESS_MITIGATION_USER_SHADOW_STACK_POLICY
     * }
     */
    public static final AddressLayout PPROCESS_MITIGATION_USER_SHADOW_STACK_POLICY = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _PROCESS_MITIGATION_USER_POINTER_AUTH_POLICY {
     *     union {
     *         DWORD Flags;
     *         struct {
     *             DWORD EnablePointerAuthUserIp : 1;
     *             DWORD ReservedFlags : 31;
     *         };
     *     };
     * } *PPROCESS_MITIGATION_USER_POINTER_AUTH_POLICY
     * }
     */
    public static final AddressLayout PPROCESS_MITIGATION_USER_POINTER_AUTH_POLICY = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _PROCESS_MITIGATION_REDIRECTION_TRUST_POLICY {
     *     union {
     *         DWORD Flags;
     *         struct {
     *             DWORD EnforceRedirectionTrust : 1;
     *             DWORD AuditRedirectionTrust : 1;
     *             DWORD ReservedFlags : 30;
     *         };
     *     };
     * } *PPROCESS_MITIGATION_REDIRECTION_TRUST_POLICY
     * }
     */
    public static final AddressLayout PPROCESS_MITIGATION_REDIRECTION_TRUST_POLICY = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _PROCESS_NETWORK_COUNTERS {
     *     DWORD64 BytesIn;
     *     DWORD64 BytesOut;
     * } *PPROCESS_NETWORK_COUNTERS
     * }
     */
    public static final AddressLayout PPROCESS_NETWORK_COUNTERS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION {
     *     LARGE_INTEGER TotalUserTime;
     *     LARGE_INTEGER TotalKernelTime;
     *     LARGE_INTEGER ThisPeriodTotalUserTime;
     *     LARGE_INTEGER ThisPeriodTotalKernelTime;
     *     DWORD TotalPageFaultCount;
     *     DWORD TotalProcesses;
     *     DWORD ActiveProcesses;
     *     DWORD TotalTerminatedProcesses;
     * } *PJOBOBJECT_BASIC_ACCOUNTING_INFORMATION
     * }
     */
    public static final AddressLayout PJOBOBJECT_BASIC_ACCOUNTING_INFORMATION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _JOBOBJECT_BASIC_LIMIT_INFORMATION {
     *     LARGE_INTEGER PerProcessUserTimeLimit;
     *     LARGE_INTEGER PerJobUserTimeLimit;
     *     DWORD LimitFlags;
     *     SIZE_T MinimumWorkingSetSize;
     *     SIZE_T MaximumWorkingSetSize;
     *     DWORD ActiveProcessLimit;
     *     ULONG_PTR Affinity;
     *     DWORD PriorityClass;
     *     DWORD SchedulingClass;
     * } *PJOBOBJECT_BASIC_LIMIT_INFORMATION
     * }
     */
    public static final AddressLayout PJOBOBJECT_BASIC_LIMIT_INFORMATION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION {
     *     JOBOBJECT_BASIC_LIMIT_INFORMATION BasicLimitInformation;
     *     IO_COUNTERS IoInfo;
     *     SIZE_T ProcessMemoryLimit;
     *     SIZE_T JobMemoryLimit;
     *     SIZE_T PeakProcessMemoryUsed;
     *     SIZE_T PeakJobMemoryUsed;
     * } *PJOBOBJECT_EXTENDED_LIMIT_INFORMATION
     * }
     */
    public static final AddressLayout PJOBOBJECT_EXTENDED_LIMIT_INFORMATION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _JOBOBJECT_BASIC_PROCESS_ID_LIST {
     *     DWORD NumberOfAssignedProcesses;
     *     DWORD NumberOfProcessIdsInList;
     *     ULONG_PTR ProcessIdList[1];
     * } *PJOBOBJECT_BASIC_PROCESS_ID_LIST
     * }
     */
    public static final AddressLayout PJOBOBJECT_BASIC_PROCESS_ID_LIST = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _JOBOBJECT_BASIC_UI_RESTRICTIONS {
     *     DWORD UIRestrictionsClass;
     * } *PJOBOBJECT_BASIC_UI_RESTRICTIONS
     * }
     */
    public static final AddressLayout PJOBOBJECT_BASIC_UI_RESTRICTIONS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _JOBOBJECT_SECURITY_LIMIT_INFORMATION {
     *     DWORD SecurityLimitFlags;
     *     HANDLE JobToken;
     *     PTOKEN_GROUPS SidsToDisable;
     *     PTOKEN_PRIVILEGES PrivilegesToDelete;
     *     PTOKEN_GROUPS RestrictedSids;
     * } *PJOBOBJECT_SECURITY_LIMIT_INFORMATION
     * }
     */
    public static final AddressLayout PJOBOBJECT_SECURITY_LIMIT_INFORMATION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _JOBOBJECT_END_OF_JOB_TIME_INFORMATION {
     *     DWORD EndOfJobTimeAction;
     * } *PJOBOBJECT_END_OF_JOB_TIME_INFORMATION
     * }
     */
    public static final AddressLayout PJOBOBJECT_END_OF_JOB_TIME_INFORMATION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _JOBOBJECT_ASSOCIATE_COMPLETION_PORT {
     *     PVOID CompletionKey;
     *     HANDLE CompletionPort;
     * } *PJOBOBJECT_ASSOCIATE_COMPLETION_PORT
     * }
     */
    public static final AddressLayout PJOBOBJECT_ASSOCIATE_COMPLETION_PORT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION {
     *     JOBOBJECT_BASIC_ACCOUNTING_INFORMATION BasicInfo;
     *     IO_COUNTERS IoInfo;
     * } *PJOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION
     * }
     */
    public static final AddressLayout PJOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _JOBOBJECT_JOBSET_INFORMATION {
     *     DWORD MemberLevel;
     * } *PJOBOBJECT_JOBSET_INFORMATION
     * }
     */
    public static final AddressLayout PJOBOBJECT_JOBSET_INFORMATION = winapi.C_POINTER;
    private static final int ToleranceLow = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECT_RATE_CONTROL_TOLERANCE.ToleranceLow = 1
     * }
     */
    public static int ToleranceLow() {
        return ToleranceLow;
    }
    private static final int ToleranceMedium = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECT_RATE_CONTROL_TOLERANCE.ToleranceMedium = 2
     * }
     */
    public static int ToleranceMedium() {
        return ToleranceMedium;
    }
    private static final int ToleranceHigh = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECT_RATE_CONTROL_TOLERANCE.ToleranceHigh = 3
     * }
     */
    public static int ToleranceHigh() {
        return ToleranceHigh;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _JOBOBJECT_RATE_CONTROL_TOLERANCE {
     *     ToleranceLow = 1,
     *     ToleranceMedium,
     *     ToleranceHigh
     * } *PJOBOBJECT_RATE_CONTROL_TOLERANCE
     * }
     */
    public static final AddressLayout PJOBOBJECT_RATE_CONTROL_TOLERANCE = winapi.C_POINTER;
    private static final int ToleranceIntervalShort = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL.ToleranceIntervalShort = 1
     * }
     */
    public static int ToleranceIntervalShort() {
        return ToleranceIntervalShort;
    }
    private static final int ToleranceIntervalMedium = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL.ToleranceIntervalMedium = 2
     * }
     */
    public static int ToleranceIntervalMedium() {
        return ToleranceIntervalMedium;
    }
    private static final int ToleranceIntervalLong = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL.ToleranceIntervalLong = 3
     * }
     */
    public static int ToleranceIntervalLong() {
        return ToleranceIntervalLong;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL {
     *     ToleranceIntervalShort = 1,
     *     ToleranceIntervalMedium,
     *     ToleranceIntervalLong
     * } *PJOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL
     * }
     */
    public static final AddressLayout PJOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION {
     *     DWORD64 IoReadBytesLimit;
     *     DWORD64 IoWriteBytesLimit;
     *     LARGE_INTEGER PerJobUserTimeLimit;
     *     DWORD64 JobMemoryLimit;
     *     JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlTolerance;
     *     JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL RateControlToleranceInterval;
     *     DWORD LimitFlags;
     * } *PJOBOBJECT_NOTIFICATION_LIMIT_INFORMATION
     * }
     */
    public static final AddressLayout PJOBOBJECT_NOTIFICATION_LIMIT_INFORMATION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _JOBOBJECT_LIMIT_VIOLATION_INFORMATION {
     *     DWORD LimitFlags;
     *     DWORD ViolationLimitFlags;
     *     DWORD64 IoReadBytes;
     *     DWORD64 IoReadBytesLimit;
     *     DWORD64 IoWriteBytes;
     *     DWORD64 IoWriteBytesLimit;
     *     LARGE_INTEGER PerJobUserTime;
     *     LARGE_INTEGER PerJobUserTimeLimit;
     *     DWORD64 JobMemory;
     *     DWORD64 JobMemoryLimit;
     *     JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlTolerance;
     *     JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlToleranceLimit;
     * } *PJOBOBJECT_LIMIT_VIOLATION_INFORMATION
     * }
     */
    public static final AddressLayout PJOBOBJECT_LIMIT_VIOLATION_INFORMATION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION {
     *     DWORD ControlFlags;
     *     union {
     *         DWORD CpuRate;
     *         DWORD Weight;
     *         struct {
     *             WORD MinRate;
     *             WORD MaxRate;
     *         };
     *     };
     * } *PJOBOBJECT_CPU_RATE_CONTROL_INFORMATION
     * }
     */
    public static final AddressLayout PJOBOBJECT_CPU_RATE_CONTROL_INFORMATION = winapi.C_POINTER;
    private static final int JOB_OBJECT_NET_RATE_CONTROL_ENABLE = (int)1L;
    /**
     * {@snippet lang=c :
     * enum JOB_OBJECT_NET_RATE_CONTROL_FLAGS.JOB_OBJECT_NET_RATE_CONTROL_ENABLE = 1
     * }
     */
    public static int JOB_OBJECT_NET_RATE_CONTROL_ENABLE() {
        return JOB_OBJECT_NET_RATE_CONTROL_ENABLE;
    }
    private static final int JOB_OBJECT_NET_RATE_CONTROL_MAX_BANDWIDTH = (int)2L;
    /**
     * {@snippet lang=c :
     * enum JOB_OBJECT_NET_RATE_CONTROL_FLAGS.JOB_OBJECT_NET_RATE_CONTROL_MAX_BANDWIDTH = 2
     * }
     */
    public static int JOB_OBJECT_NET_RATE_CONTROL_MAX_BANDWIDTH() {
        return JOB_OBJECT_NET_RATE_CONTROL_MAX_BANDWIDTH;
    }
    private static final int JOB_OBJECT_NET_RATE_CONTROL_DSCP_TAG = (int)4L;
    /**
     * {@snippet lang=c :
     * enum JOB_OBJECT_NET_RATE_CONTROL_FLAGS.JOB_OBJECT_NET_RATE_CONTROL_DSCP_TAG = 4
     * }
     */
    public static int JOB_OBJECT_NET_RATE_CONTROL_DSCP_TAG() {
        return JOB_OBJECT_NET_RATE_CONTROL_DSCP_TAG;
    }
    private static final int JOB_OBJECT_NET_RATE_CONTROL_VALID_FLAGS = (int)7L;
    /**
     * {@snippet lang=c :
     * enum JOB_OBJECT_NET_RATE_CONTROL_FLAGS.JOB_OBJECT_NET_RATE_CONTROL_VALID_FLAGS = 7
     * }
     */
    public static int JOB_OBJECT_NET_RATE_CONTROL_VALID_FLAGS() {
        return JOB_OBJECT_NET_RATE_CONTROL_VALID_FLAGS;
    }
    private static final int JOB_OBJECT_IO_RATE_CONTROL_ENABLE = (int)1L;
    /**
     * {@snippet lang=c :
     * enum JOB_OBJECT_IO_RATE_CONTROL_FLAGS.JOB_OBJECT_IO_RATE_CONTROL_ENABLE = 1
     * }
     */
    public static int JOB_OBJECT_IO_RATE_CONTROL_ENABLE() {
        return JOB_OBJECT_IO_RATE_CONTROL_ENABLE;
    }
    private static final int JOB_OBJECT_IO_RATE_CONTROL_STANDALONE_VOLUME = (int)2L;
    /**
     * {@snippet lang=c :
     * enum JOB_OBJECT_IO_RATE_CONTROL_FLAGS.JOB_OBJECT_IO_RATE_CONTROL_STANDALONE_VOLUME = 2
     * }
     */
    public static int JOB_OBJECT_IO_RATE_CONTROL_STANDALONE_VOLUME() {
        return JOB_OBJECT_IO_RATE_CONTROL_STANDALONE_VOLUME;
    }
    private static final int JOB_OBJECT_IO_RATE_CONTROL_FORCE_UNIT_ACCESS_ALL = (int)4L;
    /**
     * {@snippet lang=c :
     * enum JOB_OBJECT_IO_RATE_CONTROL_FLAGS.JOB_OBJECT_IO_RATE_CONTROL_FORCE_UNIT_ACCESS_ALL = 4
     * }
     */
    public static int JOB_OBJECT_IO_RATE_CONTROL_FORCE_UNIT_ACCESS_ALL() {
        return JOB_OBJECT_IO_RATE_CONTROL_FORCE_UNIT_ACCESS_ALL;
    }
    private static final int JOB_OBJECT_IO_RATE_CONTROL_FORCE_UNIT_ACCESS_ON_SOFT_CAP = (int)8L;
    /**
     * {@snippet lang=c :
     * enum JOB_OBJECT_IO_RATE_CONTROL_FLAGS.JOB_OBJECT_IO_RATE_CONTROL_FORCE_UNIT_ACCESS_ON_SOFT_CAP = 8
     * }
     */
    public static int JOB_OBJECT_IO_RATE_CONTROL_FORCE_UNIT_ACCESS_ON_SOFT_CAP() {
        return JOB_OBJECT_IO_RATE_CONTROL_FORCE_UNIT_ACCESS_ON_SOFT_CAP;
    }
    private static final int JOB_OBJECT_IO_RATE_CONTROL_VALID_FLAGS = (int)15L;
    /**
     * {@snippet lang=c :
     * enum JOB_OBJECT_IO_RATE_CONTROL_FLAGS.JOB_OBJECT_IO_RATE_CONTROL_VALID_FLAGS = 15
     * }
     */
    public static int JOB_OBJECT_IO_RATE_CONTROL_VALID_FLAGS() {
        return JOB_OBJECT_IO_RATE_CONTROL_VALID_FLAGS;
    }
    private static final int JOBOBJECT_IO_ATTRIBUTION_CONTROL_ENABLE = (int)1L;
    /**
     * {@snippet lang=c :
     * enum JOBOBJECT_IO_ATTRIBUTION_CONTROL_FLAGS.JOBOBJECT_IO_ATTRIBUTION_CONTROL_ENABLE = 1
     * }
     */
    public static int JOBOBJECT_IO_ATTRIBUTION_CONTROL_ENABLE() {
        return JOBOBJECT_IO_ATTRIBUTION_CONTROL_ENABLE;
    }
    private static final int JOBOBJECT_IO_ATTRIBUTION_CONTROL_DISABLE = (int)2L;
    /**
     * {@snippet lang=c :
     * enum JOBOBJECT_IO_ATTRIBUTION_CONTROL_FLAGS.JOBOBJECT_IO_ATTRIBUTION_CONTROL_DISABLE = 2
     * }
     */
    public static int JOBOBJECT_IO_ATTRIBUTION_CONTROL_DISABLE() {
        return JOBOBJECT_IO_ATTRIBUTION_CONTROL_DISABLE;
    }
    private static final int JOBOBJECT_IO_ATTRIBUTION_CONTROL_VALID_FLAGS = (int)3L;
    /**
     * {@snippet lang=c :
     * enum JOBOBJECT_IO_ATTRIBUTION_CONTROL_FLAGS.JOBOBJECT_IO_ATTRIBUTION_CONTROL_VALID_FLAGS = 3
     * }
     */
    public static int JOBOBJECT_IO_ATTRIBUTION_CONTROL_VALID_FLAGS() {
        return JOBOBJECT_IO_ATTRIBUTION_CONTROL_VALID_FLAGS;
    }
    /**
     * {@snippet lang=c :
     * typedef struct _JOBOBJECT_IO_ATTRIBUTION_STATS {
     *     ULONG_PTR IoCount;
     *     ULONGLONG TotalNonOverlappedQueueTime;
     *     ULONGLONG TotalNonOverlappedServiceTime;
     *     ULONGLONG TotalSize;
     * } *PJOBOBJECT_IO_ATTRIBUTION_STATS
     * }
     */
    public static final AddressLayout PJOBOBJECT_IO_ATTRIBUTION_STATS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _JOBOBJECT_IO_ATTRIBUTION_INFORMATION {
     *     DWORD ControlFlags;
     *     JOBOBJECT_IO_ATTRIBUTION_STATS ReadStats;
     *     JOBOBJECT_IO_ATTRIBUTION_STATS WriteStats;
     * } *PJOBOBJECT_IO_ATTRIBUTION_INFORMATION
     * }
     */
    public static final AddressLayout PJOBOBJECT_IO_ATTRIBUTION_INFORMATION = winapi.C_POINTER;
    private static final int JobObjectBasicAccountingInformation = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECTINFOCLASS.JobObjectBasicAccountingInformation = 1
     * }
     */
    public static int JobObjectBasicAccountingInformation() {
        return JobObjectBasicAccountingInformation;
    }
    private static final int JobObjectBasicLimitInformation = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECTINFOCLASS.JobObjectBasicLimitInformation = 2
     * }
     */
    public static int JobObjectBasicLimitInformation() {
        return JobObjectBasicLimitInformation;
    }
    private static final int JobObjectBasicProcessIdList = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECTINFOCLASS.JobObjectBasicProcessIdList = 3
     * }
     */
    public static int JobObjectBasicProcessIdList() {
        return JobObjectBasicProcessIdList;
    }
    private static final int JobObjectBasicUIRestrictions = (int)4L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECTINFOCLASS.JobObjectBasicUIRestrictions = 4
     * }
     */
    public static int JobObjectBasicUIRestrictions() {
        return JobObjectBasicUIRestrictions;
    }
    private static final int JobObjectSecurityLimitInformation = (int)5L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECTINFOCLASS.JobObjectSecurityLimitInformation = 5
     * }
     */
    public static int JobObjectSecurityLimitInformation() {
        return JobObjectSecurityLimitInformation;
    }
    private static final int JobObjectEndOfJobTimeInformation = (int)6L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECTINFOCLASS.JobObjectEndOfJobTimeInformation = 6
     * }
     */
    public static int JobObjectEndOfJobTimeInformation() {
        return JobObjectEndOfJobTimeInformation;
    }
    private static final int JobObjectAssociateCompletionPortInformation = (int)7L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECTINFOCLASS.JobObjectAssociateCompletionPortInformation = 7
     * }
     */
    public static int JobObjectAssociateCompletionPortInformation() {
        return JobObjectAssociateCompletionPortInformation;
    }
    private static final int JobObjectBasicAndIoAccountingInformation = (int)8L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECTINFOCLASS.JobObjectBasicAndIoAccountingInformation = 8
     * }
     */
    public static int JobObjectBasicAndIoAccountingInformation() {
        return JobObjectBasicAndIoAccountingInformation;
    }
    private static final int JobObjectExtendedLimitInformation = (int)9L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECTINFOCLASS.JobObjectExtendedLimitInformation = 9
     * }
     */
    public static int JobObjectExtendedLimitInformation() {
        return JobObjectExtendedLimitInformation;
    }
    private static final int JobObjectJobSetInformation = (int)10L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECTINFOCLASS.JobObjectJobSetInformation = 10
     * }
     */
    public static int JobObjectJobSetInformation() {
        return JobObjectJobSetInformation;
    }
    private static final int JobObjectGroupInformation = (int)11L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECTINFOCLASS.JobObjectGroupInformation = 11
     * }
     */
    public static int JobObjectGroupInformation() {
        return JobObjectGroupInformation;
    }
    private static final int JobObjectNotificationLimitInformation = (int)12L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECTINFOCLASS.JobObjectNotificationLimitInformation = 12
     * }
     */
    public static int JobObjectNotificationLimitInformation() {
        return JobObjectNotificationLimitInformation;
    }
    private static final int JobObjectLimitViolationInformation = (int)13L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECTINFOCLASS.JobObjectLimitViolationInformation = 13
     * }
     */
    public static int JobObjectLimitViolationInformation() {
        return JobObjectLimitViolationInformation;
    }
    private static final int JobObjectGroupInformationEx = (int)14L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECTINFOCLASS.JobObjectGroupInformationEx = 14
     * }
     */
    public static int JobObjectGroupInformationEx() {
        return JobObjectGroupInformationEx;
    }
    private static final int JobObjectCpuRateControlInformation = (int)15L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECTINFOCLASS.JobObjectCpuRateControlInformation = 15
     * }
     */
    public static int JobObjectCpuRateControlInformation() {
        return JobObjectCpuRateControlInformation;
    }
    private static final int JobObjectCompletionFilter = (int)16L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECTINFOCLASS.JobObjectCompletionFilter = 16
     * }
     */
    public static int JobObjectCompletionFilter() {
        return JobObjectCompletionFilter;
    }
    private static final int JobObjectCompletionCounter = (int)17L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECTINFOCLASS.JobObjectCompletionCounter = 17
     * }
     */
    public static int JobObjectCompletionCounter() {
        return JobObjectCompletionCounter;
    }
    private static final int JobObjectReserved1Information = (int)18L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECTINFOCLASS.JobObjectReserved1Information = 18
     * }
     */
    public static int JobObjectReserved1Information() {
        return JobObjectReserved1Information;
    }
    private static final int JobObjectReserved2Information = (int)19L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECTINFOCLASS.JobObjectReserved2Information = 19
     * }
     */
    public static int JobObjectReserved2Information() {
        return JobObjectReserved2Information;
    }
    private static final int JobObjectReserved3Information = (int)20L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECTINFOCLASS.JobObjectReserved3Information = 20
     * }
     */
    public static int JobObjectReserved3Information() {
        return JobObjectReserved3Information;
    }
    private static final int JobObjectReserved4Information = (int)21L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECTINFOCLASS.JobObjectReserved4Information = 21
     * }
     */
    public static int JobObjectReserved4Information() {
        return JobObjectReserved4Information;
    }
    private static final int JobObjectReserved5Information = (int)22L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECTINFOCLASS.JobObjectReserved5Information = 22
     * }
     */
    public static int JobObjectReserved5Information() {
        return JobObjectReserved5Information;
    }
    private static final int JobObjectReserved6Information = (int)23L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECTINFOCLASS.JobObjectReserved6Information = 23
     * }
     */
    public static int JobObjectReserved6Information() {
        return JobObjectReserved6Information;
    }
    private static final int JobObjectReserved7Information = (int)24L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECTINFOCLASS.JobObjectReserved7Information = 24
     * }
     */
    public static int JobObjectReserved7Information() {
        return JobObjectReserved7Information;
    }
    private static final int JobObjectReserved8Information = (int)25L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECTINFOCLASS.JobObjectReserved8Information = 25
     * }
     */
    public static int JobObjectReserved8Information() {
        return JobObjectReserved8Information;
    }
    private static final int JobObjectReserved9Information = (int)26L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECTINFOCLASS.JobObjectReserved9Information = 26
     * }
     */
    public static int JobObjectReserved9Information() {
        return JobObjectReserved9Information;
    }
    private static final int JobObjectReserved10Information = (int)27L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECTINFOCLASS.JobObjectReserved10Information = 27
     * }
     */
    public static int JobObjectReserved10Information() {
        return JobObjectReserved10Information;
    }
    private static final int JobObjectReserved11Information = (int)28L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECTINFOCLASS.JobObjectReserved11Information = 28
     * }
     */
    public static int JobObjectReserved11Information() {
        return JobObjectReserved11Information;
    }
    private static final int JobObjectReserved12Information = (int)29L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECTINFOCLASS.JobObjectReserved12Information = 29
     * }
     */
    public static int JobObjectReserved12Information() {
        return JobObjectReserved12Information;
    }
    private static final int JobObjectReserved13Information = (int)30L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECTINFOCLASS.JobObjectReserved13Information = 30
     * }
     */
    public static int JobObjectReserved13Information() {
        return JobObjectReserved13Information;
    }
    private static final int JobObjectReserved14Information = (int)31L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECTINFOCLASS.JobObjectReserved14Information = 31
     * }
     */
    public static int JobObjectReserved14Information() {
        return JobObjectReserved14Information;
    }
    private static final int JobObjectNetRateControlInformation = (int)32L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECTINFOCLASS.JobObjectNetRateControlInformation = 32
     * }
     */
    public static int JobObjectNetRateControlInformation() {
        return JobObjectNetRateControlInformation;
    }
    private static final int JobObjectNotificationLimitInformation2 = (int)33L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECTINFOCLASS.JobObjectNotificationLimitInformation2 = 33
     * }
     */
    public static int JobObjectNotificationLimitInformation2() {
        return JobObjectNotificationLimitInformation2;
    }
    private static final int JobObjectLimitViolationInformation2 = (int)34L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECTINFOCLASS.JobObjectLimitViolationInformation2 = 34
     * }
     */
    public static int JobObjectLimitViolationInformation2() {
        return JobObjectLimitViolationInformation2;
    }
    private static final int JobObjectCreateSilo = (int)35L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECTINFOCLASS.JobObjectCreateSilo = 35
     * }
     */
    public static int JobObjectCreateSilo() {
        return JobObjectCreateSilo;
    }
    private static final int JobObjectSiloBasicInformation = (int)36L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECTINFOCLASS.JobObjectSiloBasicInformation = 36
     * }
     */
    public static int JobObjectSiloBasicInformation() {
        return JobObjectSiloBasicInformation;
    }
    private static final int JobObjectReserved15Information = (int)37L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECTINFOCLASS.JobObjectReserved15Information = 37
     * }
     */
    public static int JobObjectReserved15Information() {
        return JobObjectReserved15Information;
    }
    private static final int JobObjectReserved16Information = (int)38L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECTINFOCLASS.JobObjectReserved16Information = 38
     * }
     */
    public static int JobObjectReserved16Information() {
        return JobObjectReserved16Information;
    }
    private static final int JobObjectReserved17Information = (int)39L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECTINFOCLASS.JobObjectReserved17Information = 39
     * }
     */
    public static int JobObjectReserved17Information() {
        return JobObjectReserved17Information;
    }
    private static final int JobObjectReserved18Information = (int)40L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECTINFOCLASS.JobObjectReserved18Information = 40
     * }
     */
    public static int JobObjectReserved18Information() {
        return JobObjectReserved18Information;
    }
    private static final int JobObjectReserved19Information = (int)41L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECTINFOCLASS.JobObjectReserved19Information = 41
     * }
     */
    public static int JobObjectReserved19Information() {
        return JobObjectReserved19Information;
    }
    private static final int JobObjectReserved20Information = (int)42L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECTINFOCLASS.JobObjectReserved20Information = 42
     * }
     */
    public static int JobObjectReserved20Information() {
        return JobObjectReserved20Information;
    }
    private static final int JobObjectReserved21Information = (int)43L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECTINFOCLASS.JobObjectReserved21Information = 43
     * }
     */
    public static int JobObjectReserved21Information() {
        return JobObjectReserved21Information;
    }
    private static final int JobObjectReserved22Information = (int)44L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECTINFOCLASS.JobObjectReserved22Information = 44
     * }
     */
    public static int JobObjectReserved22Information() {
        return JobObjectReserved22Information;
    }
    private static final int JobObjectReserved23Information = (int)45L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECTINFOCLASS.JobObjectReserved23Information = 45
     * }
     */
    public static int JobObjectReserved23Information() {
        return JobObjectReserved23Information;
    }
    private static final int JobObjectReserved24Information = (int)46L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECTINFOCLASS.JobObjectReserved24Information = 46
     * }
     */
    public static int JobObjectReserved24Information() {
        return JobObjectReserved24Information;
    }
    private static final int JobObjectReserved25Information = (int)47L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECTINFOCLASS.JobObjectReserved25Information = 47
     * }
     */
    public static int JobObjectReserved25Information() {
        return JobObjectReserved25Information;
    }
    private static final int JobObjectReserved26Information = (int)48L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECTINFOCLASS.JobObjectReserved26Information = 48
     * }
     */
    public static int JobObjectReserved26Information() {
        return JobObjectReserved26Information;
    }
    private static final int JobObjectReserved27Information = (int)49L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECTINFOCLASS.JobObjectReserved27Information = 49
     * }
     */
    public static int JobObjectReserved27Information() {
        return JobObjectReserved27Information;
    }
    private static final int JobObjectReserved28Information = (int)50L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECTINFOCLASS.JobObjectReserved28Information = 50
     * }
     */
    public static int JobObjectReserved28Information() {
        return JobObjectReserved28Information;
    }
    private static final int JobObjectNetworkAccountingInformation = (int)51L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECTINFOCLASS.JobObjectNetworkAccountingInformation = 51
     * }
     */
    public static int JobObjectNetworkAccountingInformation() {
        return JobObjectNetworkAccountingInformation;
    }
    private static final int MaxJobObjectInfoClass = (int)52L;
    /**
     * {@snippet lang=c :
     * enum _JOBOBJECTINFOCLASS.MaxJobObjectInfoClass = 52
     * }
     */
    public static int MaxJobObjectInfoClass() {
        return MaxJobObjectInfoClass;
    }
    /**
     * {@snippet lang=c :
     * typedef struct _SILOOBJECT_BASIC_INFORMATION {
     *     DWORD SiloId;
     *     DWORD SiloParentId;
     *     DWORD NumberOfProcesses;
     *     BOOLEAN IsInServerSilo;
     *     BYTE Reserved[3];
     * } *PSILOOBJECT_BASIC_INFORMATION
     * }
     */
    public static final AddressLayout PSILOOBJECT_BASIC_INFORMATION = winapi.C_POINTER;
    private static final int SERVERSILO_INITING = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _SERVERSILO_STATE.SERVERSILO_INITING = 0
     * }
     */
    public static int SERVERSILO_INITING() {
        return SERVERSILO_INITING;
    }
    private static final int SERVERSILO_STARTED = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _SERVERSILO_STATE.SERVERSILO_STARTED = 1
     * }
     */
    public static int SERVERSILO_STARTED() {
        return SERVERSILO_STARTED;
    }
    private static final int SERVERSILO_SHUTTING_DOWN = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _SERVERSILO_STATE.SERVERSILO_SHUTTING_DOWN = 2
     * }
     */
    public static int SERVERSILO_SHUTTING_DOWN() {
        return SERVERSILO_SHUTTING_DOWN;
    }
    private static final int SERVERSILO_TERMINATING = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _SERVERSILO_STATE.SERVERSILO_TERMINATING = 3
     * }
     */
    public static int SERVERSILO_TERMINATING() {
        return SERVERSILO_TERMINATING;
    }
    private static final int SERVERSILO_TERMINATED = (int)4L;
    /**
     * {@snippet lang=c :
     * enum _SERVERSILO_STATE.SERVERSILO_TERMINATED = 4
     * }
     */
    public static int SERVERSILO_TERMINATED() {
        return SERVERSILO_TERMINATED;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _SERVERSILO_STATE {
     *     SERVERSILO_INITING = 0,
     *     SERVERSILO_STARTED,
     *     SERVERSILO_SHUTTING_DOWN,
     *     SERVERSILO_TERMINATING,
     *     SERVERSILO_TERMINATED
     * } *PSERVERSILO_STATE
     * }
     */
    public static final AddressLayout PSERVERSILO_STATE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SERVERSILO_BASIC_INFORMATION {
     *     DWORD ServiceSessionId;
     *     SERVERSILO_STATE State;
     *     DWORD ExitStatus;
     *     BOOLEAN Reserved;
     *     PVOID ApiSetSchema;
     *     PVOID HostApiSetSchema;
     *     DWORD ContainerBuildNumber;
     *     DWORD HostBuildNumber;
     * } *PSERVERSILO_BASIC_INFORMATION
     * }
     */
    public static final AddressLayout PSERVERSILO_BASIC_INFORMATION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SERVERSILO_DIAGNOSTIC_INFORMATION {
     *     GUID ReportId;
     *     DWORD ExitStatus;
     *     WCHAR CriticalProcessName[15];
     * } *PSERVERSILO_DIAGNOSTIC_INFORMATION
     * }
     */
    public static final AddressLayout PSERVERSILO_DIAGNOSTIC_INFORMATION = winapi.C_POINTER;
    private static final int FirmwareTypeUnknown = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _FIRMWARE_TYPE.FirmwareTypeUnknown = 0
     * }
     */
    public static int FirmwareTypeUnknown() {
        return FirmwareTypeUnknown;
    }
    private static final int FirmwareTypeBios = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _FIRMWARE_TYPE.FirmwareTypeBios = 1
     * }
     */
    public static int FirmwareTypeBios() {
        return FirmwareTypeBios;
    }
    private static final int FirmwareTypeUefi = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _FIRMWARE_TYPE.FirmwareTypeUefi = 2
     * }
     */
    public static int FirmwareTypeUefi() {
        return FirmwareTypeUefi;
    }
    private static final int FirmwareTypeMax = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _FIRMWARE_TYPE.FirmwareTypeMax = 3
     * }
     */
    public static int FirmwareTypeMax() {
        return FirmwareTypeMax;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _FIRMWARE_TYPE {
     *     FirmwareTypeUnknown,
     *     FirmwareTypeBios,
     *     FirmwareTypeUefi,
     *     FirmwareTypeMax
     * } *PFIRMWARE_TYPE
     * }
     */
    public static final AddressLayout PFIRMWARE_TYPE = winapi.C_POINTER;
    private static final int RelationProcessorCore = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _LOGICAL_PROCESSOR_RELATIONSHIP.RelationProcessorCore = 0
     * }
     */
    public static int RelationProcessorCore() {
        return RelationProcessorCore;
    }
    private static final int RelationNumaNode = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _LOGICAL_PROCESSOR_RELATIONSHIP.RelationNumaNode = 1
     * }
     */
    public static int RelationNumaNode() {
        return RelationNumaNode;
    }
    private static final int RelationCache = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _LOGICAL_PROCESSOR_RELATIONSHIP.RelationCache = 2
     * }
     */
    public static int RelationCache() {
        return RelationCache;
    }
    private static final int RelationProcessorPackage = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _LOGICAL_PROCESSOR_RELATIONSHIP.RelationProcessorPackage = 3
     * }
     */
    public static int RelationProcessorPackage() {
        return RelationProcessorPackage;
    }
    private static final int RelationGroup = (int)4L;
    /**
     * {@snippet lang=c :
     * enum _LOGICAL_PROCESSOR_RELATIONSHIP.RelationGroup = 4
     * }
     */
    public static int RelationGroup() {
        return RelationGroup;
    }
    private static final int RelationProcessorDie = (int)5L;
    /**
     * {@snippet lang=c :
     * enum _LOGICAL_PROCESSOR_RELATIONSHIP.RelationProcessorDie = 5
     * }
     */
    public static int RelationProcessorDie() {
        return RelationProcessorDie;
    }
    private static final int RelationNumaNodeEx = (int)6L;
    /**
     * {@snippet lang=c :
     * enum _LOGICAL_PROCESSOR_RELATIONSHIP.RelationNumaNodeEx = 6
     * }
     */
    public static int RelationNumaNodeEx() {
        return RelationNumaNodeEx;
    }
    private static final int RelationProcessorModule = (int)7L;
    /**
     * {@snippet lang=c :
     * enum _LOGICAL_PROCESSOR_RELATIONSHIP.RelationProcessorModule = 7
     * }
     */
    public static int RelationProcessorModule() {
        return RelationProcessorModule;
    }
    private static final int RelationAll = (int)65535L;
    /**
     * {@snippet lang=c :
     * enum _LOGICAL_PROCESSOR_RELATIONSHIP.RelationAll = 65535
     * }
     */
    public static int RelationAll() {
        return RelationAll;
    }
    private static final int CacheUnified = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _PROCESSOR_CACHE_TYPE.CacheUnified = 0
     * }
     */
    public static int CacheUnified() {
        return CacheUnified;
    }
    private static final int CacheInstruction = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _PROCESSOR_CACHE_TYPE.CacheInstruction = 1
     * }
     */
    public static int CacheInstruction() {
        return CacheInstruction;
    }
    private static final int CacheData = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _PROCESSOR_CACHE_TYPE.CacheData = 2
     * }
     */
    public static int CacheData() {
        return CacheData;
    }
    private static final int CacheTrace = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _PROCESSOR_CACHE_TYPE.CacheTrace = 3
     * }
     */
    public static int CacheTrace() {
        return CacheTrace;
    }
    private static final int CacheUnknown = (int)4L;
    /**
     * {@snippet lang=c :
     * enum _PROCESSOR_CACHE_TYPE.CacheUnknown = 4
     * }
     */
    public static int CacheUnknown() {
        return CacheUnknown;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _PROCESSOR_CACHE_TYPE {
     *     CacheUnified,
     *     CacheInstruction,
     *     CacheData,
     *     CacheTrace,
     *     CacheUnknown
     * } *PPROCESSOR_CACHE_TYPE
     * }
     */
    public static final AddressLayout PPROCESSOR_CACHE_TYPE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _CACHE_DESCRIPTOR {
     *     BYTE Level;
     *     BYTE Associativity;
     *     WORD LineSize;
     *     DWORD Size;
     *     PROCESSOR_CACHE_TYPE Type;
     * } *PCACHE_DESCRIPTOR
     * }
     */
    public static final AddressLayout PCACHE_DESCRIPTOR = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION {
     *     ULONG_PTR ProcessorMask;
     *     LOGICAL_PROCESSOR_RELATIONSHIP Relationship;
     *     union {
     *         struct {
     *             BYTE Flags;
     *         } ProcessorCore;
     *         struct {
     *             DWORD NodeNumber;
     *         } NumaNode;
     *         CACHE_DESCRIPTOR Cache;
     *         ULONGLONG Reserved[2];
     *     };
     * } *PSYSTEM_LOGICAL_PROCESSOR_INFORMATION
     * }
     */
    public static final AddressLayout PSYSTEM_LOGICAL_PROCESSOR_INFORMATION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _PROCESSOR_RELATIONSHIP {
     *     BYTE Flags;
     *     BYTE EfficiencyClass;
     *     BYTE Reserved[20];
     *     WORD GroupCount;
     *     GROUP_AFFINITY GroupMask[1];
     * } *PPROCESSOR_RELATIONSHIP
     * }
     */
    public static final AddressLayout PPROCESSOR_RELATIONSHIP = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _NUMA_NODE_RELATIONSHIP {
     *     DWORD NodeNumber;
     *     BYTE Reserved[18];
     *     WORD GroupCount;
     *     union {
     *         GROUP_AFFINITY GroupMask;
     *         GROUP_AFFINITY GroupMasks[1];
     *     };
     * } *PNUMA_NODE_RELATIONSHIP
     * }
     */
    public static final AddressLayout PNUMA_NODE_RELATIONSHIP = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _CACHE_RELATIONSHIP {
     *     BYTE Level;
     *     BYTE Associativity;
     *     WORD LineSize;
     *     DWORD CacheSize;
     *     PROCESSOR_CACHE_TYPE Type;
     *     BYTE Reserved[18];
     *     WORD GroupCount;
     *     union {
     *         GROUP_AFFINITY GroupMask;
     *         GROUP_AFFINITY GroupMasks[1];
     *     };
     * } *PCACHE_RELATIONSHIP
     * }
     */
    public static final AddressLayout PCACHE_RELATIONSHIP = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _PROCESSOR_GROUP_INFO {
     *     BYTE MaximumProcessorCount;
     *     BYTE ActiveProcessorCount;
     *     BYTE Reserved[38];
     *     KAFFINITY ActiveProcessorMask;
     * } *PPROCESSOR_GROUP_INFO
     * }
     */
    public static final AddressLayout PPROCESSOR_GROUP_INFO = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _GROUP_RELATIONSHIP {
     *     WORD MaximumGroupCount;
     *     WORD ActiveGroupCount;
     *     BYTE Reserved[20];
     *     PROCESSOR_GROUP_INFO GroupInfo[1];
     * } *PGROUP_RELATIONSHIP
     * }
     */
    public static final AddressLayout PGROUP_RELATIONSHIP = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX {
     *     LOGICAL_PROCESSOR_RELATIONSHIP Relationship;
     *     DWORD Size;
     *     union {
     *         PROCESSOR_RELATIONSHIP Processor;
     *         NUMA_NODE_RELATIONSHIP NumaNode;
     *         CACHE_RELATIONSHIP Cache;
     *         GROUP_RELATIONSHIP Group;
     *     };
     * } *PSYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX
     * }
     */
    public static final AddressLayout PSYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX = winapi.C_POINTER;
    private static final int CpuSetInformation = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _CPU_SET_INFORMATION_TYPE.CpuSetInformation = 0
     * }
     */
    public static int CpuSetInformation() {
        return CpuSetInformation;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _CPU_SET_INFORMATION_TYPE {
     *     CpuSetInformation
     * } *PCPU_SET_INFORMATION_TYPE
     * }
     */
    public static final AddressLayout PCPU_SET_INFORMATION_TYPE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SYSTEM_CPU_SET_INFORMATION {
     *     DWORD Size;
     *     CPU_SET_INFORMATION_TYPE Type;
     *     union {
     *         struct {
     *             DWORD Id;
     *             WORD Group;
     *             BYTE LogicalProcessorIndex;
     *             BYTE CoreIndex;
     *             BYTE LastLevelCacheIndex;
     *             BYTE NumaNodeIndex;
     *             BYTE EfficiencyClass;
     *             union {
     *                 BYTE AllFlags;
     *                 struct {
     *                     BYTE Parked : 1;
     *                     BYTE Allocated : 1;
     *                     BYTE AllocatedToTargetProcess : 1;
     *                     BYTE RealTime : 1;
     *                     BYTE ReservedFlags : 4;
     *                 };
     *             };
     *             union {
     *                 DWORD Reserved;
     *                 BYTE SchedulingClass;
     *             };
     *             DWORD64 AllocationTag;
     *         } CpuSet;
     *     };
     * } *PSYSTEM_CPU_SET_INFORMATION
     * }
     */
    public static final AddressLayout PSYSTEM_CPU_SET_INFORMATION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SYSTEM_POOL_ZEROING_INFORMATION {
     *     BOOLEAN PoolZeroingSupportPresent;
     * } *PSYSTEM_POOL_ZEROING_INFORMATION
     * }
     */
    public static final AddressLayout PSYSTEM_POOL_ZEROING_INFORMATION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION {
     *     DWORD64 CycleTime;
     * } *PSYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION
     * }
     */
    public static final AddressLayout PSYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _XSTATE_FEATURE {
     *     DWORD Offset;
     *     DWORD Size;
     * } *PXSTATE_FEATURE
     * }
     */
    public static final AddressLayout PXSTATE_FEATURE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _XSTATE_CONFIGURATION {
     *     DWORD64 EnabledFeatures;
     *     DWORD64 EnabledVolatileFeatures;
     *     DWORD Size;
     *     union {
     *         DWORD ControlFlags;
     *         struct {
     *             DWORD OptimizedSave : 1;
     *             DWORD CompactionEnabled : 1;
     *             DWORD ExtendedFeatureDisable : 1;
     *         };
     *     };
     *     XSTATE_FEATURE Features[64];
     *     DWORD64 EnabledSupervisorFeatures;
     *     DWORD64 AlignedFeatures;
     *     DWORD AllFeatureSize;
     *     DWORD AllFeatures[64];
     *     DWORD64 EnabledUserVisibleSupervisorFeatures;
     *     DWORD64 ExtendedFeatureDisableFeatures;
     *     DWORD AllNonLargeFeatureSize;
     *     WORD MaxSveVectorLength;
     *     WORD Spare1;
     * } *PXSTATE_CONFIGURATION
     * }
     */
    public static final AddressLayout PXSTATE_CONFIGURATION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _MEMORY_BASIC_INFORMATION {
     *     PVOID BaseAddress;
     *     PVOID AllocationBase;
     *     DWORD AllocationProtect;
     *     WORD PartitionId;
     *     SIZE_T RegionSize;
     *     DWORD State;
     *     DWORD Protect;
     *     DWORD Type;
     * } *PMEMORY_BASIC_INFORMATION
     * }
     */
    public static final AddressLayout PMEMORY_BASIC_INFORMATION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _MEMORY_BASIC_INFORMATION32 {
     *     DWORD BaseAddress;
     *     DWORD AllocationBase;
     *     DWORD AllocationProtect;
     *     DWORD RegionSize;
     *     DWORD State;
     *     DWORD Protect;
     *     DWORD Type;
     * } *PMEMORY_BASIC_INFORMATION32
     * }
     */
    public static final AddressLayout PMEMORY_BASIC_INFORMATION32 = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _MEMORY_BASIC_INFORMATION64 {
     *     ULONGLONG BaseAddress;
     *     ULONGLONG AllocationBase;
     *     DWORD AllocationProtect;
     *     DWORD __alignment1;
     *     ULONGLONG RegionSize;
     *     DWORD State;
     *     DWORD Protect;
     *     DWORD Type;
     *     DWORD __alignment2;
     * } *PMEMORY_BASIC_INFORMATION64
     * }
     */
    public static final AddressLayout PMEMORY_BASIC_INFORMATION64 = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _CFG_CALL_TARGET_INFO {
     *     ULONG_PTR Offset;
     *     ULONG_PTR Flags;
     * } *PCFG_CALL_TARGET_INFO
     * }
     */
    public static final AddressLayout PCFG_CALL_TARGET_INFO = winapi.C_POINTER;
    private static final int MemExtendedParameterInvalidType = (int)0L;
    /**
     * {@snippet lang=c :
     * enum MEM_EXTENDED_PARAMETER_TYPE.MemExtendedParameterInvalidType = 0
     * }
     */
    public static int MemExtendedParameterInvalidType() {
        return MemExtendedParameterInvalidType;
    }
    private static final int MemExtendedParameterAddressRequirements = (int)1L;
    /**
     * {@snippet lang=c :
     * enum MEM_EXTENDED_PARAMETER_TYPE.MemExtendedParameterAddressRequirements = 1
     * }
     */
    public static int MemExtendedParameterAddressRequirements() {
        return MemExtendedParameterAddressRequirements;
    }
    private static final int MemExtendedParameterNumaNode = (int)2L;
    /**
     * {@snippet lang=c :
     * enum MEM_EXTENDED_PARAMETER_TYPE.MemExtendedParameterNumaNode = 2
     * }
     */
    public static int MemExtendedParameterNumaNode() {
        return MemExtendedParameterNumaNode;
    }
    private static final int MemExtendedParameterPartitionHandle = (int)3L;
    /**
     * {@snippet lang=c :
     * enum MEM_EXTENDED_PARAMETER_TYPE.MemExtendedParameterPartitionHandle = 3
     * }
     */
    public static int MemExtendedParameterPartitionHandle() {
        return MemExtendedParameterPartitionHandle;
    }
    private static final int MemExtendedParameterUserPhysicalHandle = (int)4L;
    /**
     * {@snippet lang=c :
     * enum MEM_EXTENDED_PARAMETER_TYPE.MemExtendedParameterUserPhysicalHandle = 4
     * }
     */
    public static int MemExtendedParameterUserPhysicalHandle() {
        return MemExtendedParameterUserPhysicalHandle;
    }
    private static final int MemExtendedParameterAttributeFlags = (int)5L;
    /**
     * {@snippet lang=c :
     * enum MEM_EXTENDED_PARAMETER_TYPE.MemExtendedParameterAttributeFlags = 5
     * }
     */
    public static int MemExtendedParameterAttributeFlags() {
        return MemExtendedParameterAttributeFlags;
    }
    private static final int MemExtendedParameterImageMachine = (int)6L;
    /**
     * {@snippet lang=c :
     * enum MEM_EXTENDED_PARAMETER_TYPE.MemExtendedParameterImageMachine = 6
     * }
     */
    public static int MemExtendedParameterImageMachine() {
        return MemExtendedParameterImageMachine;
    }
    private static final int MemExtendedParameterMax = (int)7L;
    /**
     * {@snippet lang=c :
     * enum MEM_EXTENDED_PARAMETER_TYPE.MemExtendedParameterMax = 7
     * }
     */
    public static int MemExtendedParameterMax() {
        return MemExtendedParameterMax;
    }
    /**
     * {@snippet lang=c :
     * typedef enum MEM_EXTENDED_PARAMETER_TYPE {
     *     MemExtendedParameterInvalidType = 0,
     *     MemExtendedParameterAddressRequirements,
     *     MemExtendedParameterNumaNode,
     *     MemExtendedParameterPartitionHandle,
     *     MemExtendedParameterUserPhysicalHandle,
     *     MemExtendedParameterAttributeFlags,
     *     MemExtendedParameterImageMachine,
     *     MemExtendedParameterMax
     * } *PMEM_EXTENDED_PARAMETER_TYPE
     * }
     */
    public static final AddressLayout PMEM_EXTENDED_PARAMETER_TYPE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct MEM_EXTENDED_PARAMETER {
     *     struct {
     *         DWORD64 Type : 8;
     *         DWORD64 Reserved : 64 - 8;
     *     };
     *     union {
     *         DWORD64 ULong64;
     *         PVOID Pointer;
     *         SIZE_T Size;
     *         HANDLE Handle;
     *         DWORD ULong;
     *     };
     * } *PMEM_EXTENDED_PARAMETER
     * }
     */
    public static final AddressLayout PMEM_EXTENDED_PARAMETER = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _MEM_ADDRESS_REQUIREMENTS {
     *     PVOID LowestStartingAddress;
     *     PVOID HighestEndingAddress;
     *     SIZE_T Alignment;
     * } *PMEM_ADDRESS_REQUIREMENTS
     * }
     */
    public static final AddressLayout PMEM_ADDRESS_REQUIREMENTS = winapi.C_POINTER;
    private static final int MemDedicatedAttributeReadBandwidth = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _MEM_DEDICATED_ATTRIBUTE_TYPE.MemDedicatedAttributeReadBandwidth = 0
     * }
     */
    public static int MemDedicatedAttributeReadBandwidth() {
        return MemDedicatedAttributeReadBandwidth;
    }
    private static final int MemDedicatedAttributeReadLatency = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _MEM_DEDICATED_ATTRIBUTE_TYPE.MemDedicatedAttributeReadLatency = 1
     * }
     */
    public static int MemDedicatedAttributeReadLatency() {
        return MemDedicatedAttributeReadLatency;
    }
    private static final int MemDedicatedAttributeWriteBandwidth = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _MEM_DEDICATED_ATTRIBUTE_TYPE.MemDedicatedAttributeWriteBandwidth = 2
     * }
     */
    public static int MemDedicatedAttributeWriteBandwidth() {
        return MemDedicatedAttributeWriteBandwidth;
    }
    private static final int MemDedicatedAttributeWriteLatency = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _MEM_DEDICATED_ATTRIBUTE_TYPE.MemDedicatedAttributeWriteLatency = 3
     * }
     */
    public static int MemDedicatedAttributeWriteLatency() {
        return MemDedicatedAttributeWriteLatency;
    }
    private static final int MemDedicatedAttributeMax = (int)4L;
    /**
     * {@snippet lang=c :
     * enum _MEM_DEDICATED_ATTRIBUTE_TYPE.MemDedicatedAttributeMax = 4
     * }
     */
    public static int MemDedicatedAttributeMax() {
        return MemDedicatedAttributeMax;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _MEM_DEDICATED_ATTRIBUTE_TYPE {
     *     MemDedicatedAttributeReadBandwidth = 0,
     *     MemDedicatedAttributeReadLatency,
     *     MemDedicatedAttributeWriteBandwidth,
     *     MemDedicatedAttributeWriteLatency,
     *     MemDedicatedAttributeMax
     * } *PMEM_DEDICATED_ATTRIBUTE_TYPE
     * }
     */
    public static final AddressLayout PMEM_DEDICATED_ATTRIBUTE_TYPE = winapi.C_POINTER;
    private static final int MemSectionExtendedParameterInvalidType = (int)0L;
    /**
     * {@snippet lang=c :
     * enum MEM_SECTION_EXTENDED_PARAMETER_TYPE.MemSectionExtendedParameterInvalidType = 0
     * }
     */
    public static int MemSectionExtendedParameterInvalidType() {
        return MemSectionExtendedParameterInvalidType;
    }
    private static final int MemSectionExtendedParameterUserPhysicalFlags = (int)1L;
    /**
     * {@snippet lang=c :
     * enum MEM_SECTION_EXTENDED_PARAMETER_TYPE.MemSectionExtendedParameterUserPhysicalFlags = 1
     * }
     */
    public static int MemSectionExtendedParameterUserPhysicalFlags() {
        return MemSectionExtendedParameterUserPhysicalFlags;
    }
    private static final int MemSectionExtendedParameterNumaNode = (int)2L;
    /**
     * {@snippet lang=c :
     * enum MEM_SECTION_EXTENDED_PARAMETER_TYPE.MemSectionExtendedParameterNumaNode = 2
     * }
     */
    public static int MemSectionExtendedParameterNumaNode() {
        return MemSectionExtendedParameterNumaNode;
    }
    private static final int MemSectionExtendedParameterSigningLevel = (int)3L;
    /**
     * {@snippet lang=c :
     * enum MEM_SECTION_EXTENDED_PARAMETER_TYPE.MemSectionExtendedParameterSigningLevel = 3
     * }
     */
    public static int MemSectionExtendedParameterSigningLevel() {
        return MemSectionExtendedParameterSigningLevel;
    }
    private static final int MemSectionExtendedParameterMax = (int)4L;
    /**
     * {@snippet lang=c :
     * enum MEM_SECTION_EXTENDED_PARAMETER_TYPE.MemSectionExtendedParameterMax = 4
     * }
     */
    public static int MemSectionExtendedParameterMax() {
        return MemSectionExtendedParameterMax;
    }
    /**
     * {@snippet lang=c :
     * typedef enum MEM_SECTION_EXTENDED_PARAMETER_TYPE {
     *     MemSectionExtendedParameterInvalidType = 0,
     *     MemSectionExtendedParameterUserPhysicalFlags,
     *     MemSectionExtendedParameterNumaNode,
     *     MemSectionExtendedParameterSigningLevel,
     *     MemSectionExtendedParameterMax
     * } *PMEM_SECTION_EXTENDED_PARAMETER_TYPE
     * }
     */
    public static final AddressLayout PMEM_SECTION_EXTENDED_PARAMETER_TYPE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _ENCLAVE_CREATE_INFO_SGX {
     *     BYTE Secs[4096];
     * } *PENCLAVE_CREATE_INFO_SGX
     * }
     */
    public static final AddressLayout PENCLAVE_CREATE_INFO_SGX = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _ENCLAVE_INIT_INFO_SGX {
     *     BYTE SigStruct[1808];
     *     BYTE Reserved1[240];
     *     BYTE EInitToken[304];
     *     BYTE Reserved2[1744];
     * } *PENCLAVE_INIT_INFO_SGX
     * }
     */
    public static final AddressLayout PENCLAVE_INIT_INFO_SGX = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _ENCLAVE_CREATE_INFO_VBS {
     *     DWORD Flags;
     *     BYTE OwnerID[32];
     * } *PENCLAVE_CREATE_INFO_VBS
     * }
     */
    public static final AddressLayout PENCLAVE_CREATE_INFO_VBS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _ENCLAVE_CREATE_INFO_VBS_BASIC {
     *     DWORD Flags;
     *     BYTE OwnerID[32];
     * } *PENCLAVE_CREATE_INFO_VBS_BASIC
     * }
     */
    public static final AddressLayout PENCLAVE_CREATE_INFO_VBS_BASIC = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _ENCLAVE_LOAD_DATA_VBS_BASIC {
     *     DWORD PageType;
     * } *PENCLAVE_LOAD_DATA_VBS_BASIC
     * }
     */
    public static final AddressLayout PENCLAVE_LOAD_DATA_VBS_BASIC = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _ENCLAVE_INIT_INFO_VBS_BASIC {
     *     BYTE FamilyId[16];
     *     BYTE ImageId[16];
     *     ULONGLONG EnclaveSize;
     *     DWORD EnclaveSvn;
     *     DWORD Reserved;
     *     union {
     *         HANDLE SignatureInfoHandle;
     *         ULONGLONG Unused;
     *     };
     * } *PENCLAVE_INIT_INFO_VBS_BASIC
     * }
     */
    public static final AddressLayout PENCLAVE_INIT_INFO_VBS_BASIC = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _ENCLAVE_INIT_INFO_VBS {
     *     DWORD Length;
     *     DWORD ThreadCount;
     * } *PENCLAVE_INIT_INFO_VBS
     * }
     */
    public static final AddressLayout PENCLAVE_INIT_INFO_VBS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _MEMORY_PARTITION_DEDICATED_MEMORY_ATTRIBUTE {
     *     MEM_DEDICATED_ATTRIBUTE_TYPE Type;
     *     DWORD Reserved;
     *     DWORD64 Value;
     * } *PMEMORY_PARTITION_DEDICATED_MEMORY_ATTRIBUTE
     * }
     */
    public static final AddressLayout PMEMORY_PARTITION_DEDICATED_MEMORY_ATTRIBUTE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _MEMORY_PARTITION_DEDICATED_MEMORY_INFORMATION {
     *     DWORD NextEntryOffset;
     *     DWORD SizeOfInformation;
     *     DWORD Flags;
     *     DWORD AttributesOffset;
     *     DWORD AttributeCount;
     *     DWORD Reserved;
     *     DWORD64 TypeId;
     * } *PMEMORY_PARTITION_DEDICATED_MEMORY_INFORMATION
     * }
     */
    public static final AddressLayout PMEMORY_PARTITION_DEDICATED_MEMORY_INFORMATION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _FILE_ID_128 {
     *     BYTE Identifier[16];
     * } *PFILE_ID_128
     * }
     */
    public static final AddressLayout PFILE_ID_128 = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _FILE_NOTIFY_INFORMATION {
     *     DWORD NextEntryOffset;
     *     DWORD Action;
     *     DWORD FileNameLength;
     *     WCHAR FileName[1];
     * } *PFILE_NOTIFY_INFORMATION
     * }
     */
    public static final AddressLayout PFILE_NOTIFY_INFORMATION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _FILE_NOTIFY_EXTENDED_INFORMATION {
     *     DWORD NextEntryOffset;
     *     DWORD Action;
     *     LARGE_INTEGER CreationTime;
     *     LARGE_INTEGER LastModificationTime;
     *     LARGE_INTEGER LastChangeTime;
     *     LARGE_INTEGER LastAccessTime;
     *     LARGE_INTEGER AllocatedLength;
     *     LARGE_INTEGER FileSize;
     *     DWORD FileAttributes;
     *     union {
     *         DWORD ReparsePointTag;
     *         DWORD EaSize;
     *     };
     *     LARGE_INTEGER FileId;
     *     LARGE_INTEGER ParentFileId;
     *     DWORD FileNameLength;
     *     WCHAR FileName[1];
     * } *PFILE_NOTIFY_EXTENDED_INFORMATION
     * }
     */
    public static final AddressLayout PFILE_NOTIFY_EXTENDED_INFORMATION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _FILE_NOTIFY_FULL_INFORMATION {
     *     DWORD NextEntryOffset;
     *     DWORD Action;
     *     LARGE_INTEGER CreationTime;
     *     LARGE_INTEGER LastModificationTime;
     *     LARGE_INTEGER LastChangeTime;
     *     LARGE_INTEGER LastAccessTime;
     *     LARGE_INTEGER AllocatedLength;
     *     LARGE_INTEGER FileSize;
     *     DWORD FileAttributes;
     *     union {
     *         DWORD ReparsePointTag;
     *         DWORD EaSize;
     *     };
     *     LARGE_INTEGER FileId;
     *     LARGE_INTEGER ParentFileId;
     *     WORD FileNameLength;
     *     BYTE FileNameFlags;
     *     BYTE Reserved;
     *     WCHAR FileName[1];
     * } *PFILE_NOTIFY_FULL_INFORMATION
     * }
     */
    public static final AddressLayout PFILE_NOTIFY_FULL_INFORMATION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _FILE_STAT_INFORMATION {
     *     LARGE_INTEGER FileId;
     *     LARGE_INTEGER CreationTime;
     *     LARGE_INTEGER LastAccessTime;
     *     LARGE_INTEGER LastWriteTime;
     *     LARGE_INTEGER ChangeTime;
     *     LARGE_INTEGER AllocationSize;
     *     LARGE_INTEGER EndOfFile;
     *     DWORD FileAttributes;
     *     DWORD ReparseTag;
     *     DWORD NumberOfLinks;
     *     ACCESS_MASK EffectiveAccess;
     * } *PFILE_STAT_INFORMATION
     * }
     */
    public static final AddressLayout PFILE_STAT_INFORMATION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _FILE_STAT_LX_INFORMATION {
     *     LARGE_INTEGER FileId;
     *     LARGE_INTEGER CreationTime;
     *     LARGE_INTEGER LastAccessTime;
     *     LARGE_INTEGER LastWriteTime;
     *     LARGE_INTEGER ChangeTime;
     *     LARGE_INTEGER AllocationSize;
     *     LARGE_INTEGER EndOfFile;
     *     DWORD FileAttributes;
     *     DWORD ReparseTag;
     *     DWORD NumberOfLinks;
     *     ACCESS_MASK EffectiveAccess;
     *     DWORD LxFlags;
     *     DWORD LxUid;
     *     DWORD LxGid;
     *     DWORD LxMode;
     *     DWORD LxDeviceIdMajor;
     *     DWORD LxDeviceIdMinor;
     * } *PFILE_STAT_LX_INFORMATION
     * }
     */
    public static final AddressLayout PFILE_STAT_LX_INFORMATION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _FILE_STAT_BASIC_INFORMATION {
     *     LARGE_INTEGER FileId;
     *     LARGE_INTEGER CreationTime;
     *     LARGE_INTEGER LastAccessTime;
     *     LARGE_INTEGER LastWriteTime;
     *     LARGE_INTEGER ChangeTime;
     *     LARGE_INTEGER AllocationSize;
     *     LARGE_INTEGER EndOfFile;
     *     DWORD FileAttributes;
     *     DWORD ReparseTag;
     *     DWORD NumberOfLinks;
     *     DWORD DeviceType;
     *     DWORD DeviceCharacteristics;
     *     DWORD Reserved;
     *     LARGE_INTEGER VolumeSerialNumber;
     *     FILE_ID_128 FileId128;
     * } *PFILE_STAT_BASIC_INFORMATION
     * }
     */
    public static final AddressLayout PFILE_STAT_BASIC_INFORMATION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _FILE_CASE_SENSITIVE_INFORMATION {
     *     DWORD Flags;
     * } *PFILE_CASE_SENSITIVE_INFORMATION
     * }
     */
    public static final AddressLayout PFILE_CASE_SENSITIVE_INFORMATION = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef union _FILE_SEGMENT_ELEMENT {
     *     PVOID64 Buffer;
     *     ULONGLONG Alignment;
     * } *PFILE_SEGMENT_ELEMENT
     * }
     */
    public static final AddressLayout PFILE_SEGMENT_ELEMENT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _REPARSE_GUID_DATA_BUFFER {
     *     DWORD ReparseTag;
     *     WORD ReparseDataLength;
     *     WORD Reserved;
     *     GUID ReparseGuid;
     *     struct {
     *         BYTE DataBuffer[1];
     *     } GenericReparseBuffer;
     * } *PREPARSE_GUID_DATA_BUFFER
     * }
     */
    public static final AddressLayout PREPARSE_GUID_DATA_BUFFER = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SCRUB_DATA_INPUT {
     *     DWORD Size;
     *     DWORD Flags;
     *     DWORD MaximumIos;
     *     DWORD ObjectId[4];
     *     ULONGLONG StartingByteOffset;
     *     ULONGLONG ByteCount;
     *     DWORD Reserved[36];
     *     BYTE ResumeContext[1040];
     * } *PSCRUB_DATA_INPUT
     * }
     */
    public static final AddressLayout PSCRUB_DATA_INPUT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SCRUB_PARITY_EXTENT {
     *     LONGLONG Offset;
     *     ULONGLONG Length;
     * } *PSCRUB_PARITY_EXTENT
     * }
     */
    public static final AddressLayout PSCRUB_PARITY_EXTENT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SCRUB_PARITY_EXTENT_DATA {
     *     WORD Size;
     *     WORD Flags;
     *     WORD NumberOfParityExtents;
     *     WORD MaximumNumberOfParityExtents;
     *     SCRUB_PARITY_EXTENT ParityExtents[1];
     * } *PSCRUB_PARITY_EXTENT_DATA
     * }
     */
    public static final AddressLayout PSCRUB_PARITY_EXTENT_DATA = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SCRUB_DATA_OUTPUT {
     *     DWORD Size;
     *     DWORD Flags;
     *     DWORD Status;
     *     ULONGLONG ErrorFileOffset;
     *     ULONGLONG ErrorLength;
     *     ULONGLONG NumberOfBytesRepaired;
     *     ULONGLONG NumberOfBytesFailed;
     *     ULONGLONG InternalFileReference;
     *     WORD ResumeContextLength;
     *     WORD ParityExtentDataOffset;
     *     ULONGLONG NextStartingByteOffset;
     *     ULONGLONG ValidDataLength;
     *     DWORD Reserved[4];
     *     ULONGLONG NumberOfMetadataBytesProcessed;
     *     ULONGLONG NumberOfDataBytesProcessed;
     *     ULONGLONG TotalNumberOfMetadataBytesInUse;
     *     ULONGLONG TotalNumberOfDataBytesInUse;
     *     ULONGLONG DataBytesSkippedDueToNoAllocation;
     *     ULONGLONG DataBytesSkippedDueToInvalidRun;
     *     ULONGLONG DataBytesSkippedDueToIntegrityStream;
     *     ULONGLONG DataBytesSkippedDueToRegionBeingClean;
     *     ULONGLONG DataBytesSkippedDueToLockConflict;
     *     ULONGLONG DataBytesSkippedDueToNoScrubDataFlag;
     *     ULONGLONG DataBytesSkippedDueToNoScrubNonIntegrityStreamFlag;
     *     ULONGLONG DataBytesScrubbed;
     *     BYTE ResumeContext[1040];
     * } *PSCRUB_DATA_OUTPUT
     * }
     */
    public static final AddressLayout PSCRUB_DATA_OUTPUT = winapi.C_POINTER;
    private static final int SharedVirtualDisksUnsupported = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _SharedVirtualDiskSupportType.SharedVirtualDisksUnsupported = 0
     * }
     */
    public static int SharedVirtualDisksUnsupported() {
        return SharedVirtualDisksUnsupported;
    }
    private static final int SharedVirtualDisksSupported = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _SharedVirtualDiskSupportType.SharedVirtualDisksSupported = 1
     * }
     */
    public static int SharedVirtualDisksSupported() {
        return SharedVirtualDisksSupported;
    }
    private static final int SharedVirtualDiskSnapshotsSupported = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _SharedVirtualDiskSupportType.SharedVirtualDiskSnapshotsSupported = 3
     * }
     */
    public static int SharedVirtualDiskSnapshotsSupported() {
        return SharedVirtualDiskSnapshotsSupported;
    }
    private static final int SharedVirtualDiskCDPSnapshotsSupported = (int)7L;
    /**
     * {@snippet lang=c :
     * enum _SharedVirtualDiskSupportType.SharedVirtualDiskCDPSnapshotsSupported = 7
     * }
     */
    public static int SharedVirtualDiskCDPSnapshotsSupported() {
        return SharedVirtualDiskCDPSnapshotsSupported;
    }
    private static final int SharedVirtualDiskHandleStateNone = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _SharedVirtualDiskHandleState.SharedVirtualDiskHandleStateNone = 0
     * }
     */
    public static int SharedVirtualDiskHandleStateNone() {
        return SharedVirtualDiskHandleStateNone;
    }
    private static final int SharedVirtualDiskHandleStateFileShared = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _SharedVirtualDiskHandleState.SharedVirtualDiskHandleStateFileShared = 1
     * }
     */
    public static int SharedVirtualDiskHandleStateFileShared() {
        return SharedVirtualDiskHandleStateFileShared;
    }
    private static final int SharedVirtualDiskHandleStateHandleShared = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _SharedVirtualDiskHandleState.SharedVirtualDiskHandleStateHandleShared = 3
     * }
     */
    public static int SharedVirtualDiskHandleStateHandleShared() {
        return SharedVirtualDiskHandleStateHandleShared;
    }
    /**
     * {@snippet lang=c :
     * typedef struct _SHARED_VIRTUAL_DISK_SUPPORT {
     *     SharedVirtualDiskSupportType SharedVirtualDiskSupport;
     *     SharedVirtualDiskHandleState HandleState;
     * } *PSHARED_VIRTUAL_DISK_SUPPORT
     * }
     */
    public static final AddressLayout PSHARED_VIRTUAL_DISK_SUPPORT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _REARRANGE_FILE_DATA {
     *     ULONGLONG SourceStartingOffset;
     *     ULONGLONG TargetOffset;
     *     HANDLE SourceFileHandle;
     *     DWORD Length;
     *     DWORD Flags;
     * } *PREARRANGE_FILE_DATA
     * }
     */
    public static final AddressLayout PREARRANGE_FILE_DATA = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _REARRANGE_FILE_DATA32 {
     *     ULONGLONG SourceStartingOffset;
     *     ULONGLONG TargetOffset;
     *     UINT32 SourceFileHandle;
     *     DWORD Length;
     *     DWORD Flags;
     * } *PREARRANGE_FILE_DATA32
     * }
     */
    public static final AddressLayout PREARRANGE_FILE_DATA32 = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _SHUFFLE_FILE_DATA {
     *     LONGLONG StartingOffset;
     *     LONGLONG Length;
     *     DWORD Flags;
     * } *PSHUFFLE_FILE_DATA
     * }
     */
    public static final AddressLayout PSHUFFLE_FILE_DATA = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _NETWORK_APP_INSTANCE_EA {
     *     GUID AppInstanceID;
     *     DWORD CsvFlags;
     * } *PNETWORK_APP_INSTANCE_EA
     * }
     */
    public static final AddressLayout PNETWORK_APP_INSTANCE_EA = winapi.C_POINTER;

    private static class GUID_MAX_POWER_SAVINGS$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_MAX_POWER_SAVINGS").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_MAX_POWER_SAVINGS
     * }
     */
    public static GroupLayout GUID_MAX_POWER_SAVINGS$layout() {
        return GUID_MAX_POWER_SAVINGS$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_MAX_POWER_SAVINGS
     * }
     */
    public static MemorySegment GUID_MAX_POWER_SAVINGS() {
        return GUID_MAX_POWER_SAVINGS$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_MAX_POWER_SAVINGS
     * }
     */
    public static void GUID_MAX_POWER_SAVINGS(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_MAX_POWER_SAVINGS$constants.SEGMENT, 0L, GUID_MAX_POWER_SAVINGS$constants.LAYOUT.byteSize());
    }

    private static class GUID_MIN_POWER_SAVINGS$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_MIN_POWER_SAVINGS").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_MIN_POWER_SAVINGS
     * }
     */
    public static GroupLayout GUID_MIN_POWER_SAVINGS$layout() {
        return GUID_MIN_POWER_SAVINGS$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_MIN_POWER_SAVINGS
     * }
     */
    public static MemorySegment GUID_MIN_POWER_SAVINGS() {
        return GUID_MIN_POWER_SAVINGS$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_MIN_POWER_SAVINGS
     * }
     */
    public static void GUID_MIN_POWER_SAVINGS(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_MIN_POWER_SAVINGS$constants.SEGMENT, 0L, GUID_MIN_POWER_SAVINGS$constants.LAYOUT.byteSize());
    }

    private static class GUID_TYPICAL_POWER_SAVINGS$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_TYPICAL_POWER_SAVINGS").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_TYPICAL_POWER_SAVINGS
     * }
     */
    public static GroupLayout GUID_TYPICAL_POWER_SAVINGS$layout() {
        return GUID_TYPICAL_POWER_SAVINGS$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_TYPICAL_POWER_SAVINGS
     * }
     */
    public static MemorySegment GUID_TYPICAL_POWER_SAVINGS() {
        return GUID_TYPICAL_POWER_SAVINGS$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_TYPICAL_POWER_SAVINGS
     * }
     */
    public static void GUID_TYPICAL_POWER_SAVINGS(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_TYPICAL_POWER_SAVINGS$constants.SEGMENT, 0L, GUID_TYPICAL_POWER_SAVINGS$constants.LAYOUT.byteSize());
    }

    private static class NO_SUBGROUP_GUID$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("NO_SUBGROUP_GUID").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID NO_SUBGROUP_GUID
     * }
     */
    public static GroupLayout NO_SUBGROUP_GUID$layout() {
        return NO_SUBGROUP_GUID$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID NO_SUBGROUP_GUID
     * }
     */
    public static MemorySegment NO_SUBGROUP_GUID() {
        return NO_SUBGROUP_GUID$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID NO_SUBGROUP_GUID
     * }
     */
    public static void NO_SUBGROUP_GUID(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, NO_SUBGROUP_GUID$constants.SEGMENT, 0L, NO_SUBGROUP_GUID$constants.LAYOUT.byteSize());
    }

    private static class ALL_POWERSCHEMES_GUID$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("ALL_POWERSCHEMES_GUID").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID ALL_POWERSCHEMES_GUID
     * }
     */
    public static GroupLayout ALL_POWERSCHEMES_GUID$layout() {
        return ALL_POWERSCHEMES_GUID$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID ALL_POWERSCHEMES_GUID
     * }
     */
    public static MemorySegment ALL_POWERSCHEMES_GUID() {
        return ALL_POWERSCHEMES_GUID$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID ALL_POWERSCHEMES_GUID
     * }
     */
    public static void ALL_POWERSCHEMES_GUID(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, ALL_POWERSCHEMES_GUID$constants.SEGMENT, 0L, ALL_POWERSCHEMES_GUID$constants.LAYOUT.byteSize());
    }

    private static class GUID_POWERSCHEME_PERSONALITY$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_POWERSCHEME_PERSONALITY").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_POWERSCHEME_PERSONALITY
     * }
     */
    public static GroupLayout GUID_POWERSCHEME_PERSONALITY$layout() {
        return GUID_POWERSCHEME_PERSONALITY$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_POWERSCHEME_PERSONALITY
     * }
     */
    public static MemorySegment GUID_POWERSCHEME_PERSONALITY() {
        return GUID_POWERSCHEME_PERSONALITY$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_POWERSCHEME_PERSONALITY
     * }
     */
    public static void GUID_POWERSCHEME_PERSONALITY(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_POWERSCHEME_PERSONALITY$constants.SEGMENT, 0L, GUID_POWERSCHEME_PERSONALITY$constants.LAYOUT.byteSize());
    }

    private static class GUID_ACTIVE_POWERSCHEME$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_ACTIVE_POWERSCHEME").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_ACTIVE_POWERSCHEME
     * }
     */
    public static GroupLayout GUID_ACTIVE_POWERSCHEME$layout() {
        return GUID_ACTIVE_POWERSCHEME$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_ACTIVE_POWERSCHEME
     * }
     */
    public static MemorySegment GUID_ACTIVE_POWERSCHEME() {
        return GUID_ACTIVE_POWERSCHEME$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_ACTIVE_POWERSCHEME
     * }
     */
    public static void GUID_ACTIVE_POWERSCHEME(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_ACTIVE_POWERSCHEME$constants.SEGMENT, 0L, GUID_ACTIVE_POWERSCHEME$constants.LAYOUT.byteSize());
    }

    private static class GUID_POWER_MODE_BEST_EFFICIENCY$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_POWER_MODE_BEST_EFFICIENCY").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_POWER_MODE_BEST_EFFICIENCY
     * }
     */
    public static GroupLayout GUID_POWER_MODE_BEST_EFFICIENCY$layout() {
        return GUID_POWER_MODE_BEST_EFFICIENCY$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_POWER_MODE_BEST_EFFICIENCY
     * }
     */
    public static MemorySegment GUID_POWER_MODE_BEST_EFFICIENCY() {
        return GUID_POWER_MODE_BEST_EFFICIENCY$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_POWER_MODE_BEST_EFFICIENCY
     * }
     */
    public static void GUID_POWER_MODE_BEST_EFFICIENCY(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_POWER_MODE_BEST_EFFICIENCY$constants.SEGMENT, 0L, GUID_POWER_MODE_BEST_EFFICIENCY$constants.LAYOUT.byteSize());
    }

    private static class GUID_POWER_MODE_NONE$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_POWER_MODE_NONE").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_POWER_MODE_NONE
     * }
     */
    public static GroupLayout GUID_POWER_MODE_NONE$layout() {
        return GUID_POWER_MODE_NONE$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_POWER_MODE_NONE
     * }
     */
    public static MemorySegment GUID_POWER_MODE_NONE() {
        return GUID_POWER_MODE_NONE$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_POWER_MODE_NONE
     * }
     */
    public static void GUID_POWER_MODE_NONE(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_POWER_MODE_NONE$constants.SEGMENT, 0L, GUID_POWER_MODE_NONE$constants.LAYOUT.byteSize());
    }

    private static class GUID_POWER_MODE_PERFORMANCE$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_POWER_MODE_PERFORMANCE").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_POWER_MODE_PERFORMANCE
     * }
     */
    public static GroupLayout GUID_POWER_MODE_PERFORMANCE$layout() {
        return GUID_POWER_MODE_PERFORMANCE$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_POWER_MODE_PERFORMANCE
     * }
     */
    public static MemorySegment GUID_POWER_MODE_PERFORMANCE() {
        return GUID_POWER_MODE_PERFORMANCE$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_POWER_MODE_PERFORMANCE
     * }
     */
    public static void GUID_POWER_MODE_PERFORMANCE(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_POWER_MODE_PERFORMANCE$constants.SEGMENT, 0L, GUID_POWER_MODE_PERFORMANCE$constants.LAYOUT.byteSize());
    }

    private static class GUID_POWER_MODE_BEST_PERFORMANCE$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_POWER_MODE_BEST_PERFORMANCE").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_POWER_MODE_BEST_PERFORMANCE
     * }
     */
    public static GroupLayout GUID_POWER_MODE_BEST_PERFORMANCE$layout() {
        return GUID_POWER_MODE_BEST_PERFORMANCE$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_POWER_MODE_BEST_PERFORMANCE
     * }
     */
    public static MemorySegment GUID_POWER_MODE_BEST_PERFORMANCE() {
        return GUID_POWER_MODE_BEST_PERFORMANCE$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_POWER_MODE_BEST_PERFORMANCE
     * }
     */
    public static void GUID_POWER_MODE_BEST_PERFORMANCE(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_POWER_MODE_BEST_PERFORMANCE$constants.SEGMENT, 0L, GUID_POWER_MODE_BEST_PERFORMANCE$constants.LAYOUT.byteSize());
    }

    private static class GUID_IDLE_RESILIENCY_SUBGROUP$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_IDLE_RESILIENCY_SUBGROUP").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_IDLE_RESILIENCY_SUBGROUP
     * }
     */
    public static GroupLayout GUID_IDLE_RESILIENCY_SUBGROUP$layout() {
        return GUID_IDLE_RESILIENCY_SUBGROUP$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_IDLE_RESILIENCY_SUBGROUP
     * }
     */
    public static MemorySegment GUID_IDLE_RESILIENCY_SUBGROUP() {
        return GUID_IDLE_RESILIENCY_SUBGROUP$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_IDLE_RESILIENCY_SUBGROUP
     * }
     */
    public static void GUID_IDLE_RESILIENCY_SUBGROUP(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_IDLE_RESILIENCY_SUBGROUP$constants.SEGMENT, 0L, GUID_IDLE_RESILIENCY_SUBGROUP$constants.LAYOUT.byteSize());
    }

    private static class GUID_IDLE_RESILIENCY_PERIOD$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_IDLE_RESILIENCY_PERIOD").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_IDLE_RESILIENCY_PERIOD
     * }
     */
    public static GroupLayout GUID_IDLE_RESILIENCY_PERIOD$layout() {
        return GUID_IDLE_RESILIENCY_PERIOD$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_IDLE_RESILIENCY_PERIOD
     * }
     */
    public static MemorySegment GUID_IDLE_RESILIENCY_PERIOD() {
        return GUID_IDLE_RESILIENCY_PERIOD$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_IDLE_RESILIENCY_PERIOD
     * }
     */
    public static void GUID_IDLE_RESILIENCY_PERIOD(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_IDLE_RESILIENCY_PERIOD$constants.SEGMENT, 0L, GUID_IDLE_RESILIENCY_PERIOD$constants.LAYOUT.byteSize());
    }

    private static class GUID_DEEP_SLEEP_ENABLED$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_DEEP_SLEEP_ENABLED").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_DEEP_SLEEP_ENABLED
     * }
     */
    public static GroupLayout GUID_DEEP_SLEEP_ENABLED$layout() {
        return GUID_DEEP_SLEEP_ENABLED$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_DEEP_SLEEP_ENABLED
     * }
     */
    public static MemorySegment GUID_DEEP_SLEEP_ENABLED() {
        return GUID_DEEP_SLEEP_ENABLED$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_DEEP_SLEEP_ENABLED
     * }
     */
    public static void GUID_DEEP_SLEEP_ENABLED(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_DEEP_SLEEP_ENABLED$constants.SEGMENT, 0L, GUID_DEEP_SLEEP_ENABLED$constants.LAYOUT.byteSize());
    }

    private static class GUID_DEEP_SLEEP_PLATFORM_STATE$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_DEEP_SLEEP_PLATFORM_STATE").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_DEEP_SLEEP_PLATFORM_STATE
     * }
     */
    public static GroupLayout GUID_DEEP_SLEEP_PLATFORM_STATE$layout() {
        return GUID_DEEP_SLEEP_PLATFORM_STATE$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_DEEP_SLEEP_PLATFORM_STATE
     * }
     */
    public static MemorySegment GUID_DEEP_SLEEP_PLATFORM_STATE() {
        return GUID_DEEP_SLEEP_PLATFORM_STATE$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_DEEP_SLEEP_PLATFORM_STATE
     * }
     */
    public static void GUID_DEEP_SLEEP_PLATFORM_STATE(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_DEEP_SLEEP_PLATFORM_STATE$constants.SEGMENT, 0L, GUID_DEEP_SLEEP_PLATFORM_STATE$constants.LAYOUT.byteSize());
    }

    private static class GUID_DISK_COALESCING_POWERDOWN_TIMEOUT$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_DISK_COALESCING_POWERDOWN_TIMEOUT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_DISK_COALESCING_POWERDOWN_TIMEOUT
     * }
     */
    public static GroupLayout GUID_DISK_COALESCING_POWERDOWN_TIMEOUT$layout() {
        return GUID_DISK_COALESCING_POWERDOWN_TIMEOUT$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_DISK_COALESCING_POWERDOWN_TIMEOUT
     * }
     */
    public static MemorySegment GUID_DISK_COALESCING_POWERDOWN_TIMEOUT() {
        return GUID_DISK_COALESCING_POWERDOWN_TIMEOUT$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_DISK_COALESCING_POWERDOWN_TIMEOUT
     * }
     */
    public static void GUID_DISK_COALESCING_POWERDOWN_TIMEOUT(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_DISK_COALESCING_POWERDOWN_TIMEOUT$constants.SEGMENT, 0L, GUID_DISK_COALESCING_POWERDOWN_TIMEOUT$constants.LAYOUT.byteSize());
    }

    private static class GUID_EXECUTION_REQUIRED_REQUEST_TIMEOUT$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_EXECUTION_REQUIRED_REQUEST_TIMEOUT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_EXECUTION_REQUIRED_REQUEST_TIMEOUT
     * }
     */
    public static GroupLayout GUID_EXECUTION_REQUIRED_REQUEST_TIMEOUT$layout() {
        return GUID_EXECUTION_REQUIRED_REQUEST_TIMEOUT$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_EXECUTION_REQUIRED_REQUEST_TIMEOUT
     * }
     */
    public static MemorySegment GUID_EXECUTION_REQUIRED_REQUEST_TIMEOUT() {
        return GUID_EXECUTION_REQUIRED_REQUEST_TIMEOUT$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_EXECUTION_REQUIRED_REQUEST_TIMEOUT
     * }
     */
    public static void GUID_EXECUTION_REQUIRED_REQUEST_TIMEOUT(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_EXECUTION_REQUIRED_REQUEST_TIMEOUT$constants.SEGMENT, 0L, GUID_EXECUTION_REQUIRED_REQUEST_TIMEOUT$constants.LAYOUT.byteSize());
    }

    private static class GUID_VIDEO_SUBGROUP$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_VIDEO_SUBGROUP").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_VIDEO_SUBGROUP
     * }
     */
    public static GroupLayout GUID_VIDEO_SUBGROUP$layout() {
        return GUID_VIDEO_SUBGROUP$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_VIDEO_SUBGROUP
     * }
     */
    public static MemorySegment GUID_VIDEO_SUBGROUP() {
        return GUID_VIDEO_SUBGROUP$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_VIDEO_SUBGROUP
     * }
     */
    public static void GUID_VIDEO_SUBGROUP(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_VIDEO_SUBGROUP$constants.SEGMENT, 0L, GUID_VIDEO_SUBGROUP$constants.LAYOUT.byteSize());
    }

    private static class GUID_VIDEO_POWERDOWN_TIMEOUT$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_VIDEO_POWERDOWN_TIMEOUT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_VIDEO_POWERDOWN_TIMEOUT
     * }
     */
    public static GroupLayout GUID_VIDEO_POWERDOWN_TIMEOUT$layout() {
        return GUID_VIDEO_POWERDOWN_TIMEOUT$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_VIDEO_POWERDOWN_TIMEOUT
     * }
     */
    public static MemorySegment GUID_VIDEO_POWERDOWN_TIMEOUT() {
        return GUID_VIDEO_POWERDOWN_TIMEOUT$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_VIDEO_POWERDOWN_TIMEOUT
     * }
     */
    public static void GUID_VIDEO_POWERDOWN_TIMEOUT(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_VIDEO_POWERDOWN_TIMEOUT$constants.SEGMENT, 0L, GUID_VIDEO_POWERDOWN_TIMEOUT$constants.LAYOUT.byteSize());
    }

    private static class GUID_VIDEO_ANNOYANCE_TIMEOUT$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_VIDEO_ANNOYANCE_TIMEOUT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_VIDEO_ANNOYANCE_TIMEOUT
     * }
     */
    public static GroupLayout GUID_VIDEO_ANNOYANCE_TIMEOUT$layout() {
        return GUID_VIDEO_ANNOYANCE_TIMEOUT$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_VIDEO_ANNOYANCE_TIMEOUT
     * }
     */
    public static MemorySegment GUID_VIDEO_ANNOYANCE_TIMEOUT() {
        return GUID_VIDEO_ANNOYANCE_TIMEOUT$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_VIDEO_ANNOYANCE_TIMEOUT
     * }
     */
    public static void GUID_VIDEO_ANNOYANCE_TIMEOUT(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_VIDEO_ANNOYANCE_TIMEOUT$constants.SEGMENT, 0L, GUID_VIDEO_ANNOYANCE_TIMEOUT$constants.LAYOUT.byteSize());
    }

    private static class GUID_VIDEO_ADAPTIVE_PERCENT_INCREASE$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_VIDEO_ADAPTIVE_PERCENT_INCREASE").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_VIDEO_ADAPTIVE_PERCENT_INCREASE
     * }
     */
    public static GroupLayout GUID_VIDEO_ADAPTIVE_PERCENT_INCREASE$layout() {
        return GUID_VIDEO_ADAPTIVE_PERCENT_INCREASE$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_VIDEO_ADAPTIVE_PERCENT_INCREASE
     * }
     */
    public static MemorySegment GUID_VIDEO_ADAPTIVE_PERCENT_INCREASE() {
        return GUID_VIDEO_ADAPTIVE_PERCENT_INCREASE$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_VIDEO_ADAPTIVE_PERCENT_INCREASE
     * }
     */
    public static void GUID_VIDEO_ADAPTIVE_PERCENT_INCREASE(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_VIDEO_ADAPTIVE_PERCENT_INCREASE$constants.SEGMENT, 0L, GUID_VIDEO_ADAPTIVE_PERCENT_INCREASE$constants.LAYOUT.byteSize());
    }

    private static class GUID_VIDEO_DIM_TIMEOUT$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_VIDEO_DIM_TIMEOUT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_VIDEO_DIM_TIMEOUT
     * }
     */
    public static GroupLayout GUID_VIDEO_DIM_TIMEOUT$layout() {
        return GUID_VIDEO_DIM_TIMEOUT$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_VIDEO_DIM_TIMEOUT
     * }
     */
    public static MemorySegment GUID_VIDEO_DIM_TIMEOUT() {
        return GUID_VIDEO_DIM_TIMEOUT$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_VIDEO_DIM_TIMEOUT
     * }
     */
    public static void GUID_VIDEO_DIM_TIMEOUT(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_VIDEO_DIM_TIMEOUT$constants.SEGMENT, 0L, GUID_VIDEO_DIM_TIMEOUT$constants.LAYOUT.byteSize());
    }

    private static class GUID_VIDEO_ADAPTIVE_POWERDOWN$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_VIDEO_ADAPTIVE_POWERDOWN").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_VIDEO_ADAPTIVE_POWERDOWN
     * }
     */
    public static GroupLayout GUID_VIDEO_ADAPTIVE_POWERDOWN$layout() {
        return GUID_VIDEO_ADAPTIVE_POWERDOWN$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_VIDEO_ADAPTIVE_POWERDOWN
     * }
     */
    public static MemorySegment GUID_VIDEO_ADAPTIVE_POWERDOWN() {
        return GUID_VIDEO_ADAPTIVE_POWERDOWN$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_VIDEO_ADAPTIVE_POWERDOWN
     * }
     */
    public static void GUID_VIDEO_ADAPTIVE_POWERDOWN(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_VIDEO_ADAPTIVE_POWERDOWN$constants.SEGMENT, 0L, GUID_VIDEO_ADAPTIVE_POWERDOWN$constants.LAYOUT.byteSize());
    }

    private static class GUID_MONITOR_POWER_ON$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_MONITOR_POWER_ON").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_MONITOR_POWER_ON
     * }
     */
    public static GroupLayout GUID_MONITOR_POWER_ON$layout() {
        return GUID_MONITOR_POWER_ON$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_MONITOR_POWER_ON
     * }
     */
    public static MemorySegment GUID_MONITOR_POWER_ON() {
        return GUID_MONITOR_POWER_ON$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_MONITOR_POWER_ON
     * }
     */
    public static void GUID_MONITOR_POWER_ON(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_MONITOR_POWER_ON$constants.SEGMENT, 0L, GUID_MONITOR_POWER_ON$constants.LAYOUT.byteSize());
    }

    private static class GUID_DEVICE_POWER_POLICY_VIDEO_BRIGHTNESS$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_DEVICE_POWER_POLICY_VIDEO_BRIGHTNESS").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_DEVICE_POWER_POLICY_VIDEO_BRIGHTNESS
     * }
     */
    public static GroupLayout GUID_DEVICE_POWER_POLICY_VIDEO_BRIGHTNESS$layout() {
        return GUID_DEVICE_POWER_POLICY_VIDEO_BRIGHTNESS$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_DEVICE_POWER_POLICY_VIDEO_BRIGHTNESS
     * }
     */
    public static MemorySegment GUID_DEVICE_POWER_POLICY_VIDEO_BRIGHTNESS() {
        return GUID_DEVICE_POWER_POLICY_VIDEO_BRIGHTNESS$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_DEVICE_POWER_POLICY_VIDEO_BRIGHTNESS
     * }
     */
    public static void GUID_DEVICE_POWER_POLICY_VIDEO_BRIGHTNESS(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_DEVICE_POWER_POLICY_VIDEO_BRIGHTNESS$constants.SEGMENT, 0L, GUID_DEVICE_POWER_POLICY_VIDEO_BRIGHTNESS$constants.LAYOUT.byteSize());
    }

    private static class GUID_DEVICE_POWER_POLICY_VIDEO_DIM_BRIGHTNESS$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_DEVICE_POWER_POLICY_VIDEO_DIM_BRIGHTNESS").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_DEVICE_POWER_POLICY_VIDEO_DIM_BRIGHTNESS
     * }
     */
    public static GroupLayout GUID_DEVICE_POWER_POLICY_VIDEO_DIM_BRIGHTNESS$layout() {
        return GUID_DEVICE_POWER_POLICY_VIDEO_DIM_BRIGHTNESS$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_DEVICE_POWER_POLICY_VIDEO_DIM_BRIGHTNESS
     * }
     */
    public static MemorySegment GUID_DEVICE_POWER_POLICY_VIDEO_DIM_BRIGHTNESS() {
        return GUID_DEVICE_POWER_POLICY_VIDEO_DIM_BRIGHTNESS$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_DEVICE_POWER_POLICY_VIDEO_DIM_BRIGHTNESS
     * }
     */
    public static void GUID_DEVICE_POWER_POLICY_VIDEO_DIM_BRIGHTNESS(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_DEVICE_POWER_POLICY_VIDEO_DIM_BRIGHTNESS$constants.SEGMENT, 0L, GUID_DEVICE_POWER_POLICY_VIDEO_DIM_BRIGHTNESS$constants.LAYOUT.byteSize());
    }

    private static class GUID_VIDEO_CURRENT_MONITOR_BRIGHTNESS$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_VIDEO_CURRENT_MONITOR_BRIGHTNESS").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_VIDEO_CURRENT_MONITOR_BRIGHTNESS
     * }
     */
    public static GroupLayout GUID_VIDEO_CURRENT_MONITOR_BRIGHTNESS$layout() {
        return GUID_VIDEO_CURRENT_MONITOR_BRIGHTNESS$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_VIDEO_CURRENT_MONITOR_BRIGHTNESS
     * }
     */
    public static MemorySegment GUID_VIDEO_CURRENT_MONITOR_BRIGHTNESS() {
        return GUID_VIDEO_CURRENT_MONITOR_BRIGHTNESS$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_VIDEO_CURRENT_MONITOR_BRIGHTNESS
     * }
     */
    public static void GUID_VIDEO_CURRENT_MONITOR_BRIGHTNESS(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_VIDEO_CURRENT_MONITOR_BRIGHTNESS$constants.SEGMENT, 0L, GUID_VIDEO_CURRENT_MONITOR_BRIGHTNESS$constants.LAYOUT.byteSize());
    }

    private static class GUID_VIDEO_ADAPTIVE_DISPLAY_BRIGHTNESS$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_VIDEO_ADAPTIVE_DISPLAY_BRIGHTNESS").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_VIDEO_ADAPTIVE_DISPLAY_BRIGHTNESS
     * }
     */
    public static GroupLayout GUID_VIDEO_ADAPTIVE_DISPLAY_BRIGHTNESS$layout() {
        return GUID_VIDEO_ADAPTIVE_DISPLAY_BRIGHTNESS$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_VIDEO_ADAPTIVE_DISPLAY_BRIGHTNESS
     * }
     */
    public static MemorySegment GUID_VIDEO_ADAPTIVE_DISPLAY_BRIGHTNESS() {
        return GUID_VIDEO_ADAPTIVE_DISPLAY_BRIGHTNESS$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_VIDEO_ADAPTIVE_DISPLAY_BRIGHTNESS
     * }
     */
    public static void GUID_VIDEO_ADAPTIVE_DISPLAY_BRIGHTNESS(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_VIDEO_ADAPTIVE_DISPLAY_BRIGHTNESS$constants.SEGMENT, 0L, GUID_VIDEO_ADAPTIVE_DISPLAY_BRIGHTNESS$constants.LAYOUT.byteSize());
    }

    private static class GUID_CONSOLE_DISPLAY_STATE$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_CONSOLE_DISPLAY_STATE").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_CONSOLE_DISPLAY_STATE
     * }
     */
    public static GroupLayout GUID_CONSOLE_DISPLAY_STATE$layout() {
        return GUID_CONSOLE_DISPLAY_STATE$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_CONSOLE_DISPLAY_STATE
     * }
     */
    public static MemorySegment GUID_CONSOLE_DISPLAY_STATE() {
        return GUID_CONSOLE_DISPLAY_STATE$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_CONSOLE_DISPLAY_STATE
     * }
     */
    public static void GUID_CONSOLE_DISPLAY_STATE(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_CONSOLE_DISPLAY_STATE$constants.SEGMENT, 0L, GUID_CONSOLE_DISPLAY_STATE$constants.LAYOUT.byteSize());
    }

    private static class GUID_ALLOW_DISPLAY_REQUIRED$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_ALLOW_DISPLAY_REQUIRED").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_ALLOW_DISPLAY_REQUIRED
     * }
     */
    public static GroupLayout GUID_ALLOW_DISPLAY_REQUIRED$layout() {
        return GUID_ALLOW_DISPLAY_REQUIRED$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_ALLOW_DISPLAY_REQUIRED
     * }
     */
    public static MemorySegment GUID_ALLOW_DISPLAY_REQUIRED() {
        return GUID_ALLOW_DISPLAY_REQUIRED$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_ALLOW_DISPLAY_REQUIRED
     * }
     */
    public static void GUID_ALLOW_DISPLAY_REQUIRED(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_ALLOW_DISPLAY_REQUIRED$constants.SEGMENT, 0L, GUID_ALLOW_DISPLAY_REQUIRED$constants.LAYOUT.byteSize());
    }

    private static class GUID_VIDEO_CONSOLE_LOCK_TIMEOUT$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_VIDEO_CONSOLE_LOCK_TIMEOUT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_VIDEO_CONSOLE_LOCK_TIMEOUT
     * }
     */
    public static GroupLayout GUID_VIDEO_CONSOLE_LOCK_TIMEOUT$layout() {
        return GUID_VIDEO_CONSOLE_LOCK_TIMEOUT$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_VIDEO_CONSOLE_LOCK_TIMEOUT
     * }
     */
    public static MemorySegment GUID_VIDEO_CONSOLE_LOCK_TIMEOUT() {
        return GUID_VIDEO_CONSOLE_LOCK_TIMEOUT$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_VIDEO_CONSOLE_LOCK_TIMEOUT
     * }
     */
    public static void GUID_VIDEO_CONSOLE_LOCK_TIMEOUT(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_VIDEO_CONSOLE_LOCK_TIMEOUT$constants.SEGMENT, 0L, GUID_VIDEO_CONSOLE_LOCK_TIMEOUT$constants.LAYOUT.byteSize());
    }

    private static class GUID_ADVANCED_COLOR_QUALITY_BIAS$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_ADVANCED_COLOR_QUALITY_BIAS").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_ADVANCED_COLOR_QUALITY_BIAS
     * }
     */
    public static GroupLayout GUID_ADVANCED_COLOR_QUALITY_BIAS$layout() {
        return GUID_ADVANCED_COLOR_QUALITY_BIAS$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_ADVANCED_COLOR_QUALITY_BIAS
     * }
     */
    public static MemorySegment GUID_ADVANCED_COLOR_QUALITY_BIAS() {
        return GUID_ADVANCED_COLOR_QUALITY_BIAS$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_ADVANCED_COLOR_QUALITY_BIAS
     * }
     */
    public static void GUID_ADVANCED_COLOR_QUALITY_BIAS(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_ADVANCED_COLOR_QUALITY_BIAS$constants.SEGMENT, 0L, GUID_ADVANCED_COLOR_QUALITY_BIAS$constants.LAYOUT.byteSize());
    }

    private static class GUID_ADAPTIVE_POWER_BEHAVIOR_SUBGROUP$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_ADAPTIVE_POWER_BEHAVIOR_SUBGROUP").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_ADAPTIVE_POWER_BEHAVIOR_SUBGROUP
     * }
     */
    public static GroupLayout GUID_ADAPTIVE_POWER_BEHAVIOR_SUBGROUP$layout() {
        return GUID_ADAPTIVE_POWER_BEHAVIOR_SUBGROUP$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_ADAPTIVE_POWER_BEHAVIOR_SUBGROUP
     * }
     */
    public static MemorySegment GUID_ADAPTIVE_POWER_BEHAVIOR_SUBGROUP() {
        return GUID_ADAPTIVE_POWER_BEHAVIOR_SUBGROUP$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_ADAPTIVE_POWER_BEHAVIOR_SUBGROUP
     * }
     */
    public static void GUID_ADAPTIVE_POWER_BEHAVIOR_SUBGROUP(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_ADAPTIVE_POWER_BEHAVIOR_SUBGROUP$constants.SEGMENT, 0L, GUID_ADAPTIVE_POWER_BEHAVIOR_SUBGROUP$constants.LAYOUT.byteSize());
    }

    private static class GUID_NON_ADAPTIVE_INPUT_TIMEOUT$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_NON_ADAPTIVE_INPUT_TIMEOUT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_NON_ADAPTIVE_INPUT_TIMEOUT
     * }
     */
    public static GroupLayout GUID_NON_ADAPTIVE_INPUT_TIMEOUT$layout() {
        return GUID_NON_ADAPTIVE_INPUT_TIMEOUT$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_NON_ADAPTIVE_INPUT_TIMEOUT
     * }
     */
    public static MemorySegment GUID_NON_ADAPTIVE_INPUT_TIMEOUT() {
        return GUID_NON_ADAPTIVE_INPUT_TIMEOUT$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_NON_ADAPTIVE_INPUT_TIMEOUT
     * }
     */
    public static void GUID_NON_ADAPTIVE_INPUT_TIMEOUT(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_NON_ADAPTIVE_INPUT_TIMEOUT$constants.SEGMENT, 0L, GUID_NON_ADAPTIVE_INPUT_TIMEOUT$constants.LAYOUT.byteSize());
    }

    private static class GUID_ADAPTIVE_INPUT_CONTROLLER_STATE$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_ADAPTIVE_INPUT_CONTROLLER_STATE").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_ADAPTIVE_INPUT_CONTROLLER_STATE
     * }
     */
    public static GroupLayout GUID_ADAPTIVE_INPUT_CONTROLLER_STATE$layout() {
        return GUID_ADAPTIVE_INPUT_CONTROLLER_STATE$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_ADAPTIVE_INPUT_CONTROLLER_STATE
     * }
     */
    public static MemorySegment GUID_ADAPTIVE_INPUT_CONTROLLER_STATE() {
        return GUID_ADAPTIVE_INPUT_CONTROLLER_STATE$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_ADAPTIVE_INPUT_CONTROLLER_STATE
     * }
     */
    public static void GUID_ADAPTIVE_INPUT_CONTROLLER_STATE(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_ADAPTIVE_INPUT_CONTROLLER_STATE$constants.SEGMENT, 0L, GUID_ADAPTIVE_INPUT_CONTROLLER_STATE$constants.LAYOUT.byteSize());
    }

    private static class GUID_DISK_SUBGROUP$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_DISK_SUBGROUP").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_DISK_SUBGROUP
     * }
     */
    public static GroupLayout GUID_DISK_SUBGROUP$layout() {
        return GUID_DISK_SUBGROUP$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_DISK_SUBGROUP
     * }
     */
    public static MemorySegment GUID_DISK_SUBGROUP() {
        return GUID_DISK_SUBGROUP$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_DISK_SUBGROUP
     * }
     */
    public static void GUID_DISK_SUBGROUP(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_DISK_SUBGROUP$constants.SEGMENT, 0L, GUID_DISK_SUBGROUP$constants.LAYOUT.byteSize());
    }

    private static class GUID_DISK_MAX_POWER$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_DISK_MAX_POWER").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_DISK_MAX_POWER
     * }
     */
    public static GroupLayout GUID_DISK_MAX_POWER$layout() {
        return GUID_DISK_MAX_POWER$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_DISK_MAX_POWER
     * }
     */
    public static MemorySegment GUID_DISK_MAX_POWER() {
        return GUID_DISK_MAX_POWER$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_DISK_MAX_POWER
     * }
     */
    public static void GUID_DISK_MAX_POWER(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_DISK_MAX_POWER$constants.SEGMENT, 0L, GUID_DISK_MAX_POWER$constants.LAYOUT.byteSize());
    }

    private static class GUID_DISK_POWERDOWN_TIMEOUT$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_DISK_POWERDOWN_TIMEOUT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_DISK_POWERDOWN_TIMEOUT
     * }
     */
    public static GroupLayout GUID_DISK_POWERDOWN_TIMEOUT$layout() {
        return GUID_DISK_POWERDOWN_TIMEOUT$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_DISK_POWERDOWN_TIMEOUT
     * }
     */
    public static MemorySegment GUID_DISK_POWERDOWN_TIMEOUT() {
        return GUID_DISK_POWERDOWN_TIMEOUT$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_DISK_POWERDOWN_TIMEOUT
     * }
     */
    public static void GUID_DISK_POWERDOWN_TIMEOUT(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_DISK_POWERDOWN_TIMEOUT$constants.SEGMENT, 0L, GUID_DISK_POWERDOWN_TIMEOUT$constants.LAYOUT.byteSize());
    }

    private static class GUID_DISK_IDLE_TIMEOUT$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_DISK_IDLE_TIMEOUT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_DISK_IDLE_TIMEOUT
     * }
     */
    public static GroupLayout GUID_DISK_IDLE_TIMEOUT$layout() {
        return GUID_DISK_IDLE_TIMEOUT$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_DISK_IDLE_TIMEOUT
     * }
     */
    public static MemorySegment GUID_DISK_IDLE_TIMEOUT() {
        return GUID_DISK_IDLE_TIMEOUT$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_DISK_IDLE_TIMEOUT
     * }
     */
    public static void GUID_DISK_IDLE_TIMEOUT(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_DISK_IDLE_TIMEOUT$constants.SEGMENT, 0L, GUID_DISK_IDLE_TIMEOUT$constants.LAYOUT.byteSize());
    }

    private static class GUID_DISK_BURST_IGNORE_THRESHOLD$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_DISK_BURST_IGNORE_THRESHOLD").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_DISK_BURST_IGNORE_THRESHOLD
     * }
     */
    public static GroupLayout GUID_DISK_BURST_IGNORE_THRESHOLD$layout() {
        return GUID_DISK_BURST_IGNORE_THRESHOLD$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_DISK_BURST_IGNORE_THRESHOLD
     * }
     */
    public static MemorySegment GUID_DISK_BURST_IGNORE_THRESHOLD() {
        return GUID_DISK_BURST_IGNORE_THRESHOLD$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_DISK_BURST_IGNORE_THRESHOLD
     * }
     */
    public static void GUID_DISK_BURST_IGNORE_THRESHOLD(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_DISK_BURST_IGNORE_THRESHOLD$constants.SEGMENT, 0L, GUID_DISK_BURST_IGNORE_THRESHOLD$constants.LAYOUT.byteSize());
    }

    private static class GUID_DISK_ADAPTIVE_POWERDOWN$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_DISK_ADAPTIVE_POWERDOWN").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_DISK_ADAPTIVE_POWERDOWN
     * }
     */
    public static GroupLayout GUID_DISK_ADAPTIVE_POWERDOWN$layout() {
        return GUID_DISK_ADAPTIVE_POWERDOWN$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_DISK_ADAPTIVE_POWERDOWN
     * }
     */
    public static MemorySegment GUID_DISK_ADAPTIVE_POWERDOWN() {
        return GUID_DISK_ADAPTIVE_POWERDOWN$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_DISK_ADAPTIVE_POWERDOWN
     * }
     */
    public static void GUID_DISK_ADAPTIVE_POWERDOWN(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_DISK_ADAPTIVE_POWERDOWN$constants.SEGMENT, 0L, GUID_DISK_ADAPTIVE_POWERDOWN$constants.LAYOUT.byteSize());
    }

    private static class GUID_DISK_NVME_NOPPME$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_DISK_NVME_NOPPME").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_DISK_NVME_NOPPME
     * }
     */
    public static GroupLayout GUID_DISK_NVME_NOPPME$layout() {
        return GUID_DISK_NVME_NOPPME$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_DISK_NVME_NOPPME
     * }
     */
    public static MemorySegment GUID_DISK_NVME_NOPPME() {
        return GUID_DISK_NVME_NOPPME$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_DISK_NVME_NOPPME
     * }
     */
    public static void GUID_DISK_NVME_NOPPME(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_DISK_NVME_NOPPME$constants.SEGMENT, 0L, GUID_DISK_NVME_NOPPME$constants.LAYOUT.byteSize());
    }

    private static class GUID_SLEEP_SUBGROUP$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_SLEEP_SUBGROUP").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_SLEEP_SUBGROUP
     * }
     */
    public static GroupLayout GUID_SLEEP_SUBGROUP$layout() {
        return GUID_SLEEP_SUBGROUP$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_SLEEP_SUBGROUP
     * }
     */
    public static MemorySegment GUID_SLEEP_SUBGROUP() {
        return GUID_SLEEP_SUBGROUP$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_SLEEP_SUBGROUP
     * }
     */
    public static void GUID_SLEEP_SUBGROUP(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_SLEEP_SUBGROUP$constants.SEGMENT, 0L, GUID_SLEEP_SUBGROUP$constants.LAYOUT.byteSize());
    }

    private static class GUID_SLEEP_IDLE_THRESHOLD$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_SLEEP_IDLE_THRESHOLD").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_SLEEP_IDLE_THRESHOLD
     * }
     */
    public static GroupLayout GUID_SLEEP_IDLE_THRESHOLD$layout() {
        return GUID_SLEEP_IDLE_THRESHOLD$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_SLEEP_IDLE_THRESHOLD
     * }
     */
    public static MemorySegment GUID_SLEEP_IDLE_THRESHOLD() {
        return GUID_SLEEP_IDLE_THRESHOLD$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_SLEEP_IDLE_THRESHOLD
     * }
     */
    public static void GUID_SLEEP_IDLE_THRESHOLD(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_SLEEP_IDLE_THRESHOLD$constants.SEGMENT, 0L, GUID_SLEEP_IDLE_THRESHOLD$constants.LAYOUT.byteSize());
    }

    private static class GUID_STANDBY_TIMEOUT$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_STANDBY_TIMEOUT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_STANDBY_TIMEOUT
     * }
     */
    public static GroupLayout GUID_STANDBY_TIMEOUT$layout() {
        return GUID_STANDBY_TIMEOUT$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_STANDBY_TIMEOUT
     * }
     */
    public static MemorySegment GUID_STANDBY_TIMEOUT() {
        return GUID_STANDBY_TIMEOUT$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_STANDBY_TIMEOUT
     * }
     */
    public static void GUID_STANDBY_TIMEOUT(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_STANDBY_TIMEOUT$constants.SEGMENT, 0L, GUID_STANDBY_TIMEOUT$constants.LAYOUT.byteSize());
    }

    private static class GUID_UNATTEND_SLEEP_TIMEOUT$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_UNATTEND_SLEEP_TIMEOUT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_UNATTEND_SLEEP_TIMEOUT
     * }
     */
    public static GroupLayout GUID_UNATTEND_SLEEP_TIMEOUT$layout() {
        return GUID_UNATTEND_SLEEP_TIMEOUT$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_UNATTEND_SLEEP_TIMEOUT
     * }
     */
    public static MemorySegment GUID_UNATTEND_SLEEP_TIMEOUT() {
        return GUID_UNATTEND_SLEEP_TIMEOUT$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_UNATTEND_SLEEP_TIMEOUT
     * }
     */
    public static void GUID_UNATTEND_SLEEP_TIMEOUT(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_UNATTEND_SLEEP_TIMEOUT$constants.SEGMENT, 0L, GUID_UNATTEND_SLEEP_TIMEOUT$constants.LAYOUT.byteSize());
    }

    private static class GUID_HIBERNATE_TIMEOUT$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_HIBERNATE_TIMEOUT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_HIBERNATE_TIMEOUT
     * }
     */
    public static GroupLayout GUID_HIBERNATE_TIMEOUT$layout() {
        return GUID_HIBERNATE_TIMEOUT$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_HIBERNATE_TIMEOUT
     * }
     */
    public static MemorySegment GUID_HIBERNATE_TIMEOUT() {
        return GUID_HIBERNATE_TIMEOUT$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_HIBERNATE_TIMEOUT
     * }
     */
    public static void GUID_HIBERNATE_TIMEOUT(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_HIBERNATE_TIMEOUT$constants.SEGMENT, 0L, GUID_HIBERNATE_TIMEOUT$constants.LAYOUT.byteSize());
    }

    private static class GUID_HIBERNATE_FASTS4_POLICY$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_HIBERNATE_FASTS4_POLICY").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_HIBERNATE_FASTS4_POLICY
     * }
     */
    public static GroupLayout GUID_HIBERNATE_FASTS4_POLICY$layout() {
        return GUID_HIBERNATE_FASTS4_POLICY$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_HIBERNATE_FASTS4_POLICY
     * }
     */
    public static MemorySegment GUID_HIBERNATE_FASTS4_POLICY() {
        return GUID_HIBERNATE_FASTS4_POLICY$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_HIBERNATE_FASTS4_POLICY
     * }
     */
    public static void GUID_HIBERNATE_FASTS4_POLICY(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_HIBERNATE_FASTS4_POLICY$constants.SEGMENT, 0L, GUID_HIBERNATE_FASTS4_POLICY$constants.LAYOUT.byteSize());
    }

    private static class GUID_CRITICAL_POWER_TRANSITION$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_CRITICAL_POWER_TRANSITION").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_CRITICAL_POWER_TRANSITION
     * }
     */
    public static GroupLayout GUID_CRITICAL_POWER_TRANSITION$layout() {
        return GUID_CRITICAL_POWER_TRANSITION$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_CRITICAL_POWER_TRANSITION
     * }
     */
    public static MemorySegment GUID_CRITICAL_POWER_TRANSITION() {
        return GUID_CRITICAL_POWER_TRANSITION$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_CRITICAL_POWER_TRANSITION
     * }
     */
    public static void GUID_CRITICAL_POWER_TRANSITION(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_CRITICAL_POWER_TRANSITION$constants.SEGMENT, 0L, GUID_CRITICAL_POWER_TRANSITION$constants.LAYOUT.byteSize());
    }

    private static class GUID_SYSTEM_AWAYMODE$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_SYSTEM_AWAYMODE").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_SYSTEM_AWAYMODE
     * }
     */
    public static GroupLayout GUID_SYSTEM_AWAYMODE$layout() {
        return GUID_SYSTEM_AWAYMODE$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_SYSTEM_AWAYMODE
     * }
     */
    public static MemorySegment GUID_SYSTEM_AWAYMODE() {
        return GUID_SYSTEM_AWAYMODE$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_SYSTEM_AWAYMODE
     * }
     */
    public static void GUID_SYSTEM_AWAYMODE(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_SYSTEM_AWAYMODE$constants.SEGMENT, 0L, GUID_SYSTEM_AWAYMODE$constants.LAYOUT.byteSize());
    }

    private static class GUID_ALLOW_AWAYMODE$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_ALLOW_AWAYMODE").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_ALLOW_AWAYMODE
     * }
     */
    public static GroupLayout GUID_ALLOW_AWAYMODE$layout() {
        return GUID_ALLOW_AWAYMODE$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_ALLOW_AWAYMODE
     * }
     */
    public static MemorySegment GUID_ALLOW_AWAYMODE() {
        return GUID_ALLOW_AWAYMODE$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_ALLOW_AWAYMODE
     * }
     */
    public static void GUID_ALLOW_AWAYMODE(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_ALLOW_AWAYMODE$constants.SEGMENT, 0L, GUID_ALLOW_AWAYMODE$constants.LAYOUT.byteSize());
    }

    private static class GUID_USER_PRESENCE_PREDICTION$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_USER_PRESENCE_PREDICTION").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_USER_PRESENCE_PREDICTION
     * }
     */
    public static GroupLayout GUID_USER_PRESENCE_PREDICTION$layout() {
        return GUID_USER_PRESENCE_PREDICTION$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_USER_PRESENCE_PREDICTION
     * }
     */
    public static MemorySegment GUID_USER_PRESENCE_PREDICTION() {
        return GUID_USER_PRESENCE_PREDICTION$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_USER_PRESENCE_PREDICTION
     * }
     */
    public static void GUID_USER_PRESENCE_PREDICTION(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_USER_PRESENCE_PREDICTION$constants.SEGMENT, 0L, GUID_USER_PRESENCE_PREDICTION$constants.LAYOUT.byteSize());
    }

    private static class GUID_STANDBY_BUDGET_GRACE_PERIOD$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_STANDBY_BUDGET_GRACE_PERIOD").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_STANDBY_BUDGET_GRACE_PERIOD
     * }
     */
    public static GroupLayout GUID_STANDBY_BUDGET_GRACE_PERIOD$layout() {
        return GUID_STANDBY_BUDGET_GRACE_PERIOD$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_STANDBY_BUDGET_GRACE_PERIOD
     * }
     */
    public static MemorySegment GUID_STANDBY_BUDGET_GRACE_PERIOD() {
        return GUID_STANDBY_BUDGET_GRACE_PERIOD$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_STANDBY_BUDGET_GRACE_PERIOD
     * }
     */
    public static void GUID_STANDBY_BUDGET_GRACE_PERIOD(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_STANDBY_BUDGET_GRACE_PERIOD$constants.SEGMENT, 0L, GUID_STANDBY_BUDGET_GRACE_PERIOD$constants.LAYOUT.byteSize());
    }

    private static class GUID_STANDBY_BUDGET_PERCENT$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_STANDBY_BUDGET_PERCENT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_STANDBY_BUDGET_PERCENT
     * }
     */
    public static GroupLayout GUID_STANDBY_BUDGET_PERCENT$layout() {
        return GUID_STANDBY_BUDGET_PERCENT$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_STANDBY_BUDGET_PERCENT
     * }
     */
    public static MemorySegment GUID_STANDBY_BUDGET_PERCENT() {
        return GUID_STANDBY_BUDGET_PERCENT$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_STANDBY_BUDGET_PERCENT
     * }
     */
    public static void GUID_STANDBY_BUDGET_PERCENT(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_STANDBY_BUDGET_PERCENT$constants.SEGMENT, 0L, GUID_STANDBY_BUDGET_PERCENT$constants.LAYOUT.byteSize());
    }

    private static class GUID_STANDBY_BUDGET_REFRESH_COUNT$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_STANDBY_BUDGET_REFRESH_COUNT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_STANDBY_BUDGET_REFRESH_COUNT
     * }
     */
    public static GroupLayout GUID_STANDBY_BUDGET_REFRESH_COUNT$layout() {
        return GUID_STANDBY_BUDGET_REFRESH_COUNT$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_STANDBY_BUDGET_REFRESH_COUNT
     * }
     */
    public static MemorySegment GUID_STANDBY_BUDGET_REFRESH_COUNT() {
        return GUID_STANDBY_BUDGET_REFRESH_COUNT$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_STANDBY_BUDGET_REFRESH_COUNT
     * }
     */
    public static void GUID_STANDBY_BUDGET_REFRESH_COUNT(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_STANDBY_BUDGET_REFRESH_COUNT$constants.SEGMENT, 0L, GUID_STANDBY_BUDGET_REFRESH_COUNT$constants.LAYOUT.byteSize());
    }

    private static class GUID_STANDBY_BUDGET_REFRESH_INTERVAL$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_STANDBY_BUDGET_REFRESH_INTERVAL").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_STANDBY_BUDGET_REFRESH_INTERVAL
     * }
     */
    public static GroupLayout GUID_STANDBY_BUDGET_REFRESH_INTERVAL$layout() {
        return GUID_STANDBY_BUDGET_REFRESH_INTERVAL$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_STANDBY_BUDGET_REFRESH_INTERVAL
     * }
     */
    public static MemorySegment GUID_STANDBY_BUDGET_REFRESH_INTERVAL() {
        return GUID_STANDBY_BUDGET_REFRESH_INTERVAL$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_STANDBY_BUDGET_REFRESH_INTERVAL
     * }
     */
    public static void GUID_STANDBY_BUDGET_REFRESH_INTERVAL(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_STANDBY_BUDGET_REFRESH_INTERVAL$constants.SEGMENT, 0L, GUID_STANDBY_BUDGET_REFRESH_INTERVAL$constants.LAYOUT.byteSize());
    }

    private static class GUID_STANDBY_RESERVE_GRACE_PERIOD$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_STANDBY_RESERVE_GRACE_PERIOD").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_STANDBY_RESERVE_GRACE_PERIOD
     * }
     */
    public static GroupLayout GUID_STANDBY_RESERVE_GRACE_PERIOD$layout() {
        return GUID_STANDBY_RESERVE_GRACE_PERIOD$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_STANDBY_RESERVE_GRACE_PERIOD
     * }
     */
    public static MemorySegment GUID_STANDBY_RESERVE_GRACE_PERIOD() {
        return GUID_STANDBY_RESERVE_GRACE_PERIOD$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_STANDBY_RESERVE_GRACE_PERIOD
     * }
     */
    public static void GUID_STANDBY_RESERVE_GRACE_PERIOD(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_STANDBY_RESERVE_GRACE_PERIOD$constants.SEGMENT, 0L, GUID_STANDBY_RESERVE_GRACE_PERIOD$constants.LAYOUT.byteSize());
    }

    private static class GUID_STANDBY_RESERVE_TIME$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_STANDBY_RESERVE_TIME").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_STANDBY_RESERVE_TIME
     * }
     */
    public static GroupLayout GUID_STANDBY_RESERVE_TIME$layout() {
        return GUID_STANDBY_RESERVE_TIME$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_STANDBY_RESERVE_TIME
     * }
     */
    public static MemorySegment GUID_STANDBY_RESERVE_TIME() {
        return GUID_STANDBY_RESERVE_TIME$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_STANDBY_RESERVE_TIME
     * }
     */
    public static void GUID_STANDBY_RESERVE_TIME(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_STANDBY_RESERVE_TIME$constants.SEGMENT, 0L, GUID_STANDBY_RESERVE_TIME$constants.LAYOUT.byteSize());
    }

    private static class GUID_STANDBY_RESET_PERCENT$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_STANDBY_RESET_PERCENT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_STANDBY_RESET_PERCENT
     * }
     */
    public static GroupLayout GUID_STANDBY_RESET_PERCENT$layout() {
        return GUID_STANDBY_RESET_PERCENT$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_STANDBY_RESET_PERCENT
     * }
     */
    public static MemorySegment GUID_STANDBY_RESET_PERCENT() {
        return GUID_STANDBY_RESET_PERCENT$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_STANDBY_RESET_PERCENT
     * }
     */
    public static void GUID_STANDBY_RESET_PERCENT(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_STANDBY_RESET_PERCENT$constants.SEGMENT, 0L, GUID_STANDBY_RESET_PERCENT$constants.LAYOUT.byteSize());
    }

    private static class GUID_HUPR_ADAPTIVE_AWAY_DISPLAY_TIMEOUT$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_HUPR_ADAPTIVE_AWAY_DISPLAY_TIMEOUT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_HUPR_ADAPTIVE_AWAY_DISPLAY_TIMEOUT
     * }
     */
    public static GroupLayout GUID_HUPR_ADAPTIVE_AWAY_DISPLAY_TIMEOUT$layout() {
        return GUID_HUPR_ADAPTIVE_AWAY_DISPLAY_TIMEOUT$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_HUPR_ADAPTIVE_AWAY_DISPLAY_TIMEOUT
     * }
     */
    public static MemorySegment GUID_HUPR_ADAPTIVE_AWAY_DISPLAY_TIMEOUT() {
        return GUID_HUPR_ADAPTIVE_AWAY_DISPLAY_TIMEOUT$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_HUPR_ADAPTIVE_AWAY_DISPLAY_TIMEOUT
     * }
     */
    public static void GUID_HUPR_ADAPTIVE_AWAY_DISPLAY_TIMEOUT(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_HUPR_ADAPTIVE_AWAY_DISPLAY_TIMEOUT$constants.SEGMENT, 0L, GUID_HUPR_ADAPTIVE_AWAY_DISPLAY_TIMEOUT$constants.LAYOUT.byteSize());
    }

    private static class GUID_HUPR_ADAPTIVE_INATTENTIVE_DIM_TIMEOUT$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_HUPR_ADAPTIVE_INATTENTIVE_DIM_TIMEOUT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_HUPR_ADAPTIVE_INATTENTIVE_DIM_TIMEOUT
     * }
     */
    public static GroupLayout GUID_HUPR_ADAPTIVE_INATTENTIVE_DIM_TIMEOUT$layout() {
        return GUID_HUPR_ADAPTIVE_INATTENTIVE_DIM_TIMEOUT$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_HUPR_ADAPTIVE_INATTENTIVE_DIM_TIMEOUT
     * }
     */
    public static MemorySegment GUID_HUPR_ADAPTIVE_INATTENTIVE_DIM_TIMEOUT() {
        return GUID_HUPR_ADAPTIVE_INATTENTIVE_DIM_TIMEOUT$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_HUPR_ADAPTIVE_INATTENTIVE_DIM_TIMEOUT
     * }
     */
    public static void GUID_HUPR_ADAPTIVE_INATTENTIVE_DIM_TIMEOUT(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_HUPR_ADAPTIVE_INATTENTIVE_DIM_TIMEOUT$constants.SEGMENT, 0L, GUID_HUPR_ADAPTIVE_INATTENTIVE_DIM_TIMEOUT$constants.LAYOUT.byteSize());
    }

    private static class GUID_HUPR_ADAPTIVE_INATTENTIVE_DISPLAY_TIMEOUT$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_HUPR_ADAPTIVE_INATTENTIVE_DISPLAY_TIMEOUT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_HUPR_ADAPTIVE_INATTENTIVE_DISPLAY_TIMEOUT
     * }
     */
    public static GroupLayout GUID_HUPR_ADAPTIVE_INATTENTIVE_DISPLAY_TIMEOUT$layout() {
        return GUID_HUPR_ADAPTIVE_INATTENTIVE_DISPLAY_TIMEOUT$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_HUPR_ADAPTIVE_INATTENTIVE_DISPLAY_TIMEOUT
     * }
     */
    public static MemorySegment GUID_HUPR_ADAPTIVE_INATTENTIVE_DISPLAY_TIMEOUT() {
        return GUID_HUPR_ADAPTIVE_INATTENTIVE_DISPLAY_TIMEOUT$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_HUPR_ADAPTIVE_INATTENTIVE_DISPLAY_TIMEOUT
     * }
     */
    public static void GUID_HUPR_ADAPTIVE_INATTENTIVE_DISPLAY_TIMEOUT(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_HUPR_ADAPTIVE_INATTENTIVE_DISPLAY_TIMEOUT$constants.SEGMENT, 0L, GUID_HUPR_ADAPTIVE_INATTENTIVE_DISPLAY_TIMEOUT$constants.LAYOUT.byteSize());
    }

    private static class GUID_HUPR_ADAPTIVE_AWAY_DIM_TIMEOUT$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_HUPR_ADAPTIVE_AWAY_DIM_TIMEOUT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_HUPR_ADAPTIVE_AWAY_DIM_TIMEOUT
     * }
     */
    public static GroupLayout GUID_HUPR_ADAPTIVE_AWAY_DIM_TIMEOUT$layout() {
        return GUID_HUPR_ADAPTIVE_AWAY_DIM_TIMEOUT$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_HUPR_ADAPTIVE_AWAY_DIM_TIMEOUT
     * }
     */
    public static MemorySegment GUID_HUPR_ADAPTIVE_AWAY_DIM_TIMEOUT() {
        return GUID_HUPR_ADAPTIVE_AWAY_DIM_TIMEOUT$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_HUPR_ADAPTIVE_AWAY_DIM_TIMEOUT
     * }
     */
    public static void GUID_HUPR_ADAPTIVE_AWAY_DIM_TIMEOUT(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_HUPR_ADAPTIVE_AWAY_DIM_TIMEOUT$constants.SEGMENT, 0L, GUID_HUPR_ADAPTIVE_AWAY_DIM_TIMEOUT$constants.LAYOUT.byteSize());
    }

    private static class GUID_ALLOW_STANDBY_STATES$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_ALLOW_STANDBY_STATES").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_ALLOW_STANDBY_STATES
     * }
     */
    public static GroupLayout GUID_ALLOW_STANDBY_STATES$layout() {
        return GUID_ALLOW_STANDBY_STATES$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_ALLOW_STANDBY_STATES
     * }
     */
    public static MemorySegment GUID_ALLOW_STANDBY_STATES() {
        return GUID_ALLOW_STANDBY_STATES$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_ALLOW_STANDBY_STATES
     * }
     */
    public static void GUID_ALLOW_STANDBY_STATES(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_ALLOW_STANDBY_STATES$constants.SEGMENT, 0L, GUID_ALLOW_STANDBY_STATES$constants.LAYOUT.byteSize());
    }

    private static class GUID_ALLOW_RTC_WAKE$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_ALLOW_RTC_WAKE").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_ALLOW_RTC_WAKE
     * }
     */
    public static GroupLayout GUID_ALLOW_RTC_WAKE$layout() {
        return GUID_ALLOW_RTC_WAKE$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_ALLOW_RTC_WAKE
     * }
     */
    public static MemorySegment GUID_ALLOW_RTC_WAKE() {
        return GUID_ALLOW_RTC_WAKE$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_ALLOW_RTC_WAKE
     * }
     */
    public static void GUID_ALLOW_RTC_WAKE(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_ALLOW_RTC_WAKE$constants.SEGMENT, 0L, GUID_ALLOW_RTC_WAKE$constants.LAYOUT.byteSize());
    }

    private static class GUID_LEGACY_RTC_MITIGATION$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_LEGACY_RTC_MITIGATION").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_LEGACY_RTC_MITIGATION
     * }
     */
    public static GroupLayout GUID_LEGACY_RTC_MITIGATION$layout() {
        return GUID_LEGACY_RTC_MITIGATION$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_LEGACY_RTC_MITIGATION
     * }
     */
    public static MemorySegment GUID_LEGACY_RTC_MITIGATION() {
        return GUID_LEGACY_RTC_MITIGATION$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_LEGACY_RTC_MITIGATION
     * }
     */
    public static void GUID_LEGACY_RTC_MITIGATION(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_LEGACY_RTC_MITIGATION$constants.SEGMENT, 0L, GUID_LEGACY_RTC_MITIGATION$constants.LAYOUT.byteSize());
    }

    private static class GUID_ALLOW_SYSTEM_REQUIRED$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_ALLOW_SYSTEM_REQUIRED").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_ALLOW_SYSTEM_REQUIRED
     * }
     */
    public static GroupLayout GUID_ALLOW_SYSTEM_REQUIRED$layout() {
        return GUID_ALLOW_SYSTEM_REQUIRED$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_ALLOW_SYSTEM_REQUIRED
     * }
     */
    public static MemorySegment GUID_ALLOW_SYSTEM_REQUIRED() {
        return GUID_ALLOW_SYSTEM_REQUIRED$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_ALLOW_SYSTEM_REQUIRED
     * }
     */
    public static void GUID_ALLOW_SYSTEM_REQUIRED(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_ALLOW_SYSTEM_REQUIRED$constants.SEGMENT, 0L, GUID_ALLOW_SYSTEM_REQUIRED$constants.LAYOUT.byteSize());
    }

    private static class GUID_POWER_SAVING_STATUS$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_POWER_SAVING_STATUS").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_POWER_SAVING_STATUS
     * }
     */
    public static GroupLayout GUID_POWER_SAVING_STATUS$layout() {
        return GUID_POWER_SAVING_STATUS$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_POWER_SAVING_STATUS
     * }
     */
    public static MemorySegment GUID_POWER_SAVING_STATUS() {
        return GUID_POWER_SAVING_STATUS$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_POWER_SAVING_STATUS
     * }
     */
    public static void GUID_POWER_SAVING_STATUS(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_POWER_SAVING_STATUS$constants.SEGMENT, 0L, GUID_POWER_SAVING_STATUS$constants.LAYOUT.byteSize());
    }

    private static class GUID_ENERGY_SAVER_STATUS$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_ENERGY_SAVER_STATUS").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_ENERGY_SAVER_STATUS
     * }
     */
    public static GroupLayout GUID_ENERGY_SAVER_STATUS$layout() {
        return GUID_ENERGY_SAVER_STATUS$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_ENERGY_SAVER_STATUS
     * }
     */
    public static MemorySegment GUID_ENERGY_SAVER_STATUS() {
        return GUID_ENERGY_SAVER_STATUS$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_ENERGY_SAVER_STATUS
     * }
     */
    public static void GUID_ENERGY_SAVER_STATUS(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_ENERGY_SAVER_STATUS$constants.SEGMENT, 0L, GUID_ENERGY_SAVER_STATUS$constants.LAYOUT.byteSize());
    }

    private static class GUID_ENERGY_SAVER_SUBGROUP$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_ENERGY_SAVER_SUBGROUP").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_ENERGY_SAVER_SUBGROUP
     * }
     */
    public static GroupLayout GUID_ENERGY_SAVER_SUBGROUP$layout() {
        return GUID_ENERGY_SAVER_SUBGROUP$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_ENERGY_SAVER_SUBGROUP
     * }
     */
    public static MemorySegment GUID_ENERGY_SAVER_SUBGROUP() {
        return GUID_ENERGY_SAVER_SUBGROUP$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_ENERGY_SAVER_SUBGROUP
     * }
     */
    public static void GUID_ENERGY_SAVER_SUBGROUP(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_ENERGY_SAVER_SUBGROUP$constants.SEGMENT, 0L, GUID_ENERGY_SAVER_SUBGROUP$constants.LAYOUT.byteSize());
    }

    private static class GUID_ENERGY_SAVER_BATTERY_THRESHOLD$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_ENERGY_SAVER_BATTERY_THRESHOLD").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_ENERGY_SAVER_BATTERY_THRESHOLD
     * }
     */
    public static GroupLayout GUID_ENERGY_SAVER_BATTERY_THRESHOLD$layout() {
        return GUID_ENERGY_SAVER_BATTERY_THRESHOLD$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_ENERGY_SAVER_BATTERY_THRESHOLD
     * }
     */
    public static MemorySegment GUID_ENERGY_SAVER_BATTERY_THRESHOLD() {
        return GUID_ENERGY_SAVER_BATTERY_THRESHOLD$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_ENERGY_SAVER_BATTERY_THRESHOLD
     * }
     */
    public static void GUID_ENERGY_SAVER_BATTERY_THRESHOLD(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_ENERGY_SAVER_BATTERY_THRESHOLD$constants.SEGMENT, 0L, GUID_ENERGY_SAVER_BATTERY_THRESHOLD$constants.LAYOUT.byteSize());
    }

    private static class GUID_ENERGY_SAVER_BRIGHTNESS$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_ENERGY_SAVER_BRIGHTNESS").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_ENERGY_SAVER_BRIGHTNESS
     * }
     */
    public static GroupLayout GUID_ENERGY_SAVER_BRIGHTNESS$layout() {
        return GUID_ENERGY_SAVER_BRIGHTNESS$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_ENERGY_SAVER_BRIGHTNESS
     * }
     */
    public static MemorySegment GUID_ENERGY_SAVER_BRIGHTNESS() {
        return GUID_ENERGY_SAVER_BRIGHTNESS$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_ENERGY_SAVER_BRIGHTNESS
     * }
     */
    public static void GUID_ENERGY_SAVER_BRIGHTNESS(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_ENERGY_SAVER_BRIGHTNESS$constants.SEGMENT, 0L, GUID_ENERGY_SAVER_BRIGHTNESS$constants.LAYOUT.byteSize());
    }

    private static class GUID_ENERGY_SAVER_POLICY$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_ENERGY_SAVER_POLICY").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_ENERGY_SAVER_POLICY
     * }
     */
    public static GroupLayout GUID_ENERGY_SAVER_POLICY$layout() {
        return GUID_ENERGY_SAVER_POLICY$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_ENERGY_SAVER_POLICY
     * }
     */
    public static MemorySegment GUID_ENERGY_SAVER_POLICY() {
        return GUID_ENERGY_SAVER_POLICY$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_ENERGY_SAVER_POLICY
     * }
     */
    public static void GUID_ENERGY_SAVER_POLICY(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_ENERGY_SAVER_POLICY$constants.SEGMENT, 0L, GUID_ENERGY_SAVER_POLICY$constants.LAYOUT.byteSize());
    }

    private static class GUID_SYSTEM_BUTTON_SUBGROUP$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_SYSTEM_BUTTON_SUBGROUP").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_SYSTEM_BUTTON_SUBGROUP
     * }
     */
    public static GroupLayout GUID_SYSTEM_BUTTON_SUBGROUP$layout() {
        return GUID_SYSTEM_BUTTON_SUBGROUP$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_SYSTEM_BUTTON_SUBGROUP
     * }
     */
    public static MemorySegment GUID_SYSTEM_BUTTON_SUBGROUP() {
        return GUID_SYSTEM_BUTTON_SUBGROUP$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_SYSTEM_BUTTON_SUBGROUP
     * }
     */
    public static void GUID_SYSTEM_BUTTON_SUBGROUP(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_SYSTEM_BUTTON_SUBGROUP$constants.SEGMENT, 0L, GUID_SYSTEM_BUTTON_SUBGROUP$constants.LAYOUT.byteSize());
    }

    private static class GUID_POWERBUTTON_ACTION$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_POWERBUTTON_ACTION").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_POWERBUTTON_ACTION
     * }
     */
    public static GroupLayout GUID_POWERBUTTON_ACTION$layout() {
        return GUID_POWERBUTTON_ACTION$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_POWERBUTTON_ACTION
     * }
     */
    public static MemorySegment GUID_POWERBUTTON_ACTION() {
        return GUID_POWERBUTTON_ACTION$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_POWERBUTTON_ACTION
     * }
     */
    public static void GUID_POWERBUTTON_ACTION(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_POWERBUTTON_ACTION$constants.SEGMENT, 0L, GUID_POWERBUTTON_ACTION$constants.LAYOUT.byteSize());
    }

    private static class GUID_SLEEPBUTTON_ACTION$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_SLEEPBUTTON_ACTION").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_SLEEPBUTTON_ACTION
     * }
     */
    public static GroupLayout GUID_SLEEPBUTTON_ACTION$layout() {
        return GUID_SLEEPBUTTON_ACTION$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_SLEEPBUTTON_ACTION
     * }
     */
    public static MemorySegment GUID_SLEEPBUTTON_ACTION() {
        return GUID_SLEEPBUTTON_ACTION$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_SLEEPBUTTON_ACTION
     * }
     */
    public static void GUID_SLEEPBUTTON_ACTION(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_SLEEPBUTTON_ACTION$constants.SEGMENT, 0L, GUID_SLEEPBUTTON_ACTION$constants.LAYOUT.byteSize());
    }

    private static class GUID_USERINTERFACEBUTTON_ACTION$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_USERINTERFACEBUTTON_ACTION").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_USERINTERFACEBUTTON_ACTION
     * }
     */
    public static GroupLayout GUID_USERINTERFACEBUTTON_ACTION$layout() {
        return GUID_USERINTERFACEBUTTON_ACTION$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_USERINTERFACEBUTTON_ACTION
     * }
     */
    public static MemorySegment GUID_USERINTERFACEBUTTON_ACTION() {
        return GUID_USERINTERFACEBUTTON_ACTION$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_USERINTERFACEBUTTON_ACTION
     * }
     */
    public static void GUID_USERINTERFACEBUTTON_ACTION(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_USERINTERFACEBUTTON_ACTION$constants.SEGMENT, 0L, GUID_USERINTERFACEBUTTON_ACTION$constants.LAYOUT.byteSize());
    }

    private static class GUID_LIDCLOSE_ACTION$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_LIDCLOSE_ACTION").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_LIDCLOSE_ACTION
     * }
     */
    public static GroupLayout GUID_LIDCLOSE_ACTION$layout() {
        return GUID_LIDCLOSE_ACTION$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_LIDCLOSE_ACTION
     * }
     */
    public static MemorySegment GUID_LIDCLOSE_ACTION() {
        return GUID_LIDCLOSE_ACTION$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_LIDCLOSE_ACTION
     * }
     */
    public static void GUID_LIDCLOSE_ACTION(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_LIDCLOSE_ACTION$constants.SEGMENT, 0L, GUID_LIDCLOSE_ACTION$constants.LAYOUT.byteSize());
    }

    private static class GUID_LIDOPEN_POWERSTATE$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_LIDOPEN_POWERSTATE").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_LIDOPEN_POWERSTATE
     * }
     */
    public static GroupLayout GUID_LIDOPEN_POWERSTATE$layout() {
        return GUID_LIDOPEN_POWERSTATE$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_LIDOPEN_POWERSTATE
     * }
     */
    public static MemorySegment GUID_LIDOPEN_POWERSTATE() {
        return GUID_LIDOPEN_POWERSTATE$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_LIDOPEN_POWERSTATE
     * }
     */
    public static void GUID_LIDOPEN_POWERSTATE(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_LIDOPEN_POWERSTATE$constants.SEGMENT, 0L, GUID_LIDOPEN_POWERSTATE$constants.LAYOUT.byteSize());
    }

    private static class GUID_BATTERY_SUBGROUP$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_BATTERY_SUBGROUP").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_BATTERY_SUBGROUP
     * }
     */
    public static GroupLayout GUID_BATTERY_SUBGROUP$layout() {
        return GUID_BATTERY_SUBGROUP$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_BATTERY_SUBGROUP
     * }
     */
    public static MemorySegment GUID_BATTERY_SUBGROUP() {
        return GUID_BATTERY_SUBGROUP$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_BATTERY_SUBGROUP
     * }
     */
    public static void GUID_BATTERY_SUBGROUP(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_BATTERY_SUBGROUP$constants.SEGMENT, 0L, GUID_BATTERY_SUBGROUP$constants.LAYOUT.byteSize());
    }

    private static class GUID_BATTERY_DISCHARGE_ACTION_0$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_BATTERY_DISCHARGE_ACTION_0").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_BATTERY_DISCHARGE_ACTION_0
     * }
     */
    public static GroupLayout GUID_BATTERY_DISCHARGE_ACTION_0$layout() {
        return GUID_BATTERY_DISCHARGE_ACTION_0$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_BATTERY_DISCHARGE_ACTION_0
     * }
     */
    public static MemorySegment GUID_BATTERY_DISCHARGE_ACTION_0() {
        return GUID_BATTERY_DISCHARGE_ACTION_0$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_BATTERY_DISCHARGE_ACTION_0
     * }
     */
    public static void GUID_BATTERY_DISCHARGE_ACTION_0(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_BATTERY_DISCHARGE_ACTION_0$constants.SEGMENT, 0L, GUID_BATTERY_DISCHARGE_ACTION_0$constants.LAYOUT.byteSize());
    }

    private static class GUID_BATTERY_DISCHARGE_LEVEL_0$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_BATTERY_DISCHARGE_LEVEL_0").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_BATTERY_DISCHARGE_LEVEL_0
     * }
     */
    public static GroupLayout GUID_BATTERY_DISCHARGE_LEVEL_0$layout() {
        return GUID_BATTERY_DISCHARGE_LEVEL_0$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_BATTERY_DISCHARGE_LEVEL_0
     * }
     */
    public static MemorySegment GUID_BATTERY_DISCHARGE_LEVEL_0() {
        return GUID_BATTERY_DISCHARGE_LEVEL_0$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_BATTERY_DISCHARGE_LEVEL_0
     * }
     */
    public static void GUID_BATTERY_DISCHARGE_LEVEL_0(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_BATTERY_DISCHARGE_LEVEL_0$constants.SEGMENT, 0L, GUID_BATTERY_DISCHARGE_LEVEL_0$constants.LAYOUT.byteSize());
    }

    private static class GUID_BATTERY_DISCHARGE_FLAGS_0$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_BATTERY_DISCHARGE_FLAGS_0").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_BATTERY_DISCHARGE_FLAGS_0
     * }
     */
    public static GroupLayout GUID_BATTERY_DISCHARGE_FLAGS_0$layout() {
        return GUID_BATTERY_DISCHARGE_FLAGS_0$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_BATTERY_DISCHARGE_FLAGS_0
     * }
     */
    public static MemorySegment GUID_BATTERY_DISCHARGE_FLAGS_0() {
        return GUID_BATTERY_DISCHARGE_FLAGS_0$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_BATTERY_DISCHARGE_FLAGS_0
     * }
     */
    public static void GUID_BATTERY_DISCHARGE_FLAGS_0(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_BATTERY_DISCHARGE_FLAGS_0$constants.SEGMENT, 0L, GUID_BATTERY_DISCHARGE_FLAGS_0$constants.LAYOUT.byteSize());
    }

    private static class GUID_BATTERY_DISCHARGE_ACTION_1$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_BATTERY_DISCHARGE_ACTION_1").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_BATTERY_DISCHARGE_ACTION_1
     * }
     */
    public static GroupLayout GUID_BATTERY_DISCHARGE_ACTION_1$layout() {
        return GUID_BATTERY_DISCHARGE_ACTION_1$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_BATTERY_DISCHARGE_ACTION_1
     * }
     */
    public static MemorySegment GUID_BATTERY_DISCHARGE_ACTION_1() {
        return GUID_BATTERY_DISCHARGE_ACTION_1$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_BATTERY_DISCHARGE_ACTION_1
     * }
     */
    public static void GUID_BATTERY_DISCHARGE_ACTION_1(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_BATTERY_DISCHARGE_ACTION_1$constants.SEGMENT, 0L, GUID_BATTERY_DISCHARGE_ACTION_1$constants.LAYOUT.byteSize());
    }

    private static class GUID_BATTERY_DISCHARGE_LEVEL_1$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_BATTERY_DISCHARGE_LEVEL_1").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_BATTERY_DISCHARGE_LEVEL_1
     * }
     */
    public static GroupLayout GUID_BATTERY_DISCHARGE_LEVEL_1$layout() {
        return GUID_BATTERY_DISCHARGE_LEVEL_1$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_BATTERY_DISCHARGE_LEVEL_1
     * }
     */
    public static MemorySegment GUID_BATTERY_DISCHARGE_LEVEL_1() {
        return GUID_BATTERY_DISCHARGE_LEVEL_1$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_BATTERY_DISCHARGE_LEVEL_1
     * }
     */
    public static void GUID_BATTERY_DISCHARGE_LEVEL_1(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_BATTERY_DISCHARGE_LEVEL_1$constants.SEGMENT, 0L, GUID_BATTERY_DISCHARGE_LEVEL_1$constants.LAYOUT.byteSize());
    }

    private static class GUID_BATTERY_DISCHARGE_FLAGS_1$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_BATTERY_DISCHARGE_FLAGS_1").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_BATTERY_DISCHARGE_FLAGS_1
     * }
     */
    public static GroupLayout GUID_BATTERY_DISCHARGE_FLAGS_1$layout() {
        return GUID_BATTERY_DISCHARGE_FLAGS_1$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_BATTERY_DISCHARGE_FLAGS_1
     * }
     */
    public static MemorySegment GUID_BATTERY_DISCHARGE_FLAGS_1() {
        return GUID_BATTERY_DISCHARGE_FLAGS_1$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_BATTERY_DISCHARGE_FLAGS_1
     * }
     */
    public static void GUID_BATTERY_DISCHARGE_FLAGS_1(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_BATTERY_DISCHARGE_FLAGS_1$constants.SEGMENT, 0L, GUID_BATTERY_DISCHARGE_FLAGS_1$constants.LAYOUT.byteSize());
    }

    private static class GUID_BATTERY_DISCHARGE_ACTION_2$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_BATTERY_DISCHARGE_ACTION_2").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_BATTERY_DISCHARGE_ACTION_2
     * }
     */
    public static GroupLayout GUID_BATTERY_DISCHARGE_ACTION_2$layout() {
        return GUID_BATTERY_DISCHARGE_ACTION_2$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_BATTERY_DISCHARGE_ACTION_2
     * }
     */
    public static MemorySegment GUID_BATTERY_DISCHARGE_ACTION_2() {
        return GUID_BATTERY_DISCHARGE_ACTION_2$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_BATTERY_DISCHARGE_ACTION_2
     * }
     */
    public static void GUID_BATTERY_DISCHARGE_ACTION_2(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_BATTERY_DISCHARGE_ACTION_2$constants.SEGMENT, 0L, GUID_BATTERY_DISCHARGE_ACTION_2$constants.LAYOUT.byteSize());
    }

    private static class GUID_BATTERY_DISCHARGE_LEVEL_2$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_BATTERY_DISCHARGE_LEVEL_2").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_BATTERY_DISCHARGE_LEVEL_2
     * }
     */
    public static GroupLayout GUID_BATTERY_DISCHARGE_LEVEL_2$layout() {
        return GUID_BATTERY_DISCHARGE_LEVEL_2$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_BATTERY_DISCHARGE_LEVEL_2
     * }
     */
    public static MemorySegment GUID_BATTERY_DISCHARGE_LEVEL_2() {
        return GUID_BATTERY_DISCHARGE_LEVEL_2$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_BATTERY_DISCHARGE_LEVEL_2
     * }
     */
    public static void GUID_BATTERY_DISCHARGE_LEVEL_2(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_BATTERY_DISCHARGE_LEVEL_2$constants.SEGMENT, 0L, GUID_BATTERY_DISCHARGE_LEVEL_2$constants.LAYOUT.byteSize());
    }

    private static class GUID_BATTERY_DISCHARGE_FLAGS_2$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_BATTERY_DISCHARGE_FLAGS_2").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_BATTERY_DISCHARGE_FLAGS_2
     * }
     */
    public static GroupLayout GUID_BATTERY_DISCHARGE_FLAGS_2$layout() {
        return GUID_BATTERY_DISCHARGE_FLAGS_2$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_BATTERY_DISCHARGE_FLAGS_2
     * }
     */
    public static MemorySegment GUID_BATTERY_DISCHARGE_FLAGS_2() {
        return GUID_BATTERY_DISCHARGE_FLAGS_2$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_BATTERY_DISCHARGE_FLAGS_2
     * }
     */
    public static void GUID_BATTERY_DISCHARGE_FLAGS_2(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_BATTERY_DISCHARGE_FLAGS_2$constants.SEGMENT, 0L, GUID_BATTERY_DISCHARGE_FLAGS_2$constants.LAYOUT.byteSize());
    }

    private static class GUID_BATTERY_DISCHARGE_ACTION_3$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_BATTERY_DISCHARGE_ACTION_3").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_BATTERY_DISCHARGE_ACTION_3
     * }
     */
    public static GroupLayout GUID_BATTERY_DISCHARGE_ACTION_3$layout() {
        return GUID_BATTERY_DISCHARGE_ACTION_3$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_BATTERY_DISCHARGE_ACTION_3
     * }
     */
    public static MemorySegment GUID_BATTERY_DISCHARGE_ACTION_3() {
        return GUID_BATTERY_DISCHARGE_ACTION_3$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_BATTERY_DISCHARGE_ACTION_3
     * }
     */
    public static void GUID_BATTERY_DISCHARGE_ACTION_3(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_BATTERY_DISCHARGE_ACTION_3$constants.SEGMENT, 0L, GUID_BATTERY_DISCHARGE_ACTION_3$constants.LAYOUT.byteSize());
    }

    private static class GUID_BATTERY_DISCHARGE_LEVEL_3$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_BATTERY_DISCHARGE_LEVEL_3").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_BATTERY_DISCHARGE_LEVEL_3
     * }
     */
    public static GroupLayout GUID_BATTERY_DISCHARGE_LEVEL_3$layout() {
        return GUID_BATTERY_DISCHARGE_LEVEL_3$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_BATTERY_DISCHARGE_LEVEL_3
     * }
     */
    public static MemorySegment GUID_BATTERY_DISCHARGE_LEVEL_3() {
        return GUID_BATTERY_DISCHARGE_LEVEL_3$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_BATTERY_DISCHARGE_LEVEL_3
     * }
     */
    public static void GUID_BATTERY_DISCHARGE_LEVEL_3(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_BATTERY_DISCHARGE_LEVEL_3$constants.SEGMENT, 0L, GUID_BATTERY_DISCHARGE_LEVEL_3$constants.LAYOUT.byteSize());
    }

    private static class GUID_BATTERY_DISCHARGE_FLAGS_3$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_BATTERY_DISCHARGE_FLAGS_3").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_BATTERY_DISCHARGE_FLAGS_3
     * }
     */
    public static GroupLayout GUID_BATTERY_DISCHARGE_FLAGS_3$layout() {
        return GUID_BATTERY_DISCHARGE_FLAGS_3$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_BATTERY_DISCHARGE_FLAGS_3
     * }
     */
    public static MemorySegment GUID_BATTERY_DISCHARGE_FLAGS_3() {
        return GUID_BATTERY_DISCHARGE_FLAGS_3$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_BATTERY_DISCHARGE_FLAGS_3
     * }
     */
    public static void GUID_BATTERY_DISCHARGE_FLAGS_3(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_BATTERY_DISCHARGE_FLAGS_3$constants.SEGMENT, 0L, GUID_BATTERY_DISCHARGE_FLAGS_3$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_SETTINGS_SUBGROUP$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_SETTINGS_SUBGROUP").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_SETTINGS_SUBGROUP
     * }
     */
    public static GroupLayout GUID_PROCESSOR_SETTINGS_SUBGROUP$layout() {
        return GUID_PROCESSOR_SETTINGS_SUBGROUP$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_SETTINGS_SUBGROUP
     * }
     */
    public static MemorySegment GUID_PROCESSOR_SETTINGS_SUBGROUP() {
        return GUID_PROCESSOR_SETTINGS_SUBGROUP$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_SETTINGS_SUBGROUP
     * }
     */
    public static void GUID_PROCESSOR_SETTINGS_SUBGROUP(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_SETTINGS_SUBGROUP$constants.SEGMENT, 0L, GUID_PROCESSOR_SETTINGS_SUBGROUP$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_THROTTLE_POLICY$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_THROTTLE_POLICY").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_THROTTLE_POLICY
     * }
     */
    public static GroupLayout GUID_PROCESSOR_THROTTLE_POLICY$layout() {
        return GUID_PROCESSOR_THROTTLE_POLICY$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_THROTTLE_POLICY
     * }
     */
    public static MemorySegment GUID_PROCESSOR_THROTTLE_POLICY() {
        return GUID_PROCESSOR_THROTTLE_POLICY$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_THROTTLE_POLICY
     * }
     */
    public static void GUID_PROCESSOR_THROTTLE_POLICY(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_THROTTLE_POLICY$constants.SEGMENT, 0L, GUID_PROCESSOR_THROTTLE_POLICY$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_THROTTLE_MAXIMUM$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_THROTTLE_MAXIMUM").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_THROTTLE_MAXIMUM
     * }
     */
    public static GroupLayout GUID_PROCESSOR_THROTTLE_MAXIMUM$layout() {
        return GUID_PROCESSOR_THROTTLE_MAXIMUM$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_THROTTLE_MAXIMUM
     * }
     */
    public static MemorySegment GUID_PROCESSOR_THROTTLE_MAXIMUM() {
        return GUID_PROCESSOR_THROTTLE_MAXIMUM$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_THROTTLE_MAXIMUM
     * }
     */
    public static void GUID_PROCESSOR_THROTTLE_MAXIMUM(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_THROTTLE_MAXIMUM$constants.SEGMENT, 0L, GUID_PROCESSOR_THROTTLE_MAXIMUM$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_THROTTLE_MAXIMUM_1$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_THROTTLE_MAXIMUM_1").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_THROTTLE_MAXIMUM_1
     * }
     */
    public static GroupLayout GUID_PROCESSOR_THROTTLE_MAXIMUM_1$layout() {
        return GUID_PROCESSOR_THROTTLE_MAXIMUM_1$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_THROTTLE_MAXIMUM_1
     * }
     */
    public static MemorySegment GUID_PROCESSOR_THROTTLE_MAXIMUM_1() {
        return GUID_PROCESSOR_THROTTLE_MAXIMUM_1$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_THROTTLE_MAXIMUM_1
     * }
     */
    public static void GUID_PROCESSOR_THROTTLE_MAXIMUM_1(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_THROTTLE_MAXIMUM_1$constants.SEGMENT, 0L, GUID_PROCESSOR_THROTTLE_MAXIMUM_1$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_THROTTLE_MAXIMUM_2$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_THROTTLE_MAXIMUM_2").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_THROTTLE_MAXIMUM_2
     * }
     */
    public static GroupLayout GUID_PROCESSOR_THROTTLE_MAXIMUM_2$layout() {
        return GUID_PROCESSOR_THROTTLE_MAXIMUM_2$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_THROTTLE_MAXIMUM_2
     * }
     */
    public static MemorySegment GUID_PROCESSOR_THROTTLE_MAXIMUM_2() {
        return GUID_PROCESSOR_THROTTLE_MAXIMUM_2$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_THROTTLE_MAXIMUM_2
     * }
     */
    public static void GUID_PROCESSOR_THROTTLE_MAXIMUM_2(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_THROTTLE_MAXIMUM_2$constants.SEGMENT, 0L, GUID_PROCESSOR_THROTTLE_MAXIMUM_2$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_THROTTLE_MINIMUM$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_THROTTLE_MINIMUM").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_THROTTLE_MINIMUM
     * }
     */
    public static GroupLayout GUID_PROCESSOR_THROTTLE_MINIMUM$layout() {
        return GUID_PROCESSOR_THROTTLE_MINIMUM$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_THROTTLE_MINIMUM
     * }
     */
    public static MemorySegment GUID_PROCESSOR_THROTTLE_MINIMUM() {
        return GUID_PROCESSOR_THROTTLE_MINIMUM$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_THROTTLE_MINIMUM
     * }
     */
    public static void GUID_PROCESSOR_THROTTLE_MINIMUM(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_THROTTLE_MINIMUM$constants.SEGMENT, 0L, GUID_PROCESSOR_THROTTLE_MINIMUM$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_THROTTLE_MINIMUM_1$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_THROTTLE_MINIMUM_1").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_THROTTLE_MINIMUM_1
     * }
     */
    public static GroupLayout GUID_PROCESSOR_THROTTLE_MINIMUM_1$layout() {
        return GUID_PROCESSOR_THROTTLE_MINIMUM_1$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_THROTTLE_MINIMUM_1
     * }
     */
    public static MemorySegment GUID_PROCESSOR_THROTTLE_MINIMUM_1() {
        return GUID_PROCESSOR_THROTTLE_MINIMUM_1$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_THROTTLE_MINIMUM_1
     * }
     */
    public static void GUID_PROCESSOR_THROTTLE_MINIMUM_1(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_THROTTLE_MINIMUM_1$constants.SEGMENT, 0L, GUID_PROCESSOR_THROTTLE_MINIMUM_1$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_THROTTLE_MINIMUM_2$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_THROTTLE_MINIMUM_2").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_THROTTLE_MINIMUM_2
     * }
     */
    public static GroupLayout GUID_PROCESSOR_THROTTLE_MINIMUM_2$layout() {
        return GUID_PROCESSOR_THROTTLE_MINIMUM_2$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_THROTTLE_MINIMUM_2
     * }
     */
    public static MemorySegment GUID_PROCESSOR_THROTTLE_MINIMUM_2() {
        return GUID_PROCESSOR_THROTTLE_MINIMUM_2$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_THROTTLE_MINIMUM_2
     * }
     */
    public static void GUID_PROCESSOR_THROTTLE_MINIMUM_2(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_THROTTLE_MINIMUM_2$constants.SEGMENT, 0L, GUID_PROCESSOR_THROTTLE_MINIMUM_2$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_FREQUENCY_LIMIT$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_FREQUENCY_LIMIT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_FREQUENCY_LIMIT
     * }
     */
    public static GroupLayout GUID_PROCESSOR_FREQUENCY_LIMIT$layout() {
        return GUID_PROCESSOR_FREQUENCY_LIMIT$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_FREQUENCY_LIMIT
     * }
     */
    public static MemorySegment GUID_PROCESSOR_FREQUENCY_LIMIT() {
        return GUID_PROCESSOR_FREQUENCY_LIMIT$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_FREQUENCY_LIMIT
     * }
     */
    public static void GUID_PROCESSOR_FREQUENCY_LIMIT(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_FREQUENCY_LIMIT$constants.SEGMENT, 0L, GUID_PROCESSOR_FREQUENCY_LIMIT$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_FREQUENCY_LIMIT_1$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_FREQUENCY_LIMIT_1").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_FREQUENCY_LIMIT_1
     * }
     */
    public static GroupLayout GUID_PROCESSOR_FREQUENCY_LIMIT_1$layout() {
        return GUID_PROCESSOR_FREQUENCY_LIMIT_1$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_FREQUENCY_LIMIT_1
     * }
     */
    public static MemorySegment GUID_PROCESSOR_FREQUENCY_LIMIT_1() {
        return GUID_PROCESSOR_FREQUENCY_LIMIT_1$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_FREQUENCY_LIMIT_1
     * }
     */
    public static void GUID_PROCESSOR_FREQUENCY_LIMIT_1(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_FREQUENCY_LIMIT_1$constants.SEGMENT, 0L, GUID_PROCESSOR_FREQUENCY_LIMIT_1$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_FREQUENCY_LIMIT_2$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_FREQUENCY_LIMIT_2").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_FREQUENCY_LIMIT_2
     * }
     */
    public static GroupLayout GUID_PROCESSOR_FREQUENCY_LIMIT_2$layout() {
        return GUID_PROCESSOR_FREQUENCY_LIMIT_2$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_FREQUENCY_LIMIT_2
     * }
     */
    public static MemorySegment GUID_PROCESSOR_FREQUENCY_LIMIT_2() {
        return GUID_PROCESSOR_FREQUENCY_LIMIT_2$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_FREQUENCY_LIMIT_2
     * }
     */
    public static void GUID_PROCESSOR_FREQUENCY_LIMIT_2(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_FREQUENCY_LIMIT_2$constants.SEGMENT, 0L, GUID_PROCESSOR_FREQUENCY_LIMIT_2$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_ALLOW_THROTTLING$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_ALLOW_THROTTLING").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_ALLOW_THROTTLING
     * }
     */
    public static GroupLayout GUID_PROCESSOR_ALLOW_THROTTLING$layout() {
        return GUID_PROCESSOR_ALLOW_THROTTLING$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_ALLOW_THROTTLING
     * }
     */
    public static MemorySegment GUID_PROCESSOR_ALLOW_THROTTLING() {
        return GUID_PROCESSOR_ALLOW_THROTTLING$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_ALLOW_THROTTLING
     * }
     */
    public static void GUID_PROCESSOR_ALLOW_THROTTLING(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_ALLOW_THROTTLING$constants.SEGMENT, 0L, GUID_PROCESSOR_ALLOW_THROTTLING$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_IDLESTATE_POLICY$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_IDLESTATE_POLICY").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_IDLESTATE_POLICY
     * }
     */
    public static GroupLayout GUID_PROCESSOR_IDLESTATE_POLICY$layout() {
        return GUID_PROCESSOR_IDLESTATE_POLICY$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_IDLESTATE_POLICY
     * }
     */
    public static MemorySegment GUID_PROCESSOR_IDLESTATE_POLICY() {
        return GUID_PROCESSOR_IDLESTATE_POLICY$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_IDLESTATE_POLICY
     * }
     */
    public static void GUID_PROCESSOR_IDLESTATE_POLICY(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_IDLESTATE_POLICY$constants.SEGMENT, 0L, GUID_PROCESSOR_IDLESTATE_POLICY$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_PERFSTATE_POLICY$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_PERFSTATE_POLICY").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERFSTATE_POLICY
     * }
     */
    public static GroupLayout GUID_PROCESSOR_PERFSTATE_POLICY$layout() {
        return GUID_PROCESSOR_PERFSTATE_POLICY$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERFSTATE_POLICY
     * }
     */
    public static MemorySegment GUID_PROCESSOR_PERFSTATE_POLICY() {
        return GUID_PROCESSOR_PERFSTATE_POLICY$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERFSTATE_POLICY
     * }
     */
    public static void GUID_PROCESSOR_PERFSTATE_POLICY(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_PERFSTATE_POLICY$constants.SEGMENT, 0L, GUID_PROCESSOR_PERFSTATE_POLICY$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_PERF_INCREASE_THRESHOLD$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_PERF_INCREASE_THRESHOLD").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_INCREASE_THRESHOLD
     * }
     */
    public static GroupLayout GUID_PROCESSOR_PERF_INCREASE_THRESHOLD$layout() {
        return GUID_PROCESSOR_PERF_INCREASE_THRESHOLD$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_INCREASE_THRESHOLD
     * }
     */
    public static MemorySegment GUID_PROCESSOR_PERF_INCREASE_THRESHOLD() {
        return GUID_PROCESSOR_PERF_INCREASE_THRESHOLD$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_INCREASE_THRESHOLD
     * }
     */
    public static void GUID_PROCESSOR_PERF_INCREASE_THRESHOLD(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_PERF_INCREASE_THRESHOLD$constants.SEGMENT, 0L, GUID_PROCESSOR_PERF_INCREASE_THRESHOLD$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_PERF_INCREASE_THRESHOLD_1$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_PERF_INCREASE_THRESHOLD_1").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_INCREASE_THRESHOLD_1
     * }
     */
    public static GroupLayout GUID_PROCESSOR_PERF_INCREASE_THRESHOLD_1$layout() {
        return GUID_PROCESSOR_PERF_INCREASE_THRESHOLD_1$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_INCREASE_THRESHOLD_1
     * }
     */
    public static MemorySegment GUID_PROCESSOR_PERF_INCREASE_THRESHOLD_1() {
        return GUID_PROCESSOR_PERF_INCREASE_THRESHOLD_1$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_INCREASE_THRESHOLD_1
     * }
     */
    public static void GUID_PROCESSOR_PERF_INCREASE_THRESHOLD_1(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_PERF_INCREASE_THRESHOLD_1$constants.SEGMENT, 0L, GUID_PROCESSOR_PERF_INCREASE_THRESHOLD_1$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_PERF_DECREASE_THRESHOLD$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_PERF_DECREASE_THRESHOLD").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_DECREASE_THRESHOLD
     * }
     */
    public static GroupLayout GUID_PROCESSOR_PERF_DECREASE_THRESHOLD$layout() {
        return GUID_PROCESSOR_PERF_DECREASE_THRESHOLD$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_DECREASE_THRESHOLD
     * }
     */
    public static MemorySegment GUID_PROCESSOR_PERF_DECREASE_THRESHOLD() {
        return GUID_PROCESSOR_PERF_DECREASE_THRESHOLD$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_DECREASE_THRESHOLD
     * }
     */
    public static void GUID_PROCESSOR_PERF_DECREASE_THRESHOLD(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_PERF_DECREASE_THRESHOLD$constants.SEGMENT, 0L, GUID_PROCESSOR_PERF_DECREASE_THRESHOLD$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_PERF_DECREASE_THRESHOLD_1$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_PERF_DECREASE_THRESHOLD_1").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_DECREASE_THRESHOLD_1
     * }
     */
    public static GroupLayout GUID_PROCESSOR_PERF_DECREASE_THRESHOLD_1$layout() {
        return GUID_PROCESSOR_PERF_DECREASE_THRESHOLD_1$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_DECREASE_THRESHOLD_1
     * }
     */
    public static MemorySegment GUID_PROCESSOR_PERF_DECREASE_THRESHOLD_1() {
        return GUID_PROCESSOR_PERF_DECREASE_THRESHOLD_1$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_DECREASE_THRESHOLD_1
     * }
     */
    public static void GUID_PROCESSOR_PERF_DECREASE_THRESHOLD_1(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_PERF_DECREASE_THRESHOLD_1$constants.SEGMENT, 0L, GUID_PROCESSOR_PERF_DECREASE_THRESHOLD_1$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_PERF_INCREASE_POLICY$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_PERF_INCREASE_POLICY").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_INCREASE_POLICY
     * }
     */
    public static GroupLayout GUID_PROCESSOR_PERF_INCREASE_POLICY$layout() {
        return GUID_PROCESSOR_PERF_INCREASE_POLICY$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_INCREASE_POLICY
     * }
     */
    public static MemorySegment GUID_PROCESSOR_PERF_INCREASE_POLICY() {
        return GUID_PROCESSOR_PERF_INCREASE_POLICY$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_INCREASE_POLICY
     * }
     */
    public static void GUID_PROCESSOR_PERF_INCREASE_POLICY(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_PERF_INCREASE_POLICY$constants.SEGMENT, 0L, GUID_PROCESSOR_PERF_INCREASE_POLICY$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_PERF_INCREASE_POLICY_1$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_PERF_INCREASE_POLICY_1").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_INCREASE_POLICY_1
     * }
     */
    public static GroupLayout GUID_PROCESSOR_PERF_INCREASE_POLICY_1$layout() {
        return GUID_PROCESSOR_PERF_INCREASE_POLICY_1$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_INCREASE_POLICY_1
     * }
     */
    public static MemorySegment GUID_PROCESSOR_PERF_INCREASE_POLICY_1() {
        return GUID_PROCESSOR_PERF_INCREASE_POLICY_1$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_INCREASE_POLICY_1
     * }
     */
    public static void GUID_PROCESSOR_PERF_INCREASE_POLICY_1(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_PERF_INCREASE_POLICY_1$constants.SEGMENT, 0L, GUID_PROCESSOR_PERF_INCREASE_POLICY_1$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_PERF_DECREASE_POLICY$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_PERF_DECREASE_POLICY").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_DECREASE_POLICY
     * }
     */
    public static GroupLayout GUID_PROCESSOR_PERF_DECREASE_POLICY$layout() {
        return GUID_PROCESSOR_PERF_DECREASE_POLICY$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_DECREASE_POLICY
     * }
     */
    public static MemorySegment GUID_PROCESSOR_PERF_DECREASE_POLICY() {
        return GUID_PROCESSOR_PERF_DECREASE_POLICY$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_DECREASE_POLICY
     * }
     */
    public static void GUID_PROCESSOR_PERF_DECREASE_POLICY(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_PERF_DECREASE_POLICY$constants.SEGMENT, 0L, GUID_PROCESSOR_PERF_DECREASE_POLICY$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_PERF_DECREASE_POLICY_1$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_PERF_DECREASE_POLICY_1").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_DECREASE_POLICY_1
     * }
     */
    public static GroupLayout GUID_PROCESSOR_PERF_DECREASE_POLICY_1$layout() {
        return GUID_PROCESSOR_PERF_DECREASE_POLICY_1$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_DECREASE_POLICY_1
     * }
     */
    public static MemorySegment GUID_PROCESSOR_PERF_DECREASE_POLICY_1() {
        return GUID_PROCESSOR_PERF_DECREASE_POLICY_1$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_DECREASE_POLICY_1
     * }
     */
    public static void GUID_PROCESSOR_PERF_DECREASE_POLICY_1(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_PERF_DECREASE_POLICY_1$constants.SEGMENT, 0L, GUID_PROCESSOR_PERF_DECREASE_POLICY_1$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_PERF_INCREASE_TIME$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_PERF_INCREASE_TIME").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_INCREASE_TIME
     * }
     */
    public static GroupLayout GUID_PROCESSOR_PERF_INCREASE_TIME$layout() {
        return GUID_PROCESSOR_PERF_INCREASE_TIME$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_INCREASE_TIME
     * }
     */
    public static MemorySegment GUID_PROCESSOR_PERF_INCREASE_TIME() {
        return GUID_PROCESSOR_PERF_INCREASE_TIME$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_INCREASE_TIME
     * }
     */
    public static void GUID_PROCESSOR_PERF_INCREASE_TIME(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_PERF_INCREASE_TIME$constants.SEGMENT, 0L, GUID_PROCESSOR_PERF_INCREASE_TIME$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_PERF_INCREASE_TIME_1$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_PERF_INCREASE_TIME_1").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_INCREASE_TIME_1
     * }
     */
    public static GroupLayout GUID_PROCESSOR_PERF_INCREASE_TIME_1$layout() {
        return GUID_PROCESSOR_PERF_INCREASE_TIME_1$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_INCREASE_TIME_1
     * }
     */
    public static MemorySegment GUID_PROCESSOR_PERF_INCREASE_TIME_1() {
        return GUID_PROCESSOR_PERF_INCREASE_TIME_1$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_INCREASE_TIME_1
     * }
     */
    public static void GUID_PROCESSOR_PERF_INCREASE_TIME_1(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_PERF_INCREASE_TIME_1$constants.SEGMENT, 0L, GUID_PROCESSOR_PERF_INCREASE_TIME_1$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_PERF_DECREASE_TIME$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_PERF_DECREASE_TIME").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_DECREASE_TIME
     * }
     */
    public static GroupLayout GUID_PROCESSOR_PERF_DECREASE_TIME$layout() {
        return GUID_PROCESSOR_PERF_DECREASE_TIME$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_DECREASE_TIME
     * }
     */
    public static MemorySegment GUID_PROCESSOR_PERF_DECREASE_TIME() {
        return GUID_PROCESSOR_PERF_DECREASE_TIME$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_DECREASE_TIME
     * }
     */
    public static void GUID_PROCESSOR_PERF_DECREASE_TIME(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_PERF_DECREASE_TIME$constants.SEGMENT, 0L, GUID_PROCESSOR_PERF_DECREASE_TIME$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_PERF_DECREASE_TIME_1$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_PERF_DECREASE_TIME_1").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_DECREASE_TIME_1
     * }
     */
    public static GroupLayout GUID_PROCESSOR_PERF_DECREASE_TIME_1$layout() {
        return GUID_PROCESSOR_PERF_DECREASE_TIME_1$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_DECREASE_TIME_1
     * }
     */
    public static MemorySegment GUID_PROCESSOR_PERF_DECREASE_TIME_1() {
        return GUID_PROCESSOR_PERF_DECREASE_TIME_1$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_DECREASE_TIME_1
     * }
     */
    public static void GUID_PROCESSOR_PERF_DECREASE_TIME_1(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_PERF_DECREASE_TIME_1$constants.SEGMENT, 0L, GUID_PROCESSOR_PERF_DECREASE_TIME_1$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_PERF_TIME_CHECK$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_PERF_TIME_CHECK").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_TIME_CHECK
     * }
     */
    public static GroupLayout GUID_PROCESSOR_PERF_TIME_CHECK$layout() {
        return GUID_PROCESSOR_PERF_TIME_CHECK$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_TIME_CHECK
     * }
     */
    public static MemorySegment GUID_PROCESSOR_PERF_TIME_CHECK() {
        return GUID_PROCESSOR_PERF_TIME_CHECK$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_TIME_CHECK
     * }
     */
    public static void GUID_PROCESSOR_PERF_TIME_CHECK(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_PERF_TIME_CHECK$constants.SEGMENT, 0L, GUID_PROCESSOR_PERF_TIME_CHECK$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_PERF_BOOST_POLICY$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_PERF_BOOST_POLICY").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_BOOST_POLICY
     * }
     */
    public static GroupLayout GUID_PROCESSOR_PERF_BOOST_POLICY$layout() {
        return GUID_PROCESSOR_PERF_BOOST_POLICY$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_BOOST_POLICY
     * }
     */
    public static MemorySegment GUID_PROCESSOR_PERF_BOOST_POLICY() {
        return GUID_PROCESSOR_PERF_BOOST_POLICY$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_BOOST_POLICY
     * }
     */
    public static void GUID_PROCESSOR_PERF_BOOST_POLICY(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_PERF_BOOST_POLICY$constants.SEGMENT, 0L, GUID_PROCESSOR_PERF_BOOST_POLICY$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_PERF_BOOST_MODE$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_PERF_BOOST_MODE").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_BOOST_MODE
     * }
     */
    public static GroupLayout GUID_PROCESSOR_PERF_BOOST_MODE$layout() {
        return GUID_PROCESSOR_PERF_BOOST_MODE$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_BOOST_MODE
     * }
     */
    public static MemorySegment GUID_PROCESSOR_PERF_BOOST_MODE() {
        return GUID_PROCESSOR_PERF_BOOST_MODE$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_BOOST_MODE
     * }
     */
    public static void GUID_PROCESSOR_PERF_BOOST_MODE(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_PERF_BOOST_MODE$constants.SEGMENT, 0L, GUID_PROCESSOR_PERF_BOOST_MODE$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_PERF_AUTONOMOUS_MODE$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_PERF_AUTONOMOUS_MODE").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_AUTONOMOUS_MODE
     * }
     */
    public static GroupLayout GUID_PROCESSOR_PERF_AUTONOMOUS_MODE$layout() {
        return GUID_PROCESSOR_PERF_AUTONOMOUS_MODE$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_AUTONOMOUS_MODE
     * }
     */
    public static MemorySegment GUID_PROCESSOR_PERF_AUTONOMOUS_MODE() {
        return GUID_PROCESSOR_PERF_AUTONOMOUS_MODE$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_AUTONOMOUS_MODE
     * }
     */
    public static void GUID_PROCESSOR_PERF_AUTONOMOUS_MODE(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_PERF_AUTONOMOUS_MODE$constants.SEGMENT, 0L, GUID_PROCESSOR_PERF_AUTONOMOUS_MODE$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE
     * }
     */
    public static GroupLayout GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE$layout() {
        return GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE
     * }
     */
    public static MemorySegment GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE() {
        return GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE
     * }
     */
    public static void GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE$constants.SEGMENT, 0L, GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE_1$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE_1").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE_1
     * }
     */
    public static GroupLayout GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE_1$layout() {
        return GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE_1$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE_1
     * }
     */
    public static MemorySegment GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE_1() {
        return GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE_1$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE_1
     * }
     */
    public static void GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE_1(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE_1$constants.SEGMENT, 0L, GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE_1$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE_2$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE_2").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE_2
     * }
     */
    public static GroupLayout GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE_2$layout() {
        return GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE_2$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE_2
     * }
     */
    public static MemorySegment GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE_2() {
        return GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE_2$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE_2
     * }
     */
    public static void GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE_2(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE_2$constants.SEGMENT, 0L, GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE_2$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_PERF_AUTONOMOUS_ACTIVITY_WINDOW$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_PERF_AUTONOMOUS_ACTIVITY_WINDOW").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_AUTONOMOUS_ACTIVITY_WINDOW
     * }
     */
    public static GroupLayout GUID_PROCESSOR_PERF_AUTONOMOUS_ACTIVITY_WINDOW$layout() {
        return GUID_PROCESSOR_PERF_AUTONOMOUS_ACTIVITY_WINDOW$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_AUTONOMOUS_ACTIVITY_WINDOW
     * }
     */
    public static MemorySegment GUID_PROCESSOR_PERF_AUTONOMOUS_ACTIVITY_WINDOW() {
        return GUID_PROCESSOR_PERF_AUTONOMOUS_ACTIVITY_WINDOW$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_AUTONOMOUS_ACTIVITY_WINDOW
     * }
     */
    public static void GUID_PROCESSOR_PERF_AUTONOMOUS_ACTIVITY_WINDOW(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_PERF_AUTONOMOUS_ACTIVITY_WINDOW$constants.SEGMENT, 0L, GUID_PROCESSOR_PERF_AUTONOMOUS_ACTIVITY_WINDOW$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_DUTY_CYCLING$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_DUTY_CYCLING").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_DUTY_CYCLING
     * }
     */
    public static GroupLayout GUID_PROCESSOR_DUTY_CYCLING$layout() {
        return GUID_PROCESSOR_DUTY_CYCLING$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_DUTY_CYCLING
     * }
     */
    public static MemorySegment GUID_PROCESSOR_DUTY_CYCLING() {
        return GUID_PROCESSOR_DUTY_CYCLING$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_DUTY_CYCLING
     * }
     */
    public static void GUID_PROCESSOR_DUTY_CYCLING(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_DUTY_CYCLING$constants.SEGMENT, 0L, GUID_PROCESSOR_DUTY_CYCLING$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_IDLE_ALLOW_SCALING$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_IDLE_ALLOW_SCALING").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_IDLE_ALLOW_SCALING
     * }
     */
    public static GroupLayout GUID_PROCESSOR_IDLE_ALLOW_SCALING$layout() {
        return GUID_PROCESSOR_IDLE_ALLOW_SCALING$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_IDLE_ALLOW_SCALING
     * }
     */
    public static MemorySegment GUID_PROCESSOR_IDLE_ALLOW_SCALING() {
        return GUID_PROCESSOR_IDLE_ALLOW_SCALING$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_IDLE_ALLOW_SCALING
     * }
     */
    public static void GUID_PROCESSOR_IDLE_ALLOW_SCALING(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_IDLE_ALLOW_SCALING$constants.SEGMENT, 0L, GUID_PROCESSOR_IDLE_ALLOW_SCALING$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_IDLE_DISABLE$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_IDLE_DISABLE").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_IDLE_DISABLE
     * }
     */
    public static GroupLayout GUID_PROCESSOR_IDLE_DISABLE$layout() {
        return GUID_PROCESSOR_IDLE_DISABLE$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_IDLE_DISABLE
     * }
     */
    public static MemorySegment GUID_PROCESSOR_IDLE_DISABLE() {
        return GUID_PROCESSOR_IDLE_DISABLE$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_IDLE_DISABLE
     * }
     */
    public static void GUID_PROCESSOR_IDLE_DISABLE(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_IDLE_DISABLE$constants.SEGMENT, 0L, GUID_PROCESSOR_IDLE_DISABLE$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_IDLE_STATE_MAXIMUM$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_IDLE_STATE_MAXIMUM").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_IDLE_STATE_MAXIMUM
     * }
     */
    public static GroupLayout GUID_PROCESSOR_IDLE_STATE_MAXIMUM$layout() {
        return GUID_PROCESSOR_IDLE_STATE_MAXIMUM$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_IDLE_STATE_MAXIMUM
     * }
     */
    public static MemorySegment GUID_PROCESSOR_IDLE_STATE_MAXIMUM() {
        return GUID_PROCESSOR_IDLE_STATE_MAXIMUM$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_IDLE_STATE_MAXIMUM
     * }
     */
    public static void GUID_PROCESSOR_IDLE_STATE_MAXIMUM(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_IDLE_STATE_MAXIMUM$constants.SEGMENT, 0L, GUID_PROCESSOR_IDLE_STATE_MAXIMUM$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_IDLE_TIME_CHECK$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_IDLE_TIME_CHECK").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_IDLE_TIME_CHECK
     * }
     */
    public static GroupLayout GUID_PROCESSOR_IDLE_TIME_CHECK$layout() {
        return GUID_PROCESSOR_IDLE_TIME_CHECK$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_IDLE_TIME_CHECK
     * }
     */
    public static MemorySegment GUID_PROCESSOR_IDLE_TIME_CHECK() {
        return GUID_PROCESSOR_IDLE_TIME_CHECK$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_IDLE_TIME_CHECK
     * }
     */
    public static void GUID_PROCESSOR_IDLE_TIME_CHECK(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_IDLE_TIME_CHECK$constants.SEGMENT, 0L, GUID_PROCESSOR_IDLE_TIME_CHECK$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_IDLE_DEMOTE_THRESHOLD$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_IDLE_DEMOTE_THRESHOLD").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_IDLE_DEMOTE_THRESHOLD
     * }
     */
    public static GroupLayout GUID_PROCESSOR_IDLE_DEMOTE_THRESHOLD$layout() {
        return GUID_PROCESSOR_IDLE_DEMOTE_THRESHOLD$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_IDLE_DEMOTE_THRESHOLD
     * }
     */
    public static MemorySegment GUID_PROCESSOR_IDLE_DEMOTE_THRESHOLD() {
        return GUID_PROCESSOR_IDLE_DEMOTE_THRESHOLD$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_IDLE_DEMOTE_THRESHOLD
     * }
     */
    public static void GUID_PROCESSOR_IDLE_DEMOTE_THRESHOLD(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_IDLE_DEMOTE_THRESHOLD$constants.SEGMENT, 0L, GUID_PROCESSOR_IDLE_DEMOTE_THRESHOLD$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_IDLE_PROMOTE_THRESHOLD$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_IDLE_PROMOTE_THRESHOLD").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_IDLE_PROMOTE_THRESHOLD
     * }
     */
    public static GroupLayout GUID_PROCESSOR_IDLE_PROMOTE_THRESHOLD$layout() {
        return GUID_PROCESSOR_IDLE_PROMOTE_THRESHOLD$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_IDLE_PROMOTE_THRESHOLD
     * }
     */
    public static MemorySegment GUID_PROCESSOR_IDLE_PROMOTE_THRESHOLD() {
        return GUID_PROCESSOR_IDLE_PROMOTE_THRESHOLD$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_IDLE_PROMOTE_THRESHOLD
     * }
     */
    public static void GUID_PROCESSOR_IDLE_PROMOTE_THRESHOLD(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_IDLE_PROMOTE_THRESHOLD$constants.SEGMENT, 0L, GUID_PROCESSOR_IDLE_PROMOTE_THRESHOLD$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_CORE_PARKING_INCREASE_THRESHOLD$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_CORE_PARKING_INCREASE_THRESHOLD").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CORE_PARKING_INCREASE_THRESHOLD
     * }
     */
    public static GroupLayout GUID_PROCESSOR_CORE_PARKING_INCREASE_THRESHOLD$layout() {
        return GUID_PROCESSOR_CORE_PARKING_INCREASE_THRESHOLD$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CORE_PARKING_INCREASE_THRESHOLD
     * }
     */
    public static MemorySegment GUID_PROCESSOR_CORE_PARKING_INCREASE_THRESHOLD() {
        return GUID_PROCESSOR_CORE_PARKING_INCREASE_THRESHOLD$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CORE_PARKING_INCREASE_THRESHOLD
     * }
     */
    public static void GUID_PROCESSOR_CORE_PARKING_INCREASE_THRESHOLD(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_CORE_PARKING_INCREASE_THRESHOLD$constants.SEGMENT, 0L, GUID_PROCESSOR_CORE_PARKING_INCREASE_THRESHOLD$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_CORE_PARKING_DECREASE_THRESHOLD$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_CORE_PARKING_DECREASE_THRESHOLD").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CORE_PARKING_DECREASE_THRESHOLD
     * }
     */
    public static GroupLayout GUID_PROCESSOR_CORE_PARKING_DECREASE_THRESHOLD$layout() {
        return GUID_PROCESSOR_CORE_PARKING_DECREASE_THRESHOLD$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CORE_PARKING_DECREASE_THRESHOLD
     * }
     */
    public static MemorySegment GUID_PROCESSOR_CORE_PARKING_DECREASE_THRESHOLD() {
        return GUID_PROCESSOR_CORE_PARKING_DECREASE_THRESHOLD$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CORE_PARKING_DECREASE_THRESHOLD
     * }
     */
    public static void GUID_PROCESSOR_CORE_PARKING_DECREASE_THRESHOLD(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_CORE_PARKING_DECREASE_THRESHOLD$constants.SEGMENT, 0L, GUID_PROCESSOR_CORE_PARKING_DECREASE_THRESHOLD$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_CORE_PARKING_INCREASE_POLICY$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_CORE_PARKING_INCREASE_POLICY").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CORE_PARKING_INCREASE_POLICY
     * }
     */
    public static GroupLayout GUID_PROCESSOR_CORE_PARKING_INCREASE_POLICY$layout() {
        return GUID_PROCESSOR_CORE_PARKING_INCREASE_POLICY$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CORE_PARKING_INCREASE_POLICY
     * }
     */
    public static MemorySegment GUID_PROCESSOR_CORE_PARKING_INCREASE_POLICY() {
        return GUID_PROCESSOR_CORE_PARKING_INCREASE_POLICY$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CORE_PARKING_INCREASE_POLICY
     * }
     */
    public static void GUID_PROCESSOR_CORE_PARKING_INCREASE_POLICY(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_CORE_PARKING_INCREASE_POLICY$constants.SEGMENT, 0L, GUID_PROCESSOR_CORE_PARKING_INCREASE_POLICY$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_CORE_PARKING_DECREASE_POLICY$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_CORE_PARKING_DECREASE_POLICY").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CORE_PARKING_DECREASE_POLICY
     * }
     */
    public static GroupLayout GUID_PROCESSOR_CORE_PARKING_DECREASE_POLICY$layout() {
        return GUID_PROCESSOR_CORE_PARKING_DECREASE_POLICY$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CORE_PARKING_DECREASE_POLICY
     * }
     */
    public static MemorySegment GUID_PROCESSOR_CORE_PARKING_DECREASE_POLICY() {
        return GUID_PROCESSOR_CORE_PARKING_DECREASE_POLICY$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CORE_PARKING_DECREASE_POLICY
     * }
     */
    public static void GUID_PROCESSOR_CORE_PARKING_DECREASE_POLICY(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_CORE_PARKING_DECREASE_POLICY$constants.SEGMENT, 0L, GUID_PROCESSOR_CORE_PARKING_DECREASE_POLICY$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_CORE_PARKING_MAX_CORES$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_CORE_PARKING_MAX_CORES").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CORE_PARKING_MAX_CORES
     * }
     */
    public static GroupLayout GUID_PROCESSOR_CORE_PARKING_MAX_CORES$layout() {
        return GUID_PROCESSOR_CORE_PARKING_MAX_CORES$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CORE_PARKING_MAX_CORES
     * }
     */
    public static MemorySegment GUID_PROCESSOR_CORE_PARKING_MAX_CORES() {
        return GUID_PROCESSOR_CORE_PARKING_MAX_CORES$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CORE_PARKING_MAX_CORES
     * }
     */
    public static void GUID_PROCESSOR_CORE_PARKING_MAX_CORES(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_CORE_PARKING_MAX_CORES$constants.SEGMENT, 0L, GUID_PROCESSOR_CORE_PARKING_MAX_CORES$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_CORE_PARKING_MAX_CORES_1$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_CORE_PARKING_MAX_CORES_1").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CORE_PARKING_MAX_CORES_1
     * }
     */
    public static GroupLayout GUID_PROCESSOR_CORE_PARKING_MAX_CORES_1$layout() {
        return GUID_PROCESSOR_CORE_PARKING_MAX_CORES_1$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CORE_PARKING_MAX_CORES_1
     * }
     */
    public static MemorySegment GUID_PROCESSOR_CORE_PARKING_MAX_CORES_1() {
        return GUID_PROCESSOR_CORE_PARKING_MAX_CORES_1$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CORE_PARKING_MAX_CORES_1
     * }
     */
    public static void GUID_PROCESSOR_CORE_PARKING_MAX_CORES_1(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_CORE_PARKING_MAX_CORES_1$constants.SEGMENT, 0L, GUID_PROCESSOR_CORE_PARKING_MAX_CORES_1$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_CORE_PARKING_MIN_CORES$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_CORE_PARKING_MIN_CORES").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CORE_PARKING_MIN_CORES
     * }
     */
    public static GroupLayout GUID_PROCESSOR_CORE_PARKING_MIN_CORES$layout() {
        return GUID_PROCESSOR_CORE_PARKING_MIN_CORES$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CORE_PARKING_MIN_CORES
     * }
     */
    public static MemorySegment GUID_PROCESSOR_CORE_PARKING_MIN_CORES() {
        return GUID_PROCESSOR_CORE_PARKING_MIN_CORES$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CORE_PARKING_MIN_CORES
     * }
     */
    public static void GUID_PROCESSOR_CORE_PARKING_MIN_CORES(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_CORE_PARKING_MIN_CORES$constants.SEGMENT, 0L, GUID_PROCESSOR_CORE_PARKING_MIN_CORES$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_CORE_PARKING_MIN_CORES_1$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_CORE_PARKING_MIN_CORES_1").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CORE_PARKING_MIN_CORES_1
     * }
     */
    public static GroupLayout GUID_PROCESSOR_CORE_PARKING_MIN_CORES_1$layout() {
        return GUID_PROCESSOR_CORE_PARKING_MIN_CORES_1$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CORE_PARKING_MIN_CORES_1
     * }
     */
    public static MemorySegment GUID_PROCESSOR_CORE_PARKING_MIN_CORES_1() {
        return GUID_PROCESSOR_CORE_PARKING_MIN_CORES_1$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CORE_PARKING_MIN_CORES_1
     * }
     */
    public static void GUID_PROCESSOR_CORE_PARKING_MIN_CORES_1(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_CORE_PARKING_MIN_CORES_1$constants.SEGMENT, 0L, GUID_PROCESSOR_CORE_PARKING_MIN_CORES_1$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_CORE_PARKING_INCREASE_TIME$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_CORE_PARKING_INCREASE_TIME").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CORE_PARKING_INCREASE_TIME
     * }
     */
    public static GroupLayout GUID_PROCESSOR_CORE_PARKING_INCREASE_TIME$layout() {
        return GUID_PROCESSOR_CORE_PARKING_INCREASE_TIME$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CORE_PARKING_INCREASE_TIME
     * }
     */
    public static MemorySegment GUID_PROCESSOR_CORE_PARKING_INCREASE_TIME() {
        return GUID_PROCESSOR_CORE_PARKING_INCREASE_TIME$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CORE_PARKING_INCREASE_TIME
     * }
     */
    public static void GUID_PROCESSOR_CORE_PARKING_INCREASE_TIME(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_CORE_PARKING_INCREASE_TIME$constants.SEGMENT, 0L, GUID_PROCESSOR_CORE_PARKING_INCREASE_TIME$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_CORE_PARKING_DECREASE_TIME$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_CORE_PARKING_DECREASE_TIME").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CORE_PARKING_DECREASE_TIME
     * }
     */
    public static GroupLayout GUID_PROCESSOR_CORE_PARKING_DECREASE_TIME$layout() {
        return GUID_PROCESSOR_CORE_PARKING_DECREASE_TIME$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CORE_PARKING_DECREASE_TIME
     * }
     */
    public static MemorySegment GUID_PROCESSOR_CORE_PARKING_DECREASE_TIME() {
        return GUID_PROCESSOR_CORE_PARKING_DECREASE_TIME$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CORE_PARKING_DECREASE_TIME
     * }
     */
    public static void GUID_PROCESSOR_CORE_PARKING_DECREASE_TIME(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_CORE_PARKING_DECREASE_TIME$constants.SEGMENT, 0L, GUID_PROCESSOR_CORE_PARKING_DECREASE_TIME$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_DECREASE_FACTOR$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_DECREASE_FACTOR").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_DECREASE_FACTOR
     * }
     */
    public static GroupLayout GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_DECREASE_FACTOR$layout() {
        return GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_DECREASE_FACTOR$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_DECREASE_FACTOR
     * }
     */
    public static MemorySegment GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_DECREASE_FACTOR() {
        return GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_DECREASE_FACTOR$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_DECREASE_FACTOR
     * }
     */
    public static void GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_DECREASE_FACTOR(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_DECREASE_FACTOR$constants.SEGMENT, 0L, GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_DECREASE_FACTOR$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_THRESHOLD$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_THRESHOLD").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_THRESHOLD
     * }
     */
    public static GroupLayout GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_THRESHOLD$layout() {
        return GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_THRESHOLD$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_THRESHOLD
     * }
     */
    public static MemorySegment GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_THRESHOLD() {
        return GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_THRESHOLD$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_THRESHOLD
     * }
     */
    public static void GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_THRESHOLD(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_THRESHOLD$constants.SEGMENT, 0L, GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_THRESHOLD$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_CORE_PARKING_AFFINITY_WEIGHTING$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_CORE_PARKING_AFFINITY_WEIGHTING").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CORE_PARKING_AFFINITY_WEIGHTING
     * }
     */
    public static GroupLayout GUID_PROCESSOR_CORE_PARKING_AFFINITY_WEIGHTING$layout() {
        return GUID_PROCESSOR_CORE_PARKING_AFFINITY_WEIGHTING$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CORE_PARKING_AFFINITY_WEIGHTING
     * }
     */
    public static MemorySegment GUID_PROCESSOR_CORE_PARKING_AFFINITY_WEIGHTING() {
        return GUID_PROCESSOR_CORE_PARKING_AFFINITY_WEIGHTING$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CORE_PARKING_AFFINITY_WEIGHTING
     * }
     */
    public static void GUID_PROCESSOR_CORE_PARKING_AFFINITY_WEIGHTING(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_CORE_PARKING_AFFINITY_WEIGHTING$constants.SEGMENT, 0L, GUID_PROCESSOR_CORE_PARKING_AFFINITY_WEIGHTING$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_DECREASE_FACTOR$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_DECREASE_FACTOR").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_DECREASE_FACTOR
     * }
     */
    public static GroupLayout GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_DECREASE_FACTOR$layout() {
        return GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_DECREASE_FACTOR$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_DECREASE_FACTOR
     * }
     */
    public static MemorySegment GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_DECREASE_FACTOR() {
        return GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_DECREASE_FACTOR$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_DECREASE_FACTOR
     * }
     */
    public static void GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_DECREASE_FACTOR(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_DECREASE_FACTOR$constants.SEGMENT, 0L, GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_DECREASE_FACTOR$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_THRESHOLD$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_THRESHOLD").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_THRESHOLD
     * }
     */
    public static GroupLayout GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_THRESHOLD$layout() {
        return GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_THRESHOLD$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_THRESHOLD
     * }
     */
    public static MemorySegment GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_THRESHOLD() {
        return GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_THRESHOLD$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_THRESHOLD
     * }
     */
    public static void GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_THRESHOLD(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_THRESHOLD$constants.SEGMENT, 0L, GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_THRESHOLD$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_WEIGHTING$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_WEIGHTING").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_WEIGHTING
     * }
     */
    public static GroupLayout GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_WEIGHTING$layout() {
        return GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_WEIGHTING$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_WEIGHTING
     * }
     */
    public static MemorySegment GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_WEIGHTING() {
        return GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_WEIGHTING$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_WEIGHTING
     * }
     */
    public static void GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_WEIGHTING(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_WEIGHTING$constants.SEGMENT, 0L, GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_WEIGHTING$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_THRESHOLD$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_THRESHOLD").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_THRESHOLD
     * }
     */
    public static GroupLayout GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_THRESHOLD$layout() {
        return GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_THRESHOLD$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_THRESHOLD
     * }
     */
    public static MemorySegment GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_THRESHOLD() {
        return GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_THRESHOLD$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_THRESHOLD
     * }
     */
    public static void GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_THRESHOLD(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_THRESHOLD$constants.SEGMENT, 0L, GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_THRESHOLD$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_PARKING_CORE_OVERRIDE$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_PARKING_CORE_OVERRIDE").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PARKING_CORE_OVERRIDE
     * }
     */
    public static GroupLayout GUID_PROCESSOR_PARKING_CORE_OVERRIDE$layout() {
        return GUID_PROCESSOR_PARKING_CORE_OVERRIDE$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PARKING_CORE_OVERRIDE
     * }
     */
    public static MemorySegment GUID_PROCESSOR_PARKING_CORE_OVERRIDE() {
        return GUID_PROCESSOR_PARKING_CORE_OVERRIDE$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PARKING_CORE_OVERRIDE
     * }
     */
    public static void GUID_PROCESSOR_PARKING_CORE_OVERRIDE(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_PARKING_CORE_OVERRIDE$constants.SEGMENT, 0L, GUID_PROCESSOR_PARKING_CORE_OVERRIDE$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_PARKING_PERF_STATE$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_PARKING_PERF_STATE").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PARKING_PERF_STATE
     * }
     */
    public static GroupLayout GUID_PROCESSOR_PARKING_PERF_STATE$layout() {
        return GUID_PROCESSOR_PARKING_PERF_STATE$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PARKING_PERF_STATE
     * }
     */
    public static MemorySegment GUID_PROCESSOR_PARKING_PERF_STATE() {
        return GUID_PROCESSOR_PARKING_PERF_STATE$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PARKING_PERF_STATE
     * }
     */
    public static void GUID_PROCESSOR_PARKING_PERF_STATE(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_PARKING_PERF_STATE$constants.SEGMENT, 0L, GUID_PROCESSOR_PARKING_PERF_STATE$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_PARKING_PERF_STATE_1$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_PARKING_PERF_STATE_1").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PARKING_PERF_STATE_1
     * }
     */
    public static GroupLayout GUID_PROCESSOR_PARKING_PERF_STATE_1$layout() {
        return GUID_PROCESSOR_PARKING_PERF_STATE_1$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PARKING_PERF_STATE_1
     * }
     */
    public static MemorySegment GUID_PROCESSOR_PARKING_PERF_STATE_1() {
        return GUID_PROCESSOR_PARKING_PERF_STATE_1$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PARKING_PERF_STATE_1
     * }
     */
    public static void GUID_PROCESSOR_PARKING_PERF_STATE_1(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_PARKING_PERF_STATE_1$constants.SEGMENT, 0L, GUID_PROCESSOR_PARKING_PERF_STATE_1$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_PARKING_CONCURRENCY_THRESHOLD$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_PARKING_CONCURRENCY_THRESHOLD").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PARKING_CONCURRENCY_THRESHOLD
     * }
     */
    public static GroupLayout GUID_PROCESSOR_PARKING_CONCURRENCY_THRESHOLD$layout() {
        return GUID_PROCESSOR_PARKING_CONCURRENCY_THRESHOLD$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PARKING_CONCURRENCY_THRESHOLD
     * }
     */
    public static MemorySegment GUID_PROCESSOR_PARKING_CONCURRENCY_THRESHOLD() {
        return GUID_PROCESSOR_PARKING_CONCURRENCY_THRESHOLD$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PARKING_CONCURRENCY_THRESHOLD
     * }
     */
    public static void GUID_PROCESSOR_PARKING_CONCURRENCY_THRESHOLD(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_PARKING_CONCURRENCY_THRESHOLD$constants.SEGMENT, 0L, GUID_PROCESSOR_PARKING_CONCURRENCY_THRESHOLD$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_PARKING_HEADROOM_THRESHOLD$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_PARKING_HEADROOM_THRESHOLD").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PARKING_HEADROOM_THRESHOLD
     * }
     */
    public static GroupLayout GUID_PROCESSOR_PARKING_HEADROOM_THRESHOLD$layout() {
        return GUID_PROCESSOR_PARKING_HEADROOM_THRESHOLD$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PARKING_HEADROOM_THRESHOLD
     * }
     */
    public static MemorySegment GUID_PROCESSOR_PARKING_HEADROOM_THRESHOLD() {
        return GUID_PROCESSOR_PARKING_HEADROOM_THRESHOLD$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PARKING_HEADROOM_THRESHOLD
     * }
     */
    public static void GUID_PROCESSOR_PARKING_HEADROOM_THRESHOLD(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_PARKING_HEADROOM_THRESHOLD$constants.SEGMENT, 0L, GUID_PROCESSOR_PARKING_HEADROOM_THRESHOLD$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_PARKING_DISTRIBUTION_THRESHOLD$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_PARKING_DISTRIBUTION_THRESHOLD").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PARKING_DISTRIBUTION_THRESHOLD
     * }
     */
    public static GroupLayout GUID_PROCESSOR_PARKING_DISTRIBUTION_THRESHOLD$layout() {
        return GUID_PROCESSOR_PARKING_DISTRIBUTION_THRESHOLD$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PARKING_DISTRIBUTION_THRESHOLD
     * }
     */
    public static MemorySegment GUID_PROCESSOR_PARKING_DISTRIBUTION_THRESHOLD() {
        return GUID_PROCESSOR_PARKING_DISTRIBUTION_THRESHOLD$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PARKING_DISTRIBUTION_THRESHOLD
     * }
     */
    public static void GUID_PROCESSOR_PARKING_DISTRIBUTION_THRESHOLD(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_PARKING_DISTRIBUTION_THRESHOLD$constants.SEGMENT, 0L, GUID_PROCESSOR_PARKING_DISTRIBUTION_THRESHOLD$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_SOFT_PARKING_LATENCY$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_SOFT_PARKING_LATENCY").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_SOFT_PARKING_LATENCY
     * }
     */
    public static GroupLayout GUID_PROCESSOR_SOFT_PARKING_LATENCY$layout() {
        return GUID_PROCESSOR_SOFT_PARKING_LATENCY$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_SOFT_PARKING_LATENCY
     * }
     */
    public static MemorySegment GUID_PROCESSOR_SOFT_PARKING_LATENCY() {
        return GUID_PROCESSOR_SOFT_PARKING_LATENCY$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_SOFT_PARKING_LATENCY
     * }
     */
    public static void GUID_PROCESSOR_SOFT_PARKING_LATENCY(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_SOFT_PARKING_LATENCY$constants.SEGMENT, 0L, GUID_PROCESSOR_SOFT_PARKING_LATENCY$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_PERF_HISTORY$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_PERF_HISTORY").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_HISTORY
     * }
     */
    public static GroupLayout GUID_PROCESSOR_PERF_HISTORY$layout() {
        return GUID_PROCESSOR_PERF_HISTORY$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_HISTORY
     * }
     */
    public static MemorySegment GUID_PROCESSOR_PERF_HISTORY() {
        return GUID_PROCESSOR_PERF_HISTORY$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_HISTORY
     * }
     */
    public static void GUID_PROCESSOR_PERF_HISTORY(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_PERF_HISTORY$constants.SEGMENT, 0L, GUID_PROCESSOR_PERF_HISTORY$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_PERF_HISTORY_1$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_PERF_HISTORY_1").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_HISTORY_1
     * }
     */
    public static GroupLayout GUID_PROCESSOR_PERF_HISTORY_1$layout() {
        return GUID_PROCESSOR_PERF_HISTORY_1$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_HISTORY_1
     * }
     */
    public static MemorySegment GUID_PROCESSOR_PERF_HISTORY_1() {
        return GUID_PROCESSOR_PERF_HISTORY_1$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_HISTORY_1
     * }
     */
    public static void GUID_PROCESSOR_PERF_HISTORY_1(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_PERF_HISTORY_1$constants.SEGMENT, 0L, GUID_PROCESSOR_PERF_HISTORY_1$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_PERF_INCREASE_HISTORY$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_PERF_INCREASE_HISTORY").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_INCREASE_HISTORY
     * }
     */
    public static GroupLayout GUID_PROCESSOR_PERF_INCREASE_HISTORY$layout() {
        return GUID_PROCESSOR_PERF_INCREASE_HISTORY$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_INCREASE_HISTORY
     * }
     */
    public static MemorySegment GUID_PROCESSOR_PERF_INCREASE_HISTORY() {
        return GUID_PROCESSOR_PERF_INCREASE_HISTORY$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_INCREASE_HISTORY
     * }
     */
    public static void GUID_PROCESSOR_PERF_INCREASE_HISTORY(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_PERF_INCREASE_HISTORY$constants.SEGMENT, 0L, GUID_PROCESSOR_PERF_INCREASE_HISTORY$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_PERF_DECREASE_HISTORY$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_PERF_DECREASE_HISTORY").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_DECREASE_HISTORY
     * }
     */
    public static GroupLayout GUID_PROCESSOR_PERF_DECREASE_HISTORY$layout() {
        return GUID_PROCESSOR_PERF_DECREASE_HISTORY$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_DECREASE_HISTORY
     * }
     */
    public static MemorySegment GUID_PROCESSOR_PERF_DECREASE_HISTORY() {
        return GUID_PROCESSOR_PERF_DECREASE_HISTORY$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_DECREASE_HISTORY
     * }
     */
    public static void GUID_PROCESSOR_PERF_DECREASE_HISTORY(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_PERF_DECREASE_HISTORY$constants.SEGMENT, 0L, GUID_PROCESSOR_PERF_DECREASE_HISTORY$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_PERF_CORE_PARKING_HISTORY$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_PERF_CORE_PARKING_HISTORY").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_CORE_PARKING_HISTORY
     * }
     */
    public static GroupLayout GUID_PROCESSOR_PERF_CORE_PARKING_HISTORY$layout() {
        return GUID_PROCESSOR_PERF_CORE_PARKING_HISTORY$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_CORE_PARKING_HISTORY
     * }
     */
    public static MemorySegment GUID_PROCESSOR_PERF_CORE_PARKING_HISTORY() {
        return GUID_PROCESSOR_PERF_CORE_PARKING_HISTORY$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_CORE_PARKING_HISTORY
     * }
     */
    public static void GUID_PROCESSOR_PERF_CORE_PARKING_HISTORY(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_PERF_CORE_PARKING_HISTORY$constants.SEGMENT, 0L, GUID_PROCESSOR_PERF_CORE_PARKING_HISTORY$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_PERF_LATENCY_HINT$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_PERF_LATENCY_HINT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_LATENCY_HINT
     * }
     */
    public static GroupLayout GUID_PROCESSOR_PERF_LATENCY_HINT$layout() {
        return GUID_PROCESSOR_PERF_LATENCY_HINT$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_LATENCY_HINT
     * }
     */
    public static MemorySegment GUID_PROCESSOR_PERF_LATENCY_HINT() {
        return GUID_PROCESSOR_PERF_LATENCY_HINT$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_LATENCY_HINT
     * }
     */
    public static void GUID_PROCESSOR_PERF_LATENCY_HINT(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_PERF_LATENCY_HINT$constants.SEGMENT, 0L, GUID_PROCESSOR_PERF_LATENCY_HINT$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_PERF_LATENCY_HINT_PERF$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_PERF_LATENCY_HINT_PERF").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_LATENCY_HINT_PERF
     * }
     */
    public static GroupLayout GUID_PROCESSOR_PERF_LATENCY_HINT_PERF$layout() {
        return GUID_PROCESSOR_PERF_LATENCY_HINT_PERF$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_LATENCY_HINT_PERF
     * }
     */
    public static MemorySegment GUID_PROCESSOR_PERF_LATENCY_HINT_PERF() {
        return GUID_PROCESSOR_PERF_LATENCY_HINT_PERF$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_LATENCY_HINT_PERF
     * }
     */
    public static void GUID_PROCESSOR_PERF_LATENCY_HINT_PERF(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_PERF_LATENCY_HINT_PERF$constants.SEGMENT, 0L, GUID_PROCESSOR_PERF_LATENCY_HINT_PERF$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_PERF_LATENCY_HINT_PERF_1$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_PERF_LATENCY_HINT_PERF_1").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_LATENCY_HINT_PERF_1
     * }
     */
    public static GroupLayout GUID_PROCESSOR_PERF_LATENCY_HINT_PERF_1$layout() {
        return GUID_PROCESSOR_PERF_LATENCY_HINT_PERF_1$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_LATENCY_HINT_PERF_1
     * }
     */
    public static MemorySegment GUID_PROCESSOR_PERF_LATENCY_HINT_PERF_1() {
        return GUID_PROCESSOR_PERF_LATENCY_HINT_PERF_1$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_LATENCY_HINT_PERF_1
     * }
     */
    public static void GUID_PROCESSOR_PERF_LATENCY_HINT_PERF_1(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_PERF_LATENCY_HINT_PERF_1$constants.SEGMENT, 0L, GUID_PROCESSOR_PERF_LATENCY_HINT_PERF_1$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_PERF_LATENCY_HINT_PERF_2$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_PERF_LATENCY_HINT_PERF_2").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_LATENCY_HINT_PERF_2
     * }
     */
    public static GroupLayout GUID_PROCESSOR_PERF_LATENCY_HINT_PERF_2$layout() {
        return GUID_PROCESSOR_PERF_LATENCY_HINT_PERF_2$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_LATENCY_HINT_PERF_2
     * }
     */
    public static MemorySegment GUID_PROCESSOR_PERF_LATENCY_HINT_PERF_2() {
        return GUID_PROCESSOR_PERF_LATENCY_HINT_PERF_2$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_LATENCY_HINT_PERF_2
     * }
     */
    public static void GUID_PROCESSOR_PERF_LATENCY_HINT_PERF_2(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_PERF_LATENCY_HINT_PERF_2$constants.SEGMENT, 0L, GUID_PROCESSOR_PERF_LATENCY_HINT_PERF_2$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_PERF_LATENCY_HINT_EPP$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_PERF_LATENCY_HINT_EPP").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_LATENCY_HINT_EPP
     * }
     */
    public static GroupLayout GUID_PROCESSOR_PERF_LATENCY_HINT_EPP$layout() {
        return GUID_PROCESSOR_PERF_LATENCY_HINT_EPP$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_LATENCY_HINT_EPP
     * }
     */
    public static MemorySegment GUID_PROCESSOR_PERF_LATENCY_HINT_EPP() {
        return GUID_PROCESSOR_PERF_LATENCY_HINT_EPP$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_LATENCY_HINT_EPP
     * }
     */
    public static void GUID_PROCESSOR_PERF_LATENCY_HINT_EPP(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_PERF_LATENCY_HINT_EPP$constants.SEGMENT, 0L, GUID_PROCESSOR_PERF_LATENCY_HINT_EPP$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_PERF_LATENCY_HINT_EPP_1$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_PERF_LATENCY_HINT_EPP_1").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_LATENCY_HINT_EPP_1
     * }
     */
    public static GroupLayout GUID_PROCESSOR_PERF_LATENCY_HINT_EPP_1$layout() {
        return GUID_PROCESSOR_PERF_LATENCY_HINT_EPP_1$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_LATENCY_HINT_EPP_1
     * }
     */
    public static MemorySegment GUID_PROCESSOR_PERF_LATENCY_HINT_EPP_1() {
        return GUID_PROCESSOR_PERF_LATENCY_HINT_EPP_1$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_LATENCY_HINT_EPP_1
     * }
     */
    public static void GUID_PROCESSOR_PERF_LATENCY_HINT_EPP_1(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_PERF_LATENCY_HINT_EPP_1$constants.SEGMENT, 0L, GUID_PROCESSOR_PERF_LATENCY_HINT_EPP_1$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_PERF_LATENCY_HINT_EPP_2$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_PERF_LATENCY_HINT_EPP_2").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_LATENCY_HINT_EPP_2
     * }
     */
    public static GroupLayout GUID_PROCESSOR_PERF_LATENCY_HINT_EPP_2$layout() {
        return GUID_PROCESSOR_PERF_LATENCY_HINT_EPP_2$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_LATENCY_HINT_EPP_2
     * }
     */
    public static MemorySegment GUID_PROCESSOR_PERF_LATENCY_HINT_EPP_2() {
        return GUID_PROCESSOR_PERF_LATENCY_HINT_EPP_2$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_PERF_LATENCY_HINT_EPP_2
     * }
     */
    public static void GUID_PROCESSOR_PERF_LATENCY_HINT_EPP_2(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_PERF_LATENCY_HINT_EPP_2$constants.SEGMENT, 0L, GUID_PROCESSOR_PERF_LATENCY_HINT_EPP_2$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK
     * }
     */
    public static GroupLayout GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK$layout() {
        return GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK
     * }
     */
    public static MemorySegment GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK() {
        return GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK
     * }
     */
    public static void GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK$constants.SEGMENT, 0L, GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK_1$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK_1").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK_1
     * }
     */
    public static GroupLayout GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK_1$layout() {
        return GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK_1$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK_1
     * }
     */
    public static MemorySegment GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK_1() {
        return GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK_1$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK_1
     * }
     */
    public static void GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK_1(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK_1$constants.SEGMENT, 0L, GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK_1$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_MODULE_PARKING_POLICY$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_MODULE_PARKING_POLICY").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_MODULE_PARKING_POLICY
     * }
     */
    public static GroupLayout GUID_PROCESSOR_MODULE_PARKING_POLICY$layout() {
        return GUID_PROCESSOR_MODULE_PARKING_POLICY$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_MODULE_PARKING_POLICY
     * }
     */
    public static MemorySegment GUID_PROCESSOR_MODULE_PARKING_POLICY() {
        return GUID_PROCESSOR_MODULE_PARKING_POLICY$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_MODULE_PARKING_POLICY
     * }
     */
    public static void GUID_PROCESSOR_MODULE_PARKING_POLICY(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_MODULE_PARKING_POLICY$constants.SEGMENT, 0L, GUID_PROCESSOR_MODULE_PARKING_POLICY$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_COMPLEX_PARKING_POLICY$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_COMPLEX_PARKING_POLICY").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_COMPLEX_PARKING_POLICY
     * }
     */
    public static GroupLayout GUID_PROCESSOR_COMPLEX_PARKING_POLICY$layout() {
        return GUID_PROCESSOR_COMPLEX_PARKING_POLICY$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_COMPLEX_PARKING_POLICY
     * }
     */
    public static MemorySegment GUID_PROCESSOR_COMPLEX_PARKING_POLICY() {
        return GUID_PROCESSOR_COMPLEX_PARKING_POLICY$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_COMPLEX_PARKING_POLICY
     * }
     */
    public static void GUID_PROCESSOR_COMPLEX_PARKING_POLICY(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_COMPLEX_PARKING_POLICY$constants.SEGMENT, 0L, GUID_PROCESSOR_COMPLEX_PARKING_POLICY$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_SMT_UNPARKING_POLICY$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_SMT_UNPARKING_POLICY").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_SMT_UNPARKING_POLICY
     * }
     */
    public static GroupLayout GUID_PROCESSOR_SMT_UNPARKING_POLICY$layout() {
        return GUID_PROCESSOR_SMT_UNPARKING_POLICY$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_SMT_UNPARKING_POLICY
     * }
     */
    public static MemorySegment GUID_PROCESSOR_SMT_UNPARKING_POLICY() {
        return GUID_PROCESSOR_SMT_UNPARKING_POLICY$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_SMT_UNPARKING_POLICY
     * }
     */
    public static void GUID_PROCESSOR_SMT_UNPARKING_POLICY(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_SMT_UNPARKING_POLICY$constants.SEGMENT, 0L, GUID_PROCESSOR_SMT_UNPARKING_POLICY$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_RESTRICTION_COUNT$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_RESTRICTION_COUNT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_RESTRICTION_COUNT
     * }
     */
    public static GroupLayout GUID_PROCESSOR_RESTRICTION_COUNT$layout() {
        return GUID_PROCESSOR_RESTRICTION_COUNT$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_RESTRICTION_COUNT
     * }
     */
    public static MemorySegment GUID_PROCESSOR_RESTRICTION_COUNT() {
        return GUID_PROCESSOR_RESTRICTION_COUNT$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_RESTRICTION_COUNT
     * }
     */
    public static void GUID_PROCESSOR_RESTRICTION_COUNT(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_RESTRICTION_COUNT$constants.SEGMENT, 0L, GUID_PROCESSOR_RESTRICTION_COUNT$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_DISTRIBUTE_UTILITY$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_DISTRIBUTE_UTILITY").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_DISTRIBUTE_UTILITY
     * }
     */
    public static GroupLayout GUID_PROCESSOR_DISTRIBUTE_UTILITY$layout() {
        return GUID_PROCESSOR_DISTRIBUTE_UTILITY$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_DISTRIBUTE_UTILITY
     * }
     */
    public static MemorySegment GUID_PROCESSOR_DISTRIBUTE_UTILITY() {
        return GUID_PROCESSOR_DISTRIBUTE_UTILITY$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_DISTRIBUTE_UTILITY
     * }
     */
    public static void GUID_PROCESSOR_DISTRIBUTE_UTILITY(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_DISTRIBUTE_UTILITY$constants.SEGMENT, 0L, GUID_PROCESSOR_DISTRIBUTE_UTILITY$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_RESOURCE_PRIORITY$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_RESOURCE_PRIORITY").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_RESOURCE_PRIORITY
     * }
     */
    public static GroupLayout GUID_PROCESSOR_RESOURCE_PRIORITY$layout() {
        return GUID_PROCESSOR_RESOURCE_PRIORITY$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_RESOURCE_PRIORITY
     * }
     */
    public static MemorySegment GUID_PROCESSOR_RESOURCE_PRIORITY() {
        return GUID_PROCESSOR_RESOURCE_PRIORITY$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_RESOURCE_PRIORITY
     * }
     */
    public static void GUID_PROCESSOR_RESOURCE_PRIORITY(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_RESOURCE_PRIORITY$constants.SEGMENT, 0L, GUID_PROCESSOR_RESOURCE_PRIORITY$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_RESOURCE_PRIORITY_1$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_RESOURCE_PRIORITY_1").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_RESOURCE_PRIORITY_1
     * }
     */
    public static GroupLayout GUID_PROCESSOR_RESOURCE_PRIORITY_1$layout() {
        return GUID_PROCESSOR_RESOURCE_PRIORITY_1$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_RESOURCE_PRIORITY_1
     * }
     */
    public static MemorySegment GUID_PROCESSOR_RESOURCE_PRIORITY_1() {
        return GUID_PROCESSOR_RESOURCE_PRIORITY_1$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_RESOURCE_PRIORITY_1
     * }
     */
    public static void GUID_PROCESSOR_RESOURCE_PRIORITY_1(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_RESOURCE_PRIORITY_1$constants.SEGMENT, 0L, GUID_PROCESSOR_RESOURCE_PRIORITY_1$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_RESOURCE_PRIORITY_2$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_RESOURCE_PRIORITY_2").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_RESOURCE_PRIORITY_2
     * }
     */
    public static GroupLayout GUID_PROCESSOR_RESOURCE_PRIORITY_2$layout() {
        return GUID_PROCESSOR_RESOURCE_PRIORITY_2$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_RESOURCE_PRIORITY_2
     * }
     */
    public static MemorySegment GUID_PROCESSOR_RESOURCE_PRIORITY_2() {
        return GUID_PROCESSOR_RESOURCE_PRIORITY_2$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_RESOURCE_PRIORITY_2
     * }
     */
    public static void GUID_PROCESSOR_RESOURCE_PRIORITY_2(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_RESOURCE_PRIORITY_2$constants.SEGMENT, 0L, GUID_PROCESSOR_RESOURCE_PRIORITY_2$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_HETEROGENEOUS_POLICY$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_HETEROGENEOUS_POLICY").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_HETEROGENEOUS_POLICY
     * }
     */
    public static GroupLayout GUID_PROCESSOR_HETEROGENEOUS_POLICY$layout() {
        return GUID_PROCESSOR_HETEROGENEOUS_POLICY$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_HETEROGENEOUS_POLICY
     * }
     */
    public static MemorySegment GUID_PROCESSOR_HETEROGENEOUS_POLICY() {
        return GUID_PROCESSOR_HETEROGENEOUS_POLICY$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_HETEROGENEOUS_POLICY
     * }
     */
    public static void GUID_PROCESSOR_HETEROGENEOUS_POLICY(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_HETEROGENEOUS_POLICY$constants.SEGMENT, 0L, GUID_PROCESSOR_HETEROGENEOUS_POLICY$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_HETERO_DECREASE_TIME$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_HETERO_DECREASE_TIME").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_HETERO_DECREASE_TIME
     * }
     */
    public static GroupLayout GUID_PROCESSOR_HETERO_DECREASE_TIME$layout() {
        return GUID_PROCESSOR_HETERO_DECREASE_TIME$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_HETERO_DECREASE_TIME
     * }
     */
    public static MemorySegment GUID_PROCESSOR_HETERO_DECREASE_TIME() {
        return GUID_PROCESSOR_HETERO_DECREASE_TIME$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_HETERO_DECREASE_TIME
     * }
     */
    public static void GUID_PROCESSOR_HETERO_DECREASE_TIME(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_HETERO_DECREASE_TIME$constants.SEGMENT, 0L, GUID_PROCESSOR_HETERO_DECREASE_TIME$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_HETERO_INCREASE_TIME$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_HETERO_INCREASE_TIME").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_HETERO_INCREASE_TIME
     * }
     */
    public static GroupLayout GUID_PROCESSOR_HETERO_INCREASE_TIME$layout() {
        return GUID_PROCESSOR_HETERO_INCREASE_TIME$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_HETERO_INCREASE_TIME
     * }
     */
    public static MemorySegment GUID_PROCESSOR_HETERO_INCREASE_TIME() {
        return GUID_PROCESSOR_HETERO_INCREASE_TIME$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_HETERO_INCREASE_TIME
     * }
     */
    public static void GUID_PROCESSOR_HETERO_INCREASE_TIME(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_HETERO_INCREASE_TIME$constants.SEGMENT, 0L, GUID_PROCESSOR_HETERO_INCREASE_TIME$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_HETERO_CONTAINMENT_DECREASE_TIME$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_HETERO_CONTAINMENT_DECREASE_TIME").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_HETERO_CONTAINMENT_DECREASE_TIME
     * }
     */
    public static GroupLayout GUID_PROCESSOR_HETERO_CONTAINMENT_DECREASE_TIME$layout() {
        return GUID_PROCESSOR_HETERO_CONTAINMENT_DECREASE_TIME$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_HETERO_CONTAINMENT_DECREASE_TIME
     * }
     */
    public static MemorySegment GUID_PROCESSOR_HETERO_CONTAINMENT_DECREASE_TIME() {
        return GUID_PROCESSOR_HETERO_CONTAINMENT_DECREASE_TIME$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_HETERO_CONTAINMENT_DECREASE_TIME
     * }
     */
    public static void GUID_PROCESSOR_HETERO_CONTAINMENT_DECREASE_TIME(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_HETERO_CONTAINMENT_DECREASE_TIME$constants.SEGMENT, 0L, GUID_PROCESSOR_HETERO_CONTAINMENT_DECREASE_TIME$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_HETERO_CONTAINMENT_INCREASE_TIME$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_HETERO_CONTAINMENT_INCREASE_TIME").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_HETERO_CONTAINMENT_INCREASE_TIME
     * }
     */
    public static GroupLayout GUID_PROCESSOR_HETERO_CONTAINMENT_INCREASE_TIME$layout() {
        return GUID_PROCESSOR_HETERO_CONTAINMENT_INCREASE_TIME$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_HETERO_CONTAINMENT_INCREASE_TIME
     * }
     */
    public static MemorySegment GUID_PROCESSOR_HETERO_CONTAINMENT_INCREASE_TIME() {
        return GUID_PROCESSOR_HETERO_CONTAINMENT_INCREASE_TIME$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_HETERO_CONTAINMENT_INCREASE_TIME
     * }
     */
    public static void GUID_PROCESSOR_HETERO_CONTAINMENT_INCREASE_TIME(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_HETERO_CONTAINMENT_INCREASE_TIME$constants.SEGMENT, 0L, GUID_PROCESSOR_HETERO_CONTAINMENT_INCREASE_TIME$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_HETERO_CONTAINMENT_EFFICIENCY_THRESHOLD$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_HETERO_CONTAINMENT_EFFICIENCY_THRESHOLD").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_HETERO_CONTAINMENT_EFFICIENCY_THRESHOLD
     * }
     */
    public static GroupLayout GUID_PROCESSOR_HETERO_CONTAINMENT_EFFICIENCY_THRESHOLD$layout() {
        return GUID_PROCESSOR_HETERO_CONTAINMENT_EFFICIENCY_THRESHOLD$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_HETERO_CONTAINMENT_EFFICIENCY_THRESHOLD
     * }
     */
    public static MemorySegment GUID_PROCESSOR_HETERO_CONTAINMENT_EFFICIENCY_THRESHOLD() {
        return GUID_PROCESSOR_HETERO_CONTAINMENT_EFFICIENCY_THRESHOLD$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_HETERO_CONTAINMENT_EFFICIENCY_THRESHOLD
     * }
     */
    public static void GUID_PROCESSOR_HETERO_CONTAINMENT_EFFICIENCY_THRESHOLD(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_HETERO_CONTAINMENT_EFFICIENCY_THRESHOLD$constants.SEGMENT, 0L, GUID_PROCESSOR_HETERO_CONTAINMENT_EFFICIENCY_THRESHOLD$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_HETERO_CONTAINMENT_HYBRID_THRESHOLD$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_HETERO_CONTAINMENT_HYBRID_THRESHOLD").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_HETERO_CONTAINMENT_HYBRID_THRESHOLD
     * }
     */
    public static GroupLayout GUID_PROCESSOR_HETERO_CONTAINMENT_HYBRID_THRESHOLD$layout() {
        return GUID_PROCESSOR_HETERO_CONTAINMENT_HYBRID_THRESHOLD$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_HETERO_CONTAINMENT_HYBRID_THRESHOLD
     * }
     */
    public static MemorySegment GUID_PROCESSOR_HETERO_CONTAINMENT_HYBRID_THRESHOLD() {
        return GUID_PROCESSOR_HETERO_CONTAINMENT_HYBRID_THRESHOLD$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_HETERO_CONTAINMENT_HYBRID_THRESHOLD
     * }
     */
    public static void GUID_PROCESSOR_HETERO_CONTAINMENT_HYBRID_THRESHOLD(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_HETERO_CONTAINMENT_HYBRID_THRESHOLD$constants.SEGMENT, 0L, GUID_PROCESSOR_HETERO_CONTAINMENT_HYBRID_THRESHOLD$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_HETERO_CONTAINMENT_POLICY$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_HETERO_CONTAINMENT_POLICY").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_HETERO_CONTAINMENT_POLICY
     * }
     */
    public static GroupLayout GUID_PROCESSOR_HETERO_CONTAINMENT_POLICY$layout() {
        return GUID_PROCESSOR_HETERO_CONTAINMENT_POLICY$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_HETERO_CONTAINMENT_POLICY
     * }
     */
    public static MemorySegment GUID_PROCESSOR_HETERO_CONTAINMENT_POLICY() {
        return GUID_PROCESSOR_HETERO_CONTAINMENT_POLICY$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_HETERO_CONTAINMENT_POLICY
     * }
     */
    public static void GUID_PROCESSOR_HETERO_CONTAINMENT_POLICY(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_HETERO_CONTAINMENT_POLICY$constants.SEGMENT, 0L, GUID_PROCESSOR_HETERO_CONTAINMENT_POLICY$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_HETERO_CONTAINMENT_EFFICIENCY_IMP_UTIL_THRESHOLD$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_HETERO_CONTAINMENT_EFFICIENCY_IMP_UTIL_THRESHOLD").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_HETERO_CONTAINMENT_EFFICIENCY_IMP_UTIL_THRESHOLD
     * }
     */
    public static GroupLayout GUID_PROCESSOR_HETERO_CONTAINMENT_EFFICIENCY_IMP_UTIL_THRESHOLD$layout() {
        return GUID_PROCESSOR_HETERO_CONTAINMENT_EFFICIENCY_IMP_UTIL_THRESHOLD$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_HETERO_CONTAINMENT_EFFICIENCY_IMP_UTIL_THRESHOLD
     * }
     */
    public static MemorySegment GUID_PROCESSOR_HETERO_CONTAINMENT_EFFICIENCY_IMP_UTIL_THRESHOLD() {
        return GUID_PROCESSOR_HETERO_CONTAINMENT_EFFICIENCY_IMP_UTIL_THRESHOLD$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_HETERO_CONTAINMENT_EFFICIENCY_IMP_UTIL_THRESHOLD
     * }
     */
    public static void GUID_PROCESSOR_HETERO_CONTAINMENT_EFFICIENCY_IMP_UTIL_THRESHOLD(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_HETERO_CONTAINMENT_EFFICIENCY_IMP_UTIL_THRESHOLD$constants.SEGMENT, 0L, GUID_PROCESSOR_HETERO_CONTAINMENT_EFFICIENCY_IMP_UTIL_THRESHOLD$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_HETERO_CONTAINMENT_HYBRID_IMP_UTIL_THRESHOLD$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_HETERO_CONTAINMENT_HYBRID_IMP_UTIL_THRESHOLD").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_HETERO_CONTAINMENT_HYBRID_IMP_UTIL_THRESHOLD
     * }
     */
    public static GroupLayout GUID_PROCESSOR_HETERO_CONTAINMENT_HYBRID_IMP_UTIL_THRESHOLD$layout() {
        return GUID_PROCESSOR_HETERO_CONTAINMENT_HYBRID_IMP_UTIL_THRESHOLD$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_HETERO_CONTAINMENT_HYBRID_IMP_UTIL_THRESHOLD
     * }
     */
    public static MemorySegment GUID_PROCESSOR_HETERO_CONTAINMENT_HYBRID_IMP_UTIL_THRESHOLD() {
        return GUID_PROCESSOR_HETERO_CONTAINMENT_HYBRID_IMP_UTIL_THRESHOLD$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_HETERO_CONTAINMENT_HYBRID_IMP_UTIL_THRESHOLD
     * }
     */
    public static void GUID_PROCESSOR_HETERO_CONTAINMENT_HYBRID_IMP_UTIL_THRESHOLD(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_HETERO_CONTAINMENT_HYBRID_IMP_UTIL_THRESHOLD$constants.SEGMENT, 0L, GUID_PROCESSOR_HETERO_CONTAINMENT_HYBRID_IMP_UTIL_THRESHOLD$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_WPS_MIN_EFFICIENCY_THRESHOLD$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_WPS_MIN_EFFICIENCY_THRESHOLD").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_WPS_MIN_EFFICIENCY_THRESHOLD
     * }
     */
    public static GroupLayout GUID_PROCESSOR_WPS_MIN_EFFICIENCY_THRESHOLD$layout() {
        return GUID_PROCESSOR_WPS_MIN_EFFICIENCY_THRESHOLD$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_WPS_MIN_EFFICIENCY_THRESHOLD
     * }
     */
    public static MemorySegment GUID_PROCESSOR_WPS_MIN_EFFICIENCY_THRESHOLD() {
        return GUID_PROCESSOR_WPS_MIN_EFFICIENCY_THRESHOLD$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_WPS_MIN_EFFICIENCY_THRESHOLD
     * }
     */
    public static void GUID_PROCESSOR_WPS_MIN_EFFICIENCY_THRESHOLD(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_WPS_MIN_EFFICIENCY_THRESHOLD$constants.SEGMENT, 0L, GUID_PROCESSOR_WPS_MIN_EFFICIENCY_THRESHOLD$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_HETERO_DECREASE_THRESHOLD$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_HETERO_DECREASE_THRESHOLD").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_HETERO_DECREASE_THRESHOLD
     * }
     */
    public static GroupLayout GUID_PROCESSOR_HETERO_DECREASE_THRESHOLD$layout() {
        return GUID_PROCESSOR_HETERO_DECREASE_THRESHOLD$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_HETERO_DECREASE_THRESHOLD
     * }
     */
    public static MemorySegment GUID_PROCESSOR_HETERO_DECREASE_THRESHOLD() {
        return GUID_PROCESSOR_HETERO_DECREASE_THRESHOLD$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_HETERO_DECREASE_THRESHOLD
     * }
     */
    public static void GUID_PROCESSOR_HETERO_DECREASE_THRESHOLD(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_HETERO_DECREASE_THRESHOLD$constants.SEGMENT, 0L, GUID_PROCESSOR_HETERO_DECREASE_THRESHOLD$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_HETERO_DECREASE_THRESHOLD_1$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_HETERO_DECREASE_THRESHOLD_1").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_HETERO_DECREASE_THRESHOLD_1
     * }
     */
    public static GroupLayout GUID_PROCESSOR_HETERO_DECREASE_THRESHOLD_1$layout() {
        return GUID_PROCESSOR_HETERO_DECREASE_THRESHOLD_1$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_HETERO_DECREASE_THRESHOLD_1
     * }
     */
    public static MemorySegment GUID_PROCESSOR_HETERO_DECREASE_THRESHOLD_1() {
        return GUID_PROCESSOR_HETERO_DECREASE_THRESHOLD_1$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_HETERO_DECREASE_THRESHOLD_1
     * }
     */
    public static void GUID_PROCESSOR_HETERO_DECREASE_THRESHOLD_1(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_HETERO_DECREASE_THRESHOLD_1$constants.SEGMENT, 0L, GUID_PROCESSOR_HETERO_DECREASE_THRESHOLD_1$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_HETERO_INCREASE_THRESHOLD$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_HETERO_INCREASE_THRESHOLD").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_HETERO_INCREASE_THRESHOLD
     * }
     */
    public static GroupLayout GUID_PROCESSOR_HETERO_INCREASE_THRESHOLD$layout() {
        return GUID_PROCESSOR_HETERO_INCREASE_THRESHOLD$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_HETERO_INCREASE_THRESHOLD
     * }
     */
    public static MemorySegment GUID_PROCESSOR_HETERO_INCREASE_THRESHOLD() {
        return GUID_PROCESSOR_HETERO_INCREASE_THRESHOLD$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_HETERO_INCREASE_THRESHOLD
     * }
     */
    public static void GUID_PROCESSOR_HETERO_INCREASE_THRESHOLD(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_HETERO_INCREASE_THRESHOLD$constants.SEGMENT, 0L, GUID_PROCESSOR_HETERO_INCREASE_THRESHOLD$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_HETERO_INCREASE_THRESHOLD_1$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_HETERO_INCREASE_THRESHOLD_1").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_HETERO_INCREASE_THRESHOLD_1
     * }
     */
    public static GroupLayout GUID_PROCESSOR_HETERO_INCREASE_THRESHOLD_1$layout() {
        return GUID_PROCESSOR_HETERO_INCREASE_THRESHOLD_1$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_HETERO_INCREASE_THRESHOLD_1
     * }
     */
    public static MemorySegment GUID_PROCESSOR_HETERO_INCREASE_THRESHOLD_1() {
        return GUID_PROCESSOR_HETERO_INCREASE_THRESHOLD_1$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_HETERO_INCREASE_THRESHOLD_1
     * }
     */
    public static void GUID_PROCESSOR_HETERO_INCREASE_THRESHOLD_1(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_HETERO_INCREASE_THRESHOLD_1$constants.SEGMENT, 0L, GUID_PROCESSOR_HETERO_INCREASE_THRESHOLD_1$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_CLASS0_FLOOR_PERF$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_CLASS0_FLOOR_PERF").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CLASS0_FLOOR_PERF
     * }
     */
    public static GroupLayout GUID_PROCESSOR_CLASS0_FLOOR_PERF$layout() {
        return GUID_PROCESSOR_CLASS0_FLOOR_PERF$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CLASS0_FLOOR_PERF
     * }
     */
    public static MemorySegment GUID_PROCESSOR_CLASS0_FLOOR_PERF() {
        return GUID_PROCESSOR_CLASS0_FLOOR_PERF$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CLASS0_FLOOR_PERF
     * }
     */
    public static void GUID_PROCESSOR_CLASS0_FLOOR_PERF(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_CLASS0_FLOOR_PERF$constants.SEGMENT, 0L, GUID_PROCESSOR_CLASS0_FLOOR_PERF$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_CLASS1_INITIAL_PERF$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_CLASS1_INITIAL_PERF").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CLASS1_INITIAL_PERF
     * }
     */
    public static GroupLayout GUID_PROCESSOR_CLASS1_INITIAL_PERF$layout() {
        return GUID_PROCESSOR_CLASS1_INITIAL_PERF$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CLASS1_INITIAL_PERF
     * }
     */
    public static MemorySegment GUID_PROCESSOR_CLASS1_INITIAL_PERF() {
        return GUID_PROCESSOR_CLASS1_INITIAL_PERF$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_CLASS1_INITIAL_PERF
     * }
     */
    public static void GUID_PROCESSOR_CLASS1_INITIAL_PERF(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_CLASS1_INITIAL_PERF$constants.SEGMENT, 0L, GUID_PROCESSOR_CLASS1_INITIAL_PERF$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_THREAD_SCHEDULING_POLICY$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_THREAD_SCHEDULING_POLICY").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_THREAD_SCHEDULING_POLICY
     * }
     */
    public static GroupLayout GUID_PROCESSOR_THREAD_SCHEDULING_POLICY$layout() {
        return GUID_PROCESSOR_THREAD_SCHEDULING_POLICY$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_THREAD_SCHEDULING_POLICY
     * }
     */
    public static MemorySegment GUID_PROCESSOR_THREAD_SCHEDULING_POLICY() {
        return GUID_PROCESSOR_THREAD_SCHEDULING_POLICY$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_THREAD_SCHEDULING_POLICY
     * }
     */
    public static void GUID_PROCESSOR_THREAD_SCHEDULING_POLICY(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_THREAD_SCHEDULING_POLICY$constants.SEGMENT, 0L, GUID_PROCESSOR_THREAD_SCHEDULING_POLICY$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_SHORT_THREAD_SCHEDULING_POLICY$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_SHORT_THREAD_SCHEDULING_POLICY").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_SHORT_THREAD_SCHEDULING_POLICY
     * }
     */
    public static GroupLayout GUID_PROCESSOR_SHORT_THREAD_SCHEDULING_POLICY$layout() {
        return GUID_PROCESSOR_SHORT_THREAD_SCHEDULING_POLICY$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_SHORT_THREAD_SCHEDULING_POLICY
     * }
     */
    public static MemorySegment GUID_PROCESSOR_SHORT_THREAD_SCHEDULING_POLICY() {
        return GUID_PROCESSOR_SHORT_THREAD_SCHEDULING_POLICY$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_SHORT_THREAD_SCHEDULING_POLICY
     * }
     */
    public static void GUID_PROCESSOR_SHORT_THREAD_SCHEDULING_POLICY(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_SHORT_THREAD_SCHEDULING_POLICY$constants.SEGMENT, 0L, GUID_PROCESSOR_SHORT_THREAD_SCHEDULING_POLICY$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_SHORT_THREAD_RUNTIME_THRESHOLD$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_SHORT_THREAD_RUNTIME_THRESHOLD").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_SHORT_THREAD_RUNTIME_THRESHOLD
     * }
     */
    public static GroupLayout GUID_PROCESSOR_SHORT_THREAD_RUNTIME_THRESHOLD$layout() {
        return GUID_PROCESSOR_SHORT_THREAD_RUNTIME_THRESHOLD$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_SHORT_THREAD_RUNTIME_THRESHOLD
     * }
     */
    public static MemorySegment GUID_PROCESSOR_SHORT_THREAD_RUNTIME_THRESHOLD() {
        return GUID_PROCESSOR_SHORT_THREAD_RUNTIME_THRESHOLD$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_SHORT_THREAD_RUNTIME_THRESHOLD
     * }
     */
    public static void GUID_PROCESSOR_SHORT_THREAD_RUNTIME_THRESHOLD(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_SHORT_THREAD_RUNTIME_THRESHOLD$constants.SEGMENT, 0L, GUID_PROCESSOR_SHORT_THREAD_RUNTIME_THRESHOLD$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_SHORT_THREAD_ARCH_CLASS_UPPER_THRESHOLD$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_SHORT_THREAD_ARCH_CLASS_UPPER_THRESHOLD").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_SHORT_THREAD_ARCH_CLASS_UPPER_THRESHOLD
     * }
     */
    public static GroupLayout GUID_PROCESSOR_SHORT_THREAD_ARCH_CLASS_UPPER_THRESHOLD$layout() {
        return GUID_PROCESSOR_SHORT_THREAD_ARCH_CLASS_UPPER_THRESHOLD$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_SHORT_THREAD_ARCH_CLASS_UPPER_THRESHOLD
     * }
     */
    public static MemorySegment GUID_PROCESSOR_SHORT_THREAD_ARCH_CLASS_UPPER_THRESHOLD() {
        return GUID_PROCESSOR_SHORT_THREAD_ARCH_CLASS_UPPER_THRESHOLD$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_SHORT_THREAD_ARCH_CLASS_UPPER_THRESHOLD
     * }
     */
    public static void GUID_PROCESSOR_SHORT_THREAD_ARCH_CLASS_UPPER_THRESHOLD(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_SHORT_THREAD_ARCH_CLASS_UPPER_THRESHOLD$constants.SEGMENT, 0L, GUID_PROCESSOR_SHORT_THREAD_ARCH_CLASS_UPPER_THRESHOLD$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_SHORT_THREAD_ARCH_CLASS_LOWER_THRESHOLD$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_SHORT_THREAD_ARCH_CLASS_LOWER_THRESHOLD").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_SHORT_THREAD_ARCH_CLASS_LOWER_THRESHOLD
     * }
     */
    public static GroupLayout GUID_PROCESSOR_SHORT_THREAD_ARCH_CLASS_LOWER_THRESHOLD$layout() {
        return GUID_PROCESSOR_SHORT_THREAD_ARCH_CLASS_LOWER_THRESHOLD$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_SHORT_THREAD_ARCH_CLASS_LOWER_THRESHOLD
     * }
     */
    public static MemorySegment GUID_PROCESSOR_SHORT_THREAD_ARCH_CLASS_LOWER_THRESHOLD() {
        return GUID_PROCESSOR_SHORT_THREAD_ARCH_CLASS_LOWER_THRESHOLD$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_SHORT_THREAD_ARCH_CLASS_LOWER_THRESHOLD
     * }
     */
    public static void GUID_PROCESSOR_SHORT_THREAD_ARCH_CLASS_LOWER_THRESHOLD(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_SHORT_THREAD_ARCH_CLASS_LOWER_THRESHOLD$constants.SEGMENT, 0L, GUID_PROCESSOR_SHORT_THREAD_ARCH_CLASS_LOWER_THRESHOLD$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_LONG_THREAD_ARCH_CLASS_UPPER_THRESHOLD$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_LONG_THREAD_ARCH_CLASS_UPPER_THRESHOLD").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_LONG_THREAD_ARCH_CLASS_UPPER_THRESHOLD
     * }
     */
    public static GroupLayout GUID_PROCESSOR_LONG_THREAD_ARCH_CLASS_UPPER_THRESHOLD$layout() {
        return GUID_PROCESSOR_LONG_THREAD_ARCH_CLASS_UPPER_THRESHOLD$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_LONG_THREAD_ARCH_CLASS_UPPER_THRESHOLD
     * }
     */
    public static MemorySegment GUID_PROCESSOR_LONG_THREAD_ARCH_CLASS_UPPER_THRESHOLD() {
        return GUID_PROCESSOR_LONG_THREAD_ARCH_CLASS_UPPER_THRESHOLD$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_LONG_THREAD_ARCH_CLASS_UPPER_THRESHOLD
     * }
     */
    public static void GUID_PROCESSOR_LONG_THREAD_ARCH_CLASS_UPPER_THRESHOLD(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_LONG_THREAD_ARCH_CLASS_UPPER_THRESHOLD$constants.SEGMENT, 0L, GUID_PROCESSOR_LONG_THREAD_ARCH_CLASS_UPPER_THRESHOLD$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_LONG_THREAD_ARCH_CLASS_LOWER_THRESHOLD$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_LONG_THREAD_ARCH_CLASS_LOWER_THRESHOLD").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_LONG_THREAD_ARCH_CLASS_LOWER_THRESHOLD
     * }
     */
    public static GroupLayout GUID_PROCESSOR_LONG_THREAD_ARCH_CLASS_LOWER_THRESHOLD$layout() {
        return GUID_PROCESSOR_LONG_THREAD_ARCH_CLASS_LOWER_THRESHOLD$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_LONG_THREAD_ARCH_CLASS_LOWER_THRESHOLD
     * }
     */
    public static MemorySegment GUID_PROCESSOR_LONG_THREAD_ARCH_CLASS_LOWER_THRESHOLD() {
        return GUID_PROCESSOR_LONG_THREAD_ARCH_CLASS_LOWER_THRESHOLD$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_LONG_THREAD_ARCH_CLASS_LOWER_THRESHOLD
     * }
     */
    public static void GUID_PROCESSOR_LONG_THREAD_ARCH_CLASS_LOWER_THRESHOLD(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_LONG_THREAD_ARCH_CLASS_LOWER_THRESHOLD$constants.SEGMENT, 0L, GUID_PROCESSOR_LONG_THREAD_ARCH_CLASS_LOWER_THRESHOLD$constants.LAYOUT.byteSize());
    }

    private static class GUID_SYSTEM_COOLING_POLICY$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_SYSTEM_COOLING_POLICY").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_SYSTEM_COOLING_POLICY
     * }
     */
    public static GroupLayout GUID_SYSTEM_COOLING_POLICY$layout() {
        return GUID_SYSTEM_COOLING_POLICY$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_SYSTEM_COOLING_POLICY
     * }
     */
    public static MemorySegment GUID_SYSTEM_COOLING_POLICY() {
        return GUID_SYSTEM_COOLING_POLICY$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_SYSTEM_COOLING_POLICY
     * }
     */
    public static void GUID_SYSTEM_COOLING_POLICY(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_SYSTEM_COOLING_POLICY$constants.SEGMENT, 0L, GUID_SYSTEM_COOLING_POLICY$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_RESPONSIVENESS_DISABLE_THRESHOLD$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_RESPONSIVENESS_DISABLE_THRESHOLD").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_RESPONSIVENESS_DISABLE_THRESHOLD
     * }
     */
    public static GroupLayout GUID_PROCESSOR_RESPONSIVENESS_DISABLE_THRESHOLD$layout() {
        return GUID_PROCESSOR_RESPONSIVENESS_DISABLE_THRESHOLD$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_RESPONSIVENESS_DISABLE_THRESHOLD
     * }
     */
    public static MemorySegment GUID_PROCESSOR_RESPONSIVENESS_DISABLE_THRESHOLD() {
        return GUID_PROCESSOR_RESPONSIVENESS_DISABLE_THRESHOLD$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_RESPONSIVENESS_DISABLE_THRESHOLD
     * }
     */
    public static void GUID_PROCESSOR_RESPONSIVENESS_DISABLE_THRESHOLD(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_RESPONSIVENESS_DISABLE_THRESHOLD$constants.SEGMENT, 0L, GUID_PROCESSOR_RESPONSIVENESS_DISABLE_THRESHOLD$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_RESPONSIVENESS_DISABLE_THRESHOLD_1$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_RESPONSIVENESS_DISABLE_THRESHOLD_1").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_RESPONSIVENESS_DISABLE_THRESHOLD_1
     * }
     */
    public static GroupLayout GUID_PROCESSOR_RESPONSIVENESS_DISABLE_THRESHOLD_1$layout() {
        return GUID_PROCESSOR_RESPONSIVENESS_DISABLE_THRESHOLD_1$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_RESPONSIVENESS_DISABLE_THRESHOLD_1
     * }
     */
    public static MemorySegment GUID_PROCESSOR_RESPONSIVENESS_DISABLE_THRESHOLD_1() {
        return GUID_PROCESSOR_RESPONSIVENESS_DISABLE_THRESHOLD_1$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_RESPONSIVENESS_DISABLE_THRESHOLD_1
     * }
     */
    public static void GUID_PROCESSOR_RESPONSIVENESS_DISABLE_THRESHOLD_1(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_RESPONSIVENESS_DISABLE_THRESHOLD_1$constants.SEGMENT, 0L, GUID_PROCESSOR_RESPONSIVENESS_DISABLE_THRESHOLD_1$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_RESPONSIVENESS_ENABLE_THRESHOLD$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_RESPONSIVENESS_ENABLE_THRESHOLD").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_RESPONSIVENESS_ENABLE_THRESHOLD
     * }
     */
    public static GroupLayout GUID_PROCESSOR_RESPONSIVENESS_ENABLE_THRESHOLD$layout() {
        return GUID_PROCESSOR_RESPONSIVENESS_ENABLE_THRESHOLD$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_RESPONSIVENESS_ENABLE_THRESHOLD
     * }
     */
    public static MemorySegment GUID_PROCESSOR_RESPONSIVENESS_ENABLE_THRESHOLD() {
        return GUID_PROCESSOR_RESPONSIVENESS_ENABLE_THRESHOLD$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_RESPONSIVENESS_ENABLE_THRESHOLD
     * }
     */
    public static void GUID_PROCESSOR_RESPONSIVENESS_ENABLE_THRESHOLD(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_RESPONSIVENESS_ENABLE_THRESHOLD$constants.SEGMENT, 0L, GUID_PROCESSOR_RESPONSIVENESS_ENABLE_THRESHOLD$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_RESPONSIVENESS_ENABLE_THRESHOLD_1$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_RESPONSIVENESS_ENABLE_THRESHOLD_1").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_RESPONSIVENESS_ENABLE_THRESHOLD_1
     * }
     */
    public static GroupLayout GUID_PROCESSOR_RESPONSIVENESS_ENABLE_THRESHOLD_1$layout() {
        return GUID_PROCESSOR_RESPONSIVENESS_ENABLE_THRESHOLD_1$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_RESPONSIVENESS_ENABLE_THRESHOLD_1
     * }
     */
    public static MemorySegment GUID_PROCESSOR_RESPONSIVENESS_ENABLE_THRESHOLD_1() {
        return GUID_PROCESSOR_RESPONSIVENESS_ENABLE_THRESHOLD_1$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_RESPONSIVENESS_ENABLE_THRESHOLD_1
     * }
     */
    public static void GUID_PROCESSOR_RESPONSIVENESS_ENABLE_THRESHOLD_1(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_RESPONSIVENESS_ENABLE_THRESHOLD_1$constants.SEGMENT, 0L, GUID_PROCESSOR_RESPONSIVENESS_ENABLE_THRESHOLD_1$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_RESPONSIVENESS_DISABLE_TIME$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_RESPONSIVENESS_DISABLE_TIME").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_RESPONSIVENESS_DISABLE_TIME
     * }
     */
    public static GroupLayout GUID_PROCESSOR_RESPONSIVENESS_DISABLE_TIME$layout() {
        return GUID_PROCESSOR_RESPONSIVENESS_DISABLE_TIME$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_RESPONSIVENESS_DISABLE_TIME
     * }
     */
    public static MemorySegment GUID_PROCESSOR_RESPONSIVENESS_DISABLE_TIME() {
        return GUID_PROCESSOR_RESPONSIVENESS_DISABLE_TIME$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_RESPONSIVENESS_DISABLE_TIME
     * }
     */
    public static void GUID_PROCESSOR_RESPONSIVENESS_DISABLE_TIME(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_RESPONSIVENESS_DISABLE_TIME$constants.SEGMENT, 0L, GUID_PROCESSOR_RESPONSIVENESS_DISABLE_TIME$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_RESPONSIVENESS_DISABLE_TIME_1$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_RESPONSIVENESS_DISABLE_TIME_1").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_RESPONSIVENESS_DISABLE_TIME_1
     * }
     */
    public static GroupLayout GUID_PROCESSOR_RESPONSIVENESS_DISABLE_TIME_1$layout() {
        return GUID_PROCESSOR_RESPONSIVENESS_DISABLE_TIME_1$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_RESPONSIVENESS_DISABLE_TIME_1
     * }
     */
    public static MemorySegment GUID_PROCESSOR_RESPONSIVENESS_DISABLE_TIME_1() {
        return GUID_PROCESSOR_RESPONSIVENESS_DISABLE_TIME_1$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_RESPONSIVENESS_DISABLE_TIME_1
     * }
     */
    public static void GUID_PROCESSOR_RESPONSIVENESS_DISABLE_TIME_1(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_RESPONSIVENESS_DISABLE_TIME_1$constants.SEGMENT, 0L, GUID_PROCESSOR_RESPONSIVENESS_DISABLE_TIME_1$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_RESPONSIVENESS_ENABLE_TIME$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_RESPONSIVENESS_ENABLE_TIME").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_RESPONSIVENESS_ENABLE_TIME
     * }
     */
    public static GroupLayout GUID_PROCESSOR_RESPONSIVENESS_ENABLE_TIME$layout() {
        return GUID_PROCESSOR_RESPONSIVENESS_ENABLE_TIME$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_RESPONSIVENESS_ENABLE_TIME
     * }
     */
    public static MemorySegment GUID_PROCESSOR_RESPONSIVENESS_ENABLE_TIME() {
        return GUID_PROCESSOR_RESPONSIVENESS_ENABLE_TIME$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_RESPONSIVENESS_ENABLE_TIME
     * }
     */
    public static void GUID_PROCESSOR_RESPONSIVENESS_ENABLE_TIME(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_RESPONSIVENESS_ENABLE_TIME$constants.SEGMENT, 0L, GUID_PROCESSOR_RESPONSIVENESS_ENABLE_TIME$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_RESPONSIVENESS_ENABLE_TIME_1$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_RESPONSIVENESS_ENABLE_TIME_1").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_RESPONSIVENESS_ENABLE_TIME_1
     * }
     */
    public static GroupLayout GUID_PROCESSOR_RESPONSIVENESS_ENABLE_TIME_1$layout() {
        return GUID_PROCESSOR_RESPONSIVENESS_ENABLE_TIME_1$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_RESPONSIVENESS_ENABLE_TIME_1
     * }
     */
    public static MemorySegment GUID_PROCESSOR_RESPONSIVENESS_ENABLE_TIME_1() {
        return GUID_PROCESSOR_RESPONSIVENESS_ENABLE_TIME_1$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_RESPONSIVENESS_ENABLE_TIME_1
     * }
     */
    public static void GUID_PROCESSOR_RESPONSIVENESS_ENABLE_TIME_1(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_RESPONSIVENESS_ENABLE_TIME_1$constants.SEGMENT, 0L, GUID_PROCESSOR_RESPONSIVENESS_ENABLE_TIME_1$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_RESPONSIVENESS_EPP_CEILING$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_RESPONSIVENESS_EPP_CEILING").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_RESPONSIVENESS_EPP_CEILING
     * }
     */
    public static GroupLayout GUID_PROCESSOR_RESPONSIVENESS_EPP_CEILING$layout() {
        return GUID_PROCESSOR_RESPONSIVENESS_EPP_CEILING$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_RESPONSIVENESS_EPP_CEILING
     * }
     */
    public static MemorySegment GUID_PROCESSOR_RESPONSIVENESS_EPP_CEILING() {
        return GUID_PROCESSOR_RESPONSIVENESS_EPP_CEILING$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_RESPONSIVENESS_EPP_CEILING
     * }
     */
    public static void GUID_PROCESSOR_RESPONSIVENESS_EPP_CEILING(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_RESPONSIVENESS_EPP_CEILING$constants.SEGMENT, 0L, GUID_PROCESSOR_RESPONSIVENESS_EPP_CEILING$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_RESPONSIVENESS_EPP_CEILING_1$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_RESPONSIVENESS_EPP_CEILING_1").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_RESPONSIVENESS_EPP_CEILING_1
     * }
     */
    public static GroupLayout GUID_PROCESSOR_RESPONSIVENESS_EPP_CEILING_1$layout() {
        return GUID_PROCESSOR_RESPONSIVENESS_EPP_CEILING_1$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_RESPONSIVENESS_EPP_CEILING_1
     * }
     */
    public static MemorySegment GUID_PROCESSOR_RESPONSIVENESS_EPP_CEILING_1() {
        return GUID_PROCESSOR_RESPONSIVENESS_EPP_CEILING_1$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_RESPONSIVENESS_EPP_CEILING_1
     * }
     */
    public static void GUID_PROCESSOR_RESPONSIVENESS_EPP_CEILING_1(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_RESPONSIVENESS_EPP_CEILING_1$constants.SEGMENT, 0L, GUID_PROCESSOR_RESPONSIVENESS_EPP_CEILING_1$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_RESPONSIVENESS_PERF_FLOOR$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_RESPONSIVENESS_PERF_FLOOR").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_RESPONSIVENESS_PERF_FLOOR
     * }
     */
    public static GroupLayout GUID_PROCESSOR_RESPONSIVENESS_PERF_FLOOR$layout() {
        return GUID_PROCESSOR_RESPONSIVENESS_PERF_FLOOR$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_RESPONSIVENESS_PERF_FLOOR
     * }
     */
    public static MemorySegment GUID_PROCESSOR_RESPONSIVENESS_PERF_FLOOR() {
        return GUID_PROCESSOR_RESPONSIVENESS_PERF_FLOOR$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_RESPONSIVENESS_PERF_FLOOR
     * }
     */
    public static void GUID_PROCESSOR_RESPONSIVENESS_PERF_FLOOR(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_RESPONSIVENESS_PERF_FLOOR$constants.SEGMENT, 0L, GUID_PROCESSOR_RESPONSIVENESS_PERF_FLOOR$constants.LAYOUT.byteSize());
    }

    private static class GUID_PROCESSOR_RESPONSIVENESS_PERF_FLOOR_1$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PROCESSOR_RESPONSIVENESS_PERF_FLOOR_1").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_RESPONSIVENESS_PERF_FLOOR_1
     * }
     */
    public static GroupLayout GUID_PROCESSOR_RESPONSIVENESS_PERF_FLOOR_1$layout() {
        return GUID_PROCESSOR_RESPONSIVENESS_PERF_FLOOR_1$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_RESPONSIVENESS_PERF_FLOOR_1
     * }
     */
    public static MemorySegment GUID_PROCESSOR_RESPONSIVENESS_PERF_FLOOR_1() {
        return GUID_PROCESSOR_RESPONSIVENESS_PERF_FLOOR_1$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PROCESSOR_RESPONSIVENESS_PERF_FLOOR_1
     * }
     */
    public static void GUID_PROCESSOR_RESPONSIVENESS_PERF_FLOOR_1(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PROCESSOR_RESPONSIVENESS_PERF_FLOOR_1$constants.SEGMENT, 0L, GUID_PROCESSOR_RESPONSIVENESS_PERF_FLOOR_1$constants.LAYOUT.byteSize());
    }

    private static class GUID_LOCK_CONSOLE_ON_WAKE$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_LOCK_CONSOLE_ON_WAKE").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_LOCK_CONSOLE_ON_WAKE
     * }
     */
    public static GroupLayout GUID_LOCK_CONSOLE_ON_WAKE$layout() {
        return GUID_LOCK_CONSOLE_ON_WAKE$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_LOCK_CONSOLE_ON_WAKE
     * }
     */
    public static MemorySegment GUID_LOCK_CONSOLE_ON_WAKE() {
        return GUID_LOCK_CONSOLE_ON_WAKE$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_LOCK_CONSOLE_ON_WAKE
     * }
     */
    public static void GUID_LOCK_CONSOLE_ON_WAKE(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_LOCK_CONSOLE_ON_WAKE$constants.SEGMENT, 0L, GUID_LOCK_CONSOLE_ON_WAKE$constants.LAYOUT.byteSize());
    }

    private static class GUID_DEVICE_IDLE_POLICY$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_DEVICE_IDLE_POLICY").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_DEVICE_IDLE_POLICY
     * }
     */
    public static GroupLayout GUID_DEVICE_IDLE_POLICY$layout() {
        return GUID_DEVICE_IDLE_POLICY$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_DEVICE_IDLE_POLICY
     * }
     */
    public static MemorySegment GUID_DEVICE_IDLE_POLICY() {
        return GUID_DEVICE_IDLE_POLICY$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_DEVICE_IDLE_POLICY
     * }
     */
    public static void GUID_DEVICE_IDLE_POLICY(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_DEVICE_IDLE_POLICY$constants.SEGMENT, 0L, GUID_DEVICE_IDLE_POLICY$constants.LAYOUT.byteSize());
    }

    private static class GUID_CONNECTIVITY_IN_STANDBY$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_CONNECTIVITY_IN_STANDBY").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_CONNECTIVITY_IN_STANDBY
     * }
     */
    public static GroupLayout GUID_CONNECTIVITY_IN_STANDBY$layout() {
        return GUID_CONNECTIVITY_IN_STANDBY$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_CONNECTIVITY_IN_STANDBY
     * }
     */
    public static MemorySegment GUID_CONNECTIVITY_IN_STANDBY() {
        return GUID_CONNECTIVITY_IN_STANDBY$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_CONNECTIVITY_IN_STANDBY
     * }
     */
    public static void GUID_CONNECTIVITY_IN_STANDBY(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_CONNECTIVITY_IN_STANDBY$constants.SEGMENT, 0L, GUID_CONNECTIVITY_IN_STANDBY$constants.LAYOUT.byteSize());
    }

    private static class GUID_DISCONNECTED_STANDBY_MODE$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_DISCONNECTED_STANDBY_MODE").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_DISCONNECTED_STANDBY_MODE
     * }
     */
    public static GroupLayout GUID_DISCONNECTED_STANDBY_MODE$layout() {
        return GUID_DISCONNECTED_STANDBY_MODE$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_DISCONNECTED_STANDBY_MODE
     * }
     */
    public static MemorySegment GUID_DISCONNECTED_STANDBY_MODE() {
        return GUID_DISCONNECTED_STANDBY_MODE$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_DISCONNECTED_STANDBY_MODE
     * }
     */
    public static void GUID_DISCONNECTED_STANDBY_MODE(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_DISCONNECTED_STANDBY_MODE$constants.SEGMENT, 0L, GUID_DISCONNECTED_STANDBY_MODE$constants.LAYOUT.byteSize());
    }

    private static class GUID_ACDC_POWER_SOURCE$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_ACDC_POWER_SOURCE").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_ACDC_POWER_SOURCE
     * }
     */
    public static GroupLayout GUID_ACDC_POWER_SOURCE$layout() {
        return GUID_ACDC_POWER_SOURCE$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_ACDC_POWER_SOURCE
     * }
     */
    public static MemorySegment GUID_ACDC_POWER_SOURCE() {
        return GUID_ACDC_POWER_SOURCE$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_ACDC_POWER_SOURCE
     * }
     */
    public static void GUID_ACDC_POWER_SOURCE(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_ACDC_POWER_SOURCE$constants.SEGMENT, 0L, GUID_ACDC_POWER_SOURCE$constants.LAYOUT.byteSize());
    }

    private static class GUID_LIDSWITCH_STATE_CHANGE$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_LIDSWITCH_STATE_CHANGE").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_LIDSWITCH_STATE_CHANGE
     * }
     */
    public static GroupLayout GUID_LIDSWITCH_STATE_CHANGE$layout() {
        return GUID_LIDSWITCH_STATE_CHANGE$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_LIDSWITCH_STATE_CHANGE
     * }
     */
    public static MemorySegment GUID_LIDSWITCH_STATE_CHANGE() {
        return GUID_LIDSWITCH_STATE_CHANGE$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_LIDSWITCH_STATE_CHANGE
     * }
     */
    public static void GUID_LIDSWITCH_STATE_CHANGE(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_LIDSWITCH_STATE_CHANGE$constants.SEGMENT, 0L, GUID_LIDSWITCH_STATE_CHANGE$constants.LAYOUT.byteSize());
    }

    private static class GUID_LIDSWITCH_STATE_RELIABILITY$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_LIDSWITCH_STATE_RELIABILITY").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_LIDSWITCH_STATE_RELIABILITY
     * }
     */
    public static GroupLayout GUID_LIDSWITCH_STATE_RELIABILITY$layout() {
        return GUID_LIDSWITCH_STATE_RELIABILITY$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_LIDSWITCH_STATE_RELIABILITY
     * }
     */
    public static MemorySegment GUID_LIDSWITCH_STATE_RELIABILITY() {
        return GUID_LIDSWITCH_STATE_RELIABILITY$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_LIDSWITCH_STATE_RELIABILITY
     * }
     */
    public static void GUID_LIDSWITCH_STATE_RELIABILITY(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_LIDSWITCH_STATE_RELIABILITY$constants.SEGMENT, 0L, GUID_LIDSWITCH_STATE_RELIABILITY$constants.LAYOUT.byteSize());
    }

    private static class GUID_BATTERY_PERCENTAGE_REMAINING$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_BATTERY_PERCENTAGE_REMAINING").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_BATTERY_PERCENTAGE_REMAINING
     * }
     */
    public static GroupLayout GUID_BATTERY_PERCENTAGE_REMAINING$layout() {
        return GUID_BATTERY_PERCENTAGE_REMAINING$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_BATTERY_PERCENTAGE_REMAINING
     * }
     */
    public static MemorySegment GUID_BATTERY_PERCENTAGE_REMAINING() {
        return GUID_BATTERY_PERCENTAGE_REMAINING$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_BATTERY_PERCENTAGE_REMAINING
     * }
     */
    public static void GUID_BATTERY_PERCENTAGE_REMAINING(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_BATTERY_PERCENTAGE_REMAINING$constants.SEGMENT, 0L, GUID_BATTERY_PERCENTAGE_REMAINING$constants.LAYOUT.byteSize());
    }

    private static class GUID_BATTERY_COUNT$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_BATTERY_COUNT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_BATTERY_COUNT
     * }
     */
    public static GroupLayout GUID_BATTERY_COUNT$layout() {
        return GUID_BATTERY_COUNT$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_BATTERY_COUNT
     * }
     */
    public static MemorySegment GUID_BATTERY_COUNT() {
        return GUID_BATTERY_COUNT$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_BATTERY_COUNT
     * }
     */
    public static void GUID_BATTERY_COUNT(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_BATTERY_COUNT$constants.SEGMENT, 0L, GUID_BATTERY_COUNT$constants.LAYOUT.byteSize());
    }

    private static class GUID_GLOBAL_USER_PRESENCE$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_GLOBAL_USER_PRESENCE").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_GLOBAL_USER_PRESENCE
     * }
     */
    public static GroupLayout GUID_GLOBAL_USER_PRESENCE$layout() {
        return GUID_GLOBAL_USER_PRESENCE$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_GLOBAL_USER_PRESENCE
     * }
     */
    public static MemorySegment GUID_GLOBAL_USER_PRESENCE() {
        return GUID_GLOBAL_USER_PRESENCE$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_GLOBAL_USER_PRESENCE
     * }
     */
    public static void GUID_GLOBAL_USER_PRESENCE(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_GLOBAL_USER_PRESENCE$constants.SEGMENT, 0L, GUID_GLOBAL_USER_PRESENCE$constants.LAYOUT.byteSize());
    }

    private static class GUID_SESSION_DISPLAY_STATUS$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_SESSION_DISPLAY_STATUS").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_SESSION_DISPLAY_STATUS
     * }
     */
    public static GroupLayout GUID_SESSION_DISPLAY_STATUS$layout() {
        return GUID_SESSION_DISPLAY_STATUS$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_SESSION_DISPLAY_STATUS
     * }
     */
    public static MemorySegment GUID_SESSION_DISPLAY_STATUS() {
        return GUID_SESSION_DISPLAY_STATUS$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_SESSION_DISPLAY_STATUS
     * }
     */
    public static void GUID_SESSION_DISPLAY_STATUS(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_SESSION_DISPLAY_STATUS$constants.SEGMENT, 0L, GUID_SESSION_DISPLAY_STATUS$constants.LAYOUT.byteSize());
    }

    private static class GUID_SESSION_USER_PRESENCE$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_SESSION_USER_PRESENCE").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_SESSION_USER_PRESENCE
     * }
     */
    public static GroupLayout GUID_SESSION_USER_PRESENCE$layout() {
        return GUID_SESSION_USER_PRESENCE$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_SESSION_USER_PRESENCE
     * }
     */
    public static MemorySegment GUID_SESSION_USER_PRESENCE() {
        return GUID_SESSION_USER_PRESENCE$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_SESSION_USER_PRESENCE
     * }
     */
    public static void GUID_SESSION_USER_PRESENCE(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_SESSION_USER_PRESENCE$constants.SEGMENT, 0L, GUID_SESSION_USER_PRESENCE$constants.LAYOUT.byteSize());
    }

    private static class GUID_IDLE_BACKGROUND_TASK$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_IDLE_BACKGROUND_TASK").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_IDLE_BACKGROUND_TASK
     * }
     */
    public static GroupLayout GUID_IDLE_BACKGROUND_TASK$layout() {
        return GUID_IDLE_BACKGROUND_TASK$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_IDLE_BACKGROUND_TASK
     * }
     */
    public static MemorySegment GUID_IDLE_BACKGROUND_TASK() {
        return GUID_IDLE_BACKGROUND_TASK$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_IDLE_BACKGROUND_TASK
     * }
     */
    public static void GUID_IDLE_BACKGROUND_TASK(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_IDLE_BACKGROUND_TASK$constants.SEGMENT, 0L, GUID_IDLE_BACKGROUND_TASK$constants.LAYOUT.byteSize());
    }

    private static class GUID_BACKGROUND_TASK_NOTIFICATION$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_BACKGROUND_TASK_NOTIFICATION").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_BACKGROUND_TASK_NOTIFICATION
     * }
     */
    public static GroupLayout GUID_BACKGROUND_TASK_NOTIFICATION$layout() {
        return GUID_BACKGROUND_TASK_NOTIFICATION$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_BACKGROUND_TASK_NOTIFICATION
     * }
     */
    public static MemorySegment GUID_BACKGROUND_TASK_NOTIFICATION() {
        return GUID_BACKGROUND_TASK_NOTIFICATION$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_BACKGROUND_TASK_NOTIFICATION
     * }
     */
    public static void GUID_BACKGROUND_TASK_NOTIFICATION(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_BACKGROUND_TASK_NOTIFICATION$constants.SEGMENT, 0L, GUID_BACKGROUND_TASK_NOTIFICATION$constants.LAYOUT.byteSize());
    }

    private static class GUID_APPLAUNCH_BUTTON$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_APPLAUNCH_BUTTON").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_APPLAUNCH_BUTTON
     * }
     */
    public static GroupLayout GUID_APPLAUNCH_BUTTON$layout() {
        return GUID_APPLAUNCH_BUTTON$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_APPLAUNCH_BUTTON
     * }
     */
    public static MemorySegment GUID_APPLAUNCH_BUTTON() {
        return GUID_APPLAUNCH_BUTTON$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_APPLAUNCH_BUTTON
     * }
     */
    public static void GUID_APPLAUNCH_BUTTON(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_APPLAUNCH_BUTTON$constants.SEGMENT, 0L, GUID_APPLAUNCH_BUTTON$constants.LAYOUT.byteSize());
    }

    private static class GUID_PCIEXPRESS_SETTINGS_SUBGROUP$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PCIEXPRESS_SETTINGS_SUBGROUP").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PCIEXPRESS_SETTINGS_SUBGROUP
     * }
     */
    public static GroupLayout GUID_PCIEXPRESS_SETTINGS_SUBGROUP$layout() {
        return GUID_PCIEXPRESS_SETTINGS_SUBGROUP$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PCIEXPRESS_SETTINGS_SUBGROUP
     * }
     */
    public static MemorySegment GUID_PCIEXPRESS_SETTINGS_SUBGROUP() {
        return GUID_PCIEXPRESS_SETTINGS_SUBGROUP$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PCIEXPRESS_SETTINGS_SUBGROUP
     * }
     */
    public static void GUID_PCIEXPRESS_SETTINGS_SUBGROUP(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PCIEXPRESS_SETTINGS_SUBGROUP$constants.SEGMENT, 0L, GUID_PCIEXPRESS_SETTINGS_SUBGROUP$constants.LAYOUT.byteSize());
    }

    private static class GUID_PCIEXPRESS_ASPM_POLICY$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_PCIEXPRESS_ASPM_POLICY").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PCIEXPRESS_ASPM_POLICY
     * }
     */
    public static GroupLayout GUID_PCIEXPRESS_ASPM_POLICY$layout() {
        return GUID_PCIEXPRESS_ASPM_POLICY$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PCIEXPRESS_ASPM_POLICY
     * }
     */
    public static MemorySegment GUID_PCIEXPRESS_ASPM_POLICY() {
        return GUID_PCIEXPRESS_ASPM_POLICY$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_PCIEXPRESS_ASPM_POLICY
     * }
     */
    public static void GUID_PCIEXPRESS_ASPM_POLICY(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_PCIEXPRESS_ASPM_POLICY$constants.SEGMENT, 0L, GUID_PCIEXPRESS_ASPM_POLICY$constants.LAYOUT.byteSize());
    }

    private static class GUID_ENABLE_SWITCH_FORCED_SHUTDOWN$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_ENABLE_SWITCH_FORCED_SHUTDOWN").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_ENABLE_SWITCH_FORCED_SHUTDOWN
     * }
     */
    public static GroupLayout GUID_ENABLE_SWITCH_FORCED_SHUTDOWN$layout() {
        return GUID_ENABLE_SWITCH_FORCED_SHUTDOWN$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_ENABLE_SWITCH_FORCED_SHUTDOWN
     * }
     */
    public static MemorySegment GUID_ENABLE_SWITCH_FORCED_SHUTDOWN() {
        return GUID_ENABLE_SWITCH_FORCED_SHUTDOWN$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_ENABLE_SWITCH_FORCED_SHUTDOWN
     * }
     */
    public static void GUID_ENABLE_SWITCH_FORCED_SHUTDOWN(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_ENABLE_SWITCH_FORCED_SHUTDOWN$constants.SEGMENT, 0L, GUID_ENABLE_SWITCH_FORCED_SHUTDOWN$constants.LAYOUT.byteSize());
    }

    private static class GUID_INTSTEER_SUBGROUP$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_INTSTEER_SUBGROUP").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_INTSTEER_SUBGROUP
     * }
     */
    public static GroupLayout GUID_INTSTEER_SUBGROUP$layout() {
        return GUID_INTSTEER_SUBGROUP$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_INTSTEER_SUBGROUP
     * }
     */
    public static MemorySegment GUID_INTSTEER_SUBGROUP() {
        return GUID_INTSTEER_SUBGROUP$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_INTSTEER_SUBGROUP
     * }
     */
    public static void GUID_INTSTEER_SUBGROUP(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_INTSTEER_SUBGROUP$constants.SEGMENT, 0L, GUID_INTSTEER_SUBGROUP$constants.LAYOUT.byteSize());
    }

    private static class GUID_INTSTEER_MODE$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_INTSTEER_MODE").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_INTSTEER_MODE
     * }
     */
    public static GroupLayout GUID_INTSTEER_MODE$layout() {
        return GUID_INTSTEER_MODE$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_INTSTEER_MODE
     * }
     */
    public static MemorySegment GUID_INTSTEER_MODE() {
        return GUID_INTSTEER_MODE$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_INTSTEER_MODE
     * }
     */
    public static void GUID_INTSTEER_MODE(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_INTSTEER_MODE$constants.SEGMENT, 0L, GUID_INTSTEER_MODE$constants.LAYOUT.byteSize());
    }

    private static class GUID_INTSTEER_LOAD_PER_PROC_TRIGGER$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_INTSTEER_LOAD_PER_PROC_TRIGGER").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_INTSTEER_LOAD_PER_PROC_TRIGGER
     * }
     */
    public static GroupLayout GUID_INTSTEER_LOAD_PER_PROC_TRIGGER$layout() {
        return GUID_INTSTEER_LOAD_PER_PROC_TRIGGER$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_INTSTEER_LOAD_PER_PROC_TRIGGER
     * }
     */
    public static MemorySegment GUID_INTSTEER_LOAD_PER_PROC_TRIGGER() {
        return GUID_INTSTEER_LOAD_PER_PROC_TRIGGER$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_INTSTEER_LOAD_PER_PROC_TRIGGER
     * }
     */
    public static void GUID_INTSTEER_LOAD_PER_PROC_TRIGGER(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_INTSTEER_LOAD_PER_PROC_TRIGGER$constants.SEGMENT, 0L, GUID_INTSTEER_LOAD_PER_PROC_TRIGGER$constants.LAYOUT.byteSize());
    }

    private static class GUID_INTSTEER_TIME_UNPARK_TRIGGER$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_INTSTEER_TIME_UNPARK_TRIGGER").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_INTSTEER_TIME_UNPARK_TRIGGER
     * }
     */
    public static GroupLayout GUID_INTSTEER_TIME_UNPARK_TRIGGER$layout() {
        return GUID_INTSTEER_TIME_UNPARK_TRIGGER$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_INTSTEER_TIME_UNPARK_TRIGGER
     * }
     */
    public static MemorySegment GUID_INTSTEER_TIME_UNPARK_TRIGGER() {
        return GUID_INTSTEER_TIME_UNPARK_TRIGGER$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_INTSTEER_TIME_UNPARK_TRIGGER
     * }
     */
    public static void GUID_INTSTEER_TIME_UNPARK_TRIGGER(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_INTSTEER_TIME_UNPARK_TRIGGER$constants.SEGMENT, 0L, GUID_INTSTEER_TIME_UNPARK_TRIGGER$constants.LAYOUT.byteSize());
    }

    private static class GUID_GRAPHICS_SUBGROUP$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_GRAPHICS_SUBGROUP").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_GRAPHICS_SUBGROUP
     * }
     */
    public static GroupLayout GUID_GRAPHICS_SUBGROUP$layout() {
        return GUID_GRAPHICS_SUBGROUP$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_GRAPHICS_SUBGROUP
     * }
     */
    public static MemorySegment GUID_GRAPHICS_SUBGROUP() {
        return GUID_GRAPHICS_SUBGROUP$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_GRAPHICS_SUBGROUP
     * }
     */
    public static void GUID_GRAPHICS_SUBGROUP(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_GRAPHICS_SUBGROUP$constants.SEGMENT, 0L, GUID_GRAPHICS_SUBGROUP$constants.LAYOUT.byteSize());
    }

    private static class GUID_GPU_PREFERENCE_POLICY$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_GPU_PREFERENCE_POLICY").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_GPU_PREFERENCE_POLICY
     * }
     */
    public static GroupLayout GUID_GPU_PREFERENCE_POLICY$layout() {
        return GUID_GPU_PREFERENCE_POLICY$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_GPU_PREFERENCE_POLICY
     * }
     */
    public static MemorySegment GUID_GPU_PREFERENCE_POLICY() {
        return GUID_GPU_PREFERENCE_POLICY$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_GPU_PREFERENCE_POLICY
     * }
     */
    public static void GUID_GPU_PREFERENCE_POLICY(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_GPU_PREFERENCE_POLICY$constants.SEGMENT, 0L, GUID_GPU_PREFERENCE_POLICY$constants.LAYOUT.byteSize());
    }

    private static class GUID_MIXED_REALITY_MODE$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_MIXED_REALITY_MODE").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_MIXED_REALITY_MODE
     * }
     */
    public static GroupLayout GUID_MIXED_REALITY_MODE$layout() {
        return GUID_MIXED_REALITY_MODE$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_MIXED_REALITY_MODE
     * }
     */
    public static MemorySegment GUID_MIXED_REALITY_MODE() {
        return GUID_MIXED_REALITY_MODE$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_MIXED_REALITY_MODE
     * }
     */
    public static void GUID_MIXED_REALITY_MODE(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_MIXED_REALITY_MODE$constants.SEGMENT, 0L, GUID_MIXED_REALITY_MODE$constants.LAYOUT.byteSize());
    }

    private static class GUID_SPR_ACTIVE_SESSION_CHANGE$constants {
        public static final GroupLayout LAYOUT = _GUID.layout();
        public static final MemorySegment SEGMENT = winapi.findOrThrow("GUID_SPR_ACTIVE_SESSION_CHANGE").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_SPR_ACTIVE_SESSION_CHANGE
     * }
     */
    public static GroupLayout GUID_SPR_ACTIVE_SESSION_CHANGE$layout() {
        return GUID_SPR_ACTIVE_SESSION_CHANGE$constants.LAYOUT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_SPR_ACTIVE_SESSION_CHANGE
     * }
     */
    public static MemorySegment GUID_SPR_ACTIVE_SESSION_CHANGE() {
        return GUID_SPR_ACTIVE_SESSION_CHANGE$constants.SEGMENT;
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern const GUID GUID_SPR_ACTIVE_SESSION_CHANGE
     * }
     */
    public static void GUID_SPR_ACTIVE_SESSION_CHANGE(MemorySegment varValue) {
        MemorySegment.copy(varValue, 0L, GUID_SPR_ACTIVE_SESSION_CHANGE$constants.SEGMENT, 0L, GUID_SPR_ACTIVE_SESSION_CHANGE$constants.LAYOUT.byteSize());
    }
    private static final int PowerSystemUnspecified = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _SYSTEM_POWER_STATE.PowerSystemUnspecified = 0
     * }
     */
    public static int PowerSystemUnspecified() {
        return PowerSystemUnspecified;
    }
    private static final int PowerSystemWorking = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _SYSTEM_POWER_STATE.PowerSystemWorking = 1
     * }
     */
    public static int PowerSystemWorking() {
        return PowerSystemWorking;
    }
    private static final int PowerSystemSleeping1 = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _SYSTEM_POWER_STATE.PowerSystemSleeping1 = 2
     * }
     */
    public static int PowerSystemSleeping1() {
        return PowerSystemSleeping1;
    }
    private static final int PowerSystemSleeping2 = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _SYSTEM_POWER_STATE.PowerSystemSleeping2 = 3
     * }
     */
    public static int PowerSystemSleeping2() {
        return PowerSystemSleeping2;
    }
    private static final int PowerSystemSleeping3 = (int)4L;
    /**
     * {@snippet lang=c :
     * enum _SYSTEM_POWER_STATE.PowerSystemSleeping3 = 4
     * }
     */
    public static int PowerSystemSleeping3() {
        return PowerSystemSleeping3;
    }
    private static final int PowerSystemHibernate = (int)5L;
    /**
     * {@snippet lang=c :
     * enum _SYSTEM_POWER_STATE.PowerSystemHibernate = 5
     * }
     */
    public static int PowerSystemHibernate() {
        return PowerSystemHibernate;
    }
    private static final int PowerSystemShutdown = (int)6L;
    /**
     * {@snippet lang=c :
     * enum _SYSTEM_POWER_STATE.PowerSystemShutdown = 6
     * }
     */
    public static int PowerSystemShutdown() {
        return PowerSystemShutdown;
    }
    private static final int PowerSystemMaximum = (int)7L;
    /**
     * {@snippet lang=c :
     * enum _SYSTEM_POWER_STATE.PowerSystemMaximum = 7
     * }
     */
    public static int PowerSystemMaximum() {
        return PowerSystemMaximum;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _SYSTEM_POWER_STATE {
     *     PowerSystemUnspecified = 0,
     *     PowerSystemWorking = 1,
     *     PowerSystemSleeping1 = 2,
     *     PowerSystemSleeping2 = 3,
     *     PowerSystemSleeping3 = 4,
     *     PowerSystemHibernate = 5,
     *     PowerSystemShutdown = 6,
     *     PowerSystemMaximum = 7
     * } *PSYSTEM_POWER_STATE
     * }
     */
    public static final AddressLayout PSYSTEM_POWER_STATE = winapi.C_POINTER;
    private static final int PowerActionNone = (int)0L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.PowerActionNone = 0
     * }
     */
    public static int PowerActionNone() {
        return PowerActionNone;
    }
    private static final int PowerActionReserved = (int)1L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.PowerActionReserved = 1
     * }
     */
    public static int PowerActionReserved() {
        return PowerActionReserved;
    }
    private static final int PowerActionSleep = (int)2L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.PowerActionSleep = 2
     * }
     */
    public static int PowerActionSleep() {
        return PowerActionSleep;
    }
    private static final int PowerActionHibernate = (int)3L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.PowerActionHibernate = 3
     * }
     */
    public static int PowerActionHibernate() {
        return PowerActionHibernate;
    }
    private static final int PowerActionShutdown = (int)4L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.PowerActionShutdown = 4
     * }
     */
    public static int PowerActionShutdown() {
        return PowerActionShutdown;
    }
    private static final int PowerActionShutdownReset = (int)5L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.PowerActionShutdownReset = 5
     * }
     */
    public static int PowerActionShutdownReset() {
        return PowerActionShutdownReset;
    }
    private static final int PowerActionShutdownOff = (int)6L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.PowerActionShutdownOff = 6
     * }
     */
    public static int PowerActionShutdownOff() {
        return PowerActionShutdownOff;
    }
    private static final int PowerActionWarmEject = (int)7L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.PowerActionWarmEject = 7
     * }
     */
    public static int PowerActionWarmEject() {
        return PowerActionWarmEject;
    }
    private static final int PowerActionDisplayOff = (int)8L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.PowerActionDisplayOff = 8
     * }
     */
    public static int PowerActionDisplayOff() {
        return PowerActionDisplayOff;
    }
    /**
     * {@snippet lang=c :
     * typedef enum {
     *     PowerActionNone = 0,
     *     PowerActionReserved,
     *     PowerActionSleep,
     *     PowerActionHibernate,
     *     PowerActionShutdown,
     *     PowerActionShutdownReset,
     *     PowerActionShutdownOff,
     *     PowerActionWarmEject,
     *     PowerActionDisplayOff
     * } *PPOWER_ACTION
     * }
     */
    public static final AddressLayout PPOWER_ACTION = winapi.C_POINTER;
    private static final int PowerDeviceUnspecified = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _DEVICE_POWER_STATE.PowerDeviceUnspecified = 0
     * }
     */
    public static int PowerDeviceUnspecified() {
        return PowerDeviceUnspecified;
    }
    private static final int PowerDeviceD0 = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _DEVICE_POWER_STATE.PowerDeviceD0 = 1
     * }
     */
    public static int PowerDeviceD0() {
        return PowerDeviceD0;
    }
    private static final int PowerDeviceD1 = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _DEVICE_POWER_STATE.PowerDeviceD1 = 2
     * }
     */
    public static int PowerDeviceD1() {
        return PowerDeviceD1;
    }
    private static final int PowerDeviceD2 = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _DEVICE_POWER_STATE.PowerDeviceD2 = 3
     * }
     */
    public static int PowerDeviceD2() {
        return PowerDeviceD2;
    }
    private static final int PowerDeviceD3 = (int)4L;
    /**
     * {@snippet lang=c :
     * enum _DEVICE_POWER_STATE.PowerDeviceD3 = 4
     * }
     */
    public static int PowerDeviceD3() {
        return PowerDeviceD3;
    }
    private static final int PowerDeviceMaximum = (int)5L;
    /**
     * {@snippet lang=c :
     * enum _DEVICE_POWER_STATE.PowerDeviceMaximum = 5
     * }
     */
    public static int PowerDeviceMaximum() {
        return PowerDeviceMaximum;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _DEVICE_POWER_STATE {
     *     PowerDeviceUnspecified = 0,
     *     PowerDeviceD0,
     *     PowerDeviceD1,
     *     PowerDeviceD2,
     *     PowerDeviceD3,
     *     PowerDeviceMaximum
     * } *PDEVICE_POWER_STATE
     * }
     */
    public static final AddressLayout PDEVICE_POWER_STATE = winapi.C_POINTER;
    private static final int PowerMonitorOff = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _MONITOR_DISPLAY_STATE.PowerMonitorOff = 0
     * }
     */
    public static int PowerMonitorOff() {
        return PowerMonitorOff;
    }
    private static final int PowerMonitorOn = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _MONITOR_DISPLAY_STATE.PowerMonitorOn = 1
     * }
     */
    public static int PowerMonitorOn() {
        return PowerMonitorOn;
    }
    private static final int PowerMonitorDim = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _MONITOR_DISPLAY_STATE.PowerMonitorDim = 2
     * }
     */
    public static int PowerMonitorDim() {
        return PowerMonitorDim;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _MONITOR_DISPLAY_STATE {
     *     PowerMonitorOff = 0,
     *     PowerMonitorOn,
     *     PowerMonitorDim
     * } *PMONITOR_DISPLAY_STATE
     * }
     */
    public static final AddressLayout PMONITOR_DISPLAY_STATE = winapi.C_POINTER;
    private static final int PowerUserPresent = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _USER_ACTIVITY_PRESENCE.PowerUserPresent = 0
     * }
     */
    public static int PowerUserPresent() {
        return PowerUserPresent;
    }
    private static final int PowerUserNotPresent = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _USER_ACTIVITY_PRESENCE.PowerUserNotPresent = 1
     * }
     */
    public static int PowerUserNotPresent() {
        return PowerUserNotPresent;
    }
    private static final int PowerUserInactive = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _USER_ACTIVITY_PRESENCE.PowerUserInactive = 2
     * }
     */
    public static int PowerUserInactive() {
        return PowerUserInactive;
    }
    private static final int PowerUserMaximum = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _USER_ACTIVITY_PRESENCE.PowerUserMaximum = 3
     * }
     */
    public static int PowerUserMaximum() {
        return PowerUserMaximum;
    }
    private static final int PowerUserInvalid = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _USER_ACTIVITY_PRESENCE.PowerUserInvalid = 3
     * }
     */
    public static int PowerUserInvalid() {
        return PowerUserInvalid;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _USER_ACTIVITY_PRESENCE {
     *     PowerUserPresent = 0,
     *     PowerUserNotPresent,
     *     PowerUserInactive,
     *     PowerUserMaximum,
     *     PowerUserInvalid = PowerUserMaximum
     * } *PUSER_ACTIVITY_PRESENCE
     * }
     */
    public static final AddressLayout PUSER_ACTIVITY_PRESENCE = winapi.C_POINTER;
    private static final int ENERGY_SAVER_OFF = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _ENERGY_SAVER_STATUS.ENERGY_SAVER_OFF = 0
     * }
     */
    public static int ENERGY_SAVER_OFF() {
        return ENERGY_SAVER_OFF;
    }
    private static final int ENERGY_SAVER_STANDARD = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _ENERGY_SAVER_STATUS.ENERGY_SAVER_STANDARD = 1
     * }
     */
    public static int ENERGY_SAVER_STANDARD() {
        return ENERGY_SAVER_STANDARD;
    }
    private static final int ENERGY_SAVER_HIGH_SAVINGS = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _ENERGY_SAVER_STATUS.ENERGY_SAVER_HIGH_SAVINGS = 2
     * }
     */
    public static int ENERGY_SAVER_HIGH_SAVINGS() {
        return ENERGY_SAVER_HIGH_SAVINGS;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _ENERGY_SAVER_STATUS {
     *     ENERGY_SAVER_OFF = 0,
     *     ENERGY_SAVER_STANDARD,
     *     ENERGY_SAVER_HIGH_SAVINGS
     * } *PENERGY_SAVER_STATUS
     * }
     */
    public static final AddressLayout PENERGY_SAVER_STATUS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef DWORD EXECUTION_STATE
     * }
     */
    public static final OfInt EXECUTION_STATE = winapi.C_LONG;
    /**
     * {@snippet lang=c :
     * typedef DWORD *PEXECUTION_STATE
     * }
     */
    public static final AddressLayout PEXECUTION_STATE = winapi.C_POINTER;
    private static final int LT_DONT_CARE = (int)0L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.LT_DONT_CARE = 0
     * }
     */
    public static int LT_DONT_CARE() {
        return LT_DONT_CARE;
    }
    private static final int LT_LOWEST_LATENCY = (int)1L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.LT_LOWEST_LATENCY = 1
     * }
     */
    public static int LT_LOWEST_LATENCY() {
        return LT_LOWEST_LATENCY;
    }
    private static final int PowerRequestDisplayRequired = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _POWER_REQUEST_TYPE.PowerRequestDisplayRequired = 0
     * }
     */
    public static int PowerRequestDisplayRequired() {
        return PowerRequestDisplayRequired;
    }
    private static final int PowerRequestSystemRequired = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _POWER_REQUEST_TYPE.PowerRequestSystemRequired = 1
     * }
     */
    public static int PowerRequestSystemRequired() {
        return PowerRequestSystemRequired;
    }
    private static final int PowerRequestAwayModeRequired = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _POWER_REQUEST_TYPE.PowerRequestAwayModeRequired = 2
     * }
     */
    public static int PowerRequestAwayModeRequired() {
        return PowerRequestAwayModeRequired;
    }
    private static final int PowerRequestExecutionRequired = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _POWER_REQUEST_TYPE.PowerRequestExecutionRequired = 3
     * }
     */
    public static int PowerRequestExecutionRequired() {
        return PowerRequestExecutionRequired;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _POWER_REQUEST_TYPE {
     *     PowerRequestDisplayRequired,
     *     PowerRequestSystemRequired,
     *     PowerRequestAwayModeRequired,
     *     PowerRequestExecutionRequired
     * } *PPOWER_REQUEST_TYPE
     * }
     */
    public static final AddressLayout PPOWER_REQUEST_TYPE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct CM_Power_Data_s {
     *     DWORD PD_Size;
     *     DEVICE_POWER_STATE PD_MostRecentPowerState;
     *     DWORD PD_Capabilities;
     *     DWORD PD_D1Latency;
     *     DWORD PD_D2Latency;
     *     DWORD PD_D3Latency;
     *     DEVICE_POWER_STATE PD_PowerStateMapping[7];
     *     SYSTEM_POWER_STATE PD_DeepestSystemWake;
     * } *PCM_POWER_DATA
     * }
     */
    public static final AddressLayout PCM_POWER_DATA = winapi.C_POINTER;
    private static final int SystemPowerPolicyAc = (int)0L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.SystemPowerPolicyAc = 0
     * }
     */
    public static int SystemPowerPolicyAc() {
        return SystemPowerPolicyAc;
    }
    private static final int SystemPowerPolicyDc = (int)1L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.SystemPowerPolicyDc = 1
     * }
     */
    public static int SystemPowerPolicyDc() {
        return SystemPowerPolicyDc;
    }
    private static final int VerifySystemPolicyAc = (int)2L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.VerifySystemPolicyAc = 2
     * }
     */
    public static int VerifySystemPolicyAc() {
        return VerifySystemPolicyAc;
    }
    private static final int VerifySystemPolicyDc = (int)3L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.VerifySystemPolicyDc = 3
     * }
     */
    public static int VerifySystemPolicyDc() {
        return VerifySystemPolicyDc;
    }
    private static final int SystemPowerCapabilities = (int)4L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.SystemPowerCapabilities = 4
     * }
     */
    public static int SystemPowerCapabilities() {
        return SystemPowerCapabilities;
    }
    private static final int SystemBatteryState = (int)5L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.SystemBatteryState = 5
     * }
     */
    public static int SystemBatteryState() {
        return SystemBatteryState;
    }
    private static final int SystemPowerStateHandler = (int)6L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.SystemPowerStateHandler = 6
     * }
     */
    public static int SystemPowerStateHandler() {
        return SystemPowerStateHandler;
    }
    private static final int ProcessorStateHandler = (int)7L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.ProcessorStateHandler = 7
     * }
     */
    public static int ProcessorStateHandler() {
        return ProcessorStateHandler;
    }
    private static final int SystemPowerPolicyCurrent = (int)8L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.SystemPowerPolicyCurrent = 8
     * }
     */
    public static int SystemPowerPolicyCurrent() {
        return SystemPowerPolicyCurrent;
    }
    private static final int AdministratorPowerPolicy = (int)9L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.AdministratorPowerPolicy = 9
     * }
     */
    public static int AdministratorPowerPolicy() {
        return AdministratorPowerPolicy;
    }
    private static final int SystemReserveHiberFile = (int)10L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.SystemReserveHiberFile = 10
     * }
     */
    public static int SystemReserveHiberFile() {
        return SystemReserveHiberFile;
    }
    private static final int ProcessorInformation = (int)11L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.ProcessorInformation = 11
     * }
     */
    public static int ProcessorInformation() {
        return ProcessorInformation;
    }
    private static final int SystemPowerInformation = (int)12L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.SystemPowerInformation = 12
     * }
     */
    public static int SystemPowerInformation() {
        return SystemPowerInformation;
    }
    private static final int ProcessorStateHandler2 = (int)13L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.ProcessorStateHandler2 = 13
     * }
     */
    public static int ProcessorStateHandler2() {
        return ProcessorStateHandler2;
    }
    private static final int LastWakeTime = (int)14L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.LastWakeTime = 14
     * }
     */
    public static int LastWakeTime() {
        return LastWakeTime;
    }
    private static final int LastSleepTime = (int)15L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.LastSleepTime = 15
     * }
     */
    public static int LastSleepTime() {
        return LastSleepTime;
    }
    private static final int SystemExecutionState = (int)16L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.SystemExecutionState = 16
     * }
     */
    public static int SystemExecutionState() {
        return SystemExecutionState;
    }
    private static final int SystemPowerStateNotifyHandler = (int)17L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.SystemPowerStateNotifyHandler = 17
     * }
     */
    public static int SystemPowerStateNotifyHandler() {
        return SystemPowerStateNotifyHandler;
    }
    private static final int ProcessorPowerPolicyAc = (int)18L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.ProcessorPowerPolicyAc = 18
     * }
     */
    public static int ProcessorPowerPolicyAc() {
        return ProcessorPowerPolicyAc;
    }
    private static final int ProcessorPowerPolicyDc = (int)19L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.ProcessorPowerPolicyDc = 19
     * }
     */
    public static int ProcessorPowerPolicyDc() {
        return ProcessorPowerPolicyDc;
    }
    private static final int VerifyProcessorPowerPolicyAc = (int)20L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.VerifyProcessorPowerPolicyAc = 20
     * }
     */
    public static int VerifyProcessorPowerPolicyAc() {
        return VerifyProcessorPowerPolicyAc;
    }
    private static final int VerifyProcessorPowerPolicyDc = (int)21L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.VerifyProcessorPowerPolicyDc = 21
     * }
     */
    public static int VerifyProcessorPowerPolicyDc() {
        return VerifyProcessorPowerPolicyDc;
    }
    private static final int ProcessorPowerPolicyCurrent = (int)22L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.ProcessorPowerPolicyCurrent = 22
     * }
     */
    public static int ProcessorPowerPolicyCurrent() {
        return ProcessorPowerPolicyCurrent;
    }
    private static final int SystemPowerStateLogging = (int)23L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.SystemPowerStateLogging = 23
     * }
     */
    public static int SystemPowerStateLogging() {
        return SystemPowerStateLogging;
    }
    private static final int SystemPowerLoggingEntry = (int)24L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.SystemPowerLoggingEntry = 24
     * }
     */
    public static int SystemPowerLoggingEntry() {
        return SystemPowerLoggingEntry;
    }
    private static final int SetPowerSettingValue = (int)25L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.SetPowerSettingValue = 25
     * }
     */
    public static int SetPowerSettingValue() {
        return SetPowerSettingValue;
    }
    private static final int NotifyUserPowerSetting = (int)26L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.NotifyUserPowerSetting = 26
     * }
     */
    public static int NotifyUserPowerSetting() {
        return NotifyUserPowerSetting;
    }
    private static final int PowerInformationLevelUnused0 = (int)27L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.PowerInformationLevelUnused0 = 27
     * }
     */
    public static int PowerInformationLevelUnused0() {
        return PowerInformationLevelUnused0;
    }
    private static final int SystemMonitorHiberBootPowerOff = (int)28L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.SystemMonitorHiberBootPowerOff = 28
     * }
     */
    public static int SystemMonitorHiberBootPowerOff() {
        return SystemMonitorHiberBootPowerOff;
    }
    private static final int SystemVideoState = (int)29L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.SystemVideoState = 29
     * }
     */
    public static int SystemVideoState() {
        return SystemVideoState;
    }
    private static final int TraceApplicationPowerMessage = (int)30L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.TraceApplicationPowerMessage = 30
     * }
     */
    public static int TraceApplicationPowerMessage() {
        return TraceApplicationPowerMessage;
    }
    private static final int TraceApplicationPowerMessageEnd = (int)31L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.TraceApplicationPowerMessageEnd = 31
     * }
     */
    public static int TraceApplicationPowerMessageEnd() {
        return TraceApplicationPowerMessageEnd;
    }
    private static final int ProcessorPerfStates = (int)32L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.ProcessorPerfStates = 32
     * }
     */
    public static int ProcessorPerfStates() {
        return ProcessorPerfStates;
    }
    private static final int ProcessorIdleStates = (int)33L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.ProcessorIdleStates = 33
     * }
     */
    public static int ProcessorIdleStates() {
        return ProcessorIdleStates;
    }
    private static final int ProcessorCap = (int)34L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.ProcessorCap = 34
     * }
     */
    public static int ProcessorCap() {
        return ProcessorCap;
    }
    private static final int SystemWakeSource = (int)35L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.SystemWakeSource = 35
     * }
     */
    public static int SystemWakeSource() {
        return SystemWakeSource;
    }
    private static final int SystemHiberFileInformation = (int)36L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.SystemHiberFileInformation = 36
     * }
     */
    public static int SystemHiberFileInformation() {
        return SystemHiberFileInformation;
    }
    private static final int TraceServicePowerMessage = (int)37L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.TraceServicePowerMessage = 37
     * }
     */
    public static int TraceServicePowerMessage() {
        return TraceServicePowerMessage;
    }
    private static final int ProcessorLoad = (int)38L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.ProcessorLoad = 38
     * }
     */
    public static int ProcessorLoad() {
        return ProcessorLoad;
    }
    private static final int PowerShutdownNotification = (int)39L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.PowerShutdownNotification = 39
     * }
     */
    public static int PowerShutdownNotification() {
        return PowerShutdownNotification;
    }
    private static final int MonitorCapabilities = (int)40L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorCapabilities = 40
     * }
     */
    public static int MonitorCapabilities() {
        return MonitorCapabilities;
    }
    private static final int SessionPowerInit = (int)41L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.SessionPowerInit = 41
     * }
     */
    public static int SessionPowerInit() {
        return SessionPowerInit;
    }
    private static final int SessionDisplayState = (int)42L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.SessionDisplayState = 42
     * }
     */
    public static int SessionDisplayState() {
        return SessionDisplayState;
    }
    private static final int PowerRequestCreate = (int)43L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.PowerRequestCreate = 43
     * }
     */
    public static int PowerRequestCreate() {
        return PowerRequestCreate;
    }
    private static final int PowerRequestAction = (int)44L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.PowerRequestAction = 44
     * }
     */
    public static int PowerRequestAction() {
        return PowerRequestAction;
    }
    private static final int GetPowerRequestList = (int)45L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.GetPowerRequestList = 45
     * }
     */
    public static int GetPowerRequestList() {
        return GetPowerRequestList;
    }
    private static final int ProcessorInformationEx = (int)46L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.ProcessorInformationEx = 46
     * }
     */
    public static int ProcessorInformationEx() {
        return ProcessorInformationEx;
    }
    private static final int NotifyUserModeLegacyPowerEvent = (int)47L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.NotifyUserModeLegacyPowerEvent = 47
     * }
     */
    public static int NotifyUserModeLegacyPowerEvent() {
        return NotifyUserModeLegacyPowerEvent;
    }
    private static final int GroupPark = (int)48L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.GroupPark = 48
     * }
     */
    public static int GroupPark() {
        return GroupPark;
    }
    private static final int ProcessorIdleDomains = (int)49L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.ProcessorIdleDomains = 49
     * }
     */
    public static int ProcessorIdleDomains() {
        return ProcessorIdleDomains;
    }
    private static final int WakeTimerList = (int)50L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.WakeTimerList = 50
     * }
     */
    public static int WakeTimerList() {
        return WakeTimerList;
    }
    private static final int SystemHiberFileSize = (int)51L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.SystemHiberFileSize = 51
     * }
     */
    public static int SystemHiberFileSize() {
        return SystemHiberFileSize;
    }
    private static final int ProcessorIdleStatesHv = (int)52L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.ProcessorIdleStatesHv = 52
     * }
     */
    public static int ProcessorIdleStatesHv() {
        return ProcessorIdleStatesHv;
    }
    private static final int ProcessorPerfStatesHv = (int)53L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.ProcessorPerfStatesHv = 53
     * }
     */
    public static int ProcessorPerfStatesHv() {
        return ProcessorPerfStatesHv;
    }
    private static final int ProcessorPerfCapHv = (int)54L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.ProcessorPerfCapHv = 54
     * }
     */
    public static int ProcessorPerfCapHv() {
        return ProcessorPerfCapHv;
    }
    private static final int ProcessorSetIdle = (int)55L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.ProcessorSetIdle = 55
     * }
     */
    public static int ProcessorSetIdle() {
        return ProcessorSetIdle;
    }
    private static final int LogicalProcessorIdling = (int)56L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.LogicalProcessorIdling = 56
     * }
     */
    public static int LogicalProcessorIdling() {
        return LogicalProcessorIdling;
    }
    private static final int UserPresence = (int)57L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.UserPresence = 57
     * }
     */
    public static int UserPresence() {
        return UserPresence;
    }
    private static final int PowerSettingNotificationName = (int)58L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.PowerSettingNotificationName = 58
     * }
     */
    public static int PowerSettingNotificationName() {
        return PowerSettingNotificationName;
    }
    private static final int GetPowerSettingValue = (int)59L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.GetPowerSettingValue = 59
     * }
     */
    public static int GetPowerSettingValue() {
        return GetPowerSettingValue;
    }
    private static final int IdleResiliency = (int)60L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.IdleResiliency = 60
     * }
     */
    public static int IdleResiliency() {
        return IdleResiliency;
    }
    private static final int SessionRITState = (int)61L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.SessionRITState = 61
     * }
     */
    public static int SessionRITState() {
        return SessionRITState;
    }
    private static final int SessionConnectNotification = (int)62L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.SessionConnectNotification = 62
     * }
     */
    public static int SessionConnectNotification() {
        return SessionConnectNotification;
    }
    private static final int SessionPowerCleanup = (int)63L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.SessionPowerCleanup = 63
     * }
     */
    public static int SessionPowerCleanup() {
        return SessionPowerCleanup;
    }
    private static final int SessionLockState = (int)64L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.SessionLockState = 64
     * }
     */
    public static int SessionLockState() {
        return SessionLockState;
    }
    private static final int SystemHiberbootState = (int)65L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.SystemHiberbootState = 65
     * }
     */
    public static int SystemHiberbootState() {
        return SystemHiberbootState;
    }
    private static final int PlatformInformation = (int)66L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.PlatformInformation = 66
     * }
     */
    public static int PlatformInformation() {
        return PlatformInformation;
    }
    private static final int PdcInvocation = (int)67L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.PdcInvocation = 67
     * }
     */
    public static int PdcInvocation() {
        return PdcInvocation;
    }
    private static final int MonitorInvocation = (int)68L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorInvocation = 68
     * }
     */
    public static int MonitorInvocation() {
        return MonitorInvocation;
    }
    private static final int FirmwareTableInformationRegistered = (int)69L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.FirmwareTableInformationRegistered = 69
     * }
     */
    public static int FirmwareTableInformationRegistered() {
        return FirmwareTableInformationRegistered;
    }
    private static final int SetShutdownSelectedTime = (int)70L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.SetShutdownSelectedTime = 70
     * }
     */
    public static int SetShutdownSelectedTime() {
        return SetShutdownSelectedTime;
    }
    private static final int SuspendResumeInvocation = (int)71L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.SuspendResumeInvocation = 71
     * }
     */
    public static int SuspendResumeInvocation() {
        return SuspendResumeInvocation;
    }
    private static final int PlmPowerRequestCreate = (int)72L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.PlmPowerRequestCreate = 72
     * }
     */
    public static int PlmPowerRequestCreate() {
        return PlmPowerRequestCreate;
    }
    private static final int ScreenOff = (int)73L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.ScreenOff = 73
     * }
     */
    public static int ScreenOff() {
        return ScreenOff;
    }
    private static final int CsDeviceNotification = (int)74L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.CsDeviceNotification = 74
     * }
     */
    public static int CsDeviceNotification() {
        return CsDeviceNotification;
    }
    private static final int PlatformRole = (int)75L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.PlatformRole = 75
     * }
     */
    public static int PlatformRole() {
        return PlatformRole;
    }
    private static final int LastResumePerformance = (int)76L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.LastResumePerformance = 76
     * }
     */
    public static int LastResumePerformance() {
        return LastResumePerformance;
    }
    private static final int DisplayBurst = (int)77L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.DisplayBurst = 77
     * }
     */
    public static int DisplayBurst() {
        return DisplayBurst;
    }
    private static final int ExitLatencySamplingPercentage = (int)78L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.ExitLatencySamplingPercentage = 78
     * }
     */
    public static int ExitLatencySamplingPercentage() {
        return ExitLatencySamplingPercentage;
    }
    private static final int RegisterSpmPowerSettings = (int)79L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.RegisterSpmPowerSettings = 79
     * }
     */
    public static int RegisterSpmPowerSettings() {
        return RegisterSpmPowerSettings;
    }
    private static final int PlatformIdleStates = (int)80L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.PlatformIdleStates = 80
     * }
     */
    public static int PlatformIdleStates() {
        return PlatformIdleStates;
    }
    private static final int ProcessorIdleVeto = (int)81L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.ProcessorIdleVeto = 81
     * }
     */
    public static int ProcessorIdleVeto() {
        return ProcessorIdleVeto;
    }
    private static final int PlatformIdleVeto = (int)82L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.PlatformIdleVeto = 82
     * }
     */
    public static int PlatformIdleVeto() {
        return PlatformIdleVeto;
    }
    private static final int SystemBatteryStatePrecise = (int)83L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.SystemBatteryStatePrecise = 83
     * }
     */
    public static int SystemBatteryStatePrecise() {
        return SystemBatteryStatePrecise;
    }
    private static final int ThermalEvent = (int)84L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.ThermalEvent = 84
     * }
     */
    public static int ThermalEvent() {
        return ThermalEvent;
    }
    private static final int PowerRequestActionInternal = (int)85L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.PowerRequestActionInternal = 85
     * }
     */
    public static int PowerRequestActionInternal() {
        return PowerRequestActionInternal;
    }
    private static final int BatteryDeviceState = (int)86L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.BatteryDeviceState = 86
     * }
     */
    public static int BatteryDeviceState() {
        return BatteryDeviceState;
    }
    private static final int PowerInformationInternal = (int)87L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.PowerInformationInternal = 87
     * }
     */
    public static int PowerInformationInternal() {
        return PowerInformationInternal;
    }
    private static final int ThermalStandby = (int)88L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.ThermalStandby = 88
     * }
     */
    public static int ThermalStandby() {
        return ThermalStandby;
    }
    private static final int SystemHiberFileType = (int)89L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.SystemHiberFileType = 89
     * }
     */
    public static int SystemHiberFileType() {
        return SystemHiberFileType;
    }
    private static final int PhysicalPowerButtonPress = (int)90L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.PhysicalPowerButtonPress = 90
     * }
     */
    public static int PhysicalPowerButtonPress() {
        return PhysicalPowerButtonPress;
    }
    private static final int QueryPotentialDripsConstraint = (int)91L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.QueryPotentialDripsConstraint = 91
     * }
     */
    public static int QueryPotentialDripsConstraint() {
        return QueryPotentialDripsConstraint;
    }
    private static final int EnergyTrackerCreate = (int)92L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.EnergyTrackerCreate = 92
     * }
     */
    public static int EnergyTrackerCreate() {
        return EnergyTrackerCreate;
    }
    private static final int EnergyTrackerQuery = (int)93L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.EnergyTrackerQuery = 93
     * }
     */
    public static int EnergyTrackerQuery() {
        return EnergyTrackerQuery;
    }
    private static final int UpdateBlackBoxRecorder = (int)94L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.UpdateBlackBoxRecorder = 94
     * }
     */
    public static int UpdateBlackBoxRecorder() {
        return UpdateBlackBoxRecorder;
    }
    private static final int SessionAllowExternalDmaDevices = (int)95L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.SessionAllowExternalDmaDevices = 95
     * }
     */
    public static int SessionAllowExternalDmaDevices() {
        return SessionAllowExternalDmaDevices;
    }
    private static final int SendSuspendResumeNotification = (int)96L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.SendSuspendResumeNotification = 96
     * }
     */
    public static int SendSuspendResumeNotification() {
        return SendSuspendResumeNotification;
    }
    private static final int BlackBoxRecorderDirectAccessBuffer = (int)97L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.BlackBoxRecorderDirectAccessBuffer = 97
     * }
     */
    public static int BlackBoxRecorderDirectAccessBuffer() {
        return BlackBoxRecorderDirectAccessBuffer;
    }
    private static final int SystemPowerSourceState = (int)98L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.SystemPowerSourceState = 98
     * }
     */
    public static int SystemPowerSourceState() {
        return SystemPowerSourceState;
    }
    private static final int PowerInformationLevelMaximum = (int)99L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.PowerInformationLevelMaximum = 99
     * }
     */
    public static int PowerInformationLevelMaximum() {
        return PowerInformationLevelMaximum;
    }
    private static final int UserNotPresent = (int)0L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.UserNotPresent = 0
     * }
     */
    public static int UserNotPresent() {
        return UserNotPresent;
    }
    private static final int UserPresent = (int)1L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.UserPresent = 1
     * }
     */
    public static int UserPresent() {
        return UserPresent;
    }
    private static final int UserUnknown = (int)255L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.UserUnknown = 255
     * }
     */
    public static int UserUnknown() {
        return UserUnknown;
    }
    /**
     * {@snippet lang=c :
     * typedef enum {
     *     UserNotPresent = 0,
     *     UserPresent = 1,
     *     UserUnknown = 255
     * } *PPOWER_USER_PRESENCE_TYPE
     * }
     */
    public static final AddressLayout PPOWER_USER_PRESENCE_TYPE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _POWER_USER_PRESENCE {
     *     POWER_USER_PRESENCE_TYPE UserPresence;
     * } *PPOWER_USER_PRESENCE
     * }
     */
    public static final AddressLayout PPOWER_USER_PRESENCE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _POWER_SESSION_CONNECT {
     *     BOOLEAN Connected;
     *     BOOLEAN Console;
     * } *PPOWER_SESSION_CONNECT
     * }
     */
    public static final AddressLayout PPOWER_SESSION_CONNECT = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _POWER_SESSION_TIMEOUTS {
     *     DWORD InputTimeout;
     *     DWORD DisplayTimeout;
     * } *PPOWER_SESSION_TIMEOUTS
     * }
     */
    public static final AddressLayout PPOWER_SESSION_TIMEOUTS = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _POWER_SESSION_RIT_STATE {
     *     BOOLEAN Active;
     *     DWORD64 LastInputTime;
     * } *PPOWER_SESSION_RIT_STATE
     * }
     */
    public static final AddressLayout PPOWER_SESSION_RIT_STATE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _POWER_SESSION_WINLOGON {
     *     DWORD SessionId;
     *     BOOLEAN Console;
     *     BOOLEAN Locked;
     * } *PPOWER_SESSION_WINLOGON
     * }
     */
    public static final AddressLayout PPOWER_SESSION_WINLOGON = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _POWER_SESSION_ALLOW_EXTERNAL_DMA_DEVICES {
     *     BOOLEAN IsAllowed;
     * } *PPOWER_SESSION_ALLOW_EXTERNAL_DMA_DEVICES
     * }
     */
    public static final AddressLayout PPOWER_SESSION_ALLOW_EXTERNAL_DMA_DEVICES = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _POWER_IDLE_RESILIENCY {
     *     DWORD CoalescingTimeout;
     *     DWORD IdleResiliencyPeriod;
     * } *PPOWER_IDLE_RESILIENCY
     * }
     */
    public static final AddressLayout PPOWER_IDLE_RESILIENCY = winapi.C_POINTER;
    private static final int MonitorRequestReasonUnknown = (int)0L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonUnknown = 0
     * }
     */
    public static int MonitorRequestReasonUnknown() {
        return MonitorRequestReasonUnknown;
    }
    private static final int MonitorRequestReasonPowerButton = (int)1L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonPowerButton = 1
     * }
     */
    public static int MonitorRequestReasonPowerButton() {
        return MonitorRequestReasonPowerButton;
    }
    private static final int MonitorRequestReasonRemoteConnection = (int)2L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonRemoteConnection = 2
     * }
     */
    public static int MonitorRequestReasonRemoteConnection() {
        return MonitorRequestReasonRemoteConnection;
    }
    private static final int MonitorRequestReasonScMonitorpower = (int)3L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonScMonitorpower = 3
     * }
     */
    public static int MonitorRequestReasonScMonitorpower() {
        return MonitorRequestReasonScMonitorpower;
    }
    private static final int MonitorRequestReasonUserInput = (int)4L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonUserInput = 4
     * }
     */
    public static int MonitorRequestReasonUserInput() {
        return MonitorRequestReasonUserInput;
    }
    private static final int MonitorRequestReasonAcDcDisplayBurst = (int)5L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonAcDcDisplayBurst = 5
     * }
     */
    public static int MonitorRequestReasonAcDcDisplayBurst() {
        return MonitorRequestReasonAcDcDisplayBurst;
    }
    private static final int MonitorRequestReasonUserDisplayBurst = (int)6L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonUserDisplayBurst = 6
     * }
     */
    public static int MonitorRequestReasonUserDisplayBurst() {
        return MonitorRequestReasonUserDisplayBurst;
    }
    private static final int MonitorRequestReasonPoSetSystemState = (int)7L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonPoSetSystemState = 7
     * }
     */
    public static int MonitorRequestReasonPoSetSystemState() {
        return MonitorRequestReasonPoSetSystemState;
    }
    private static final int MonitorRequestReasonSetThreadExecutionState = (int)8L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonSetThreadExecutionState = 8
     * }
     */
    public static int MonitorRequestReasonSetThreadExecutionState() {
        return MonitorRequestReasonSetThreadExecutionState;
    }
    private static final int MonitorRequestReasonFullWake = (int)9L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonFullWake = 9
     * }
     */
    public static int MonitorRequestReasonFullWake() {
        return MonitorRequestReasonFullWake;
    }
    private static final int MonitorRequestReasonSessionUnlock = (int)10L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonSessionUnlock = 10
     * }
     */
    public static int MonitorRequestReasonSessionUnlock() {
        return MonitorRequestReasonSessionUnlock;
    }
    private static final int MonitorRequestReasonScreenOffRequest = (int)11L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonScreenOffRequest = 11
     * }
     */
    public static int MonitorRequestReasonScreenOffRequest() {
        return MonitorRequestReasonScreenOffRequest;
    }
    private static final int MonitorRequestReasonIdleTimeout = (int)12L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonIdleTimeout = 12
     * }
     */
    public static int MonitorRequestReasonIdleTimeout() {
        return MonitorRequestReasonIdleTimeout;
    }
    private static final int MonitorRequestReasonPolicyChange = (int)13L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonPolicyChange = 13
     * }
     */
    public static int MonitorRequestReasonPolicyChange() {
        return MonitorRequestReasonPolicyChange;
    }
    private static final int MonitorRequestReasonSleepButton = (int)14L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonSleepButton = 14
     * }
     */
    public static int MonitorRequestReasonSleepButton() {
        return MonitorRequestReasonSleepButton;
    }
    private static final int MonitorRequestReasonLid = (int)15L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonLid = 15
     * }
     */
    public static int MonitorRequestReasonLid() {
        return MonitorRequestReasonLid;
    }
    private static final int MonitorRequestReasonBatteryCountChange = (int)16L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonBatteryCountChange = 16
     * }
     */
    public static int MonitorRequestReasonBatteryCountChange() {
        return MonitorRequestReasonBatteryCountChange;
    }
    private static final int MonitorRequestReasonGracePeriod = (int)17L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonGracePeriod = 17
     * }
     */
    public static int MonitorRequestReasonGracePeriod() {
        return MonitorRequestReasonGracePeriod;
    }
    private static final int MonitorRequestReasonPnP = (int)18L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonPnP = 18
     * }
     */
    public static int MonitorRequestReasonPnP() {
        return MonitorRequestReasonPnP;
    }
    private static final int MonitorRequestReasonDP = (int)19L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonDP = 19
     * }
     */
    public static int MonitorRequestReasonDP() {
        return MonitorRequestReasonDP;
    }
    private static final int MonitorRequestReasonSxTransition = (int)20L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonSxTransition = 20
     * }
     */
    public static int MonitorRequestReasonSxTransition() {
        return MonitorRequestReasonSxTransition;
    }
    private static final int MonitorRequestReasonSystemIdle = (int)21L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonSystemIdle = 21
     * }
     */
    public static int MonitorRequestReasonSystemIdle() {
        return MonitorRequestReasonSystemIdle;
    }
    private static final int MonitorRequestReasonNearProximity = (int)22L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonNearProximity = 22
     * }
     */
    public static int MonitorRequestReasonNearProximity() {
        return MonitorRequestReasonNearProximity;
    }
    private static final int MonitorRequestReasonThermalStandby = (int)23L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonThermalStandby = 23
     * }
     */
    public static int MonitorRequestReasonThermalStandby() {
        return MonitorRequestReasonThermalStandby;
    }
    private static final int MonitorRequestReasonResumePdc = (int)24L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonResumePdc = 24
     * }
     */
    public static int MonitorRequestReasonResumePdc() {
        return MonitorRequestReasonResumePdc;
    }
    private static final int MonitorRequestReasonResumeS4 = (int)25L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonResumeS4 = 25
     * }
     */
    public static int MonitorRequestReasonResumeS4() {
        return MonitorRequestReasonResumeS4;
    }
    private static final int MonitorRequestReasonTerminal = (int)26L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonTerminal = 26
     * }
     */
    public static int MonitorRequestReasonTerminal() {
        return MonitorRequestReasonTerminal;
    }
    private static final int MonitorRequestReasonPdcSignal = (int)27L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonPdcSignal = 27
     * }
     */
    public static int MonitorRequestReasonPdcSignal() {
        return MonitorRequestReasonPdcSignal;
    }
    private static final int MonitorRequestReasonAcDcDisplayBurstSuppressed = (int)28L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonAcDcDisplayBurstSuppressed = 28
     * }
     */
    public static int MonitorRequestReasonAcDcDisplayBurstSuppressed() {
        return MonitorRequestReasonAcDcDisplayBurstSuppressed;
    }
    private static final int MonitorRequestReasonSystemStateEntered = (int)29L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonSystemStateEntered = 29
     * }
     */
    public static int MonitorRequestReasonSystemStateEntered() {
        return MonitorRequestReasonSystemStateEntered;
    }
    private static final int MonitorRequestReasonWinrt = (int)30L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonWinrt = 30
     * }
     */
    public static int MonitorRequestReasonWinrt() {
        return MonitorRequestReasonWinrt;
    }
    private static final int MonitorRequestReasonUserInputKeyboard = (int)31L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonUserInputKeyboard = 31
     * }
     */
    public static int MonitorRequestReasonUserInputKeyboard() {
        return MonitorRequestReasonUserInputKeyboard;
    }
    private static final int MonitorRequestReasonUserInputMouse = (int)32L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonUserInputMouse = 32
     * }
     */
    public static int MonitorRequestReasonUserInputMouse() {
        return MonitorRequestReasonUserInputMouse;
    }
    private static final int MonitorRequestReasonUserInputTouchpad = (int)33L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonUserInputTouchpad = 33
     * }
     */
    public static int MonitorRequestReasonUserInputTouchpad() {
        return MonitorRequestReasonUserInputTouchpad;
    }
    private static final int MonitorRequestReasonUserInputPen = (int)34L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonUserInputPen = 34
     * }
     */
    public static int MonitorRequestReasonUserInputPen() {
        return MonitorRequestReasonUserInputPen;
    }
    private static final int MonitorRequestReasonUserInputAccelerometer = (int)35L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonUserInputAccelerometer = 35
     * }
     */
    public static int MonitorRequestReasonUserInputAccelerometer() {
        return MonitorRequestReasonUserInputAccelerometer;
    }
    private static final int MonitorRequestReasonUserInputHid = (int)36L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonUserInputHid = 36
     * }
     */
    public static int MonitorRequestReasonUserInputHid() {
        return MonitorRequestReasonUserInputHid;
    }
    private static final int MonitorRequestReasonUserInputPoUserPresent = (int)37L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonUserInputPoUserPresent = 37
     * }
     */
    public static int MonitorRequestReasonUserInputPoUserPresent() {
        return MonitorRequestReasonUserInputPoUserPresent;
    }
    private static final int MonitorRequestReasonUserInputSessionSwitch = (int)38L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonUserInputSessionSwitch = 38
     * }
     */
    public static int MonitorRequestReasonUserInputSessionSwitch() {
        return MonitorRequestReasonUserInputSessionSwitch;
    }
    private static final int MonitorRequestReasonUserInputInitialization = (int)39L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonUserInputInitialization = 39
     * }
     */
    public static int MonitorRequestReasonUserInputInitialization() {
        return MonitorRequestReasonUserInputInitialization;
    }
    private static final int MonitorRequestReasonPdcSignalWindowsMobilePwrNotif = (int)40L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonPdcSignalWindowsMobilePwrNotif = 40
     * }
     */
    public static int MonitorRequestReasonPdcSignalWindowsMobilePwrNotif() {
        return MonitorRequestReasonPdcSignalWindowsMobilePwrNotif;
    }
    private static final int MonitorRequestReasonPdcSignalWindowsMobileShell = (int)41L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonPdcSignalWindowsMobileShell = 41
     * }
     */
    public static int MonitorRequestReasonPdcSignalWindowsMobileShell() {
        return MonitorRequestReasonPdcSignalWindowsMobileShell;
    }
    private static final int MonitorRequestReasonPdcSignalHeyCortana = (int)42L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonPdcSignalHeyCortana = 42
     * }
     */
    public static int MonitorRequestReasonPdcSignalHeyCortana() {
        return MonitorRequestReasonPdcSignalHeyCortana;
    }
    private static final int MonitorRequestReasonPdcSignalHolographicShell = (int)43L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonPdcSignalHolographicShell = 43
     * }
     */
    public static int MonitorRequestReasonPdcSignalHolographicShell() {
        return MonitorRequestReasonPdcSignalHolographicShell;
    }
    private static final int MonitorRequestReasonPdcSignalFingerprint = (int)44L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonPdcSignalFingerprint = 44
     * }
     */
    public static int MonitorRequestReasonPdcSignalFingerprint() {
        return MonitorRequestReasonPdcSignalFingerprint;
    }
    private static final int MonitorRequestReasonDirectedDrips = (int)45L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonDirectedDrips = 45
     * }
     */
    public static int MonitorRequestReasonDirectedDrips() {
        return MonitorRequestReasonDirectedDrips;
    }
    private static final int MonitorRequestReasonDim = (int)46L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonDim = 46
     * }
     */
    public static int MonitorRequestReasonDim() {
        return MonitorRequestReasonDim;
    }
    private static final int MonitorRequestReasonBuiltinPanel = (int)47L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonBuiltinPanel = 47
     * }
     */
    public static int MonitorRequestReasonBuiltinPanel() {
        return MonitorRequestReasonBuiltinPanel;
    }
    private static final int MonitorRequestReasonDisplayRequiredUnDim = (int)48L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonDisplayRequiredUnDim = 48
     * }
     */
    public static int MonitorRequestReasonDisplayRequiredUnDim() {
        return MonitorRequestReasonDisplayRequiredUnDim;
    }
    private static final int MonitorRequestReasonBatteryCountChangeSuppressed = (int)49L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonBatteryCountChangeSuppressed = 49
     * }
     */
    public static int MonitorRequestReasonBatteryCountChangeSuppressed() {
        return MonitorRequestReasonBatteryCountChangeSuppressed;
    }
    private static final int MonitorRequestReasonResumeModernStandby = (int)50L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonResumeModernStandby = 50
     * }
     */
    public static int MonitorRequestReasonResumeModernStandby() {
        return MonitorRequestReasonResumeModernStandby;
    }
    private static final int MonitorRequestReasonTerminalInit = (int)51L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonTerminalInit = 51
     * }
     */
    public static int MonitorRequestReasonTerminalInit() {
        return MonitorRequestReasonTerminalInit;
    }
    private static final int MonitorRequestReasonPdcSignalSensorsHumanPresence = (int)52L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonPdcSignalSensorsHumanPresence = 52
     * }
     */
    public static int MonitorRequestReasonPdcSignalSensorsHumanPresence() {
        return MonitorRequestReasonPdcSignalSensorsHumanPresence;
    }
    private static final int MonitorRequestReasonBatteryPreCritical = (int)53L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonBatteryPreCritical = 53
     * }
     */
    public static int MonitorRequestReasonBatteryPreCritical() {
        return MonitorRequestReasonBatteryPreCritical;
    }
    private static final int MonitorRequestReasonUserInputTouch = (int)54L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonUserInputTouch = 54
     * }
     */
    public static int MonitorRequestReasonUserInputTouch() {
        return MonitorRequestReasonUserInputTouch;
    }
    private static final int MonitorRequestReasonAusterityBatteryDrain = (int)55L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonAusterityBatteryDrain = 55
     * }
     */
    public static int MonitorRequestReasonAusterityBatteryDrain() {
        return MonitorRequestReasonAusterityBatteryDrain;
    }
    private static final int MonitorRequestReasonDozeRestrictedStandby = (int)56L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonDozeRestrictedStandby = 56
     * }
     */
    public static int MonitorRequestReasonDozeRestrictedStandby() {
        return MonitorRequestReasonDozeRestrictedStandby;
    }
    private static final int MonitorRequestReasonSmartRestrictedStandby = (int)57L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonSmartRestrictedStandby = 57
     * }
     */
    public static int MonitorRequestReasonSmartRestrictedStandby() {
        return MonitorRequestReasonSmartRestrictedStandby;
    }
    private static final int MonitorRequestReasonMax = (int)58L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.MonitorRequestReasonMax = 58
     * }
     */
    public static int MonitorRequestReasonMax() {
        return MonitorRequestReasonMax;
    }
    private static final int MonitorRequestTypeOff = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _POWER_MONITOR_REQUEST_TYPE.MonitorRequestTypeOff = 0
     * }
     */
    public static int MonitorRequestTypeOff() {
        return MonitorRequestTypeOff;
    }
    private static final int MonitorRequestTypeOnAndPresent = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _POWER_MONITOR_REQUEST_TYPE.MonitorRequestTypeOnAndPresent = 1
     * }
     */
    public static int MonitorRequestTypeOnAndPresent() {
        return MonitorRequestTypeOnAndPresent;
    }
    private static final int MonitorRequestTypeToggleOn = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _POWER_MONITOR_REQUEST_TYPE.MonitorRequestTypeToggleOn = 2
     * }
     */
    public static int MonitorRequestTypeToggleOn() {
        return MonitorRequestTypeToggleOn;
    }
    /**
     * {@snippet lang=c :
     * typedef struct _POWER_MONITOR_INVOCATION {
     *     BOOLEAN Console;
     *     POWER_MONITOR_REQUEST_REASON RequestReason;
     * } *PPOWER_MONITOR_INVOCATION
     * }
     */
    public static final AddressLayout PPOWER_MONITOR_INVOCATION = winapi.C_POINTER;
    private static final int PowerLimitContinuous = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _POWER_LIMIT_TYPES.PowerLimitContinuous = 0
     * }
     */
    public static int PowerLimitContinuous() {
        return PowerLimitContinuous;
    }
    private static final int PowerLimitType1 = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _POWER_LIMIT_TYPES.PowerLimitType1 = 0
     * }
     */
    public static int PowerLimitType1() {
        return PowerLimitType1;
    }
    private static final int PowerLimitBurst = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _POWER_LIMIT_TYPES.PowerLimitBurst = 1
     * }
     */
    public static int PowerLimitBurst() {
        return PowerLimitBurst;
    }
    private static final int PowerLimitType2 = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _POWER_LIMIT_TYPES.PowerLimitType2 = 1
     * }
     */
    public static int PowerLimitType2() {
        return PowerLimitType2;
    }
    private static final int PowerLimitRapid = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _POWER_LIMIT_TYPES.PowerLimitRapid = 2
     * }
     */
    public static int PowerLimitRapid() {
        return PowerLimitRapid;
    }
    private static final int PowerLimitType3 = (int)2L;
    /**
     * {@snippet lang=c :
     * enum _POWER_LIMIT_TYPES.PowerLimitType3 = 2
     * }
     */
    public static int PowerLimitType3() {
        return PowerLimitType3;
    }
    private static final int PowerLimitPreemptive = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _POWER_LIMIT_TYPES.PowerLimitPreemptive = 3
     * }
     */
    public static int PowerLimitPreemptive() {
        return PowerLimitPreemptive;
    }
    private static final int PowerLimitType4 = (int)3L;
    /**
     * {@snippet lang=c :
     * enum _POWER_LIMIT_TYPES.PowerLimitType4 = 3
     * }
     */
    public static int PowerLimitType4() {
        return PowerLimitType4;
    }
    private static final int PowerLimitPreemptiveOffset = (int)4L;
    /**
     * {@snippet lang=c :
     * enum _POWER_LIMIT_TYPES.PowerLimitPreemptiveOffset = 4
     * }
     */
    public static int PowerLimitPreemptiveOffset() {
        return PowerLimitPreemptiveOffset;
    }
    private static final int PowerLimitTypeMax = (int)5L;
    /**
     * {@snippet lang=c :
     * enum _POWER_LIMIT_TYPES.PowerLimitTypeMax = 5
     * }
     */
    public static int PowerLimitTypeMax() {
        return PowerLimitTypeMax;
    }
    /**
     * {@snippet lang=c :
     * typedef enum _POWER_LIMIT_TYPES {
     *     PowerLimitContinuous = 0,
     *     PowerLimitType1 = PowerLimitContinuous,
     *     PowerLimitBurst,
     *     PowerLimitType2 = PowerLimitBurst,
     *     PowerLimitRapid,
     *     PowerLimitType3 = PowerLimitRapid,
     *     PowerLimitPreemptive,
     *     PowerLimitType4 = PowerLimitPreemptive,
     *     PowerLimitPreemptiveOffset,
     *     PowerLimitTypeMax
     * } *PPOWER_LIMIT_TYPES
     * }
     */
    public static final AddressLayout PPOWER_LIMIT_TYPES = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _POWER_LIMIT_ATTRIBUTES {
     *     POWER_LIMIT_TYPES Type;
     *     DWORD DomainId;
     *     DWORD MaxValue;
     *     DWORD MinValue;
     *     DWORD MinTimeParameter;
     *     DWORD MaxTimeParameter;
     *     DWORD DefaultACValue;
     *     DWORD DefaultDCValue;
     *     union {
     *         struct {
     *             DWORD SupportTimeParameter : 1;
     *             DWORD Reserved : 31;
     *         };
     *         DWORD AsUlong;
     *     } Flags;
     * } *PPOWER_LIMIT_ATTRIBUTES
     * }
     */
    public static final AddressLayout PPOWER_LIMIT_ATTRIBUTES = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _POWER_LIMIT_VALUE {
     *     POWER_LIMIT_TYPES Type;
     *     DWORD DomainId;
     *     DWORD TargetValue;
     *     DWORD TimeParameter;
     * } *PPOWER_LIMIT_VALUE
     * }
     */
    public static final AddressLayout PPOWER_LIMIT_VALUE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _RESUME_PERFORMANCE {
     *     DWORD PostTimeMs;
     *     ULONGLONG TotalResumeTimeMs;
     *     ULONGLONG ResumeCompleteTimestamp;
     * } *PRESUME_PERFORMANCE
     * }
     */
    public static final AddressLayout PRESUME_PERFORMANCE = winapi.C_POINTER;
    private static final int PoAc = (int)0L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.PoAc = 0
     * }
     */
    public static int PoAc() {
        return PoAc;
    }
    private static final int PoDc = (int)1L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.PoDc = 1
     * }
     */
    public static int PoDc() {
        return PoDc;
    }
    private static final int PoHot = (int)2L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.PoHot = 2
     * }
     */
    public static int PoHot() {
        return PoHot;
    }
    private static final int PoConditionMaximum = (int)3L;
    /**
     * {@snippet lang=c :
     * enum <anonymous>.PoConditionMaximum = 3
     * }
     */
    public static int PoConditionMaximum() {
        return PoConditionMaximum;
    }
    /**
     * {@snippet lang=c :
     * typedef struct {
     *     DWORD Version;
     *     GUID Guid;
     *     SYSTEM_POWER_CONDITION PowerCondition;
     *     DWORD DataLength;
     *     BYTE Data[1];
     * } *PSET_POWER_SETTING_VALUE
     * }
     */
    public static final AddressLayout PSET_POWER_SETTING_VALUE = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct {
     *     GUID Guid;
     * } *PNOTIFY_USER_POWER_SETTING
     * }
     */
    public static final AddressLayout PNOTIFY_USER_POWER_SETTING = winapi.C_POINTER;
    /**
     * {@snippet lang=c :
     * typedef struct _APPLICATIONLAUNCH_SETTING_VALUE {
     *     LARGE_INTEGER ActivationTime;
     *     DWORD Flags;
     *     DWORD ButtonInstanceID;
     * } *PAPPLICATIONLAUNCH_SETTING_VALUE
     * }
     */
    public static final AddressLayout PAPPLICATIONLAUNCH_SETTING_VALUE = winapi.C_POINTER;
    private static final int PlatformRoleUnspecified = (int)0L;
    /**
     * {@snippet lang=c :
     * enum _POWER_PLATFORM_ROLE.PlatformRoleUnspecified = 0
     * }
     */
    public static int PlatformRoleUnspecified() {
        return PlatformRoleUnspecified;
    }
    private static final int PlatformRoleDesktop = (int)1L;
    /**
     * {@snippet lang=c :
     * enum _POWER_PLATFORM_ROLE.PlatformRoleDesktop = 1
     * }
     */
    public static int PlatformRoleDesktop() {
        return PlatformRoleDesktop;
    }
}

