// Generated by jextract

package net.nailuj.win;

import java.lang.invoke.*;
import java.lang.foreign.*;
import java.nio.ByteOrder;
import java.util.*;
import java.util.function.*;
import java.util.stream.*;

import static java.lang.foreign.ValueLayout.*;
import static java.lang.foreign.MemoryLayout.PathElement.*;

public class winapi_9 extends winapi_10 {

    winapi_9() {
        // Should not be called directly
    }
    private static final int ERROR_DS_NOT_SUPPORTED_SORT_ORDER = (int)8570L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NOT_SUPPORTED_SORT_ORDER 8570
     * }
     */
    public static int ERROR_DS_NOT_SUPPORTED_SORT_ORDER() {
        return ERROR_DS_NOT_SUPPORTED_SORT_ORDER;
    }
    private static final int ERROR_DS_NAME_NOT_UNIQUE = (int)8571L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NAME_NOT_UNIQUE 8571
     * }
     */
    public static int ERROR_DS_NAME_NOT_UNIQUE() {
        return ERROR_DS_NAME_NOT_UNIQUE;
    }
    private static final int ERROR_DS_MACHINE_ACCOUNT_CREATED_PRENT4 = (int)8572L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_MACHINE_ACCOUNT_CREATED_PRENT4 8572
     * }
     */
    public static int ERROR_DS_MACHINE_ACCOUNT_CREATED_PRENT4() {
        return ERROR_DS_MACHINE_ACCOUNT_CREATED_PRENT4;
    }
    private static final int ERROR_DS_OUT_OF_VERSION_STORE = (int)8573L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_OUT_OF_VERSION_STORE 8573
     * }
     */
    public static int ERROR_DS_OUT_OF_VERSION_STORE() {
        return ERROR_DS_OUT_OF_VERSION_STORE;
    }
    private static final int ERROR_DS_INCOMPATIBLE_CONTROLS_USED = (int)8574L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_INCOMPATIBLE_CONTROLS_USED 8574
     * }
     */
    public static int ERROR_DS_INCOMPATIBLE_CONTROLS_USED() {
        return ERROR_DS_INCOMPATIBLE_CONTROLS_USED;
    }
    private static final int ERROR_DS_NO_REF_DOMAIN = (int)8575L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NO_REF_DOMAIN 8575
     * }
     */
    public static int ERROR_DS_NO_REF_DOMAIN() {
        return ERROR_DS_NO_REF_DOMAIN;
    }
    private static final int ERROR_DS_RESERVED_LINK_ID = (int)8576L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_RESERVED_LINK_ID 8576
     * }
     */
    public static int ERROR_DS_RESERVED_LINK_ID() {
        return ERROR_DS_RESERVED_LINK_ID;
    }
    private static final int ERROR_DS_LINK_ID_NOT_AVAILABLE = (int)8577L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_LINK_ID_NOT_AVAILABLE 8577
     * }
     */
    public static int ERROR_DS_LINK_ID_NOT_AVAILABLE() {
        return ERROR_DS_LINK_ID_NOT_AVAILABLE;
    }
    private static final int ERROR_DS_AG_CANT_HAVE_UNIVERSAL_MEMBER = (int)8578L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_AG_CANT_HAVE_UNIVERSAL_MEMBER 8578
     * }
     */
    public static int ERROR_DS_AG_CANT_HAVE_UNIVERSAL_MEMBER() {
        return ERROR_DS_AG_CANT_HAVE_UNIVERSAL_MEMBER;
    }
    private static final int ERROR_DS_MODIFYDN_DISALLOWED_BY_INSTANCE_TYPE = (int)8579L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_MODIFYDN_DISALLOWED_BY_INSTANCE_TYPE 8579
     * }
     */
    public static int ERROR_DS_MODIFYDN_DISALLOWED_BY_INSTANCE_TYPE() {
        return ERROR_DS_MODIFYDN_DISALLOWED_BY_INSTANCE_TYPE;
    }
    private static final int ERROR_DS_NO_OBJECT_MOVE_IN_SCHEMA_NC = (int)8580L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NO_OBJECT_MOVE_IN_SCHEMA_NC 8580
     * }
     */
    public static int ERROR_DS_NO_OBJECT_MOVE_IN_SCHEMA_NC() {
        return ERROR_DS_NO_OBJECT_MOVE_IN_SCHEMA_NC;
    }
    private static final int ERROR_DS_MODIFYDN_DISALLOWED_BY_FLAG = (int)8581L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_MODIFYDN_DISALLOWED_BY_FLAG 8581
     * }
     */
    public static int ERROR_DS_MODIFYDN_DISALLOWED_BY_FLAG() {
        return ERROR_DS_MODIFYDN_DISALLOWED_BY_FLAG;
    }
    private static final int ERROR_DS_MODIFYDN_WRONG_GRANDPARENT = (int)8582L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_MODIFYDN_WRONG_GRANDPARENT 8582
     * }
     */
    public static int ERROR_DS_MODIFYDN_WRONG_GRANDPARENT() {
        return ERROR_DS_MODIFYDN_WRONG_GRANDPARENT;
    }
    private static final int ERROR_DS_NAME_ERROR_TRUST_REFERRAL = (int)8583L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NAME_ERROR_TRUST_REFERRAL 8583
     * }
     */
    public static int ERROR_DS_NAME_ERROR_TRUST_REFERRAL() {
        return ERROR_DS_NAME_ERROR_TRUST_REFERRAL;
    }
    private static final int ERROR_NOT_SUPPORTED_ON_STANDARD_SERVER = (int)8584L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_SUPPORTED_ON_STANDARD_SERVER 8584
     * }
     */
    public static int ERROR_NOT_SUPPORTED_ON_STANDARD_SERVER() {
        return ERROR_NOT_SUPPORTED_ON_STANDARD_SERVER;
    }
    private static final int ERROR_DS_CANT_ACCESS_REMOTE_PART_OF_AD = (int)8585L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CANT_ACCESS_REMOTE_PART_OF_AD 8585
     * }
     */
    public static int ERROR_DS_CANT_ACCESS_REMOTE_PART_OF_AD() {
        return ERROR_DS_CANT_ACCESS_REMOTE_PART_OF_AD;
    }
    private static final int ERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE_V2 = (int)8586L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE_V2 8586
     * }
     */
    public static int ERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE_V2() {
        return ERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE_V2;
    }
    private static final int ERROR_DS_THREAD_LIMIT_EXCEEDED = (int)8587L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_THREAD_LIMIT_EXCEEDED 8587
     * }
     */
    public static int ERROR_DS_THREAD_LIMIT_EXCEEDED() {
        return ERROR_DS_THREAD_LIMIT_EXCEEDED;
    }
    private static final int ERROR_DS_NOT_CLOSEST = (int)8588L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NOT_CLOSEST 8588
     * }
     */
    public static int ERROR_DS_NOT_CLOSEST() {
        return ERROR_DS_NOT_CLOSEST;
    }
    private static final int ERROR_DS_CANT_DERIVE_SPN_WITHOUT_SERVER_REF = (int)8589L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CANT_DERIVE_SPN_WITHOUT_SERVER_REF 8589
     * }
     */
    public static int ERROR_DS_CANT_DERIVE_SPN_WITHOUT_SERVER_REF() {
        return ERROR_DS_CANT_DERIVE_SPN_WITHOUT_SERVER_REF;
    }
    private static final int ERROR_DS_SINGLE_USER_MODE_FAILED = (int)8590L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_SINGLE_USER_MODE_FAILED 8590
     * }
     */
    public static int ERROR_DS_SINGLE_USER_MODE_FAILED() {
        return ERROR_DS_SINGLE_USER_MODE_FAILED;
    }
    private static final int ERROR_DS_NTDSCRIPT_SYNTAX_ERROR = (int)8591L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NTDSCRIPT_SYNTAX_ERROR 8591
     * }
     */
    public static int ERROR_DS_NTDSCRIPT_SYNTAX_ERROR() {
        return ERROR_DS_NTDSCRIPT_SYNTAX_ERROR;
    }
    private static final int ERROR_DS_NTDSCRIPT_PROCESS_ERROR = (int)8592L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NTDSCRIPT_PROCESS_ERROR 8592
     * }
     */
    public static int ERROR_DS_NTDSCRIPT_PROCESS_ERROR() {
        return ERROR_DS_NTDSCRIPT_PROCESS_ERROR;
    }
    private static final int ERROR_DS_DIFFERENT_REPL_EPOCHS = (int)8593L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DIFFERENT_REPL_EPOCHS 8593
     * }
     */
    public static int ERROR_DS_DIFFERENT_REPL_EPOCHS() {
        return ERROR_DS_DIFFERENT_REPL_EPOCHS;
    }
    private static final int ERROR_DS_DRS_EXTENSIONS_CHANGED = (int)8594L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DRS_EXTENSIONS_CHANGED 8594
     * }
     */
    public static int ERROR_DS_DRS_EXTENSIONS_CHANGED() {
        return ERROR_DS_DRS_EXTENSIONS_CHANGED;
    }
    private static final int ERROR_DS_REPLICA_SET_CHANGE_NOT_ALLOWED_ON_DISABLED_CR = (int)8595L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_REPLICA_SET_CHANGE_NOT_ALLOWED_ON_DISABLED_CR 8595
     * }
     */
    public static int ERROR_DS_REPLICA_SET_CHANGE_NOT_ALLOWED_ON_DISABLED_CR() {
        return ERROR_DS_REPLICA_SET_CHANGE_NOT_ALLOWED_ON_DISABLED_CR;
    }
    private static final int ERROR_DS_NO_MSDS_INTID = (int)8596L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NO_MSDS_INTID 8596
     * }
     */
    public static int ERROR_DS_NO_MSDS_INTID() {
        return ERROR_DS_NO_MSDS_INTID;
    }
    private static final int ERROR_DS_DUP_MSDS_INTID = (int)8597L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DUP_MSDS_INTID 8597
     * }
     */
    public static int ERROR_DS_DUP_MSDS_INTID() {
        return ERROR_DS_DUP_MSDS_INTID;
    }
    private static final int ERROR_DS_EXISTS_IN_RDNATTID = (int)8598L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_EXISTS_IN_RDNATTID 8598
     * }
     */
    public static int ERROR_DS_EXISTS_IN_RDNATTID() {
        return ERROR_DS_EXISTS_IN_RDNATTID;
    }
    private static final int ERROR_DS_AUTHORIZATION_FAILED = (int)8599L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_AUTHORIZATION_FAILED 8599
     * }
     */
    public static int ERROR_DS_AUTHORIZATION_FAILED() {
        return ERROR_DS_AUTHORIZATION_FAILED;
    }
    private static final int ERROR_DS_INVALID_SCRIPT = (int)8600L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_INVALID_SCRIPT 8600
     * }
     */
    public static int ERROR_DS_INVALID_SCRIPT() {
        return ERROR_DS_INVALID_SCRIPT;
    }
    private static final int ERROR_DS_REMOTE_CROSSREF_OP_FAILED = (int)8601L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_REMOTE_CROSSREF_OP_FAILED 8601
     * }
     */
    public static int ERROR_DS_REMOTE_CROSSREF_OP_FAILED() {
        return ERROR_DS_REMOTE_CROSSREF_OP_FAILED;
    }
    private static final int ERROR_DS_CROSS_REF_BUSY = (int)8602L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CROSS_REF_BUSY 8602
     * }
     */
    public static int ERROR_DS_CROSS_REF_BUSY() {
        return ERROR_DS_CROSS_REF_BUSY;
    }
    private static final int ERROR_DS_CANT_DERIVE_SPN_FOR_DELETED_DOMAIN = (int)8603L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CANT_DERIVE_SPN_FOR_DELETED_DOMAIN 8603
     * }
     */
    public static int ERROR_DS_CANT_DERIVE_SPN_FOR_DELETED_DOMAIN() {
        return ERROR_DS_CANT_DERIVE_SPN_FOR_DELETED_DOMAIN;
    }
    private static final int ERROR_DS_CANT_DEMOTE_WITH_WRITEABLE_NC = (int)8604L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CANT_DEMOTE_WITH_WRITEABLE_NC 8604
     * }
     */
    public static int ERROR_DS_CANT_DEMOTE_WITH_WRITEABLE_NC() {
        return ERROR_DS_CANT_DEMOTE_WITH_WRITEABLE_NC;
    }
    private static final int ERROR_DS_DUPLICATE_ID_FOUND = (int)8605L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DUPLICATE_ID_FOUND 8605
     * }
     */
    public static int ERROR_DS_DUPLICATE_ID_FOUND() {
        return ERROR_DS_DUPLICATE_ID_FOUND;
    }
    private static final int ERROR_DS_INSUFFICIENT_ATTR_TO_CREATE_OBJECT = (int)8606L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_INSUFFICIENT_ATTR_TO_CREATE_OBJECT 8606
     * }
     */
    public static int ERROR_DS_INSUFFICIENT_ATTR_TO_CREATE_OBJECT() {
        return ERROR_DS_INSUFFICIENT_ATTR_TO_CREATE_OBJECT;
    }
    private static final int ERROR_DS_GROUP_CONVERSION_ERROR = (int)8607L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_GROUP_CONVERSION_ERROR 8607
     * }
     */
    public static int ERROR_DS_GROUP_CONVERSION_ERROR() {
        return ERROR_DS_GROUP_CONVERSION_ERROR;
    }
    private static final int ERROR_DS_CANT_MOVE_APP_BASIC_GROUP = (int)8608L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CANT_MOVE_APP_BASIC_GROUP 8608
     * }
     */
    public static int ERROR_DS_CANT_MOVE_APP_BASIC_GROUP() {
        return ERROR_DS_CANT_MOVE_APP_BASIC_GROUP;
    }
    private static final int ERROR_DS_CANT_MOVE_APP_QUERY_GROUP = (int)8609L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CANT_MOVE_APP_QUERY_GROUP 8609
     * }
     */
    public static int ERROR_DS_CANT_MOVE_APP_QUERY_GROUP() {
        return ERROR_DS_CANT_MOVE_APP_QUERY_GROUP;
    }
    private static final int ERROR_DS_ROLE_NOT_VERIFIED = (int)8610L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_ROLE_NOT_VERIFIED 8610
     * }
     */
    public static int ERROR_DS_ROLE_NOT_VERIFIED() {
        return ERROR_DS_ROLE_NOT_VERIFIED;
    }
    private static final int ERROR_DS_WKO_CONTAINER_CANNOT_BE_SPECIAL = (int)8611L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_WKO_CONTAINER_CANNOT_BE_SPECIAL 8611
     * }
     */
    public static int ERROR_DS_WKO_CONTAINER_CANNOT_BE_SPECIAL() {
        return ERROR_DS_WKO_CONTAINER_CANNOT_BE_SPECIAL;
    }
    private static final int ERROR_DS_DOMAIN_RENAME_IN_PROGRESS = (int)8612L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DOMAIN_RENAME_IN_PROGRESS 8612
     * }
     */
    public static int ERROR_DS_DOMAIN_RENAME_IN_PROGRESS() {
        return ERROR_DS_DOMAIN_RENAME_IN_PROGRESS;
    }
    private static final int ERROR_DS_EXISTING_AD_CHILD_NC = (int)8613L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_EXISTING_AD_CHILD_NC 8613
     * }
     */
    public static int ERROR_DS_EXISTING_AD_CHILD_NC() {
        return ERROR_DS_EXISTING_AD_CHILD_NC;
    }
    private static final int ERROR_DS_REPL_LIFETIME_EXCEEDED = (int)8614L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_REPL_LIFETIME_EXCEEDED 8614
     * }
     */
    public static int ERROR_DS_REPL_LIFETIME_EXCEEDED() {
        return ERROR_DS_REPL_LIFETIME_EXCEEDED;
    }
    private static final int ERROR_DS_DISALLOWED_IN_SYSTEM_CONTAINER = (int)8615L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DISALLOWED_IN_SYSTEM_CONTAINER 8615
     * }
     */
    public static int ERROR_DS_DISALLOWED_IN_SYSTEM_CONTAINER() {
        return ERROR_DS_DISALLOWED_IN_SYSTEM_CONTAINER;
    }
    private static final int ERROR_DS_LDAP_SEND_QUEUE_FULL = (int)8616L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_LDAP_SEND_QUEUE_FULL 8616
     * }
     */
    public static int ERROR_DS_LDAP_SEND_QUEUE_FULL() {
        return ERROR_DS_LDAP_SEND_QUEUE_FULL;
    }
    private static final int ERROR_DS_DRA_OUT_SCHEDULE_WINDOW = (int)8617L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DRA_OUT_SCHEDULE_WINDOW 8617
     * }
     */
    public static int ERROR_DS_DRA_OUT_SCHEDULE_WINDOW() {
        return ERROR_DS_DRA_OUT_SCHEDULE_WINDOW;
    }
    private static final int ERROR_DS_POLICY_NOT_KNOWN = (int)8618L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_POLICY_NOT_KNOWN 8618
     * }
     */
    public static int ERROR_DS_POLICY_NOT_KNOWN() {
        return ERROR_DS_POLICY_NOT_KNOWN;
    }
    private static final int ERROR_NO_SITE_SETTINGS_OBJECT = (int)8619L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_SITE_SETTINGS_OBJECT 8619
     * }
     */
    public static int ERROR_NO_SITE_SETTINGS_OBJECT() {
        return ERROR_NO_SITE_SETTINGS_OBJECT;
    }
    private static final int ERROR_NO_SECRETS = (int)8620L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_SECRETS 8620
     * }
     */
    public static int ERROR_NO_SECRETS() {
        return ERROR_NO_SECRETS;
    }
    private static final int ERROR_NO_WRITABLE_DC_FOUND = (int)8621L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_WRITABLE_DC_FOUND 8621
     * }
     */
    public static int ERROR_NO_WRITABLE_DC_FOUND() {
        return ERROR_NO_WRITABLE_DC_FOUND;
    }
    private static final int ERROR_DS_NO_SERVER_OBJECT = (int)8622L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NO_SERVER_OBJECT 8622
     * }
     */
    public static int ERROR_DS_NO_SERVER_OBJECT() {
        return ERROR_DS_NO_SERVER_OBJECT;
    }
    private static final int ERROR_DS_NO_NTDSA_OBJECT = (int)8623L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NO_NTDSA_OBJECT 8623
     * }
     */
    public static int ERROR_DS_NO_NTDSA_OBJECT() {
        return ERROR_DS_NO_NTDSA_OBJECT;
    }
    private static final int ERROR_DS_NON_ASQ_SEARCH = (int)8624L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NON_ASQ_SEARCH 8624
     * }
     */
    public static int ERROR_DS_NON_ASQ_SEARCH() {
        return ERROR_DS_NON_ASQ_SEARCH;
    }
    private static final int ERROR_DS_AUDIT_FAILURE = (int)8625L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_AUDIT_FAILURE 8625
     * }
     */
    public static int ERROR_DS_AUDIT_FAILURE() {
        return ERROR_DS_AUDIT_FAILURE;
    }
    private static final int ERROR_DS_INVALID_SEARCH_FLAG_SUBTREE = (int)8626L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_INVALID_SEARCH_FLAG_SUBTREE 8626
     * }
     */
    public static int ERROR_DS_INVALID_SEARCH_FLAG_SUBTREE() {
        return ERROR_DS_INVALID_SEARCH_FLAG_SUBTREE;
    }
    private static final int ERROR_DS_INVALID_SEARCH_FLAG_TUPLE = (int)8627L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_INVALID_SEARCH_FLAG_TUPLE 8627
     * }
     */
    public static int ERROR_DS_INVALID_SEARCH_FLAG_TUPLE() {
        return ERROR_DS_INVALID_SEARCH_FLAG_TUPLE;
    }
    private static final int ERROR_DS_HIERARCHY_TABLE_TOO_DEEP = (int)8628L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_HIERARCHY_TABLE_TOO_DEEP 8628
     * }
     */
    public static int ERROR_DS_HIERARCHY_TABLE_TOO_DEEP() {
        return ERROR_DS_HIERARCHY_TABLE_TOO_DEEP;
    }
    private static final int ERROR_DS_DRA_CORRUPT_UTD_VECTOR = (int)8629L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DRA_CORRUPT_UTD_VECTOR 8629
     * }
     */
    public static int ERROR_DS_DRA_CORRUPT_UTD_VECTOR() {
        return ERROR_DS_DRA_CORRUPT_UTD_VECTOR;
    }
    private static final int ERROR_DS_DRA_SECRETS_DENIED = (int)8630L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DRA_SECRETS_DENIED 8630
     * }
     */
    public static int ERROR_DS_DRA_SECRETS_DENIED() {
        return ERROR_DS_DRA_SECRETS_DENIED;
    }
    private static final int ERROR_DS_RESERVED_MAPI_ID = (int)8631L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_RESERVED_MAPI_ID 8631
     * }
     */
    public static int ERROR_DS_RESERVED_MAPI_ID() {
        return ERROR_DS_RESERVED_MAPI_ID;
    }
    private static final int ERROR_DS_MAPI_ID_NOT_AVAILABLE = (int)8632L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_MAPI_ID_NOT_AVAILABLE 8632
     * }
     */
    public static int ERROR_DS_MAPI_ID_NOT_AVAILABLE() {
        return ERROR_DS_MAPI_ID_NOT_AVAILABLE;
    }
    private static final int ERROR_DS_DRA_MISSING_KRBTGT_SECRET = (int)8633L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DRA_MISSING_KRBTGT_SECRET 8633
     * }
     */
    public static int ERROR_DS_DRA_MISSING_KRBTGT_SECRET() {
        return ERROR_DS_DRA_MISSING_KRBTGT_SECRET;
    }
    private static final int ERROR_DS_DOMAIN_NAME_EXISTS_IN_FOREST = (int)8634L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DOMAIN_NAME_EXISTS_IN_FOREST 8634
     * }
     */
    public static int ERROR_DS_DOMAIN_NAME_EXISTS_IN_FOREST() {
        return ERROR_DS_DOMAIN_NAME_EXISTS_IN_FOREST;
    }
    private static final int ERROR_DS_FLAT_NAME_EXISTS_IN_FOREST = (int)8635L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_FLAT_NAME_EXISTS_IN_FOREST 8635
     * }
     */
    public static int ERROR_DS_FLAT_NAME_EXISTS_IN_FOREST() {
        return ERROR_DS_FLAT_NAME_EXISTS_IN_FOREST;
    }
    private static final int ERROR_INVALID_USER_PRINCIPAL_NAME = (int)8636L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_USER_PRINCIPAL_NAME 8636
     * }
     */
    public static int ERROR_INVALID_USER_PRINCIPAL_NAME() {
        return ERROR_INVALID_USER_PRINCIPAL_NAME;
    }
    private static final int ERROR_DS_OID_MAPPED_GROUP_CANT_HAVE_MEMBERS = (int)8637L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_OID_MAPPED_GROUP_CANT_HAVE_MEMBERS 8637
     * }
     */
    public static int ERROR_DS_OID_MAPPED_GROUP_CANT_HAVE_MEMBERS() {
        return ERROR_DS_OID_MAPPED_GROUP_CANT_HAVE_MEMBERS;
    }
    private static final int ERROR_DS_OID_NOT_FOUND = (int)8638L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_OID_NOT_FOUND 8638
     * }
     */
    public static int ERROR_DS_OID_NOT_FOUND() {
        return ERROR_DS_OID_NOT_FOUND;
    }
    private static final int ERROR_DS_DRA_RECYCLED_TARGET = (int)8639L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DRA_RECYCLED_TARGET 8639
     * }
     */
    public static int ERROR_DS_DRA_RECYCLED_TARGET() {
        return ERROR_DS_DRA_RECYCLED_TARGET;
    }
    private static final int ERROR_DS_DISALLOWED_NC_REDIRECT = (int)8640L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DISALLOWED_NC_REDIRECT 8640
     * }
     */
    public static int ERROR_DS_DISALLOWED_NC_REDIRECT() {
        return ERROR_DS_DISALLOWED_NC_REDIRECT;
    }
    private static final int ERROR_DS_HIGH_ADLDS_FFL = (int)8641L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_HIGH_ADLDS_FFL 8641
     * }
     */
    public static int ERROR_DS_HIGH_ADLDS_FFL() {
        return ERROR_DS_HIGH_ADLDS_FFL;
    }
    private static final int ERROR_DS_HIGH_DSA_VERSION = (int)8642L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_HIGH_DSA_VERSION 8642
     * }
     */
    public static int ERROR_DS_HIGH_DSA_VERSION() {
        return ERROR_DS_HIGH_DSA_VERSION;
    }
    private static final int ERROR_DS_LOW_ADLDS_FFL = (int)8643L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_LOW_ADLDS_FFL 8643
     * }
     */
    public static int ERROR_DS_LOW_ADLDS_FFL() {
        return ERROR_DS_LOW_ADLDS_FFL;
    }
    private static final int ERROR_DOMAIN_SID_SAME_AS_LOCAL_WORKSTATION = (int)8644L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DOMAIN_SID_SAME_AS_LOCAL_WORKSTATION 8644
     * }
     */
    public static int ERROR_DOMAIN_SID_SAME_AS_LOCAL_WORKSTATION() {
        return ERROR_DOMAIN_SID_SAME_AS_LOCAL_WORKSTATION;
    }
    private static final int ERROR_DS_UNDELETE_SAM_VALIDATION_FAILED = (int)8645L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_UNDELETE_SAM_VALIDATION_FAILED 8645
     * }
     */
    public static int ERROR_DS_UNDELETE_SAM_VALIDATION_FAILED() {
        return ERROR_DS_UNDELETE_SAM_VALIDATION_FAILED;
    }
    private static final int ERROR_INCORRECT_ACCOUNT_TYPE = (int)8646L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INCORRECT_ACCOUNT_TYPE 8646
     * }
     */
    public static int ERROR_INCORRECT_ACCOUNT_TYPE() {
        return ERROR_INCORRECT_ACCOUNT_TYPE;
    }
    private static final int ERROR_DS_SPN_VALUE_NOT_UNIQUE_IN_FOREST = (int)8647L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_SPN_VALUE_NOT_UNIQUE_IN_FOREST 8647
     * }
     */
    public static int ERROR_DS_SPN_VALUE_NOT_UNIQUE_IN_FOREST() {
        return ERROR_DS_SPN_VALUE_NOT_UNIQUE_IN_FOREST;
    }
    private static final int ERROR_DS_UPN_VALUE_NOT_UNIQUE_IN_FOREST = (int)8648L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_UPN_VALUE_NOT_UNIQUE_IN_FOREST 8648
     * }
     */
    public static int ERROR_DS_UPN_VALUE_NOT_UNIQUE_IN_FOREST() {
        return ERROR_DS_UPN_VALUE_NOT_UNIQUE_IN_FOREST;
    }
    private static final int ERROR_DS_MISSING_FOREST_TRUST = (int)8649L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_MISSING_FOREST_TRUST 8649
     * }
     */
    public static int ERROR_DS_MISSING_FOREST_TRUST() {
        return ERROR_DS_MISSING_FOREST_TRUST;
    }
    private static final int ERROR_DS_VALUE_KEY_NOT_UNIQUE = (int)8650L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_VALUE_KEY_NOT_UNIQUE 8650
     * }
     */
    public static int ERROR_DS_VALUE_KEY_NOT_UNIQUE() {
        return ERROR_DS_VALUE_KEY_NOT_UNIQUE;
    }
    private static final int ERROR_WEAK_WHFBKEY_BLOCKED = (int)8651L;
    /**
     * {@snippet lang=c :
     * #define ERROR_WEAK_WHFBKEY_BLOCKED 8651
     * }
     */
    public static int ERROR_WEAK_WHFBKEY_BLOCKED() {
        return ERROR_WEAK_WHFBKEY_BLOCKED;
    }
    private static final int ERROR_DS_PER_ATTRIBUTE_AUTHZ_FAILED_DURING_ADD = (int)8652L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_PER_ATTRIBUTE_AUTHZ_FAILED_DURING_ADD 8652
     * }
     */
    public static int ERROR_DS_PER_ATTRIBUTE_AUTHZ_FAILED_DURING_ADD() {
        return ERROR_DS_PER_ATTRIBUTE_AUTHZ_FAILED_DURING_ADD;
    }
    private static final int ERROR_LOCAL_POLICY_MODIFICATION_NOT_SUPPORTED = (int)8653L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOCAL_POLICY_MODIFICATION_NOT_SUPPORTED 8653
     * }
     */
    public static int ERROR_LOCAL_POLICY_MODIFICATION_NOT_SUPPORTED() {
        return ERROR_LOCAL_POLICY_MODIFICATION_NOT_SUPPORTED;
    }
    private static final int ERROR_POLICY_CONTROLLED_ACCOUNT = (int)8654L;
    /**
     * {@snippet lang=c :
     * #define ERROR_POLICY_CONTROLLED_ACCOUNT 8654
     * }
     */
    public static int ERROR_POLICY_CONTROLLED_ACCOUNT() {
        return ERROR_POLICY_CONTROLLED_ACCOUNT;
    }
    private static final int ERROR_LAPS_LEGACY_SCHEMA_MISSING = (int)8655L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LAPS_LEGACY_SCHEMA_MISSING 8655
     * }
     */
    public static int ERROR_LAPS_LEGACY_SCHEMA_MISSING() {
        return ERROR_LAPS_LEGACY_SCHEMA_MISSING;
    }
    private static final int ERROR_LAPS_SCHEMA_MISSING = (int)8656L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LAPS_SCHEMA_MISSING 8656
     * }
     */
    public static int ERROR_LAPS_SCHEMA_MISSING() {
        return ERROR_LAPS_SCHEMA_MISSING;
    }
    private static final int ERROR_LAPS_ENCRYPTION_REQUIRES_2016_DFL = (int)8657L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LAPS_ENCRYPTION_REQUIRES_2016_DFL 8657
     * }
     */
    public static int ERROR_LAPS_ENCRYPTION_REQUIRES_2016_DFL() {
        return ERROR_LAPS_ENCRYPTION_REQUIRES_2016_DFL;
    }
    private static final int ERROR_LAPS_PROCESS_TERMINATED = (int)8658L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LAPS_PROCESS_TERMINATED 8658
     * }
     */
    public static int ERROR_LAPS_PROCESS_TERMINATED() {
        return ERROR_LAPS_PROCESS_TERMINATED;
    }
    private static final int ERROR_DS_JET_RECORD_TOO_BIG = (int)8659L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_JET_RECORD_TOO_BIG 8659
     * }
     */
    public static int ERROR_DS_JET_RECORD_TOO_BIG() {
        return ERROR_DS_JET_RECORD_TOO_BIG;
    }
    private static final int ERROR_DS_REPLICA_PAGE_SIZE_MISMATCH = (int)8660L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_REPLICA_PAGE_SIZE_MISMATCH 8660
     * }
     */
    public static int ERROR_DS_REPLICA_PAGE_SIZE_MISMATCH() {
        return ERROR_DS_REPLICA_PAGE_SIZE_MISMATCH;
    }
    private static final int DNS_ERROR_RCODE_NO_ERROR = (int)0L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_RCODE_NO_ERROR 0
     * }
     */
    public static int DNS_ERROR_RCODE_NO_ERROR() {
        return DNS_ERROR_RCODE_NO_ERROR;
    }
    private static final int DNS_ERROR_RCODE_FORMAT_ERROR = (int)9001L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_RCODE_FORMAT_ERROR 9001
     * }
     */
    public static int DNS_ERROR_RCODE_FORMAT_ERROR() {
        return DNS_ERROR_RCODE_FORMAT_ERROR;
    }
    private static final int DNS_ERROR_RCODE_SERVER_FAILURE = (int)9002L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_RCODE_SERVER_FAILURE 9002
     * }
     */
    public static int DNS_ERROR_RCODE_SERVER_FAILURE() {
        return DNS_ERROR_RCODE_SERVER_FAILURE;
    }
    private static final int DNS_ERROR_RCODE_NAME_ERROR = (int)9003L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_RCODE_NAME_ERROR 9003
     * }
     */
    public static int DNS_ERROR_RCODE_NAME_ERROR() {
        return DNS_ERROR_RCODE_NAME_ERROR;
    }
    private static final int DNS_ERROR_RCODE_NOT_IMPLEMENTED = (int)9004L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_RCODE_NOT_IMPLEMENTED 9004
     * }
     */
    public static int DNS_ERROR_RCODE_NOT_IMPLEMENTED() {
        return DNS_ERROR_RCODE_NOT_IMPLEMENTED;
    }
    private static final int DNS_ERROR_RCODE_REFUSED = (int)9005L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_RCODE_REFUSED 9005
     * }
     */
    public static int DNS_ERROR_RCODE_REFUSED() {
        return DNS_ERROR_RCODE_REFUSED;
    }
    private static final int DNS_ERROR_RCODE_YXDOMAIN = (int)9006L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_RCODE_YXDOMAIN 9006
     * }
     */
    public static int DNS_ERROR_RCODE_YXDOMAIN() {
        return DNS_ERROR_RCODE_YXDOMAIN;
    }
    private static final int DNS_ERROR_RCODE_YXRRSET = (int)9007L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_RCODE_YXRRSET 9007
     * }
     */
    public static int DNS_ERROR_RCODE_YXRRSET() {
        return DNS_ERROR_RCODE_YXRRSET;
    }
    private static final int DNS_ERROR_RCODE_NXRRSET = (int)9008L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_RCODE_NXRRSET 9008
     * }
     */
    public static int DNS_ERROR_RCODE_NXRRSET() {
        return DNS_ERROR_RCODE_NXRRSET;
    }
    private static final int DNS_ERROR_RCODE_NOTAUTH = (int)9009L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_RCODE_NOTAUTH 9009
     * }
     */
    public static int DNS_ERROR_RCODE_NOTAUTH() {
        return DNS_ERROR_RCODE_NOTAUTH;
    }
    private static final int DNS_ERROR_RCODE_NOTZONE = (int)9010L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_RCODE_NOTZONE 9010
     * }
     */
    public static int DNS_ERROR_RCODE_NOTZONE() {
        return DNS_ERROR_RCODE_NOTZONE;
    }
    private static final int DNS_ERROR_RCODE_BADSIG = (int)9016L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_RCODE_BADSIG 9016
     * }
     */
    public static int DNS_ERROR_RCODE_BADSIG() {
        return DNS_ERROR_RCODE_BADSIG;
    }
    private static final int DNS_ERROR_RCODE_BADKEY = (int)9017L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_RCODE_BADKEY 9017
     * }
     */
    public static int DNS_ERROR_RCODE_BADKEY() {
        return DNS_ERROR_RCODE_BADKEY;
    }
    private static final int DNS_ERROR_RCODE_BADTIME = (int)9018L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_RCODE_BADTIME 9018
     * }
     */
    public static int DNS_ERROR_RCODE_BADTIME() {
        return DNS_ERROR_RCODE_BADTIME;
    }
    private static final int DNS_ERROR_RCODE_LAST = (int)9018L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_RCODE_LAST 9018
     * }
     */
    public static int DNS_ERROR_RCODE_LAST() {
        return DNS_ERROR_RCODE_LAST;
    }
    private static final int DNS_ERROR_KEYMASTER_REQUIRED = (int)9101L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_KEYMASTER_REQUIRED 9101
     * }
     */
    public static int DNS_ERROR_KEYMASTER_REQUIRED() {
        return DNS_ERROR_KEYMASTER_REQUIRED;
    }
    private static final int DNS_ERROR_NOT_ALLOWED_ON_SIGNED_ZONE = (int)9102L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_NOT_ALLOWED_ON_SIGNED_ZONE 9102
     * }
     */
    public static int DNS_ERROR_NOT_ALLOWED_ON_SIGNED_ZONE() {
        return DNS_ERROR_NOT_ALLOWED_ON_SIGNED_ZONE;
    }
    private static final int DNS_ERROR_NSEC3_INCOMPATIBLE_WITH_RSA_SHA1 = (int)9103L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_NSEC3_INCOMPATIBLE_WITH_RSA_SHA1 9103
     * }
     */
    public static int DNS_ERROR_NSEC3_INCOMPATIBLE_WITH_RSA_SHA1() {
        return DNS_ERROR_NSEC3_INCOMPATIBLE_WITH_RSA_SHA1;
    }
    private static final int DNS_ERROR_NOT_ENOUGH_SIGNING_KEY_DESCRIPTORS = (int)9104L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_NOT_ENOUGH_SIGNING_KEY_DESCRIPTORS 9104
     * }
     */
    public static int DNS_ERROR_NOT_ENOUGH_SIGNING_KEY_DESCRIPTORS() {
        return DNS_ERROR_NOT_ENOUGH_SIGNING_KEY_DESCRIPTORS;
    }
    private static final int DNS_ERROR_UNSUPPORTED_ALGORITHM = (int)9105L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_UNSUPPORTED_ALGORITHM 9105
     * }
     */
    public static int DNS_ERROR_UNSUPPORTED_ALGORITHM() {
        return DNS_ERROR_UNSUPPORTED_ALGORITHM;
    }
    private static final int DNS_ERROR_INVALID_KEY_SIZE = (int)9106L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_INVALID_KEY_SIZE 9106
     * }
     */
    public static int DNS_ERROR_INVALID_KEY_SIZE() {
        return DNS_ERROR_INVALID_KEY_SIZE;
    }
    private static final int DNS_ERROR_SIGNING_KEY_NOT_ACCESSIBLE = (int)9107L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_SIGNING_KEY_NOT_ACCESSIBLE 9107
     * }
     */
    public static int DNS_ERROR_SIGNING_KEY_NOT_ACCESSIBLE() {
        return DNS_ERROR_SIGNING_KEY_NOT_ACCESSIBLE;
    }
    private static final int DNS_ERROR_KSP_DOES_NOT_SUPPORT_PROTECTION = (int)9108L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_KSP_DOES_NOT_SUPPORT_PROTECTION 9108
     * }
     */
    public static int DNS_ERROR_KSP_DOES_NOT_SUPPORT_PROTECTION() {
        return DNS_ERROR_KSP_DOES_NOT_SUPPORT_PROTECTION;
    }
    private static final int DNS_ERROR_UNEXPECTED_DATA_PROTECTION_ERROR = (int)9109L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_UNEXPECTED_DATA_PROTECTION_ERROR 9109
     * }
     */
    public static int DNS_ERROR_UNEXPECTED_DATA_PROTECTION_ERROR() {
        return DNS_ERROR_UNEXPECTED_DATA_PROTECTION_ERROR;
    }
    private static final int DNS_ERROR_UNEXPECTED_CNG_ERROR = (int)9110L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_UNEXPECTED_CNG_ERROR 9110
     * }
     */
    public static int DNS_ERROR_UNEXPECTED_CNG_ERROR() {
        return DNS_ERROR_UNEXPECTED_CNG_ERROR;
    }
    private static final int DNS_ERROR_UNKNOWN_SIGNING_PARAMETER_VERSION = (int)9111L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_UNKNOWN_SIGNING_PARAMETER_VERSION 9111
     * }
     */
    public static int DNS_ERROR_UNKNOWN_SIGNING_PARAMETER_VERSION() {
        return DNS_ERROR_UNKNOWN_SIGNING_PARAMETER_VERSION;
    }
    private static final int DNS_ERROR_KSP_NOT_ACCESSIBLE = (int)9112L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_KSP_NOT_ACCESSIBLE 9112
     * }
     */
    public static int DNS_ERROR_KSP_NOT_ACCESSIBLE() {
        return DNS_ERROR_KSP_NOT_ACCESSIBLE;
    }
    private static final int DNS_ERROR_TOO_MANY_SKDS = (int)9113L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_TOO_MANY_SKDS 9113
     * }
     */
    public static int DNS_ERROR_TOO_MANY_SKDS() {
        return DNS_ERROR_TOO_MANY_SKDS;
    }
    private static final int DNS_ERROR_INVALID_ROLLOVER_PERIOD = (int)9114L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_INVALID_ROLLOVER_PERIOD 9114
     * }
     */
    public static int DNS_ERROR_INVALID_ROLLOVER_PERIOD() {
        return DNS_ERROR_INVALID_ROLLOVER_PERIOD;
    }
    private static final int DNS_ERROR_INVALID_INITIAL_ROLLOVER_OFFSET = (int)9115L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_INVALID_INITIAL_ROLLOVER_OFFSET 9115
     * }
     */
    public static int DNS_ERROR_INVALID_INITIAL_ROLLOVER_OFFSET() {
        return DNS_ERROR_INVALID_INITIAL_ROLLOVER_OFFSET;
    }
    private static final int DNS_ERROR_ROLLOVER_IN_PROGRESS = (int)9116L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_ROLLOVER_IN_PROGRESS 9116
     * }
     */
    public static int DNS_ERROR_ROLLOVER_IN_PROGRESS() {
        return DNS_ERROR_ROLLOVER_IN_PROGRESS;
    }
    private static final int DNS_ERROR_STANDBY_KEY_NOT_PRESENT = (int)9117L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_STANDBY_KEY_NOT_PRESENT 9117
     * }
     */
    public static int DNS_ERROR_STANDBY_KEY_NOT_PRESENT() {
        return DNS_ERROR_STANDBY_KEY_NOT_PRESENT;
    }
    private static final int DNS_ERROR_NOT_ALLOWED_ON_ZSK = (int)9118L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_NOT_ALLOWED_ON_ZSK 9118
     * }
     */
    public static int DNS_ERROR_NOT_ALLOWED_ON_ZSK() {
        return DNS_ERROR_NOT_ALLOWED_ON_ZSK;
    }
    private static final int DNS_ERROR_NOT_ALLOWED_ON_ACTIVE_SKD = (int)9119L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_NOT_ALLOWED_ON_ACTIVE_SKD 9119
     * }
     */
    public static int DNS_ERROR_NOT_ALLOWED_ON_ACTIVE_SKD() {
        return DNS_ERROR_NOT_ALLOWED_ON_ACTIVE_SKD;
    }
    private static final int DNS_ERROR_ROLLOVER_ALREADY_QUEUED = (int)9120L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_ROLLOVER_ALREADY_QUEUED 9120
     * }
     */
    public static int DNS_ERROR_ROLLOVER_ALREADY_QUEUED() {
        return DNS_ERROR_ROLLOVER_ALREADY_QUEUED;
    }
    private static final int DNS_ERROR_NOT_ALLOWED_ON_UNSIGNED_ZONE = (int)9121L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_NOT_ALLOWED_ON_UNSIGNED_ZONE 9121
     * }
     */
    public static int DNS_ERROR_NOT_ALLOWED_ON_UNSIGNED_ZONE() {
        return DNS_ERROR_NOT_ALLOWED_ON_UNSIGNED_ZONE;
    }
    private static final int DNS_ERROR_BAD_KEYMASTER = (int)9122L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_BAD_KEYMASTER 9122
     * }
     */
    public static int DNS_ERROR_BAD_KEYMASTER() {
        return DNS_ERROR_BAD_KEYMASTER;
    }
    private static final int DNS_ERROR_INVALID_SIGNATURE_VALIDITY_PERIOD = (int)9123L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_INVALID_SIGNATURE_VALIDITY_PERIOD 9123
     * }
     */
    public static int DNS_ERROR_INVALID_SIGNATURE_VALIDITY_PERIOD() {
        return DNS_ERROR_INVALID_SIGNATURE_VALIDITY_PERIOD;
    }
    private static final int DNS_ERROR_INVALID_NSEC3_ITERATION_COUNT = (int)9124L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_INVALID_NSEC3_ITERATION_COUNT 9124
     * }
     */
    public static int DNS_ERROR_INVALID_NSEC3_ITERATION_COUNT() {
        return DNS_ERROR_INVALID_NSEC3_ITERATION_COUNT;
    }
    private static final int DNS_ERROR_DNSSEC_IS_DISABLED = (int)9125L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_DNSSEC_IS_DISABLED 9125
     * }
     */
    public static int DNS_ERROR_DNSSEC_IS_DISABLED() {
        return DNS_ERROR_DNSSEC_IS_DISABLED;
    }
    private static final int DNS_ERROR_INVALID_XML = (int)9126L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_INVALID_XML 9126
     * }
     */
    public static int DNS_ERROR_INVALID_XML() {
        return DNS_ERROR_INVALID_XML;
    }
    private static final int DNS_ERROR_NO_VALID_TRUST_ANCHORS = (int)9127L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_NO_VALID_TRUST_ANCHORS 9127
     * }
     */
    public static int DNS_ERROR_NO_VALID_TRUST_ANCHORS() {
        return DNS_ERROR_NO_VALID_TRUST_ANCHORS;
    }
    private static final int DNS_ERROR_ROLLOVER_NOT_POKEABLE = (int)9128L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_ROLLOVER_NOT_POKEABLE 9128
     * }
     */
    public static int DNS_ERROR_ROLLOVER_NOT_POKEABLE() {
        return DNS_ERROR_ROLLOVER_NOT_POKEABLE;
    }
    private static final int DNS_ERROR_NSEC3_NAME_COLLISION = (int)9129L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_NSEC3_NAME_COLLISION 9129
     * }
     */
    public static int DNS_ERROR_NSEC3_NAME_COLLISION() {
        return DNS_ERROR_NSEC3_NAME_COLLISION;
    }
    private static final int DNS_ERROR_NSEC_INCOMPATIBLE_WITH_NSEC3_RSA_SHA1 = (int)9130L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_NSEC_INCOMPATIBLE_WITH_NSEC3_RSA_SHA1 9130
     * }
     */
    public static int DNS_ERROR_NSEC_INCOMPATIBLE_WITH_NSEC3_RSA_SHA1() {
        return DNS_ERROR_NSEC_INCOMPATIBLE_WITH_NSEC3_RSA_SHA1;
    }
    private static final int DNS_INFO_NO_RECORDS = (int)9501L;
    /**
     * {@snippet lang=c :
     * #define DNS_INFO_NO_RECORDS 9501
     * }
     */
    public static int DNS_INFO_NO_RECORDS() {
        return DNS_INFO_NO_RECORDS;
    }
    private static final int DNS_ERROR_BAD_PACKET = (int)9502L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_BAD_PACKET 9502
     * }
     */
    public static int DNS_ERROR_BAD_PACKET() {
        return DNS_ERROR_BAD_PACKET;
    }
    private static final int DNS_ERROR_NO_PACKET = (int)9503L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_NO_PACKET 9503
     * }
     */
    public static int DNS_ERROR_NO_PACKET() {
        return DNS_ERROR_NO_PACKET;
    }
    private static final int DNS_ERROR_RCODE = (int)9504L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_RCODE 9504
     * }
     */
    public static int DNS_ERROR_RCODE() {
        return DNS_ERROR_RCODE;
    }
    private static final int DNS_ERROR_UNSECURE_PACKET = (int)9505L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_UNSECURE_PACKET 9505
     * }
     */
    public static int DNS_ERROR_UNSECURE_PACKET() {
        return DNS_ERROR_UNSECURE_PACKET;
    }
    private static final int DNS_STATUS_PACKET_UNSECURE = (int)9505L;
    /**
     * {@snippet lang=c :
     * #define DNS_STATUS_PACKET_UNSECURE 9505
     * }
     */
    public static int DNS_STATUS_PACKET_UNSECURE() {
        return DNS_STATUS_PACKET_UNSECURE;
    }
    private static final int DNS_REQUEST_PENDING = (int)9506L;
    /**
     * {@snippet lang=c :
     * #define DNS_REQUEST_PENDING 9506
     * }
     */
    public static int DNS_REQUEST_PENDING() {
        return DNS_REQUEST_PENDING;
    }
    private static final int DNS_ERROR_NO_MEMORY = (int)14L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_NO_MEMORY 14
     * }
     */
    public static int DNS_ERROR_NO_MEMORY() {
        return DNS_ERROR_NO_MEMORY;
    }
    private static final int DNS_ERROR_INVALID_NAME = (int)123L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_INVALID_NAME 123
     * }
     */
    public static int DNS_ERROR_INVALID_NAME() {
        return DNS_ERROR_INVALID_NAME;
    }
    private static final int DNS_ERROR_INVALID_DATA = (int)13L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_INVALID_DATA 13
     * }
     */
    public static int DNS_ERROR_INVALID_DATA() {
        return DNS_ERROR_INVALID_DATA;
    }
    private static final int DNS_ERROR_INVALID_TYPE = (int)9551L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_INVALID_TYPE 9551
     * }
     */
    public static int DNS_ERROR_INVALID_TYPE() {
        return DNS_ERROR_INVALID_TYPE;
    }
    private static final int DNS_ERROR_INVALID_IP_ADDRESS = (int)9552L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_INVALID_IP_ADDRESS 9552
     * }
     */
    public static int DNS_ERROR_INVALID_IP_ADDRESS() {
        return DNS_ERROR_INVALID_IP_ADDRESS;
    }
    private static final int DNS_ERROR_INVALID_PROPERTY = (int)9553L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_INVALID_PROPERTY 9553
     * }
     */
    public static int DNS_ERROR_INVALID_PROPERTY() {
        return DNS_ERROR_INVALID_PROPERTY;
    }
    private static final int DNS_ERROR_TRY_AGAIN_LATER = (int)9554L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_TRY_AGAIN_LATER 9554
     * }
     */
    public static int DNS_ERROR_TRY_AGAIN_LATER() {
        return DNS_ERROR_TRY_AGAIN_LATER;
    }
    private static final int DNS_ERROR_NOT_UNIQUE = (int)9555L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_NOT_UNIQUE 9555
     * }
     */
    public static int DNS_ERROR_NOT_UNIQUE() {
        return DNS_ERROR_NOT_UNIQUE;
    }
    private static final int DNS_ERROR_NON_RFC_NAME = (int)9556L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_NON_RFC_NAME 9556
     * }
     */
    public static int DNS_ERROR_NON_RFC_NAME() {
        return DNS_ERROR_NON_RFC_NAME;
    }
    private static final int DNS_STATUS_FQDN = (int)9557L;
    /**
     * {@snippet lang=c :
     * #define DNS_STATUS_FQDN 9557
     * }
     */
    public static int DNS_STATUS_FQDN() {
        return DNS_STATUS_FQDN;
    }
    private static final int DNS_STATUS_DOTTED_NAME = (int)9558L;
    /**
     * {@snippet lang=c :
     * #define DNS_STATUS_DOTTED_NAME 9558
     * }
     */
    public static int DNS_STATUS_DOTTED_NAME() {
        return DNS_STATUS_DOTTED_NAME;
    }
    private static final int DNS_STATUS_SINGLE_PART_NAME = (int)9559L;
    /**
     * {@snippet lang=c :
     * #define DNS_STATUS_SINGLE_PART_NAME 9559
     * }
     */
    public static int DNS_STATUS_SINGLE_PART_NAME() {
        return DNS_STATUS_SINGLE_PART_NAME;
    }
    private static final int DNS_ERROR_INVALID_NAME_CHAR = (int)9560L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_INVALID_NAME_CHAR 9560
     * }
     */
    public static int DNS_ERROR_INVALID_NAME_CHAR() {
        return DNS_ERROR_INVALID_NAME_CHAR;
    }
    private static final int DNS_ERROR_NUMERIC_NAME = (int)9561L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_NUMERIC_NAME 9561
     * }
     */
    public static int DNS_ERROR_NUMERIC_NAME() {
        return DNS_ERROR_NUMERIC_NAME;
    }
    private static final int DNS_ERROR_NOT_ALLOWED_ON_ROOT_SERVER = (int)9562L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_NOT_ALLOWED_ON_ROOT_SERVER 9562
     * }
     */
    public static int DNS_ERROR_NOT_ALLOWED_ON_ROOT_SERVER() {
        return DNS_ERROR_NOT_ALLOWED_ON_ROOT_SERVER;
    }
    private static final int DNS_ERROR_NOT_ALLOWED_UNDER_DELEGATION = (int)9563L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_NOT_ALLOWED_UNDER_DELEGATION 9563
     * }
     */
    public static int DNS_ERROR_NOT_ALLOWED_UNDER_DELEGATION() {
        return DNS_ERROR_NOT_ALLOWED_UNDER_DELEGATION;
    }
    private static final int DNS_ERROR_CANNOT_FIND_ROOT_HINTS = (int)9564L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_CANNOT_FIND_ROOT_HINTS 9564
     * }
     */
    public static int DNS_ERROR_CANNOT_FIND_ROOT_HINTS() {
        return DNS_ERROR_CANNOT_FIND_ROOT_HINTS;
    }
    private static final int DNS_ERROR_INCONSISTENT_ROOT_HINTS = (int)9565L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_INCONSISTENT_ROOT_HINTS 9565
     * }
     */
    public static int DNS_ERROR_INCONSISTENT_ROOT_HINTS() {
        return DNS_ERROR_INCONSISTENT_ROOT_HINTS;
    }
    private static final int DNS_ERROR_DWORD_VALUE_TOO_SMALL = (int)9566L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_DWORD_VALUE_TOO_SMALL 9566
     * }
     */
    public static int DNS_ERROR_DWORD_VALUE_TOO_SMALL() {
        return DNS_ERROR_DWORD_VALUE_TOO_SMALL;
    }
    private static final int DNS_ERROR_DWORD_VALUE_TOO_LARGE = (int)9567L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_DWORD_VALUE_TOO_LARGE 9567
     * }
     */
    public static int DNS_ERROR_DWORD_VALUE_TOO_LARGE() {
        return DNS_ERROR_DWORD_VALUE_TOO_LARGE;
    }
    private static final int DNS_ERROR_BACKGROUND_LOADING = (int)9568L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_BACKGROUND_LOADING 9568
     * }
     */
    public static int DNS_ERROR_BACKGROUND_LOADING() {
        return DNS_ERROR_BACKGROUND_LOADING;
    }
    private static final int DNS_ERROR_NOT_ALLOWED_ON_RODC = (int)9569L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_NOT_ALLOWED_ON_RODC 9569
     * }
     */
    public static int DNS_ERROR_NOT_ALLOWED_ON_RODC() {
        return DNS_ERROR_NOT_ALLOWED_ON_RODC;
    }
    private static final int DNS_ERROR_NOT_ALLOWED_UNDER_DNAME = (int)9570L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_NOT_ALLOWED_UNDER_DNAME 9570
     * }
     */
    public static int DNS_ERROR_NOT_ALLOWED_UNDER_DNAME() {
        return DNS_ERROR_NOT_ALLOWED_UNDER_DNAME;
    }
    private static final int DNS_ERROR_DELEGATION_REQUIRED = (int)9571L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_DELEGATION_REQUIRED 9571
     * }
     */
    public static int DNS_ERROR_DELEGATION_REQUIRED() {
        return DNS_ERROR_DELEGATION_REQUIRED;
    }
    private static final int DNS_ERROR_INVALID_POLICY_TABLE = (int)9572L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_INVALID_POLICY_TABLE 9572
     * }
     */
    public static int DNS_ERROR_INVALID_POLICY_TABLE() {
        return DNS_ERROR_INVALID_POLICY_TABLE;
    }
    private static final int DNS_ERROR_ADDRESS_REQUIRED = (int)9573L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_ADDRESS_REQUIRED 9573
     * }
     */
    public static int DNS_ERROR_ADDRESS_REQUIRED() {
        return DNS_ERROR_ADDRESS_REQUIRED;
    }
    private static final int DNS_ERROR_ZONE_DOES_NOT_EXIST = (int)9601L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_ZONE_DOES_NOT_EXIST 9601
     * }
     */
    public static int DNS_ERROR_ZONE_DOES_NOT_EXIST() {
        return DNS_ERROR_ZONE_DOES_NOT_EXIST;
    }
    private static final int DNS_ERROR_NO_ZONE_INFO = (int)9602L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_NO_ZONE_INFO 9602
     * }
     */
    public static int DNS_ERROR_NO_ZONE_INFO() {
        return DNS_ERROR_NO_ZONE_INFO;
    }
    private static final int DNS_ERROR_INVALID_ZONE_OPERATION = (int)9603L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_INVALID_ZONE_OPERATION 9603
     * }
     */
    public static int DNS_ERROR_INVALID_ZONE_OPERATION() {
        return DNS_ERROR_INVALID_ZONE_OPERATION;
    }
    private static final int DNS_ERROR_ZONE_CONFIGURATION_ERROR = (int)9604L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_ZONE_CONFIGURATION_ERROR 9604
     * }
     */
    public static int DNS_ERROR_ZONE_CONFIGURATION_ERROR() {
        return DNS_ERROR_ZONE_CONFIGURATION_ERROR;
    }
    private static final int DNS_ERROR_ZONE_HAS_NO_SOA_RECORD = (int)9605L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_ZONE_HAS_NO_SOA_RECORD 9605
     * }
     */
    public static int DNS_ERROR_ZONE_HAS_NO_SOA_RECORD() {
        return DNS_ERROR_ZONE_HAS_NO_SOA_RECORD;
    }
    private static final int DNS_ERROR_ZONE_HAS_NO_NS_RECORDS = (int)9606L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_ZONE_HAS_NO_NS_RECORDS 9606
     * }
     */
    public static int DNS_ERROR_ZONE_HAS_NO_NS_RECORDS() {
        return DNS_ERROR_ZONE_HAS_NO_NS_RECORDS;
    }
    private static final int DNS_ERROR_ZONE_LOCKED = (int)9607L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_ZONE_LOCKED 9607
     * }
     */
    public static int DNS_ERROR_ZONE_LOCKED() {
        return DNS_ERROR_ZONE_LOCKED;
    }
    private static final int DNS_ERROR_ZONE_CREATION_FAILED = (int)9608L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_ZONE_CREATION_FAILED 9608
     * }
     */
    public static int DNS_ERROR_ZONE_CREATION_FAILED() {
        return DNS_ERROR_ZONE_CREATION_FAILED;
    }
    private static final int DNS_ERROR_ZONE_ALREADY_EXISTS = (int)9609L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_ZONE_ALREADY_EXISTS 9609
     * }
     */
    public static int DNS_ERROR_ZONE_ALREADY_EXISTS() {
        return DNS_ERROR_ZONE_ALREADY_EXISTS;
    }
    private static final int DNS_ERROR_AUTOZONE_ALREADY_EXISTS = (int)9610L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_AUTOZONE_ALREADY_EXISTS 9610
     * }
     */
    public static int DNS_ERROR_AUTOZONE_ALREADY_EXISTS() {
        return DNS_ERROR_AUTOZONE_ALREADY_EXISTS;
    }
    private static final int DNS_ERROR_INVALID_ZONE_TYPE = (int)9611L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_INVALID_ZONE_TYPE 9611
     * }
     */
    public static int DNS_ERROR_INVALID_ZONE_TYPE() {
        return DNS_ERROR_INVALID_ZONE_TYPE;
    }
    private static final int DNS_ERROR_SECONDARY_REQUIRES_MASTER_IP = (int)9612L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_SECONDARY_REQUIRES_MASTER_IP 9612
     * }
     */
    public static int DNS_ERROR_SECONDARY_REQUIRES_MASTER_IP() {
        return DNS_ERROR_SECONDARY_REQUIRES_MASTER_IP;
    }
    private static final int DNS_ERROR_ZONE_NOT_SECONDARY = (int)9613L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_ZONE_NOT_SECONDARY 9613
     * }
     */
    public static int DNS_ERROR_ZONE_NOT_SECONDARY() {
        return DNS_ERROR_ZONE_NOT_SECONDARY;
    }
    private static final int DNS_ERROR_NEED_SECONDARY_ADDRESSES = (int)9614L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_NEED_SECONDARY_ADDRESSES 9614
     * }
     */
    public static int DNS_ERROR_NEED_SECONDARY_ADDRESSES() {
        return DNS_ERROR_NEED_SECONDARY_ADDRESSES;
    }
    private static final int DNS_ERROR_WINS_INIT_FAILED = (int)9615L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_WINS_INIT_FAILED 9615
     * }
     */
    public static int DNS_ERROR_WINS_INIT_FAILED() {
        return DNS_ERROR_WINS_INIT_FAILED;
    }
    private static final int DNS_ERROR_NEED_WINS_SERVERS = (int)9616L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_NEED_WINS_SERVERS 9616
     * }
     */
    public static int DNS_ERROR_NEED_WINS_SERVERS() {
        return DNS_ERROR_NEED_WINS_SERVERS;
    }
    private static final int DNS_ERROR_NBSTAT_INIT_FAILED = (int)9617L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_NBSTAT_INIT_FAILED 9617
     * }
     */
    public static int DNS_ERROR_NBSTAT_INIT_FAILED() {
        return DNS_ERROR_NBSTAT_INIT_FAILED;
    }
    private static final int DNS_ERROR_SOA_DELETE_INVALID = (int)9618L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_SOA_DELETE_INVALID 9618
     * }
     */
    public static int DNS_ERROR_SOA_DELETE_INVALID() {
        return DNS_ERROR_SOA_DELETE_INVALID;
    }
    private static final int DNS_ERROR_FORWARDER_ALREADY_EXISTS = (int)9619L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_FORWARDER_ALREADY_EXISTS 9619
     * }
     */
    public static int DNS_ERROR_FORWARDER_ALREADY_EXISTS() {
        return DNS_ERROR_FORWARDER_ALREADY_EXISTS;
    }
    private static final int DNS_ERROR_ZONE_REQUIRES_MASTER_IP = (int)9620L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_ZONE_REQUIRES_MASTER_IP 9620
     * }
     */
    public static int DNS_ERROR_ZONE_REQUIRES_MASTER_IP() {
        return DNS_ERROR_ZONE_REQUIRES_MASTER_IP;
    }
    private static final int DNS_ERROR_ZONE_IS_SHUTDOWN = (int)9621L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_ZONE_IS_SHUTDOWN 9621
     * }
     */
    public static int DNS_ERROR_ZONE_IS_SHUTDOWN() {
        return DNS_ERROR_ZONE_IS_SHUTDOWN;
    }
    private static final int DNS_ERROR_ZONE_LOCKED_FOR_SIGNING = (int)9622L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_ZONE_LOCKED_FOR_SIGNING 9622
     * }
     */
    public static int DNS_ERROR_ZONE_LOCKED_FOR_SIGNING() {
        return DNS_ERROR_ZONE_LOCKED_FOR_SIGNING;
    }
    private static final int DNS_ERROR_PRIMARY_REQUIRES_DATAFILE = (int)9651L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_PRIMARY_REQUIRES_DATAFILE 9651
     * }
     */
    public static int DNS_ERROR_PRIMARY_REQUIRES_DATAFILE() {
        return DNS_ERROR_PRIMARY_REQUIRES_DATAFILE;
    }
    private static final int DNS_ERROR_INVALID_DATAFILE_NAME = (int)9652L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_INVALID_DATAFILE_NAME 9652
     * }
     */
    public static int DNS_ERROR_INVALID_DATAFILE_NAME() {
        return DNS_ERROR_INVALID_DATAFILE_NAME;
    }
    private static final int DNS_ERROR_DATAFILE_OPEN_FAILURE = (int)9653L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_DATAFILE_OPEN_FAILURE 9653
     * }
     */
    public static int DNS_ERROR_DATAFILE_OPEN_FAILURE() {
        return DNS_ERROR_DATAFILE_OPEN_FAILURE;
    }
    private static final int DNS_ERROR_FILE_WRITEBACK_FAILED = (int)9654L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_FILE_WRITEBACK_FAILED 9654
     * }
     */
    public static int DNS_ERROR_FILE_WRITEBACK_FAILED() {
        return DNS_ERROR_FILE_WRITEBACK_FAILED;
    }
    private static final int DNS_ERROR_DATAFILE_PARSING = (int)9655L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_DATAFILE_PARSING 9655
     * }
     */
    public static int DNS_ERROR_DATAFILE_PARSING() {
        return DNS_ERROR_DATAFILE_PARSING;
    }
    private static final int DNS_ERROR_RECORD_DOES_NOT_EXIST = (int)9701L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_RECORD_DOES_NOT_EXIST 9701
     * }
     */
    public static int DNS_ERROR_RECORD_DOES_NOT_EXIST() {
        return DNS_ERROR_RECORD_DOES_NOT_EXIST;
    }
    private static final int DNS_ERROR_RECORD_FORMAT = (int)9702L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_RECORD_FORMAT 9702
     * }
     */
    public static int DNS_ERROR_RECORD_FORMAT() {
        return DNS_ERROR_RECORD_FORMAT;
    }
    private static final int DNS_ERROR_NODE_CREATION_FAILED = (int)9703L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_NODE_CREATION_FAILED 9703
     * }
     */
    public static int DNS_ERROR_NODE_CREATION_FAILED() {
        return DNS_ERROR_NODE_CREATION_FAILED;
    }
    private static final int DNS_ERROR_UNKNOWN_RECORD_TYPE = (int)9704L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_UNKNOWN_RECORD_TYPE 9704
     * }
     */
    public static int DNS_ERROR_UNKNOWN_RECORD_TYPE() {
        return DNS_ERROR_UNKNOWN_RECORD_TYPE;
    }
    private static final int DNS_ERROR_RECORD_TIMED_OUT = (int)9705L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_RECORD_TIMED_OUT 9705
     * }
     */
    public static int DNS_ERROR_RECORD_TIMED_OUT() {
        return DNS_ERROR_RECORD_TIMED_OUT;
    }
    private static final int DNS_ERROR_NAME_NOT_IN_ZONE = (int)9706L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_NAME_NOT_IN_ZONE 9706
     * }
     */
    public static int DNS_ERROR_NAME_NOT_IN_ZONE() {
        return DNS_ERROR_NAME_NOT_IN_ZONE;
    }
    private static final int DNS_ERROR_CNAME_LOOP = (int)9707L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_CNAME_LOOP 9707
     * }
     */
    public static int DNS_ERROR_CNAME_LOOP() {
        return DNS_ERROR_CNAME_LOOP;
    }
    private static final int DNS_ERROR_NODE_IS_CNAME = (int)9708L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_NODE_IS_CNAME 9708
     * }
     */
    public static int DNS_ERROR_NODE_IS_CNAME() {
        return DNS_ERROR_NODE_IS_CNAME;
    }
    private static final int DNS_ERROR_CNAME_COLLISION = (int)9709L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_CNAME_COLLISION 9709
     * }
     */
    public static int DNS_ERROR_CNAME_COLLISION() {
        return DNS_ERROR_CNAME_COLLISION;
    }
    private static final int DNS_ERROR_RECORD_ONLY_AT_ZONE_ROOT = (int)9710L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_RECORD_ONLY_AT_ZONE_ROOT 9710
     * }
     */
    public static int DNS_ERROR_RECORD_ONLY_AT_ZONE_ROOT() {
        return DNS_ERROR_RECORD_ONLY_AT_ZONE_ROOT;
    }
    private static final int DNS_ERROR_RECORD_ALREADY_EXISTS = (int)9711L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_RECORD_ALREADY_EXISTS 9711
     * }
     */
    public static int DNS_ERROR_RECORD_ALREADY_EXISTS() {
        return DNS_ERROR_RECORD_ALREADY_EXISTS;
    }
    private static final int DNS_ERROR_SECONDARY_DATA = (int)9712L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_SECONDARY_DATA 9712
     * }
     */
    public static int DNS_ERROR_SECONDARY_DATA() {
        return DNS_ERROR_SECONDARY_DATA;
    }
    private static final int DNS_ERROR_NO_CREATE_CACHE_DATA = (int)9713L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_NO_CREATE_CACHE_DATA 9713
     * }
     */
    public static int DNS_ERROR_NO_CREATE_CACHE_DATA() {
        return DNS_ERROR_NO_CREATE_CACHE_DATA;
    }
    private static final int DNS_ERROR_NAME_DOES_NOT_EXIST = (int)9714L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_NAME_DOES_NOT_EXIST 9714
     * }
     */
    public static int DNS_ERROR_NAME_DOES_NOT_EXIST() {
        return DNS_ERROR_NAME_DOES_NOT_EXIST;
    }
    private static final int DNS_WARNING_PTR_CREATE_FAILED = (int)9715L;
    /**
     * {@snippet lang=c :
     * #define DNS_WARNING_PTR_CREATE_FAILED 9715
     * }
     */
    public static int DNS_WARNING_PTR_CREATE_FAILED() {
        return DNS_WARNING_PTR_CREATE_FAILED;
    }
    private static final int DNS_WARNING_DOMAIN_UNDELETED = (int)9716L;
    /**
     * {@snippet lang=c :
     * #define DNS_WARNING_DOMAIN_UNDELETED 9716
     * }
     */
    public static int DNS_WARNING_DOMAIN_UNDELETED() {
        return DNS_WARNING_DOMAIN_UNDELETED;
    }
    private static final int DNS_ERROR_DS_UNAVAILABLE = (int)9717L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_DS_UNAVAILABLE 9717
     * }
     */
    public static int DNS_ERROR_DS_UNAVAILABLE() {
        return DNS_ERROR_DS_UNAVAILABLE;
    }
    private static final int DNS_ERROR_DS_ZONE_ALREADY_EXISTS = (int)9718L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_DS_ZONE_ALREADY_EXISTS 9718
     * }
     */
    public static int DNS_ERROR_DS_ZONE_ALREADY_EXISTS() {
        return DNS_ERROR_DS_ZONE_ALREADY_EXISTS;
    }
    private static final int DNS_ERROR_NO_BOOTFILE_IF_DS_ZONE = (int)9719L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_NO_BOOTFILE_IF_DS_ZONE 9719
     * }
     */
    public static int DNS_ERROR_NO_BOOTFILE_IF_DS_ZONE() {
        return DNS_ERROR_NO_BOOTFILE_IF_DS_ZONE;
    }
    private static final int DNS_ERROR_NODE_IS_DNAME = (int)9720L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_NODE_IS_DNAME 9720
     * }
     */
    public static int DNS_ERROR_NODE_IS_DNAME() {
        return DNS_ERROR_NODE_IS_DNAME;
    }
    private static final int DNS_ERROR_DNAME_COLLISION = (int)9721L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_DNAME_COLLISION 9721
     * }
     */
    public static int DNS_ERROR_DNAME_COLLISION() {
        return DNS_ERROR_DNAME_COLLISION;
    }
    private static final int DNS_ERROR_ALIAS_LOOP = (int)9722L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_ALIAS_LOOP 9722
     * }
     */
    public static int DNS_ERROR_ALIAS_LOOP() {
        return DNS_ERROR_ALIAS_LOOP;
    }
    private static final int DNS_INFO_AXFR_COMPLETE = (int)9751L;
    /**
     * {@snippet lang=c :
     * #define DNS_INFO_AXFR_COMPLETE 9751
     * }
     */
    public static int DNS_INFO_AXFR_COMPLETE() {
        return DNS_INFO_AXFR_COMPLETE;
    }
    private static final int DNS_ERROR_AXFR = (int)9752L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_AXFR 9752
     * }
     */
    public static int DNS_ERROR_AXFR() {
        return DNS_ERROR_AXFR;
    }
    private static final int DNS_INFO_ADDED_LOCAL_WINS = (int)9753L;
    /**
     * {@snippet lang=c :
     * #define DNS_INFO_ADDED_LOCAL_WINS 9753
     * }
     */
    public static int DNS_INFO_ADDED_LOCAL_WINS() {
        return DNS_INFO_ADDED_LOCAL_WINS;
    }
    private static final int DNS_STATUS_CONTINUE_NEEDED = (int)9801L;
    /**
     * {@snippet lang=c :
     * #define DNS_STATUS_CONTINUE_NEEDED 9801
     * }
     */
    public static int DNS_STATUS_CONTINUE_NEEDED() {
        return DNS_STATUS_CONTINUE_NEEDED;
    }
    private static final int DNS_ERROR_NO_TCPIP = (int)9851L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_NO_TCPIP 9851
     * }
     */
    public static int DNS_ERROR_NO_TCPIP() {
        return DNS_ERROR_NO_TCPIP;
    }
    private static final int DNS_ERROR_NO_DNS_SERVERS = (int)9852L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_NO_DNS_SERVERS 9852
     * }
     */
    public static int DNS_ERROR_NO_DNS_SERVERS() {
        return DNS_ERROR_NO_DNS_SERVERS;
    }
    private static final int DNS_ERROR_DP_DOES_NOT_EXIST = (int)9901L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_DP_DOES_NOT_EXIST 9901
     * }
     */
    public static int DNS_ERROR_DP_DOES_NOT_EXIST() {
        return DNS_ERROR_DP_DOES_NOT_EXIST;
    }
    private static final int DNS_ERROR_DP_ALREADY_EXISTS = (int)9902L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_DP_ALREADY_EXISTS 9902
     * }
     */
    public static int DNS_ERROR_DP_ALREADY_EXISTS() {
        return DNS_ERROR_DP_ALREADY_EXISTS;
    }
    private static final int DNS_ERROR_DP_NOT_ENLISTED = (int)9903L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_DP_NOT_ENLISTED 9903
     * }
     */
    public static int DNS_ERROR_DP_NOT_ENLISTED() {
        return DNS_ERROR_DP_NOT_ENLISTED;
    }
    private static final int DNS_ERROR_DP_ALREADY_ENLISTED = (int)9904L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_DP_ALREADY_ENLISTED 9904
     * }
     */
    public static int DNS_ERROR_DP_ALREADY_ENLISTED() {
        return DNS_ERROR_DP_ALREADY_ENLISTED;
    }
    private static final int DNS_ERROR_DP_NOT_AVAILABLE = (int)9905L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_DP_NOT_AVAILABLE 9905
     * }
     */
    public static int DNS_ERROR_DP_NOT_AVAILABLE() {
        return DNS_ERROR_DP_NOT_AVAILABLE;
    }
    private static final int DNS_ERROR_DP_FSMO_ERROR = (int)9906L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_DP_FSMO_ERROR 9906
     * }
     */
    public static int DNS_ERROR_DP_FSMO_ERROR() {
        return DNS_ERROR_DP_FSMO_ERROR;
    }
    private static final int DNS_ERROR_RRL_NOT_ENABLED = (int)9911L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_RRL_NOT_ENABLED 9911
     * }
     */
    public static int DNS_ERROR_RRL_NOT_ENABLED() {
        return DNS_ERROR_RRL_NOT_ENABLED;
    }
    private static final int DNS_ERROR_RRL_INVALID_WINDOW_SIZE = (int)9912L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_RRL_INVALID_WINDOW_SIZE 9912
     * }
     */
    public static int DNS_ERROR_RRL_INVALID_WINDOW_SIZE() {
        return DNS_ERROR_RRL_INVALID_WINDOW_SIZE;
    }
    private static final int DNS_ERROR_RRL_INVALID_IPV4_PREFIX = (int)9913L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_RRL_INVALID_IPV4_PREFIX 9913
     * }
     */
    public static int DNS_ERROR_RRL_INVALID_IPV4_PREFIX() {
        return DNS_ERROR_RRL_INVALID_IPV4_PREFIX;
    }
    private static final int DNS_ERROR_RRL_INVALID_IPV6_PREFIX = (int)9914L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_RRL_INVALID_IPV6_PREFIX 9914
     * }
     */
    public static int DNS_ERROR_RRL_INVALID_IPV6_PREFIX() {
        return DNS_ERROR_RRL_INVALID_IPV6_PREFIX;
    }
    private static final int DNS_ERROR_RRL_INVALID_TC_RATE = (int)9915L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_RRL_INVALID_TC_RATE 9915
     * }
     */
    public static int DNS_ERROR_RRL_INVALID_TC_RATE() {
        return DNS_ERROR_RRL_INVALID_TC_RATE;
    }
    private static final int DNS_ERROR_RRL_INVALID_LEAK_RATE = (int)9916L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_RRL_INVALID_LEAK_RATE 9916
     * }
     */
    public static int DNS_ERROR_RRL_INVALID_LEAK_RATE() {
        return DNS_ERROR_RRL_INVALID_LEAK_RATE;
    }
    private static final int DNS_ERROR_RRL_LEAK_RATE_LESSTHAN_TC_RATE = (int)9917L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_RRL_LEAK_RATE_LESSTHAN_TC_RATE 9917
     * }
     */
    public static int DNS_ERROR_RRL_LEAK_RATE_LESSTHAN_TC_RATE() {
        return DNS_ERROR_RRL_LEAK_RATE_LESSTHAN_TC_RATE;
    }
    private static final int DNS_ERROR_VIRTUALIZATION_INSTANCE_ALREADY_EXISTS = (int)9921L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_VIRTUALIZATION_INSTANCE_ALREADY_EXISTS 9921
     * }
     */
    public static int DNS_ERROR_VIRTUALIZATION_INSTANCE_ALREADY_EXISTS() {
        return DNS_ERROR_VIRTUALIZATION_INSTANCE_ALREADY_EXISTS;
    }
    private static final int DNS_ERROR_VIRTUALIZATION_INSTANCE_DOES_NOT_EXIST = (int)9922L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_VIRTUALIZATION_INSTANCE_DOES_NOT_EXIST 9922
     * }
     */
    public static int DNS_ERROR_VIRTUALIZATION_INSTANCE_DOES_NOT_EXIST() {
        return DNS_ERROR_VIRTUALIZATION_INSTANCE_DOES_NOT_EXIST;
    }
    private static final int DNS_ERROR_VIRTUALIZATION_TREE_LOCKED = (int)9923L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_VIRTUALIZATION_TREE_LOCKED 9923
     * }
     */
    public static int DNS_ERROR_VIRTUALIZATION_TREE_LOCKED() {
        return DNS_ERROR_VIRTUALIZATION_TREE_LOCKED;
    }
    private static final int DNS_ERROR_INVAILD_VIRTUALIZATION_INSTANCE_NAME = (int)9924L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_INVAILD_VIRTUALIZATION_INSTANCE_NAME 9924
     * }
     */
    public static int DNS_ERROR_INVAILD_VIRTUALIZATION_INSTANCE_NAME() {
        return DNS_ERROR_INVAILD_VIRTUALIZATION_INSTANCE_NAME;
    }
    private static final int DNS_ERROR_DEFAULT_VIRTUALIZATION_INSTANCE = (int)9925L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_DEFAULT_VIRTUALIZATION_INSTANCE 9925
     * }
     */
    public static int DNS_ERROR_DEFAULT_VIRTUALIZATION_INSTANCE() {
        return DNS_ERROR_DEFAULT_VIRTUALIZATION_INSTANCE;
    }
    private static final int DNS_ERROR_ZONESCOPE_ALREADY_EXISTS = (int)9951L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_ZONESCOPE_ALREADY_EXISTS 9951
     * }
     */
    public static int DNS_ERROR_ZONESCOPE_ALREADY_EXISTS() {
        return DNS_ERROR_ZONESCOPE_ALREADY_EXISTS;
    }
    private static final int DNS_ERROR_ZONESCOPE_DOES_NOT_EXIST = (int)9952L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_ZONESCOPE_DOES_NOT_EXIST 9952
     * }
     */
    public static int DNS_ERROR_ZONESCOPE_DOES_NOT_EXIST() {
        return DNS_ERROR_ZONESCOPE_DOES_NOT_EXIST;
    }
    private static final int DNS_ERROR_DEFAULT_ZONESCOPE = (int)9953L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_DEFAULT_ZONESCOPE 9953
     * }
     */
    public static int DNS_ERROR_DEFAULT_ZONESCOPE() {
        return DNS_ERROR_DEFAULT_ZONESCOPE;
    }
    private static final int DNS_ERROR_INVALID_ZONESCOPE_NAME = (int)9954L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_INVALID_ZONESCOPE_NAME 9954
     * }
     */
    public static int DNS_ERROR_INVALID_ZONESCOPE_NAME() {
        return DNS_ERROR_INVALID_ZONESCOPE_NAME;
    }
    private static final int DNS_ERROR_NOT_ALLOWED_WITH_ZONESCOPES = (int)9955L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_NOT_ALLOWED_WITH_ZONESCOPES 9955
     * }
     */
    public static int DNS_ERROR_NOT_ALLOWED_WITH_ZONESCOPES() {
        return DNS_ERROR_NOT_ALLOWED_WITH_ZONESCOPES;
    }
    private static final int DNS_ERROR_LOAD_ZONESCOPE_FAILED = (int)9956L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_LOAD_ZONESCOPE_FAILED 9956
     * }
     */
    public static int DNS_ERROR_LOAD_ZONESCOPE_FAILED() {
        return DNS_ERROR_LOAD_ZONESCOPE_FAILED;
    }
    private static final int DNS_ERROR_ZONESCOPE_FILE_WRITEBACK_FAILED = (int)9957L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_ZONESCOPE_FILE_WRITEBACK_FAILED 9957
     * }
     */
    public static int DNS_ERROR_ZONESCOPE_FILE_WRITEBACK_FAILED() {
        return DNS_ERROR_ZONESCOPE_FILE_WRITEBACK_FAILED;
    }
    private static final int DNS_ERROR_INVALID_SCOPE_NAME = (int)9958L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_INVALID_SCOPE_NAME 9958
     * }
     */
    public static int DNS_ERROR_INVALID_SCOPE_NAME() {
        return DNS_ERROR_INVALID_SCOPE_NAME;
    }
    private static final int DNS_ERROR_SCOPE_DOES_NOT_EXIST = (int)9959L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_SCOPE_DOES_NOT_EXIST 9959
     * }
     */
    public static int DNS_ERROR_SCOPE_DOES_NOT_EXIST() {
        return DNS_ERROR_SCOPE_DOES_NOT_EXIST;
    }
    private static final int DNS_ERROR_DEFAULT_SCOPE = (int)9960L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_DEFAULT_SCOPE 9960
     * }
     */
    public static int DNS_ERROR_DEFAULT_SCOPE() {
        return DNS_ERROR_DEFAULT_SCOPE;
    }
    private static final int DNS_ERROR_INVALID_SCOPE_OPERATION = (int)9961L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_INVALID_SCOPE_OPERATION 9961
     * }
     */
    public static int DNS_ERROR_INVALID_SCOPE_OPERATION() {
        return DNS_ERROR_INVALID_SCOPE_OPERATION;
    }
    private static final int DNS_ERROR_SCOPE_LOCKED = (int)9962L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_SCOPE_LOCKED 9962
     * }
     */
    public static int DNS_ERROR_SCOPE_LOCKED() {
        return DNS_ERROR_SCOPE_LOCKED;
    }
    private static final int DNS_ERROR_SCOPE_ALREADY_EXISTS = (int)9963L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_SCOPE_ALREADY_EXISTS 9963
     * }
     */
    public static int DNS_ERROR_SCOPE_ALREADY_EXISTS() {
        return DNS_ERROR_SCOPE_ALREADY_EXISTS;
    }
    private static final int DNS_ERROR_POLICY_ALREADY_EXISTS = (int)9971L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_POLICY_ALREADY_EXISTS 9971
     * }
     */
    public static int DNS_ERROR_POLICY_ALREADY_EXISTS() {
        return DNS_ERROR_POLICY_ALREADY_EXISTS;
    }
    private static final int DNS_ERROR_POLICY_DOES_NOT_EXIST = (int)9972L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_POLICY_DOES_NOT_EXIST 9972
     * }
     */
    public static int DNS_ERROR_POLICY_DOES_NOT_EXIST() {
        return DNS_ERROR_POLICY_DOES_NOT_EXIST;
    }
    private static final int DNS_ERROR_POLICY_INVALID_CRITERIA = (int)9973L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_POLICY_INVALID_CRITERIA 9973
     * }
     */
    public static int DNS_ERROR_POLICY_INVALID_CRITERIA() {
        return DNS_ERROR_POLICY_INVALID_CRITERIA;
    }
    private static final int DNS_ERROR_POLICY_INVALID_SETTINGS = (int)9974L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_POLICY_INVALID_SETTINGS 9974
     * }
     */
    public static int DNS_ERROR_POLICY_INVALID_SETTINGS() {
        return DNS_ERROR_POLICY_INVALID_SETTINGS;
    }
    private static final int DNS_ERROR_CLIENT_SUBNET_IS_ACCESSED = (int)9975L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_CLIENT_SUBNET_IS_ACCESSED 9975
     * }
     */
    public static int DNS_ERROR_CLIENT_SUBNET_IS_ACCESSED() {
        return DNS_ERROR_CLIENT_SUBNET_IS_ACCESSED;
    }
    private static final int DNS_ERROR_CLIENT_SUBNET_DOES_NOT_EXIST = (int)9976L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_CLIENT_SUBNET_DOES_NOT_EXIST 9976
     * }
     */
    public static int DNS_ERROR_CLIENT_SUBNET_DOES_NOT_EXIST() {
        return DNS_ERROR_CLIENT_SUBNET_DOES_NOT_EXIST;
    }
    private static final int DNS_ERROR_CLIENT_SUBNET_ALREADY_EXISTS = (int)9977L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_CLIENT_SUBNET_ALREADY_EXISTS 9977
     * }
     */
    public static int DNS_ERROR_CLIENT_SUBNET_ALREADY_EXISTS() {
        return DNS_ERROR_CLIENT_SUBNET_ALREADY_EXISTS;
    }
    private static final int DNS_ERROR_SUBNET_DOES_NOT_EXIST = (int)9978L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_SUBNET_DOES_NOT_EXIST 9978
     * }
     */
    public static int DNS_ERROR_SUBNET_DOES_NOT_EXIST() {
        return DNS_ERROR_SUBNET_DOES_NOT_EXIST;
    }
    private static final int DNS_ERROR_SUBNET_ALREADY_EXISTS = (int)9979L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_SUBNET_ALREADY_EXISTS 9979
     * }
     */
    public static int DNS_ERROR_SUBNET_ALREADY_EXISTS() {
        return DNS_ERROR_SUBNET_ALREADY_EXISTS;
    }
    private static final int DNS_ERROR_POLICY_LOCKED = (int)9980L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_POLICY_LOCKED 9980
     * }
     */
    public static int DNS_ERROR_POLICY_LOCKED() {
        return DNS_ERROR_POLICY_LOCKED;
    }
    private static final int DNS_ERROR_POLICY_INVALID_WEIGHT = (int)9981L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_POLICY_INVALID_WEIGHT 9981
     * }
     */
    public static int DNS_ERROR_POLICY_INVALID_WEIGHT() {
        return DNS_ERROR_POLICY_INVALID_WEIGHT;
    }
    private static final int DNS_ERROR_POLICY_INVALID_NAME = (int)9982L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_POLICY_INVALID_NAME 9982
     * }
     */
    public static int DNS_ERROR_POLICY_INVALID_NAME() {
        return DNS_ERROR_POLICY_INVALID_NAME;
    }
    private static final int DNS_ERROR_POLICY_MISSING_CRITERIA = (int)9983L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_POLICY_MISSING_CRITERIA 9983
     * }
     */
    public static int DNS_ERROR_POLICY_MISSING_CRITERIA() {
        return DNS_ERROR_POLICY_MISSING_CRITERIA;
    }
    private static final int DNS_ERROR_INVALID_CLIENT_SUBNET_NAME = (int)9984L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_INVALID_CLIENT_SUBNET_NAME 9984
     * }
     */
    public static int DNS_ERROR_INVALID_CLIENT_SUBNET_NAME() {
        return DNS_ERROR_INVALID_CLIENT_SUBNET_NAME;
    }
    private static final int DNS_ERROR_POLICY_PROCESSING_ORDER_INVALID = (int)9985L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_POLICY_PROCESSING_ORDER_INVALID 9985
     * }
     */
    public static int DNS_ERROR_POLICY_PROCESSING_ORDER_INVALID() {
        return DNS_ERROR_POLICY_PROCESSING_ORDER_INVALID;
    }
    private static final int DNS_ERROR_POLICY_SCOPE_MISSING = (int)9986L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_POLICY_SCOPE_MISSING 9986
     * }
     */
    public static int DNS_ERROR_POLICY_SCOPE_MISSING() {
        return DNS_ERROR_POLICY_SCOPE_MISSING;
    }
    private static final int DNS_ERROR_POLICY_SCOPE_NOT_ALLOWED = (int)9987L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_POLICY_SCOPE_NOT_ALLOWED 9987
     * }
     */
    public static int DNS_ERROR_POLICY_SCOPE_NOT_ALLOWED() {
        return DNS_ERROR_POLICY_SCOPE_NOT_ALLOWED;
    }
    private static final int DNS_ERROR_SERVERSCOPE_IS_REFERENCED = (int)9988L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_SERVERSCOPE_IS_REFERENCED 9988
     * }
     */
    public static int DNS_ERROR_SERVERSCOPE_IS_REFERENCED() {
        return DNS_ERROR_SERVERSCOPE_IS_REFERENCED;
    }
    private static final int DNS_ERROR_ZONESCOPE_IS_REFERENCED = (int)9989L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_ZONESCOPE_IS_REFERENCED 9989
     * }
     */
    public static int DNS_ERROR_ZONESCOPE_IS_REFERENCED() {
        return DNS_ERROR_ZONESCOPE_IS_REFERENCED;
    }
    private static final int DNS_ERROR_POLICY_INVALID_CRITERIA_CLIENT_SUBNET = (int)9990L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_POLICY_INVALID_CRITERIA_CLIENT_SUBNET 9990
     * }
     */
    public static int DNS_ERROR_POLICY_INVALID_CRITERIA_CLIENT_SUBNET() {
        return DNS_ERROR_POLICY_INVALID_CRITERIA_CLIENT_SUBNET;
    }
    private static final int DNS_ERROR_POLICY_INVALID_CRITERIA_TRANSPORT_PROTOCOL = (int)9991L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_POLICY_INVALID_CRITERIA_TRANSPORT_PROTOCOL 9991
     * }
     */
    public static int DNS_ERROR_POLICY_INVALID_CRITERIA_TRANSPORT_PROTOCOL() {
        return DNS_ERROR_POLICY_INVALID_CRITERIA_TRANSPORT_PROTOCOL;
    }
    private static final int DNS_ERROR_POLICY_INVALID_CRITERIA_NETWORK_PROTOCOL = (int)9992L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_POLICY_INVALID_CRITERIA_NETWORK_PROTOCOL 9992
     * }
     */
    public static int DNS_ERROR_POLICY_INVALID_CRITERIA_NETWORK_PROTOCOL() {
        return DNS_ERROR_POLICY_INVALID_CRITERIA_NETWORK_PROTOCOL;
    }
    private static final int DNS_ERROR_POLICY_INVALID_CRITERIA_INTERFACE = (int)9993L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_POLICY_INVALID_CRITERIA_INTERFACE 9993
     * }
     */
    public static int DNS_ERROR_POLICY_INVALID_CRITERIA_INTERFACE() {
        return DNS_ERROR_POLICY_INVALID_CRITERIA_INTERFACE;
    }
    private static final int DNS_ERROR_POLICY_INVALID_CRITERIA_FQDN = (int)9994L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_POLICY_INVALID_CRITERIA_FQDN 9994
     * }
     */
    public static int DNS_ERROR_POLICY_INVALID_CRITERIA_FQDN() {
        return DNS_ERROR_POLICY_INVALID_CRITERIA_FQDN;
    }
    private static final int DNS_ERROR_POLICY_INVALID_CRITERIA_QUERY_TYPE = (int)9995L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_POLICY_INVALID_CRITERIA_QUERY_TYPE 9995
     * }
     */
    public static int DNS_ERROR_POLICY_INVALID_CRITERIA_QUERY_TYPE() {
        return DNS_ERROR_POLICY_INVALID_CRITERIA_QUERY_TYPE;
    }
    private static final int DNS_ERROR_POLICY_INVALID_CRITERIA_TIME_OF_DAY = (int)9996L;
    /**
     * {@snippet lang=c :
     * #define DNS_ERROR_POLICY_INVALID_CRITERIA_TIME_OF_DAY 9996
     * }
     */
    public static int DNS_ERROR_POLICY_INVALID_CRITERIA_TIME_OF_DAY() {
        return DNS_ERROR_POLICY_INVALID_CRITERIA_TIME_OF_DAY;
    }
    private static final int WSAEINTR = (int)10004L;
    /**
     * {@snippet lang=c :
     * #define WSAEINTR 10004
     * }
     */
    public static int WSAEINTR() {
        return WSAEINTR;
    }
    private static final int WSAEBADF = (int)10009L;
    /**
     * {@snippet lang=c :
     * #define WSAEBADF 10009
     * }
     */
    public static int WSAEBADF() {
        return WSAEBADF;
    }
    private static final int WSAEACCES = (int)10013L;
    /**
     * {@snippet lang=c :
     * #define WSAEACCES 10013
     * }
     */
    public static int WSAEACCES() {
        return WSAEACCES;
    }
    private static final int WSAEFAULT = (int)10014L;
    /**
     * {@snippet lang=c :
     * #define WSAEFAULT 10014
     * }
     */
    public static int WSAEFAULT() {
        return WSAEFAULT;
    }
    private static final int WSAEINVAL = (int)10022L;
    /**
     * {@snippet lang=c :
     * #define WSAEINVAL 10022
     * }
     */
    public static int WSAEINVAL() {
        return WSAEINVAL;
    }
    private static final int WSAEMFILE = (int)10024L;
    /**
     * {@snippet lang=c :
     * #define WSAEMFILE 10024
     * }
     */
    public static int WSAEMFILE() {
        return WSAEMFILE;
    }
    private static final int WSAEWOULDBLOCK = (int)10035L;
    /**
     * {@snippet lang=c :
     * #define WSAEWOULDBLOCK 10035
     * }
     */
    public static int WSAEWOULDBLOCK() {
        return WSAEWOULDBLOCK;
    }
    private static final int WSAEINPROGRESS = (int)10036L;
    /**
     * {@snippet lang=c :
     * #define WSAEINPROGRESS 10036
     * }
     */
    public static int WSAEINPROGRESS() {
        return WSAEINPROGRESS;
    }
    private static final int WSAEALREADY = (int)10037L;
    /**
     * {@snippet lang=c :
     * #define WSAEALREADY 10037
     * }
     */
    public static int WSAEALREADY() {
        return WSAEALREADY;
    }
    private static final int WSAENOTSOCK = (int)10038L;
    /**
     * {@snippet lang=c :
     * #define WSAENOTSOCK 10038
     * }
     */
    public static int WSAENOTSOCK() {
        return WSAENOTSOCK;
    }
    private static final int WSAEDESTADDRREQ = (int)10039L;
    /**
     * {@snippet lang=c :
     * #define WSAEDESTADDRREQ 10039
     * }
     */
    public static int WSAEDESTADDRREQ() {
        return WSAEDESTADDRREQ;
    }
    private static final int WSAEMSGSIZE = (int)10040L;
    /**
     * {@snippet lang=c :
     * #define WSAEMSGSIZE 10040
     * }
     */
    public static int WSAEMSGSIZE() {
        return WSAEMSGSIZE;
    }
    private static final int WSAEPROTOTYPE = (int)10041L;
    /**
     * {@snippet lang=c :
     * #define WSAEPROTOTYPE 10041
     * }
     */
    public static int WSAEPROTOTYPE() {
        return WSAEPROTOTYPE;
    }
    private static final int WSAENOPROTOOPT = (int)10042L;
    /**
     * {@snippet lang=c :
     * #define WSAENOPROTOOPT 10042
     * }
     */
    public static int WSAENOPROTOOPT() {
        return WSAENOPROTOOPT;
    }
    private static final int WSAEPROTONOSUPPORT = (int)10043L;
    /**
     * {@snippet lang=c :
     * #define WSAEPROTONOSUPPORT 10043
     * }
     */
    public static int WSAEPROTONOSUPPORT() {
        return WSAEPROTONOSUPPORT;
    }
    private static final int WSAESOCKTNOSUPPORT = (int)10044L;
    /**
     * {@snippet lang=c :
     * #define WSAESOCKTNOSUPPORT 10044
     * }
     */
    public static int WSAESOCKTNOSUPPORT() {
        return WSAESOCKTNOSUPPORT;
    }
    private static final int WSAEOPNOTSUPP = (int)10045L;
    /**
     * {@snippet lang=c :
     * #define WSAEOPNOTSUPP 10045
     * }
     */
    public static int WSAEOPNOTSUPP() {
        return WSAEOPNOTSUPP;
    }
    private static final int WSAEPFNOSUPPORT = (int)10046L;
    /**
     * {@snippet lang=c :
     * #define WSAEPFNOSUPPORT 10046
     * }
     */
    public static int WSAEPFNOSUPPORT() {
        return WSAEPFNOSUPPORT;
    }
    private static final int WSAEAFNOSUPPORT = (int)10047L;
    /**
     * {@snippet lang=c :
     * #define WSAEAFNOSUPPORT 10047
     * }
     */
    public static int WSAEAFNOSUPPORT() {
        return WSAEAFNOSUPPORT;
    }
    private static final int WSAEADDRINUSE = (int)10048L;
    /**
     * {@snippet lang=c :
     * #define WSAEADDRINUSE 10048
     * }
     */
    public static int WSAEADDRINUSE() {
        return WSAEADDRINUSE;
    }
    private static final int WSAEADDRNOTAVAIL = (int)10049L;
    /**
     * {@snippet lang=c :
     * #define WSAEADDRNOTAVAIL 10049
     * }
     */
    public static int WSAEADDRNOTAVAIL() {
        return WSAEADDRNOTAVAIL;
    }
    private static final int WSAENETDOWN = (int)10050L;
    /**
     * {@snippet lang=c :
     * #define WSAENETDOWN 10050
     * }
     */
    public static int WSAENETDOWN() {
        return WSAENETDOWN;
    }
    private static final int WSAENETUNREACH = (int)10051L;
    /**
     * {@snippet lang=c :
     * #define WSAENETUNREACH 10051
     * }
     */
    public static int WSAENETUNREACH() {
        return WSAENETUNREACH;
    }
    private static final int WSAENETRESET = (int)10052L;
    /**
     * {@snippet lang=c :
     * #define WSAENETRESET 10052
     * }
     */
    public static int WSAENETRESET() {
        return WSAENETRESET;
    }
    private static final int WSAECONNABORTED = (int)10053L;
    /**
     * {@snippet lang=c :
     * #define WSAECONNABORTED 10053
     * }
     */
    public static int WSAECONNABORTED() {
        return WSAECONNABORTED;
    }
    private static final int WSAECONNRESET = (int)10054L;
    /**
     * {@snippet lang=c :
     * #define WSAECONNRESET 10054
     * }
     */
    public static int WSAECONNRESET() {
        return WSAECONNRESET;
    }
    private static final int WSAENOBUFS = (int)10055L;
    /**
     * {@snippet lang=c :
     * #define WSAENOBUFS 10055
     * }
     */
    public static int WSAENOBUFS() {
        return WSAENOBUFS;
    }
    private static final int WSAEISCONN = (int)10056L;
    /**
     * {@snippet lang=c :
     * #define WSAEISCONN 10056
     * }
     */
    public static int WSAEISCONN() {
        return WSAEISCONN;
    }
    private static final int WSAENOTCONN = (int)10057L;
    /**
     * {@snippet lang=c :
     * #define WSAENOTCONN 10057
     * }
     */
    public static int WSAENOTCONN() {
        return WSAENOTCONN;
    }
    private static final int WSAESHUTDOWN = (int)10058L;
    /**
     * {@snippet lang=c :
     * #define WSAESHUTDOWN 10058
     * }
     */
    public static int WSAESHUTDOWN() {
        return WSAESHUTDOWN;
    }
    private static final int WSAETOOMANYREFS = (int)10059L;
    /**
     * {@snippet lang=c :
     * #define WSAETOOMANYREFS 10059
     * }
     */
    public static int WSAETOOMANYREFS() {
        return WSAETOOMANYREFS;
    }
    private static final int WSAETIMEDOUT = (int)10060L;
    /**
     * {@snippet lang=c :
     * #define WSAETIMEDOUT 10060
     * }
     */
    public static int WSAETIMEDOUT() {
        return WSAETIMEDOUT;
    }
    private static final int WSAECONNREFUSED = (int)10061L;
    /**
     * {@snippet lang=c :
     * #define WSAECONNREFUSED 10061
     * }
     */
    public static int WSAECONNREFUSED() {
        return WSAECONNREFUSED;
    }
    private static final int WSAELOOP = (int)10062L;
    /**
     * {@snippet lang=c :
     * #define WSAELOOP 10062
     * }
     */
    public static int WSAELOOP() {
        return WSAELOOP;
    }
    private static final int WSAENAMETOOLONG = (int)10063L;
    /**
     * {@snippet lang=c :
     * #define WSAENAMETOOLONG 10063
     * }
     */
    public static int WSAENAMETOOLONG() {
        return WSAENAMETOOLONG;
    }
    private static final int WSAEHOSTDOWN = (int)10064L;
    /**
     * {@snippet lang=c :
     * #define WSAEHOSTDOWN 10064
     * }
     */
    public static int WSAEHOSTDOWN() {
        return WSAEHOSTDOWN;
    }
    private static final int WSAEHOSTUNREACH = (int)10065L;
    /**
     * {@snippet lang=c :
     * #define WSAEHOSTUNREACH 10065
     * }
     */
    public static int WSAEHOSTUNREACH() {
        return WSAEHOSTUNREACH;
    }
    private static final int WSAENOTEMPTY = (int)10066L;
    /**
     * {@snippet lang=c :
     * #define WSAENOTEMPTY 10066
     * }
     */
    public static int WSAENOTEMPTY() {
        return WSAENOTEMPTY;
    }
    private static final int WSAEPROCLIM = (int)10067L;
    /**
     * {@snippet lang=c :
     * #define WSAEPROCLIM 10067
     * }
     */
    public static int WSAEPROCLIM() {
        return WSAEPROCLIM;
    }
    private static final int WSAEUSERS = (int)10068L;
    /**
     * {@snippet lang=c :
     * #define WSAEUSERS 10068
     * }
     */
    public static int WSAEUSERS() {
        return WSAEUSERS;
    }
    private static final int WSAEDQUOT = (int)10069L;
    /**
     * {@snippet lang=c :
     * #define WSAEDQUOT 10069
     * }
     */
    public static int WSAEDQUOT() {
        return WSAEDQUOT;
    }
    private static final int WSAESTALE = (int)10070L;
    /**
     * {@snippet lang=c :
     * #define WSAESTALE 10070
     * }
     */
    public static int WSAESTALE() {
        return WSAESTALE;
    }
    private static final int WSAEREMOTE = (int)10071L;
    /**
     * {@snippet lang=c :
     * #define WSAEREMOTE 10071
     * }
     */
    public static int WSAEREMOTE() {
        return WSAEREMOTE;
    }
    private static final int WSASYSNOTREADY = (int)10091L;
    /**
     * {@snippet lang=c :
     * #define WSASYSNOTREADY 10091
     * }
     */
    public static int WSASYSNOTREADY() {
        return WSASYSNOTREADY;
    }
    private static final int WSAVERNOTSUPPORTED = (int)10092L;
    /**
     * {@snippet lang=c :
     * #define WSAVERNOTSUPPORTED 10092
     * }
     */
    public static int WSAVERNOTSUPPORTED() {
        return WSAVERNOTSUPPORTED;
    }
    private static final int WSANOTINITIALISED = (int)10093L;
    /**
     * {@snippet lang=c :
     * #define WSANOTINITIALISED 10093
     * }
     */
    public static int WSANOTINITIALISED() {
        return WSANOTINITIALISED;
    }
    private static final int WSAEDISCON = (int)10101L;
    /**
     * {@snippet lang=c :
     * #define WSAEDISCON 10101
     * }
     */
    public static int WSAEDISCON() {
        return WSAEDISCON;
    }
    private static final int WSAENOMORE = (int)10102L;
    /**
     * {@snippet lang=c :
     * #define WSAENOMORE 10102
     * }
     */
    public static int WSAENOMORE() {
        return WSAENOMORE;
    }
    private static final int WSAECANCELLED = (int)10103L;
    /**
     * {@snippet lang=c :
     * #define WSAECANCELLED 10103
     * }
     */
    public static int WSAECANCELLED() {
        return WSAECANCELLED;
    }
    private static final int WSAEINVALIDPROCTABLE = (int)10104L;
    /**
     * {@snippet lang=c :
     * #define WSAEINVALIDPROCTABLE 10104
     * }
     */
    public static int WSAEINVALIDPROCTABLE() {
        return WSAEINVALIDPROCTABLE;
    }
    private static final int WSAEINVALIDPROVIDER = (int)10105L;
    /**
     * {@snippet lang=c :
     * #define WSAEINVALIDPROVIDER 10105
     * }
     */
    public static int WSAEINVALIDPROVIDER() {
        return WSAEINVALIDPROVIDER;
    }
    private static final int WSAEPROVIDERFAILEDINIT = (int)10106L;
    /**
     * {@snippet lang=c :
     * #define WSAEPROVIDERFAILEDINIT 10106
     * }
     */
    public static int WSAEPROVIDERFAILEDINIT() {
        return WSAEPROVIDERFAILEDINIT;
    }
    private static final int WSASYSCALLFAILURE = (int)10107L;
    /**
     * {@snippet lang=c :
     * #define WSASYSCALLFAILURE 10107
     * }
     */
    public static int WSASYSCALLFAILURE() {
        return WSASYSCALLFAILURE;
    }
    private static final int WSASERVICE_NOT_FOUND = (int)10108L;
    /**
     * {@snippet lang=c :
     * #define WSASERVICE_NOT_FOUND 10108
     * }
     */
    public static int WSASERVICE_NOT_FOUND() {
        return WSASERVICE_NOT_FOUND;
    }
    private static final int WSATYPE_NOT_FOUND = (int)10109L;
    /**
     * {@snippet lang=c :
     * #define WSATYPE_NOT_FOUND 10109
     * }
     */
    public static int WSATYPE_NOT_FOUND() {
        return WSATYPE_NOT_FOUND;
    }
    private static final int WSA_E_NO_MORE = (int)10110L;
    /**
     * {@snippet lang=c :
     * #define WSA_E_NO_MORE 10110
     * }
     */
    public static int WSA_E_NO_MORE() {
        return WSA_E_NO_MORE;
    }
    private static final int WSA_E_CANCELLED = (int)10111L;
    /**
     * {@snippet lang=c :
     * #define WSA_E_CANCELLED 10111
     * }
     */
    public static int WSA_E_CANCELLED() {
        return WSA_E_CANCELLED;
    }
    private static final int WSAEREFUSED = (int)10112L;
    /**
     * {@snippet lang=c :
     * #define WSAEREFUSED 10112
     * }
     */
    public static int WSAEREFUSED() {
        return WSAEREFUSED;
    }
    private static final int WSAHOST_NOT_FOUND = (int)11001L;
    /**
     * {@snippet lang=c :
     * #define WSAHOST_NOT_FOUND 11001
     * }
     */
    public static int WSAHOST_NOT_FOUND() {
        return WSAHOST_NOT_FOUND;
    }
    private static final int WSATRY_AGAIN = (int)11002L;
    /**
     * {@snippet lang=c :
     * #define WSATRY_AGAIN 11002
     * }
     */
    public static int WSATRY_AGAIN() {
        return WSATRY_AGAIN;
    }
    private static final int WSANO_RECOVERY = (int)11003L;
    /**
     * {@snippet lang=c :
     * #define WSANO_RECOVERY 11003
     * }
     */
    public static int WSANO_RECOVERY() {
        return WSANO_RECOVERY;
    }
    private static final int WSANO_DATA = (int)11004L;
    /**
     * {@snippet lang=c :
     * #define WSANO_DATA 11004
     * }
     */
    public static int WSANO_DATA() {
        return WSANO_DATA;
    }
    private static final int WSA_QOS_RECEIVERS = (int)11005L;
    /**
     * {@snippet lang=c :
     * #define WSA_QOS_RECEIVERS 11005
     * }
     */
    public static int WSA_QOS_RECEIVERS() {
        return WSA_QOS_RECEIVERS;
    }
    private static final int WSA_QOS_SENDERS = (int)11006L;
    /**
     * {@snippet lang=c :
     * #define WSA_QOS_SENDERS 11006
     * }
     */
    public static int WSA_QOS_SENDERS() {
        return WSA_QOS_SENDERS;
    }
    private static final int WSA_QOS_NO_SENDERS = (int)11007L;
    /**
     * {@snippet lang=c :
     * #define WSA_QOS_NO_SENDERS 11007
     * }
     */
    public static int WSA_QOS_NO_SENDERS() {
        return WSA_QOS_NO_SENDERS;
    }
    private static final int WSA_QOS_NO_RECEIVERS = (int)11008L;
    /**
     * {@snippet lang=c :
     * #define WSA_QOS_NO_RECEIVERS 11008
     * }
     */
    public static int WSA_QOS_NO_RECEIVERS() {
        return WSA_QOS_NO_RECEIVERS;
    }
    private static final int WSA_QOS_REQUEST_CONFIRMED = (int)11009L;
    /**
     * {@snippet lang=c :
     * #define WSA_QOS_REQUEST_CONFIRMED 11009
     * }
     */
    public static int WSA_QOS_REQUEST_CONFIRMED() {
        return WSA_QOS_REQUEST_CONFIRMED;
    }
    private static final int WSA_QOS_ADMISSION_FAILURE = (int)11010L;
    /**
     * {@snippet lang=c :
     * #define WSA_QOS_ADMISSION_FAILURE 11010
     * }
     */
    public static int WSA_QOS_ADMISSION_FAILURE() {
        return WSA_QOS_ADMISSION_FAILURE;
    }
    private static final int WSA_QOS_POLICY_FAILURE = (int)11011L;
    /**
     * {@snippet lang=c :
     * #define WSA_QOS_POLICY_FAILURE 11011
     * }
     */
    public static int WSA_QOS_POLICY_FAILURE() {
        return WSA_QOS_POLICY_FAILURE;
    }
    private static final int WSA_QOS_BAD_STYLE = (int)11012L;
    /**
     * {@snippet lang=c :
     * #define WSA_QOS_BAD_STYLE 11012
     * }
     */
    public static int WSA_QOS_BAD_STYLE() {
        return WSA_QOS_BAD_STYLE;
    }
    private static final int WSA_QOS_BAD_OBJECT = (int)11013L;
    /**
     * {@snippet lang=c :
     * #define WSA_QOS_BAD_OBJECT 11013
     * }
     */
    public static int WSA_QOS_BAD_OBJECT() {
        return WSA_QOS_BAD_OBJECT;
    }
    private static final int WSA_QOS_TRAFFIC_CTRL_ERROR = (int)11014L;
    /**
     * {@snippet lang=c :
     * #define WSA_QOS_TRAFFIC_CTRL_ERROR 11014
     * }
     */
    public static int WSA_QOS_TRAFFIC_CTRL_ERROR() {
        return WSA_QOS_TRAFFIC_CTRL_ERROR;
    }
    private static final int WSA_QOS_GENERIC_ERROR = (int)11015L;
    /**
     * {@snippet lang=c :
     * #define WSA_QOS_GENERIC_ERROR 11015
     * }
     */
    public static int WSA_QOS_GENERIC_ERROR() {
        return WSA_QOS_GENERIC_ERROR;
    }
    private static final int WSA_QOS_ESERVICETYPE = (int)11016L;
    /**
     * {@snippet lang=c :
     * #define WSA_QOS_ESERVICETYPE 11016
     * }
     */
    public static int WSA_QOS_ESERVICETYPE() {
        return WSA_QOS_ESERVICETYPE;
    }
    private static final int WSA_QOS_EFLOWSPEC = (int)11017L;
    /**
     * {@snippet lang=c :
     * #define WSA_QOS_EFLOWSPEC 11017
     * }
     */
    public static int WSA_QOS_EFLOWSPEC() {
        return WSA_QOS_EFLOWSPEC;
    }
    private static final int WSA_QOS_EPROVSPECBUF = (int)11018L;
    /**
     * {@snippet lang=c :
     * #define WSA_QOS_EPROVSPECBUF 11018
     * }
     */
    public static int WSA_QOS_EPROVSPECBUF() {
        return WSA_QOS_EPROVSPECBUF;
    }
    private static final int WSA_QOS_EFILTERSTYLE = (int)11019L;
    /**
     * {@snippet lang=c :
     * #define WSA_QOS_EFILTERSTYLE 11019
     * }
     */
    public static int WSA_QOS_EFILTERSTYLE() {
        return WSA_QOS_EFILTERSTYLE;
    }
    private static final int WSA_QOS_EFILTERTYPE = (int)11020L;
    /**
     * {@snippet lang=c :
     * #define WSA_QOS_EFILTERTYPE 11020
     * }
     */
    public static int WSA_QOS_EFILTERTYPE() {
        return WSA_QOS_EFILTERTYPE;
    }
    private static final int WSA_QOS_EFILTERCOUNT = (int)11021L;
    /**
     * {@snippet lang=c :
     * #define WSA_QOS_EFILTERCOUNT 11021
     * }
     */
    public static int WSA_QOS_EFILTERCOUNT() {
        return WSA_QOS_EFILTERCOUNT;
    }
    private static final int WSA_QOS_EOBJLENGTH = (int)11022L;
    /**
     * {@snippet lang=c :
     * #define WSA_QOS_EOBJLENGTH 11022
     * }
     */
    public static int WSA_QOS_EOBJLENGTH() {
        return WSA_QOS_EOBJLENGTH;
    }
    private static final int WSA_QOS_EFLOWCOUNT = (int)11023L;
    /**
     * {@snippet lang=c :
     * #define WSA_QOS_EFLOWCOUNT 11023
     * }
     */
    public static int WSA_QOS_EFLOWCOUNT() {
        return WSA_QOS_EFLOWCOUNT;
    }
    private static final int WSA_QOS_EUNKOWNPSOBJ = (int)11024L;
    /**
     * {@snippet lang=c :
     * #define WSA_QOS_EUNKOWNPSOBJ 11024
     * }
     */
    public static int WSA_QOS_EUNKOWNPSOBJ() {
        return WSA_QOS_EUNKOWNPSOBJ;
    }
    private static final int WSA_QOS_EPOLICYOBJ = (int)11025L;
    /**
     * {@snippet lang=c :
     * #define WSA_QOS_EPOLICYOBJ 11025
     * }
     */
    public static int WSA_QOS_EPOLICYOBJ() {
        return WSA_QOS_EPOLICYOBJ;
    }
    private static final int WSA_QOS_EFLOWDESC = (int)11026L;
    /**
     * {@snippet lang=c :
     * #define WSA_QOS_EFLOWDESC 11026
     * }
     */
    public static int WSA_QOS_EFLOWDESC() {
        return WSA_QOS_EFLOWDESC;
    }
    private static final int WSA_QOS_EPSFLOWSPEC = (int)11027L;
    /**
     * {@snippet lang=c :
     * #define WSA_QOS_EPSFLOWSPEC 11027
     * }
     */
    public static int WSA_QOS_EPSFLOWSPEC() {
        return WSA_QOS_EPSFLOWSPEC;
    }
    private static final int WSA_QOS_EPSFILTERSPEC = (int)11028L;
    /**
     * {@snippet lang=c :
     * #define WSA_QOS_EPSFILTERSPEC 11028
     * }
     */
    public static int WSA_QOS_EPSFILTERSPEC() {
        return WSA_QOS_EPSFILTERSPEC;
    }
    private static final int WSA_QOS_ESDMODEOBJ = (int)11029L;
    /**
     * {@snippet lang=c :
     * #define WSA_QOS_ESDMODEOBJ 11029
     * }
     */
    public static int WSA_QOS_ESDMODEOBJ() {
        return WSA_QOS_ESDMODEOBJ;
    }
    private static final int WSA_QOS_ESHAPERATEOBJ = (int)11030L;
    /**
     * {@snippet lang=c :
     * #define WSA_QOS_ESHAPERATEOBJ 11030
     * }
     */
    public static int WSA_QOS_ESHAPERATEOBJ() {
        return WSA_QOS_ESHAPERATEOBJ;
    }
    private static final int WSA_QOS_RESERVED_PETYPE = (int)11031L;
    /**
     * {@snippet lang=c :
     * #define WSA_QOS_RESERVED_PETYPE 11031
     * }
     */
    public static int WSA_QOS_RESERVED_PETYPE() {
        return WSA_QOS_RESERVED_PETYPE;
    }
    private static final int WSA_SECURE_HOST_NOT_FOUND = (int)11032L;
    /**
     * {@snippet lang=c :
     * #define WSA_SECURE_HOST_NOT_FOUND 11032
     * }
     */
    public static int WSA_SECURE_HOST_NOT_FOUND() {
        return WSA_SECURE_HOST_NOT_FOUND;
    }
    private static final int WSA_IPSEC_NAME_POLICY_ERROR = (int)11033L;
    /**
     * {@snippet lang=c :
     * #define WSA_IPSEC_NAME_POLICY_ERROR 11033
     * }
     */
    public static int WSA_IPSEC_NAME_POLICY_ERROR() {
        return WSA_IPSEC_NAME_POLICY_ERROR;
    }
    private static final int ERROR_IPSEC_QM_POLICY_EXISTS = (int)13000L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_QM_POLICY_EXISTS 13000
     * }
     */
    public static int ERROR_IPSEC_QM_POLICY_EXISTS() {
        return ERROR_IPSEC_QM_POLICY_EXISTS;
    }
    private static final int ERROR_IPSEC_QM_POLICY_NOT_FOUND = (int)13001L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_QM_POLICY_NOT_FOUND 13001
     * }
     */
    public static int ERROR_IPSEC_QM_POLICY_NOT_FOUND() {
        return ERROR_IPSEC_QM_POLICY_NOT_FOUND;
    }
    private static final int ERROR_IPSEC_QM_POLICY_IN_USE = (int)13002L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_QM_POLICY_IN_USE 13002
     * }
     */
    public static int ERROR_IPSEC_QM_POLICY_IN_USE() {
        return ERROR_IPSEC_QM_POLICY_IN_USE;
    }
    private static final int ERROR_IPSEC_MM_POLICY_EXISTS = (int)13003L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_MM_POLICY_EXISTS 13003
     * }
     */
    public static int ERROR_IPSEC_MM_POLICY_EXISTS() {
        return ERROR_IPSEC_MM_POLICY_EXISTS;
    }
    private static final int ERROR_IPSEC_MM_POLICY_NOT_FOUND = (int)13004L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_MM_POLICY_NOT_FOUND 13004
     * }
     */
    public static int ERROR_IPSEC_MM_POLICY_NOT_FOUND() {
        return ERROR_IPSEC_MM_POLICY_NOT_FOUND;
    }
    private static final int ERROR_IPSEC_MM_POLICY_IN_USE = (int)13005L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_MM_POLICY_IN_USE 13005
     * }
     */
    public static int ERROR_IPSEC_MM_POLICY_IN_USE() {
        return ERROR_IPSEC_MM_POLICY_IN_USE;
    }
    private static final int ERROR_IPSEC_MM_FILTER_EXISTS = (int)13006L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_MM_FILTER_EXISTS 13006
     * }
     */
    public static int ERROR_IPSEC_MM_FILTER_EXISTS() {
        return ERROR_IPSEC_MM_FILTER_EXISTS;
    }
    private static final int ERROR_IPSEC_MM_FILTER_NOT_FOUND = (int)13007L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_MM_FILTER_NOT_FOUND 13007
     * }
     */
    public static int ERROR_IPSEC_MM_FILTER_NOT_FOUND() {
        return ERROR_IPSEC_MM_FILTER_NOT_FOUND;
    }
    private static final int ERROR_IPSEC_TRANSPORT_FILTER_EXISTS = (int)13008L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_TRANSPORT_FILTER_EXISTS 13008
     * }
     */
    public static int ERROR_IPSEC_TRANSPORT_FILTER_EXISTS() {
        return ERROR_IPSEC_TRANSPORT_FILTER_EXISTS;
    }
    private static final int ERROR_IPSEC_TRANSPORT_FILTER_NOT_FOUND = (int)13009L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_TRANSPORT_FILTER_NOT_FOUND 13009
     * }
     */
    public static int ERROR_IPSEC_TRANSPORT_FILTER_NOT_FOUND() {
        return ERROR_IPSEC_TRANSPORT_FILTER_NOT_FOUND;
    }
    private static final int ERROR_IPSEC_MM_AUTH_EXISTS = (int)13010L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_MM_AUTH_EXISTS 13010
     * }
     */
    public static int ERROR_IPSEC_MM_AUTH_EXISTS() {
        return ERROR_IPSEC_MM_AUTH_EXISTS;
    }
    private static final int ERROR_IPSEC_MM_AUTH_NOT_FOUND = (int)13011L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_MM_AUTH_NOT_FOUND 13011
     * }
     */
    public static int ERROR_IPSEC_MM_AUTH_NOT_FOUND() {
        return ERROR_IPSEC_MM_AUTH_NOT_FOUND;
    }
    private static final int ERROR_IPSEC_MM_AUTH_IN_USE = (int)13012L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_MM_AUTH_IN_USE 13012
     * }
     */
    public static int ERROR_IPSEC_MM_AUTH_IN_USE() {
        return ERROR_IPSEC_MM_AUTH_IN_USE;
    }
    private static final int ERROR_IPSEC_DEFAULT_MM_POLICY_NOT_FOUND = (int)13013L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_DEFAULT_MM_POLICY_NOT_FOUND 13013
     * }
     */
    public static int ERROR_IPSEC_DEFAULT_MM_POLICY_NOT_FOUND() {
        return ERROR_IPSEC_DEFAULT_MM_POLICY_NOT_FOUND;
    }
    private static final int ERROR_IPSEC_DEFAULT_MM_AUTH_NOT_FOUND = (int)13014L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_DEFAULT_MM_AUTH_NOT_FOUND 13014
     * }
     */
    public static int ERROR_IPSEC_DEFAULT_MM_AUTH_NOT_FOUND() {
        return ERROR_IPSEC_DEFAULT_MM_AUTH_NOT_FOUND;
    }
    private static final int ERROR_IPSEC_DEFAULT_QM_POLICY_NOT_FOUND = (int)13015L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_DEFAULT_QM_POLICY_NOT_FOUND 13015
     * }
     */
    public static int ERROR_IPSEC_DEFAULT_QM_POLICY_NOT_FOUND() {
        return ERROR_IPSEC_DEFAULT_QM_POLICY_NOT_FOUND;
    }
    private static final int ERROR_IPSEC_TUNNEL_FILTER_EXISTS = (int)13016L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_TUNNEL_FILTER_EXISTS 13016
     * }
     */
    public static int ERROR_IPSEC_TUNNEL_FILTER_EXISTS() {
        return ERROR_IPSEC_TUNNEL_FILTER_EXISTS;
    }
    private static final int ERROR_IPSEC_TUNNEL_FILTER_NOT_FOUND = (int)13017L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_TUNNEL_FILTER_NOT_FOUND 13017
     * }
     */
    public static int ERROR_IPSEC_TUNNEL_FILTER_NOT_FOUND() {
        return ERROR_IPSEC_TUNNEL_FILTER_NOT_FOUND;
    }
    private static final int ERROR_IPSEC_MM_FILTER_PENDING_DELETION = (int)13018L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_MM_FILTER_PENDING_DELETION 13018
     * }
     */
    public static int ERROR_IPSEC_MM_FILTER_PENDING_DELETION() {
        return ERROR_IPSEC_MM_FILTER_PENDING_DELETION;
    }
    private static final int ERROR_IPSEC_TRANSPORT_FILTER_PENDING_DELETION = (int)13019L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_TRANSPORT_FILTER_PENDING_DELETION 13019
     * }
     */
    public static int ERROR_IPSEC_TRANSPORT_FILTER_PENDING_DELETION() {
        return ERROR_IPSEC_TRANSPORT_FILTER_PENDING_DELETION;
    }
    private static final int ERROR_IPSEC_TUNNEL_FILTER_PENDING_DELETION = (int)13020L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_TUNNEL_FILTER_PENDING_DELETION 13020
     * }
     */
    public static int ERROR_IPSEC_TUNNEL_FILTER_PENDING_DELETION() {
        return ERROR_IPSEC_TUNNEL_FILTER_PENDING_DELETION;
    }
    private static final int ERROR_IPSEC_MM_POLICY_PENDING_DELETION = (int)13021L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_MM_POLICY_PENDING_DELETION 13021
     * }
     */
    public static int ERROR_IPSEC_MM_POLICY_PENDING_DELETION() {
        return ERROR_IPSEC_MM_POLICY_PENDING_DELETION;
    }
    private static final int ERROR_IPSEC_MM_AUTH_PENDING_DELETION = (int)13022L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_MM_AUTH_PENDING_DELETION 13022
     * }
     */
    public static int ERROR_IPSEC_MM_AUTH_PENDING_DELETION() {
        return ERROR_IPSEC_MM_AUTH_PENDING_DELETION;
    }
    private static final int ERROR_IPSEC_QM_POLICY_PENDING_DELETION = (int)13023L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_QM_POLICY_PENDING_DELETION 13023
     * }
     */
    public static int ERROR_IPSEC_QM_POLICY_PENDING_DELETION() {
        return ERROR_IPSEC_QM_POLICY_PENDING_DELETION;
    }
    private static final int WARNING_IPSEC_MM_POLICY_PRUNED = (int)13024L;
    /**
     * {@snippet lang=c :
     * #define WARNING_IPSEC_MM_POLICY_PRUNED 13024
     * }
     */
    public static int WARNING_IPSEC_MM_POLICY_PRUNED() {
        return WARNING_IPSEC_MM_POLICY_PRUNED;
    }
    private static final int WARNING_IPSEC_QM_POLICY_PRUNED = (int)13025L;
    /**
     * {@snippet lang=c :
     * #define WARNING_IPSEC_QM_POLICY_PRUNED 13025
     * }
     */
    public static int WARNING_IPSEC_QM_POLICY_PRUNED() {
        return WARNING_IPSEC_QM_POLICY_PRUNED;
    }
    private static final int ERROR_IPSEC_IKE_NEG_STATUS_BEGIN = (int)13800L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_NEG_STATUS_BEGIN 13800
     * }
     */
    public static int ERROR_IPSEC_IKE_NEG_STATUS_BEGIN() {
        return ERROR_IPSEC_IKE_NEG_STATUS_BEGIN;
    }
    private static final int ERROR_IPSEC_IKE_AUTH_FAIL = (int)13801L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_AUTH_FAIL 13801
     * }
     */
    public static int ERROR_IPSEC_IKE_AUTH_FAIL() {
        return ERROR_IPSEC_IKE_AUTH_FAIL;
    }
    private static final int ERROR_IPSEC_IKE_ATTRIB_FAIL = (int)13802L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_ATTRIB_FAIL 13802
     * }
     */
    public static int ERROR_IPSEC_IKE_ATTRIB_FAIL() {
        return ERROR_IPSEC_IKE_ATTRIB_FAIL;
    }
    private static final int ERROR_IPSEC_IKE_NEGOTIATION_PENDING = (int)13803L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_NEGOTIATION_PENDING 13803
     * }
     */
    public static int ERROR_IPSEC_IKE_NEGOTIATION_PENDING() {
        return ERROR_IPSEC_IKE_NEGOTIATION_PENDING;
    }
    private static final int ERROR_IPSEC_IKE_GENERAL_PROCESSING_ERROR = (int)13804L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_GENERAL_PROCESSING_ERROR 13804
     * }
     */
    public static int ERROR_IPSEC_IKE_GENERAL_PROCESSING_ERROR() {
        return ERROR_IPSEC_IKE_GENERAL_PROCESSING_ERROR;
    }
    private static final int ERROR_IPSEC_IKE_TIMED_OUT = (int)13805L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_TIMED_OUT 13805
     * }
     */
    public static int ERROR_IPSEC_IKE_TIMED_OUT() {
        return ERROR_IPSEC_IKE_TIMED_OUT;
    }
    private static final int ERROR_IPSEC_IKE_NO_CERT = (int)13806L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_NO_CERT 13806
     * }
     */
    public static int ERROR_IPSEC_IKE_NO_CERT() {
        return ERROR_IPSEC_IKE_NO_CERT;
    }
    private static final int ERROR_IPSEC_IKE_SA_DELETED = (int)13807L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_SA_DELETED 13807
     * }
     */
    public static int ERROR_IPSEC_IKE_SA_DELETED() {
        return ERROR_IPSEC_IKE_SA_DELETED;
    }
    private static final int ERROR_IPSEC_IKE_SA_REAPED = (int)13808L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_SA_REAPED 13808
     * }
     */
    public static int ERROR_IPSEC_IKE_SA_REAPED() {
        return ERROR_IPSEC_IKE_SA_REAPED;
    }
    private static final int ERROR_IPSEC_IKE_MM_ACQUIRE_DROP = (int)13809L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_MM_ACQUIRE_DROP 13809
     * }
     */
    public static int ERROR_IPSEC_IKE_MM_ACQUIRE_DROP() {
        return ERROR_IPSEC_IKE_MM_ACQUIRE_DROP;
    }
    private static final int ERROR_IPSEC_IKE_QM_ACQUIRE_DROP = (int)13810L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_QM_ACQUIRE_DROP 13810
     * }
     */
    public static int ERROR_IPSEC_IKE_QM_ACQUIRE_DROP() {
        return ERROR_IPSEC_IKE_QM_ACQUIRE_DROP;
    }
    private static final int ERROR_IPSEC_IKE_QUEUE_DROP_MM = (int)13811L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_QUEUE_DROP_MM 13811
     * }
     */
    public static int ERROR_IPSEC_IKE_QUEUE_DROP_MM() {
        return ERROR_IPSEC_IKE_QUEUE_DROP_MM;
    }
    private static final int ERROR_IPSEC_IKE_QUEUE_DROP_NO_MM = (int)13812L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_QUEUE_DROP_NO_MM 13812
     * }
     */
    public static int ERROR_IPSEC_IKE_QUEUE_DROP_NO_MM() {
        return ERROR_IPSEC_IKE_QUEUE_DROP_NO_MM;
    }
    private static final int ERROR_IPSEC_IKE_DROP_NO_RESPONSE = (int)13813L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_DROP_NO_RESPONSE 13813
     * }
     */
    public static int ERROR_IPSEC_IKE_DROP_NO_RESPONSE() {
        return ERROR_IPSEC_IKE_DROP_NO_RESPONSE;
    }
    private static final int ERROR_IPSEC_IKE_MM_DELAY_DROP = (int)13814L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_MM_DELAY_DROP 13814
     * }
     */
    public static int ERROR_IPSEC_IKE_MM_DELAY_DROP() {
        return ERROR_IPSEC_IKE_MM_DELAY_DROP;
    }
    private static final int ERROR_IPSEC_IKE_QM_DELAY_DROP = (int)13815L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_QM_DELAY_DROP 13815
     * }
     */
    public static int ERROR_IPSEC_IKE_QM_DELAY_DROP() {
        return ERROR_IPSEC_IKE_QM_DELAY_DROP;
    }
    private static final int ERROR_IPSEC_IKE_ERROR = (int)13816L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_ERROR 13816
     * }
     */
    public static int ERROR_IPSEC_IKE_ERROR() {
        return ERROR_IPSEC_IKE_ERROR;
    }
    private static final int ERROR_IPSEC_IKE_CRL_FAILED = (int)13817L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_CRL_FAILED 13817
     * }
     */
    public static int ERROR_IPSEC_IKE_CRL_FAILED() {
        return ERROR_IPSEC_IKE_CRL_FAILED;
    }
    private static final int ERROR_IPSEC_IKE_INVALID_KEY_USAGE = (int)13818L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_INVALID_KEY_USAGE 13818
     * }
     */
    public static int ERROR_IPSEC_IKE_INVALID_KEY_USAGE() {
        return ERROR_IPSEC_IKE_INVALID_KEY_USAGE;
    }
    private static final int ERROR_IPSEC_IKE_INVALID_CERT_TYPE = (int)13819L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_INVALID_CERT_TYPE 13819
     * }
     */
    public static int ERROR_IPSEC_IKE_INVALID_CERT_TYPE() {
        return ERROR_IPSEC_IKE_INVALID_CERT_TYPE;
    }
    private static final int ERROR_IPSEC_IKE_NO_PRIVATE_KEY = (int)13820L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_NO_PRIVATE_KEY 13820
     * }
     */
    public static int ERROR_IPSEC_IKE_NO_PRIVATE_KEY() {
        return ERROR_IPSEC_IKE_NO_PRIVATE_KEY;
    }
    private static final int ERROR_IPSEC_IKE_SIMULTANEOUS_REKEY = (int)13821L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_SIMULTANEOUS_REKEY 13821
     * }
     */
    public static int ERROR_IPSEC_IKE_SIMULTANEOUS_REKEY() {
        return ERROR_IPSEC_IKE_SIMULTANEOUS_REKEY;
    }
    private static final int ERROR_IPSEC_IKE_DH_FAIL = (int)13822L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_DH_FAIL 13822
     * }
     */
    public static int ERROR_IPSEC_IKE_DH_FAIL() {
        return ERROR_IPSEC_IKE_DH_FAIL;
    }
    private static final int ERROR_IPSEC_IKE_CRITICAL_PAYLOAD_NOT_RECOGNIZED = (int)13823L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_CRITICAL_PAYLOAD_NOT_RECOGNIZED 13823
     * }
     */
    public static int ERROR_IPSEC_IKE_CRITICAL_PAYLOAD_NOT_RECOGNIZED() {
        return ERROR_IPSEC_IKE_CRITICAL_PAYLOAD_NOT_RECOGNIZED;
    }
    private static final int ERROR_IPSEC_IKE_INVALID_HEADER = (int)13824L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_INVALID_HEADER 13824
     * }
     */
    public static int ERROR_IPSEC_IKE_INVALID_HEADER() {
        return ERROR_IPSEC_IKE_INVALID_HEADER;
    }
    private static final int ERROR_IPSEC_IKE_NO_POLICY = (int)13825L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_NO_POLICY 13825
     * }
     */
    public static int ERROR_IPSEC_IKE_NO_POLICY() {
        return ERROR_IPSEC_IKE_NO_POLICY;
    }
    private static final int ERROR_IPSEC_IKE_INVALID_SIGNATURE = (int)13826L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_INVALID_SIGNATURE 13826
     * }
     */
    public static int ERROR_IPSEC_IKE_INVALID_SIGNATURE() {
        return ERROR_IPSEC_IKE_INVALID_SIGNATURE;
    }
    private static final int ERROR_IPSEC_IKE_KERBEROS_ERROR = (int)13827L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_KERBEROS_ERROR 13827
     * }
     */
    public static int ERROR_IPSEC_IKE_KERBEROS_ERROR() {
        return ERROR_IPSEC_IKE_KERBEROS_ERROR;
    }
    private static final int ERROR_IPSEC_IKE_NO_PUBLIC_KEY = (int)13828L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_NO_PUBLIC_KEY 13828
     * }
     */
    public static int ERROR_IPSEC_IKE_NO_PUBLIC_KEY() {
        return ERROR_IPSEC_IKE_NO_PUBLIC_KEY;
    }
    private static final int ERROR_IPSEC_IKE_PROCESS_ERR = (int)13829L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_PROCESS_ERR 13829
     * }
     */
    public static int ERROR_IPSEC_IKE_PROCESS_ERR() {
        return ERROR_IPSEC_IKE_PROCESS_ERR;
    }
    private static final int ERROR_IPSEC_IKE_PROCESS_ERR_SA = (int)13830L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_PROCESS_ERR_SA 13830
     * }
     */
    public static int ERROR_IPSEC_IKE_PROCESS_ERR_SA() {
        return ERROR_IPSEC_IKE_PROCESS_ERR_SA;
    }
    private static final int ERROR_IPSEC_IKE_PROCESS_ERR_PROP = (int)13831L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_PROCESS_ERR_PROP 13831
     * }
     */
    public static int ERROR_IPSEC_IKE_PROCESS_ERR_PROP() {
        return ERROR_IPSEC_IKE_PROCESS_ERR_PROP;
    }
    private static final int ERROR_IPSEC_IKE_PROCESS_ERR_TRANS = (int)13832L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_PROCESS_ERR_TRANS 13832
     * }
     */
    public static int ERROR_IPSEC_IKE_PROCESS_ERR_TRANS() {
        return ERROR_IPSEC_IKE_PROCESS_ERR_TRANS;
    }
    private static final int ERROR_IPSEC_IKE_PROCESS_ERR_KE = (int)13833L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_PROCESS_ERR_KE 13833
     * }
     */
    public static int ERROR_IPSEC_IKE_PROCESS_ERR_KE() {
        return ERROR_IPSEC_IKE_PROCESS_ERR_KE;
    }
    private static final int ERROR_IPSEC_IKE_PROCESS_ERR_ID = (int)13834L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_PROCESS_ERR_ID 13834
     * }
     */
    public static int ERROR_IPSEC_IKE_PROCESS_ERR_ID() {
        return ERROR_IPSEC_IKE_PROCESS_ERR_ID;
    }
    private static final int ERROR_IPSEC_IKE_PROCESS_ERR_CERT = (int)13835L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_PROCESS_ERR_CERT 13835
     * }
     */
    public static int ERROR_IPSEC_IKE_PROCESS_ERR_CERT() {
        return ERROR_IPSEC_IKE_PROCESS_ERR_CERT;
    }
    private static final int ERROR_IPSEC_IKE_PROCESS_ERR_CERT_REQ = (int)13836L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_PROCESS_ERR_CERT_REQ 13836
     * }
     */
    public static int ERROR_IPSEC_IKE_PROCESS_ERR_CERT_REQ() {
        return ERROR_IPSEC_IKE_PROCESS_ERR_CERT_REQ;
    }
    private static final int ERROR_IPSEC_IKE_PROCESS_ERR_HASH = (int)13837L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_PROCESS_ERR_HASH 13837
     * }
     */
    public static int ERROR_IPSEC_IKE_PROCESS_ERR_HASH() {
        return ERROR_IPSEC_IKE_PROCESS_ERR_HASH;
    }
    private static final int ERROR_IPSEC_IKE_PROCESS_ERR_SIG = (int)13838L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_PROCESS_ERR_SIG 13838
     * }
     */
    public static int ERROR_IPSEC_IKE_PROCESS_ERR_SIG() {
        return ERROR_IPSEC_IKE_PROCESS_ERR_SIG;
    }
    private static final int ERROR_IPSEC_IKE_PROCESS_ERR_NONCE = (int)13839L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_PROCESS_ERR_NONCE 13839
     * }
     */
    public static int ERROR_IPSEC_IKE_PROCESS_ERR_NONCE() {
        return ERROR_IPSEC_IKE_PROCESS_ERR_NONCE;
    }
    private static final int ERROR_IPSEC_IKE_PROCESS_ERR_NOTIFY = (int)13840L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_PROCESS_ERR_NOTIFY 13840
     * }
     */
    public static int ERROR_IPSEC_IKE_PROCESS_ERR_NOTIFY() {
        return ERROR_IPSEC_IKE_PROCESS_ERR_NOTIFY;
    }
    private static final int ERROR_IPSEC_IKE_PROCESS_ERR_DELETE = (int)13841L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_PROCESS_ERR_DELETE 13841
     * }
     */
    public static int ERROR_IPSEC_IKE_PROCESS_ERR_DELETE() {
        return ERROR_IPSEC_IKE_PROCESS_ERR_DELETE;
    }
    private static final int ERROR_IPSEC_IKE_PROCESS_ERR_VENDOR = (int)13842L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_PROCESS_ERR_VENDOR 13842
     * }
     */
    public static int ERROR_IPSEC_IKE_PROCESS_ERR_VENDOR() {
        return ERROR_IPSEC_IKE_PROCESS_ERR_VENDOR;
    }
    private static final int ERROR_IPSEC_IKE_INVALID_PAYLOAD = (int)13843L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_INVALID_PAYLOAD 13843
     * }
     */
    public static int ERROR_IPSEC_IKE_INVALID_PAYLOAD() {
        return ERROR_IPSEC_IKE_INVALID_PAYLOAD;
    }
    private static final int ERROR_IPSEC_IKE_LOAD_SOFT_SA = (int)13844L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_LOAD_SOFT_SA 13844
     * }
     */
    public static int ERROR_IPSEC_IKE_LOAD_SOFT_SA() {
        return ERROR_IPSEC_IKE_LOAD_SOFT_SA;
    }
    private static final int ERROR_IPSEC_IKE_SOFT_SA_TORN_DOWN = (int)13845L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_SOFT_SA_TORN_DOWN 13845
     * }
     */
    public static int ERROR_IPSEC_IKE_SOFT_SA_TORN_DOWN() {
        return ERROR_IPSEC_IKE_SOFT_SA_TORN_DOWN;
    }
    private static final int ERROR_IPSEC_IKE_INVALID_COOKIE = (int)13846L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_INVALID_COOKIE 13846
     * }
     */
    public static int ERROR_IPSEC_IKE_INVALID_COOKIE() {
        return ERROR_IPSEC_IKE_INVALID_COOKIE;
    }
    private static final int ERROR_IPSEC_IKE_NO_PEER_CERT = (int)13847L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_NO_PEER_CERT 13847
     * }
     */
    public static int ERROR_IPSEC_IKE_NO_PEER_CERT() {
        return ERROR_IPSEC_IKE_NO_PEER_CERT;
    }
    private static final int ERROR_IPSEC_IKE_PEER_CRL_FAILED = (int)13848L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_PEER_CRL_FAILED 13848
     * }
     */
    public static int ERROR_IPSEC_IKE_PEER_CRL_FAILED() {
        return ERROR_IPSEC_IKE_PEER_CRL_FAILED;
    }
    private static final int ERROR_IPSEC_IKE_POLICY_CHANGE = (int)13849L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_POLICY_CHANGE 13849
     * }
     */
    public static int ERROR_IPSEC_IKE_POLICY_CHANGE() {
        return ERROR_IPSEC_IKE_POLICY_CHANGE;
    }
    private static final int ERROR_IPSEC_IKE_NO_MM_POLICY = (int)13850L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_NO_MM_POLICY 13850
     * }
     */
    public static int ERROR_IPSEC_IKE_NO_MM_POLICY() {
        return ERROR_IPSEC_IKE_NO_MM_POLICY;
    }
    private static final int ERROR_IPSEC_IKE_NOTCBPRIV = (int)13851L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_NOTCBPRIV 13851
     * }
     */
    public static int ERROR_IPSEC_IKE_NOTCBPRIV() {
        return ERROR_IPSEC_IKE_NOTCBPRIV;
    }
    private static final int ERROR_IPSEC_IKE_SECLOADFAIL = (int)13852L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_SECLOADFAIL 13852
     * }
     */
    public static int ERROR_IPSEC_IKE_SECLOADFAIL() {
        return ERROR_IPSEC_IKE_SECLOADFAIL;
    }
    private static final int ERROR_IPSEC_IKE_FAILSSPINIT = (int)13853L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_FAILSSPINIT 13853
     * }
     */
    public static int ERROR_IPSEC_IKE_FAILSSPINIT() {
        return ERROR_IPSEC_IKE_FAILSSPINIT;
    }
    private static final int ERROR_IPSEC_IKE_FAILQUERYSSP = (int)13854L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_FAILQUERYSSP 13854
     * }
     */
    public static int ERROR_IPSEC_IKE_FAILQUERYSSP() {
        return ERROR_IPSEC_IKE_FAILQUERYSSP;
    }
    private static final int ERROR_IPSEC_IKE_SRVACQFAIL = (int)13855L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_SRVACQFAIL 13855
     * }
     */
    public static int ERROR_IPSEC_IKE_SRVACQFAIL() {
        return ERROR_IPSEC_IKE_SRVACQFAIL;
    }
    private static final int ERROR_IPSEC_IKE_SRVQUERYCRED = (int)13856L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_SRVQUERYCRED 13856
     * }
     */
    public static int ERROR_IPSEC_IKE_SRVQUERYCRED() {
        return ERROR_IPSEC_IKE_SRVQUERYCRED;
    }
    private static final int ERROR_IPSEC_IKE_GETSPIFAIL = (int)13857L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_GETSPIFAIL 13857
     * }
     */
    public static int ERROR_IPSEC_IKE_GETSPIFAIL() {
        return ERROR_IPSEC_IKE_GETSPIFAIL;
    }
    private static final int ERROR_IPSEC_IKE_INVALID_FILTER = (int)13858L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_INVALID_FILTER 13858
     * }
     */
    public static int ERROR_IPSEC_IKE_INVALID_FILTER() {
        return ERROR_IPSEC_IKE_INVALID_FILTER;
    }
    private static final int ERROR_IPSEC_IKE_OUT_OF_MEMORY = (int)13859L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_OUT_OF_MEMORY 13859
     * }
     */
    public static int ERROR_IPSEC_IKE_OUT_OF_MEMORY() {
        return ERROR_IPSEC_IKE_OUT_OF_MEMORY;
    }
    private static final int ERROR_IPSEC_IKE_ADD_UPDATE_KEY_FAILED = (int)13860L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_ADD_UPDATE_KEY_FAILED 13860
     * }
     */
    public static int ERROR_IPSEC_IKE_ADD_UPDATE_KEY_FAILED() {
        return ERROR_IPSEC_IKE_ADD_UPDATE_KEY_FAILED;
    }
    private static final int ERROR_IPSEC_IKE_INVALID_POLICY = (int)13861L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_INVALID_POLICY 13861
     * }
     */
    public static int ERROR_IPSEC_IKE_INVALID_POLICY() {
        return ERROR_IPSEC_IKE_INVALID_POLICY;
    }
    private static final int ERROR_IPSEC_IKE_UNKNOWN_DOI = (int)13862L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_UNKNOWN_DOI 13862
     * }
     */
    public static int ERROR_IPSEC_IKE_UNKNOWN_DOI() {
        return ERROR_IPSEC_IKE_UNKNOWN_DOI;
    }
    private static final int ERROR_IPSEC_IKE_INVALID_SITUATION = (int)13863L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_INVALID_SITUATION 13863
     * }
     */
    public static int ERROR_IPSEC_IKE_INVALID_SITUATION() {
        return ERROR_IPSEC_IKE_INVALID_SITUATION;
    }
    private static final int ERROR_IPSEC_IKE_DH_FAILURE = (int)13864L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_DH_FAILURE 13864
     * }
     */
    public static int ERROR_IPSEC_IKE_DH_FAILURE() {
        return ERROR_IPSEC_IKE_DH_FAILURE;
    }
    private static final int ERROR_IPSEC_IKE_INVALID_GROUP = (int)13865L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_INVALID_GROUP 13865
     * }
     */
    public static int ERROR_IPSEC_IKE_INVALID_GROUP() {
        return ERROR_IPSEC_IKE_INVALID_GROUP;
    }
    private static final int ERROR_IPSEC_IKE_ENCRYPT = (int)13866L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_ENCRYPT 13866
     * }
     */
    public static int ERROR_IPSEC_IKE_ENCRYPT() {
        return ERROR_IPSEC_IKE_ENCRYPT;
    }
    private static final int ERROR_IPSEC_IKE_DECRYPT = (int)13867L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_DECRYPT 13867
     * }
     */
    public static int ERROR_IPSEC_IKE_DECRYPT() {
        return ERROR_IPSEC_IKE_DECRYPT;
    }
    private static final int ERROR_IPSEC_IKE_POLICY_MATCH = (int)13868L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_POLICY_MATCH 13868
     * }
     */
    public static int ERROR_IPSEC_IKE_POLICY_MATCH() {
        return ERROR_IPSEC_IKE_POLICY_MATCH;
    }
    private static final int ERROR_IPSEC_IKE_UNSUPPORTED_ID = (int)13869L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_UNSUPPORTED_ID 13869
     * }
     */
    public static int ERROR_IPSEC_IKE_UNSUPPORTED_ID() {
        return ERROR_IPSEC_IKE_UNSUPPORTED_ID;
    }
    private static final int ERROR_IPSEC_IKE_INVALID_HASH = (int)13870L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_INVALID_HASH 13870
     * }
     */
    public static int ERROR_IPSEC_IKE_INVALID_HASH() {
        return ERROR_IPSEC_IKE_INVALID_HASH;
    }
    private static final int ERROR_IPSEC_IKE_INVALID_HASH_ALG = (int)13871L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_INVALID_HASH_ALG 13871
     * }
     */
    public static int ERROR_IPSEC_IKE_INVALID_HASH_ALG() {
        return ERROR_IPSEC_IKE_INVALID_HASH_ALG;
    }
    private static final int ERROR_IPSEC_IKE_INVALID_HASH_SIZE = (int)13872L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_INVALID_HASH_SIZE 13872
     * }
     */
    public static int ERROR_IPSEC_IKE_INVALID_HASH_SIZE() {
        return ERROR_IPSEC_IKE_INVALID_HASH_SIZE;
    }
    private static final int ERROR_IPSEC_IKE_INVALID_ENCRYPT_ALG = (int)13873L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_INVALID_ENCRYPT_ALG 13873
     * }
     */
    public static int ERROR_IPSEC_IKE_INVALID_ENCRYPT_ALG() {
        return ERROR_IPSEC_IKE_INVALID_ENCRYPT_ALG;
    }
    private static final int ERROR_IPSEC_IKE_INVALID_AUTH_ALG = (int)13874L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_INVALID_AUTH_ALG 13874
     * }
     */
    public static int ERROR_IPSEC_IKE_INVALID_AUTH_ALG() {
        return ERROR_IPSEC_IKE_INVALID_AUTH_ALG;
    }
    private static final int ERROR_IPSEC_IKE_INVALID_SIG = (int)13875L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_INVALID_SIG 13875
     * }
     */
    public static int ERROR_IPSEC_IKE_INVALID_SIG() {
        return ERROR_IPSEC_IKE_INVALID_SIG;
    }
    private static final int ERROR_IPSEC_IKE_LOAD_FAILED = (int)13876L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_LOAD_FAILED 13876
     * }
     */
    public static int ERROR_IPSEC_IKE_LOAD_FAILED() {
        return ERROR_IPSEC_IKE_LOAD_FAILED;
    }
    private static final int ERROR_IPSEC_IKE_RPC_DELETE = (int)13877L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_RPC_DELETE 13877
     * }
     */
    public static int ERROR_IPSEC_IKE_RPC_DELETE() {
        return ERROR_IPSEC_IKE_RPC_DELETE;
    }
    private static final int ERROR_IPSEC_IKE_BENIGN_REINIT = (int)13878L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_BENIGN_REINIT 13878
     * }
     */
    public static int ERROR_IPSEC_IKE_BENIGN_REINIT() {
        return ERROR_IPSEC_IKE_BENIGN_REINIT;
    }
    private static final int ERROR_IPSEC_IKE_INVALID_RESPONDER_LIFETIME_NOTIFY = (int)13879L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_INVALID_RESPONDER_LIFETIME_NOTIFY 13879
     * }
     */
    public static int ERROR_IPSEC_IKE_INVALID_RESPONDER_LIFETIME_NOTIFY() {
        return ERROR_IPSEC_IKE_INVALID_RESPONDER_LIFETIME_NOTIFY;
    }
    private static final int ERROR_IPSEC_IKE_INVALID_MAJOR_VERSION = (int)13880L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_INVALID_MAJOR_VERSION 13880
     * }
     */
    public static int ERROR_IPSEC_IKE_INVALID_MAJOR_VERSION() {
        return ERROR_IPSEC_IKE_INVALID_MAJOR_VERSION;
    }
    private static final int ERROR_IPSEC_IKE_INVALID_CERT_KEYLEN = (int)13881L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_INVALID_CERT_KEYLEN 13881
     * }
     */
    public static int ERROR_IPSEC_IKE_INVALID_CERT_KEYLEN() {
        return ERROR_IPSEC_IKE_INVALID_CERT_KEYLEN;
    }
    private static final int ERROR_IPSEC_IKE_MM_LIMIT = (int)13882L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_MM_LIMIT 13882
     * }
     */
    public static int ERROR_IPSEC_IKE_MM_LIMIT() {
        return ERROR_IPSEC_IKE_MM_LIMIT;
    }
    private static final int ERROR_IPSEC_IKE_NEGOTIATION_DISABLED = (int)13883L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_NEGOTIATION_DISABLED 13883
     * }
     */
    public static int ERROR_IPSEC_IKE_NEGOTIATION_DISABLED() {
        return ERROR_IPSEC_IKE_NEGOTIATION_DISABLED;
    }
    private static final int ERROR_IPSEC_IKE_QM_LIMIT = (int)13884L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_QM_LIMIT 13884
     * }
     */
    public static int ERROR_IPSEC_IKE_QM_LIMIT() {
        return ERROR_IPSEC_IKE_QM_LIMIT;
    }
    private static final int ERROR_IPSEC_IKE_MM_EXPIRED = (int)13885L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_MM_EXPIRED 13885
     * }
     */
    public static int ERROR_IPSEC_IKE_MM_EXPIRED() {
        return ERROR_IPSEC_IKE_MM_EXPIRED;
    }
    private static final int ERROR_IPSEC_IKE_PEER_MM_ASSUMED_INVALID = (int)13886L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_PEER_MM_ASSUMED_INVALID 13886
     * }
     */
    public static int ERROR_IPSEC_IKE_PEER_MM_ASSUMED_INVALID() {
        return ERROR_IPSEC_IKE_PEER_MM_ASSUMED_INVALID;
    }
    private static final int ERROR_IPSEC_IKE_CERT_CHAIN_POLICY_MISMATCH = (int)13887L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_CERT_CHAIN_POLICY_MISMATCH 13887
     * }
     */
    public static int ERROR_IPSEC_IKE_CERT_CHAIN_POLICY_MISMATCH() {
        return ERROR_IPSEC_IKE_CERT_CHAIN_POLICY_MISMATCH;
    }
    private static final int ERROR_IPSEC_IKE_UNEXPECTED_MESSAGE_ID = (int)13888L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_UNEXPECTED_MESSAGE_ID 13888
     * }
     */
    public static int ERROR_IPSEC_IKE_UNEXPECTED_MESSAGE_ID() {
        return ERROR_IPSEC_IKE_UNEXPECTED_MESSAGE_ID;
    }
    private static final int ERROR_IPSEC_IKE_INVALID_AUTH_PAYLOAD = (int)13889L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_INVALID_AUTH_PAYLOAD 13889
     * }
     */
    public static int ERROR_IPSEC_IKE_INVALID_AUTH_PAYLOAD() {
        return ERROR_IPSEC_IKE_INVALID_AUTH_PAYLOAD;
    }
    private static final int ERROR_IPSEC_IKE_DOS_COOKIE_SENT = (int)13890L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_DOS_COOKIE_SENT 13890
     * }
     */
    public static int ERROR_IPSEC_IKE_DOS_COOKIE_SENT() {
        return ERROR_IPSEC_IKE_DOS_COOKIE_SENT;
    }
    private static final int ERROR_IPSEC_IKE_SHUTTING_DOWN = (int)13891L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_SHUTTING_DOWN 13891
     * }
     */
    public static int ERROR_IPSEC_IKE_SHUTTING_DOWN() {
        return ERROR_IPSEC_IKE_SHUTTING_DOWN;
    }
    private static final int ERROR_IPSEC_IKE_CGA_AUTH_FAILED = (int)13892L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_CGA_AUTH_FAILED 13892
     * }
     */
    public static int ERROR_IPSEC_IKE_CGA_AUTH_FAILED() {
        return ERROR_IPSEC_IKE_CGA_AUTH_FAILED;
    }
    private static final int ERROR_IPSEC_IKE_PROCESS_ERR_NATOA = (int)13893L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_PROCESS_ERR_NATOA 13893
     * }
     */
    public static int ERROR_IPSEC_IKE_PROCESS_ERR_NATOA() {
        return ERROR_IPSEC_IKE_PROCESS_ERR_NATOA;
    }
    private static final int ERROR_IPSEC_IKE_INVALID_MM_FOR_QM = (int)13894L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_INVALID_MM_FOR_QM 13894
     * }
     */
    public static int ERROR_IPSEC_IKE_INVALID_MM_FOR_QM() {
        return ERROR_IPSEC_IKE_INVALID_MM_FOR_QM;
    }
    private static final int ERROR_IPSEC_IKE_QM_EXPIRED = (int)13895L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_QM_EXPIRED 13895
     * }
     */
    public static int ERROR_IPSEC_IKE_QM_EXPIRED() {
        return ERROR_IPSEC_IKE_QM_EXPIRED;
    }
    private static final int ERROR_IPSEC_IKE_TOO_MANY_FILTERS = (int)13896L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_TOO_MANY_FILTERS 13896
     * }
     */
    public static int ERROR_IPSEC_IKE_TOO_MANY_FILTERS() {
        return ERROR_IPSEC_IKE_TOO_MANY_FILTERS;
    }
    private static final int ERROR_IPSEC_IKE_NEG_STATUS_END = (int)13897L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_NEG_STATUS_END 13897
     * }
     */
    public static int ERROR_IPSEC_IKE_NEG_STATUS_END() {
        return ERROR_IPSEC_IKE_NEG_STATUS_END;
    }
    private static final int ERROR_IPSEC_IKE_KILL_DUMMY_NAP_TUNNEL = (int)13898L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_KILL_DUMMY_NAP_TUNNEL 13898
     * }
     */
    public static int ERROR_IPSEC_IKE_KILL_DUMMY_NAP_TUNNEL() {
        return ERROR_IPSEC_IKE_KILL_DUMMY_NAP_TUNNEL;
    }
    private static final int ERROR_IPSEC_IKE_INNER_IP_ASSIGNMENT_FAILURE = (int)13899L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_INNER_IP_ASSIGNMENT_FAILURE 13899
     * }
     */
    public static int ERROR_IPSEC_IKE_INNER_IP_ASSIGNMENT_FAILURE() {
        return ERROR_IPSEC_IKE_INNER_IP_ASSIGNMENT_FAILURE;
    }
    private static final int ERROR_IPSEC_IKE_REQUIRE_CP_PAYLOAD_MISSING = (int)13900L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_REQUIRE_CP_PAYLOAD_MISSING 13900
     * }
     */
    public static int ERROR_IPSEC_IKE_REQUIRE_CP_PAYLOAD_MISSING() {
        return ERROR_IPSEC_IKE_REQUIRE_CP_PAYLOAD_MISSING;
    }
    private static final int ERROR_IPSEC_KEY_MODULE_IMPERSONATION_NEGOTIATION_PENDING = (int)13901L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_KEY_MODULE_IMPERSONATION_NEGOTIATION_PENDING 13901
     * }
     */
    public static int ERROR_IPSEC_KEY_MODULE_IMPERSONATION_NEGOTIATION_PENDING() {
        return ERROR_IPSEC_KEY_MODULE_IMPERSONATION_NEGOTIATION_PENDING;
    }
    private static final int ERROR_IPSEC_IKE_COEXISTENCE_SUPPRESS = (int)13902L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_COEXISTENCE_SUPPRESS 13902
     * }
     */
    public static int ERROR_IPSEC_IKE_COEXISTENCE_SUPPRESS() {
        return ERROR_IPSEC_IKE_COEXISTENCE_SUPPRESS;
    }
    private static final int ERROR_IPSEC_IKE_RATELIMIT_DROP = (int)13903L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_RATELIMIT_DROP 13903
     * }
     */
    public static int ERROR_IPSEC_IKE_RATELIMIT_DROP() {
        return ERROR_IPSEC_IKE_RATELIMIT_DROP;
    }
    private static final int ERROR_IPSEC_IKE_PEER_DOESNT_SUPPORT_MOBIKE = (int)13904L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_PEER_DOESNT_SUPPORT_MOBIKE 13904
     * }
     */
    public static int ERROR_IPSEC_IKE_PEER_DOESNT_SUPPORT_MOBIKE() {
        return ERROR_IPSEC_IKE_PEER_DOESNT_SUPPORT_MOBIKE;
    }
    private static final int ERROR_IPSEC_IKE_AUTHORIZATION_FAILURE = (int)13905L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_AUTHORIZATION_FAILURE 13905
     * }
     */
    public static int ERROR_IPSEC_IKE_AUTHORIZATION_FAILURE() {
        return ERROR_IPSEC_IKE_AUTHORIZATION_FAILURE;
    }
    private static final int ERROR_IPSEC_IKE_STRONG_CRED_AUTHORIZATION_FAILURE = (int)13906L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_STRONG_CRED_AUTHORIZATION_FAILURE 13906
     * }
     */
    public static int ERROR_IPSEC_IKE_STRONG_CRED_AUTHORIZATION_FAILURE() {
        return ERROR_IPSEC_IKE_STRONG_CRED_AUTHORIZATION_FAILURE;
    }
    private static final int ERROR_IPSEC_IKE_AUTHORIZATION_FAILURE_WITH_OPTIONAL_RETRY = (int)13907L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_AUTHORIZATION_FAILURE_WITH_OPTIONAL_RETRY 13907
     * }
     */
    public static int ERROR_IPSEC_IKE_AUTHORIZATION_FAILURE_WITH_OPTIONAL_RETRY() {
        return ERROR_IPSEC_IKE_AUTHORIZATION_FAILURE_WITH_OPTIONAL_RETRY;
    }
    private static final int ERROR_IPSEC_IKE_STRONG_CRED_AUTHORIZATION_AND_CERTMAP_FAILURE = (int)13908L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_STRONG_CRED_AUTHORIZATION_AND_CERTMAP_FAILURE 13908
     * }
     */
    public static int ERROR_IPSEC_IKE_STRONG_CRED_AUTHORIZATION_AND_CERTMAP_FAILURE() {
        return ERROR_IPSEC_IKE_STRONG_CRED_AUTHORIZATION_AND_CERTMAP_FAILURE;
    }
    private static final int ERROR_IPSEC_IKE_NEG_STATUS_EXTENDED_END = (int)13909L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_IKE_NEG_STATUS_EXTENDED_END 13909
     * }
     */
    public static int ERROR_IPSEC_IKE_NEG_STATUS_EXTENDED_END() {
        return ERROR_IPSEC_IKE_NEG_STATUS_EXTENDED_END;
    }
    private static final int ERROR_IPSEC_BAD_SPI = (int)13910L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_BAD_SPI 13910
     * }
     */
    public static int ERROR_IPSEC_BAD_SPI() {
        return ERROR_IPSEC_BAD_SPI;
    }
    private static final int ERROR_IPSEC_SA_LIFETIME_EXPIRED = (int)13911L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_SA_LIFETIME_EXPIRED 13911
     * }
     */
    public static int ERROR_IPSEC_SA_LIFETIME_EXPIRED() {
        return ERROR_IPSEC_SA_LIFETIME_EXPIRED;
    }
    private static final int ERROR_IPSEC_WRONG_SA = (int)13912L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_WRONG_SA 13912
     * }
     */
    public static int ERROR_IPSEC_WRONG_SA() {
        return ERROR_IPSEC_WRONG_SA;
    }
    private static final int ERROR_IPSEC_REPLAY_CHECK_FAILED = (int)13913L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_REPLAY_CHECK_FAILED 13913
     * }
     */
    public static int ERROR_IPSEC_REPLAY_CHECK_FAILED() {
        return ERROR_IPSEC_REPLAY_CHECK_FAILED;
    }
    private static final int ERROR_IPSEC_INVALID_PACKET = (int)13914L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_INVALID_PACKET 13914
     * }
     */
    public static int ERROR_IPSEC_INVALID_PACKET() {
        return ERROR_IPSEC_INVALID_PACKET;
    }
    private static final int ERROR_IPSEC_INTEGRITY_CHECK_FAILED = (int)13915L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_INTEGRITY_CHECK_FAILED 13915
     * }
     */
    public static int ERROR_IPSEC_INTEGRITY_CHECK_FAILED() {
        return ERROR_IPSEC_INTEGRITY_CHECK_FAILED;
    }
    private static final int ERROR_IPSEC_CLEAR_TEXT_DROP = (int)13916L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_CLEAR_TEXT_DROP 13916
     * }
     */
    public static int ERROR_IPSEC_CLEAR_TEXT_DROP() {
        return ERROR_IPSEC_CLEAR_TEXT_DROP;
    }
    private static final int ERROR_IPSEC_AUTH_FIREWALL_DROP = (int)13917L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_AUTH_FIREWALL_DROP 13917
     * }
     */
    public static int ERROR_IPSEC_AUTH_FIREWALL_DROP() {
        return ERROR_IPSEC_AUTH_FIREWALL_DROP;
    }
    private static final int ERROR_IPSEC_THROTTLE_DROP = (int)13918L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_THROTTLE_DROP 13918
     * }
     */
    public static int ERROR_IPSEC_THROTTLE_DROP() {
        return ERROR_IPSEC_THROTTLE_DROP;
    }
    private static final int ERROR_IPSEC_DOSP_BLOCK = (int)13925L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_DOSP_BLOCK 13925
     * }
     */
    public static int ERROR_IPSEC_DOSP_BLOCK() {
        return ERROR_IPSEC_DOSP_BLOCK;
    }
    private static final int ERROR_IPSEC_DOSP_RECEIVED_MULTICAST = (int)13926L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_DOSP_RECEIVED_MULTICAST 13926
     * }
     */
    public static int ERROR_IPSEC_DOSP_RECEIVED_MULTICAST() {
        return ERROR_IPSEC_DOSP_RECEIVED_MULTICAST;
    }
    private static final int ERROR_IPSEC_DOSP_INVALID_PACKET = (int)13927L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_DOSP_INVALID_PACKET 13927
     * }
     */
    public static int ERROR_IPSEC_DOSP_INVALID_PACKET() {
        return ERROR_IPSEC_DOSP_INVALID_PACKET;
    }
    private static final int ERROR_IPSEC_DOSP_STATE_LOOKUP_FAILED = (int)13928L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_DOSP_STATE_LOOKUP_FAILED 13928
     * }
     */
    public static int ERROR_IPSEC_DOSP_STATE_LOOKUP_FAILED() {
        return ERROR_IPSEC_DOSP_STATE_LOOKUP_FAILED;
    }
    private static final int ERROR_IPSEC_DOSP_MAX_ENTRIES = (int)13929L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_DOSP_MAX_ENTRIES 13929
     * }
     */
    public static int ERROR_IPSEC_DOSP_MAX_ENTRIES() {
        return ERROR_IPSEC_DOSP_MAX_ENTRIES;
    }
    private static final int ERROR_IPSEC_DOSP_KEYMOD_NOT_ALLOWED = (int)13930L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_DOSP_KEYMOD_NOT_ALLOWED 13930
     * }
     */
    public static int ERROR_IPSEC_DOSP_KEYMOD_NOT_ALLOWED() {
        return ERROR_IPSEC_DOSP_KEYMOD_NOT_ALLOWED;
    }
    private static final int ERROR_IPSEC_DOSP_NOT_INSTALLED = (int)13931L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_DOSP_NOT_INSTALLED 13931
     * }
     */
    public static int ERROR_IPSEC_DOSP_NOT_INSTALLED() {
        return ERROR_IPSEC_DOSP_NOT_INSTALLED;
    }
    private static final int ERROR_IPSEC_DOSP_MAX_PER_IP_RATELIMIT_QUEUES = (int)13932L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IPSEC_DOSP_MAX_PER_IP_RATELIMIT_QUEUES 13932
     * }
     */
    public static int ERROR_IPSEC_DOSP_MAX_PER_IP_RATELIMIT_QUEUES() {
        return ERROR_IPSEC_DOSP_MAX_PER_IP_RATELIMIT_QUEUES;
    }
    private static final int ERROR_SXS_SECTION_NOT_FOUND = (int)14000L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_SECTION_NOT_FOUND 14000
     * }
     */
    public static int ERROR_SXS_SECTION_NOT_FOUND() {
        return ERROR_SXS_SECTION_NOT_FOUND;
    }
    private static final int ERROR_SXS_CANT_GEN_ACTCTX = (int)14001L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_CANT_GEN_ACTCTX 14001
     * }
     */
    public static int ERROR_SXS_CANT_GEN_ACTCTX() {
        return ERROR_SXS_CANT_GEN_ACTCTX;
    }
    private static final int ERROR_SXS_INVALID_ACTCTXDATA_FORMAT = (int)14002L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_INVALID_ACTCTXDATA_FORMAT 14002
     * }
     */
    public static int ERROR_SXS_INVALID_ACTCTXDATA_FORMAT() {
        return ERROR_SXS_INVALID_ACTCTXDATA_FORMAT;
    }
    private static final int ERROR_SXS_ASSEMBLY_NOT_FOUND = (int)14003L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_ASSEMBLY_NOT_FOUND 14003
     * }
     */
    public static int ERROR_SXS_ASSEMBLY_NOT_FOUND() {
        return ERROR_SXS_ASSEMBLY_NOT_FOUND;
    }
    private static final int ERROR_SXS_MANIFEST_FORMAT_ERROR = (int)14004L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_MANIFEST_FORMAT_ERROR 14004
     * }
     */
    public static int ERROR_SXS_MANIFEST_FORMAT_ERROR() {
        return ERROR_SXS_MANIFEST_FORMAT_ERROR;
    }
    private static final int ERROR_SXS_MANIFEST_PARSE_ERROR = (int)14005L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_MANIFEST_PARSE_ERROR 14005
     * }
     */
    public static int ERROR_SXS_MANIFEST_PARSE_ERROR() {
        return ERROR_SXS_MANIFEST_PARSE_ERROR;
    }
    private static final int ERROR_SXS_ACTIVATION_CONTEXT_DISABLED = (int)14006L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_ACTIVATION_CONTEXT_DISABLED 14006
     * }
     */
    public static int ERROR_SXS_ACTIVATION_CONTEXT_DISABLED() {
        return ERROR_SXS_ACTIVATION_CONTEXT_DISABLED;
    }
    private static final int ERROR_SXS_KEY_NOT_FOUND = (int)14007L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_KEY_NOT_FOUND 14007
     * }
     */
    public static int ERROR_SXS_KEY_NOT_FOUND() {
        return ERROR_SXS_KEY_NOT_FOUND;
    }
    private static final int ERROR_SXS_VERSION_CONFLICT = (int)14008L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_VERSION_CONFLICT 14008
     * }
     */
    public static int ERROR_SXS_VERSION_CONFLICT() {
        return ERROR_SXS_VERSION_CONFLICT;
    }
    private static final int ERROR_SXS_WRONG_SECTION_TYPE = (int)14009L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_WRONG_SECTION_TYPE 14009
     * }
     */
    public static int ERROR_SXS_WRONG_SECTION_TYPE() {
        return ERROR_SXS_WRONG_SECTION_TYPE;
    }
    private static final int ERROR_SXS_THREAD_QUERIES_DISABLED = (int)14010L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_THREAD_QUERIES_DISABLED 14010
     * }
     */
    public static int ERROR_SXS_THREAD_QUERIES_DISABLED() {
        return ERROR_SXS_THREAD_QUERIES_DISABLED;
    }
    private static final int ERROR_SXS_PROCESS_DEFAULT_ALREADY_SET = (int)14011L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_PROCESS_DEFAULT_ALREADY_SET 14011
     * }
     */
    public static int ERROR_SXS_PROCESS_DEFAULT_ALREADY_SET() {
        return ERROR_SXS_PROCESS_DEFAULT_ALREADY_SET;
    }
    private static final int ERROR_SXS_UNKNOWN_ENCODING_GROUP = (int)14012L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_UNKNOWN_ENCODING_GROUP 14012
     * }
     */
    public static int ERROR_SXS_UNKNOWN_ENCODING_GROUP() {
        return ERROR_SXS_UNKNOWN_ENCODING_GROUP;
    }
    private static final int ERROR_SXS_UNKNOWN_ENCODING = (int)14013L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_UNKNOWN_ENCODING 14013
     * }
     */
    public static int ERROR_SXS_UNKNOWN_ENCODING() {
        return ERROR_SXS_UNKNOWN_ENCODING;
    }
    private static final int ERROR_SXS_INVALID_XML_NAMESPACE_URI = (int)14014L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_INVALID_XML_NAMESPACE_URI 14014
     * }
     */
    public static int ERROR_SXS_INVALID_XML_NAMESPACE_URI() {
        return ERROR_SXS_INVALID_XML_NAMESPACE_URI;
    }
    private static final int ERROR_SXS_ROOT_MANIFEST_DEPENDENCY_NOT_INSTALLED = (int)14015L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_ROOT_MANIFEST_DEPENDENCY_NOT_INSTALLED 14015
     * }
     */
    public static int ERROR_SXS_ROOT_MANIFEST_DEPENDENCY_NOT_INSTALLED() {
        return ERROR_SXS_ROOT_MANIFEST_DEPENDENCY_NOT_INSTALLED;
    }
    private static final int ERROR_SXS_LEAF_MANIFEST_DEPENDENCY_NOT_INSTALLED = (int)14016L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_LEAF_MANIFEST_DEPENDENCY_NOT_INSTALLED 14016
     * }
     */
    public static int ERROR_SXS_LEAF_MANIFEST_DEPENDENCY_NOT_INSTALLED() {
        return ERROR_SXS_LEAF_MANIFEST_DEPENDENCY_NOT_INSTALLED;
    }
    private static final int ERROR_SXS_INVALID_ASSEMBLY_IDENTITY_ATTRIBUTE = (int)14017L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_INVALID_ASSEMBLY_IDENTITY_ATTRIBUTE 14017
     * }
     */
    public static int ERROR_SXS_INVALID_ASSEMBLY_IDENTITY_ATTRIBUTE() {
        return ERROR_SXS_INVALID_ASSEMBLY_IDENTITY_ATTRIBUTE;
    }
    private static final int ERROR_SXS_MANIFEST_MISSING_REQUIRED_DEFAULT_NAMESPACE = (int)14018L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_MANIFEST_MISSING_REQUIRED_DEFAULT_NAMESPACE 14018
     * }
     */
    public static int ERROR_SXS_MANIFEST_MISSING_REQUIRED_DEFAULT_NAMESPACE() {
        return ERROR_SXS_MANIFEST_MISSING_REQUIRED_DEFAULT_NAMESPACE;
    }
    private static final int ERROR_SXS_MANIFEST_INVALID_REQUIRED_DEFAULT_NAMESPACE = (int)14019L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_MANIFEST_INVALID_REQUIRED_DEFAULT_NAMESPACE 14019
     * }
     */
    public static int ERROR_SXS_MANIFEST_INVALID_REQUIRED_DEFAULT_NAMESPACE() {
        return ERROR_SXS_MANIFEST_INVALID_REQUIRED_DEFAULT_NAMESPACE;
    }
    private static final int ERROR_SXS_PRIVATE_MANIFEST_CROSS_PATH_WITH_REPARSE_POINT = (int)14020L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_PRIVATE_MANIFEST_CROSS_PATH_WITH_REPARSE_POINT 14020
     * }
     */
    public static int ERROR_SXS_PRIVATE_MANIFEST_CROSS_PATH_WITH_REPARSE_POINT() {
        return ERROR_SXS_PRIVATE_MANIFEST_CROSS_PATH_WITH_REPARSE_POINT;
    }
    private static final int ERROR_SXS_DUPLICATE_DLL_NAME = (int)14021L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_DUPLICATE_DLL_NAME 14021
     * }
     */
    public static int ERROR_SXS_DUPLICATE_DLL_NAME() {
        return ERROR_SXS_DUPLICATE_DLL_NAME;
    }
    private static final int ERROR_SXS_DUPLICATE_WINDOWCLASS_NAME = (int)14022L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_DUPLICATE_WINDOWCLASS_NAME 14022
     * }
     */
    public static int ERROR_SXS_DUPLICATE_WINDOWCLASS_NAME() {
        return ERROR_SXS_DUPLICATE_WINDOWCLASS_NAME;
    }
    private static final int ERROR_SXS_DUPLICATE_CLSID = (int)14023L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_DUPLICATE_CLSID 14023
     * }
     */
    public static int ERROR_SXS_DUPLICATE_CLSID() {
        return ERROR_SXS_DUPLICATE_CLSID;
    }
    private static final int ERROR_SXS_DUPLICATE_IID = (int)14024L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_DUPLICATE_IID 14024
     * }
     */
    public static int ERROR_SXS_DUPLICATE_IID() {
        return ERROR_SXS_DUPLICATE_IID;
    }
    private static final int ERROR_SXS_DUPLICATE_TLBID = (int)14025L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_DUPLICATE_TLBID 14025
     * }
     */
    public static int ERROR_SXS_DUPLICATE_TLBID() {
        return ERROR_SXS_DUPLICATE_TLBID;
    }
    private static final int ERROR_SXS_DUPLICATE_PROGID = (int)14026L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_DUPLICATE_PROGID 14026
     * }
     */
    public static int ERROR_SXS_DUPLICATE_PROGID() {
        return ERROR_SXS_DUPLICATE_PROGID;
    }
    private static final int ERROR_SXS_DUPLICATE_ASSEMBLY_NAME = (int)14027L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_DUPLICATE_ASSEMBLY_NAME 14027
     * }
     */
    public static int ERROR_SXS_DUPLICATE_ASSEMBLY_NAME() {
        return ERROR_SXS_DUPLICATE_ASSEMBLY_NAME;
    }
    private static final int ERROR_SXS_FILE_HASH_MISMATCH = (int)14028L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_FILE_HASH_MISMATCH 14028
     * }
     */
    public static int ERROR_SXS_FILE_HASH_MISMATCH() {
        return ERROR_SXS_FILE_HASH_MISMATCH;
    }
    private static final int ERROR_SXS_POLICY_PARSE_ERROR = (int)14029L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_POLICY_PARSE_ERROR 14029
     * }
     */
    public static int ERROR_SXS_POLICY_PARSE_ERROR() {
        return ERROR_SXS_POLICY_PARSE_ERROR;
    }
    private static final int ERROR_SXS_XML_E_MISSINGQUOTE = (int)14030L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_XML_E_MISSINGQUOTE 14030
     * }
     */
    public static int ERROR_SXS_XML_E_MISSINGQUOTE() {
        return ERROR_SXS_XML_E_MISSINGQUOTE;
    }
    private static final int ERROR_SXS_XML_E_COMMENTSYNTAX = (int)14031L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_XML_E_COMMENTSYNTAX 14031
     * }
     */
    public static int ERROR_SXS_XML_E_COMMENTSYNTAX() {
        return ERROR_SXS_XML_E_COMMENTSYNTAX;
    }
    private static final int ERROR_SXS_XML_E_BADSTARTNAMECHAR = (int)14032L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_XML_E_BADSTARTNAMECHAR 14032
     * }
     */
    public static int ERROR_SXS_XML_E_BADSTARTNAMECHAR() {
        return ERROR_SXS_XML_E_BADSTARTNAMECHAR;
    }
    private static final int ERROR_SXS_XML_E_BADNAMECHAR = (int)14033L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_XML_E_BADNAMECHAR 14033
     * }
     */
    public static int ERROR_SXS_XML_E_BADNAMECHAR() {
        return ERROR_SXS_XML_E_BADNAMECHAR;
    }
    private static final int ERROR_SXS_XML_E_BADCHARINSTRING = (int)14034L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_XML_E_BADCHARINSTRING 14034
     * }
     */
    public static int ERROR_SXS_XML_E_BADCHARINSTRING() {
        return ERROR_SXS_XML_E_BADCHARINSTRING;
    }
    private static final int ERROR_SXS_XML_E_XMLDECLSYNTAX = (int)14035L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_XML_E_XMLDECLSYNTAX 14035
     * }
     */
    public static int ERROR_SXS_XML_E_XMLDECLSYNTAX() {
        return ERROR_SXS_XML_E_XMLDECLSYNTAX;
    }
    private static final int ERROR_SXS_XML_E_BADCHARDATA = (int)14036L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_XML_E_BADCHARDATA 14036
     * }
     */
    public static int ERROR_SXS_XML_E_BADCHARDATA() {
        return ERROR_SXS_XML_E_BADCHARDATA;
    }
    private static final int ERROR_SXS_XML_E_MISSINGWHITESPACE = (int)14037L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_XML_E_MISSINGWHITESPACE 14037
     * }
     */
    public static int ERROR_SXS_XML_E_MISSINGWHITESPACE() {
        return ERROR_SXS_XML_E_MISSINGWHITESPACE;
    }
    private static final int ERROR_SXS_XML_E_EXPECTINGTAGEND = (int)14038L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_XML_E_EXPECTINGTAGEND 14038
     * }
     */
    public static int ERROR_SXS_XML_E_EXPECTINGTAGEND() {
        return ERROR_SXS_XML_E_EXPECTINGTAGEND;
    }
    private static final int ERROR_SXS_XML_E_MISSINGSEMICOLON = (int)14039L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_XML_E_MISSINGSEMICOLON 14039
     * }
     */
    public static int ERROR_SXS_XML_E_MISSINGSEMICOLON() {
        return ERROR_SXS_XML_E_MISSINGSEMICOLON;
    }
    private static final int ERROR_SXS_XML_E_UNBALANCEDPAREN = (int)14040L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_XML_E_UNBALANCEDPAREN 14040
     * }
     */
    public static int ERROR_SXS_XML_E_UNBALANCEDPAREN() {
        return ERROR_SXS_XML_E_UNBALANCEDPAREN;
    }
    private static final int ERROR_SXS_XML_E_INTERNALERROR = (int)14041L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_XML_E_INTERNALERROR 14041
     * }
     */
    public static int ERROR_SXS_XML_E_INTERNALERROR() {
        return ERROR_SXS_XML_E_INTERNALERROR;
    }
    private static final int ERROR_SXS_XML_E_UNEXPECTED_WHITESPACE = (int)14042L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_XML_E_UNEXPECTED_WHITESPACE 14042
     * }
     */
    public static int ERROR_SXS_XML_E_UNEXPECTED_WHITESPACE() {
        return ERROR_SXS_XML_E_UNEXPECTED_WHITESPACE;
    }
    private static final int ERROR_SXS_XML_E_INCOMPLETE_ENCODING = (int)14043L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_XML_E_INCOMPLETE_ENCODING 14043
     * }
     */
    public static int ERROR_SXS_XML_E_INCOMPLETE_ENCODING() {
        return ERROR_SXS_XML_E_INCOMPLETE_ENCODING;
    }
    private static final int ERROR_SXS_XML_E_MISSING_PAREN = (int)14044L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_XML_E_MISSING_PAREN 14044
     * }
     */
    public static int ERROR_SXS_XML_E_MISSING_PAREN() {
        return ERROR_SXS_XML_E_MISSING_PAREN;
    }
    private static final int ERROR_SXS_XML_E_EXPECTINGCLOSEQUOTE = (int)14045L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_XML_E_EXPECTINGCLOSEQUOTE 14045
     * }
     */
    public static int ERROR_SXS_XML_E_EXPECTINGCLOSEQUOTE() {
        return ERROR_SXS_XML_E_EXPECTINGCLOSEQUOTE;
    }
    private static final int ERROR_SXS_XML_E_MULTIPLE_COLONS = (int)14046L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_XML_E_MULTIPLE_COLONS 14046
     * }
     */
    public static int ERROR_SXS_XML_E_MULTIPLE_COLONS() {
        return ERROR_SXS_XML_E_MULTIPLE_COLONS;
    }
    private static final int ERROR_SXS_XML_E_INVALID_DECIMAL = (int)14047L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_XML_E_INVALID_DECIMAL 14047
     * }
     */
    public static int ERROR_SXS_XML_E_INVALID_DECIMAL() {
        return ERROR_SXS_XML_E_INVALID_DECIMAL;
    }
    private static final int ERROR_SXS_XML_E_INVALID_HEXIDECIMAL = (int)14048L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_XML_E_INVALID_HEXIDECIMAL 14048
     * }
     */
    public static int ERROR_SXS_XML_E_INVALID_HEXIDECIMAL() {
        return ERROR_SXS_XML_E_INVALID_HEXIDECIMAL;
    }
    private static final int ERROR_SXS_XML_E_INVALID_UNICODE = (int)14049L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_XML_E_INVALID_UNICODE 14049
     * }
     */
    public static int ERROR_SXS_XML_E_INVALID_UNICODE() {
        return ERROR_SXS_XML_E_INVALID_UNICODE;
    }
    private static final int ERROR_SXS_XML_E_WHITESPACEORQUESTIONMARK = (int)14050L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_XML_E_WHITESPACEORQUESTIONMARK 14050
     * }
     */
    public static int ERROR_SXS_XML_E_WHITESPACEORQUESTIONMARK() {
        return ERROR_SXS_XML_E_WHITESPACEORQUESTIONMARK;
    }
    private static final int ERROR_SXS_XML_E_UNEXPECTEDENDTAG = (int)14051L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_XML_E_UNEXPECTEDENDTAG 14051
     * }
     */
    public static int ERROR_SXS_XML_E_UNEXPECTEDENDTAG() {
        return ERROR_SXS_XML_E_UNEXPECTEDENDTAG;
    }
    private static final int ERROR_SXS_XML_E_UNCLOSEDTAG = (int)14052L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_XML_E_UNCLOSEDTAG 14052
     * }
     */
    public static int ERROR_SXS_XML_E_UNCLOSEDTAG() {
        return ERROR_SXS_XML_E_UNCLOSEDTAG;
    }
    private static final int ERROR_SXS_XML_E_DUPLICATEATTRIBUTE = (int)14053L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_XML_E_DUPLICATEATTRIBUTE 14053
     * }
     */
    public static int ERROR_SXS_XML_E_DUPLICATEATTRIBUTE() {
        return ERROR_SXS_XML_E_DUPLICATEATTRIBUTE;
    }
    private static final int ERROR_SXS_XML_E_MULTIPLEROOTS = (int)14054L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_XML_E_MULTIPLEROOTS 14054
     * }
     */
    public static int ERROR_SXS_XML_E_MULTIPLEROOTS() {
        return ERROR_SXS_XML_E_MULTIPLEROOTS;
    }
    private static final int ERROR_SXS_XML_E_INVALIDATROOTLEVEL = (int)14055L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_XML_E_INVALIDATROOTLEVEL 14055
     * }
     */
    public static int ERROR_SXS_XML_E_INVALIDATROOTLEVEL() {
        return ERROR_SXS_XML_E_INVALIDATROOTLEVEL;
    }
    private static final int ERROR_SXS_XML_E_BADXMLDECL = (int)14056L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_XML_E_BADXMLDECL 14056
     * }
     */
    public static int ERROR_SXS_XML_E_BADXMLDECL() {
        return ERROR_SXS_XML_E_BADXMLDECL;
    }
    private static final int ERROR_SXS_XML_E_MISSINGROOT = (int)14057L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_XML_E_MISSINGROOT 14057
     * }
     */
    public static int ERROR_SXS_XML_E_MISSINGROOT() {
        return ERROR_SXS_XML_E_MISSINGROOT;
    }
    private static final int ERROR_SXS_XML_E_UNEXPECTEDEOF = (int)14058L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_XML_E_UNEXPECTEDEOF 14058
     * }
     */
    public static int ERROR_SXS_XML_E_UNEXPECTEDEOF() {
        return ERROR_SXS_XML_E_UNEXPECTEDEOF;
    }
    private static final int ERROR_SXS_XML_E_BADPEREFINSUBSET = (int)14059L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_XML_E_BADPEREFINSUBSET 14059
     * }
     */
    public static int ERROR_SXS_XML_E_BADPEREFINSUBSET() {
        return ERROR_SXS_XML_E_BADPEREFINSUBSET;
    }
    private static final int ERROR_SXS_XML_E_UNCLOSEDSTARTTAG = (int)14060L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_XML_E_UNCLOSEDSTARTTAG 14060
     * }
     */
    public static int ERROR_SXS_XML_E_UNCLOSEDSTARTTAG() {
        return ERROR_SXS_XML_E_UNCLOSEDSTARTTAG;
    }
    private static final int ERROR_SXS_XML_E_UNCLOSEDENDTAG = (int)14061L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_XML_E_UNCLOSEDENDTAG 14061
     * }
     */
    public static int ERROR_SXS_XML_E_UNCLOSEDENDTAG() {
        return ERROR_SXS_XML_E_UNCLOSEDENDTAG;
    }
    private static final int ERROR_SXS_XML_E_UNCLOSEDSTRING = (int)14062L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_XML_E_UNCLOSEDSTRING 14062
     * }
     */
    public static int ERROR_SXS_XML_E_UNCLOSEDSTRING() {
        return ERROR_SXS_XML_E_UNCLOSEDSTRING;
    }
    private static final int ERROR_SXS_XML_E_UNCLOSEDCOMMENT = (int)14063L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_XML_E_UNCLOSEDCOMMENT 14063
     * }
     */
    public static int ERROR_SXS_XML_E_UNCLOSEDCOMMENT() {
        return ERROR_SXS_XML_E_UNCLOSEDCOMMENT;
    }
    private static final int ERROR_SXS_XML_E_UNCLOSEDDECL = (int)14064L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_XML_E_UNCLOSEDDECL 14064
     * }
     */
    public static int ERROR_SXS_XML_E_UNCLOSEDDECL() {
        return ERROR_SXS_XML_E_UNCLOSEDDECL;
    }
    private static final int ERROR_SXS_XML_E_UNCLOSEDCDATA = (int)14065L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_XML_E_UNCLOSEDCDATA 14065
     * }
     */
    public static int ERROR_SXS_XML_E_UNCLOSEDCDATA() {
        return ERROR_SXS_XML_E_UNCLOSEDCDATA;
    }
    private static final int ERROR_SXS_XML_E_RESERVEDNAMESPACE = (int)14066L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_XML_E_RESERVEDNAMESPACE 14066
     * }
     */
    public static int ERROR_SXS_XML_E_RESERVEDNAMESPACE() {
        return ERROR_SXS_XML_E_RESERVEDNAMESPACE;
    }
    private static final int ERROR_SXS_XML_E_INVALIDENCODING = (int)14067L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_XML_E_INVALIDENCODING 14067
     * }
     */
    public static int ERROR_SXS_XML_E_INVALIDENCODING() {
        return ERROR_SXS_XML_E_INVALIDENCODING;
    }
    private static final int ERROR_SXS_XML_E_INVALIDSWITCH = (int)14068L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_XML_E_INVALIDSWITCH 14068
     * }
     */
    public static int ERROR_SXS_XML_E_INVALIDSWITCH() {
        return ERROR_SXS_XML_E_INVALIDSWITCH;
    }
    private static final int ERROR_SXS_XML_E_BADXMLCASE = (int)14069L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_XML_E_BADXMLCASE 14069
     * }
     */
    public static int ERROR_SXS_XML_E_BADXMLCASE() {
        return ERROR_SXS_XML_E_BADXMLCASE;
    }
    private static final int ERROR_SXS_XML_E_INVALID_STANDALONE = (int)14070L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_XML_E_INVALID_STANDALONE 14070
     * }
     */
    public static int ERROR_SXS_XML_E_INVALID_STANDALONE() {
        return ERROR_SXS_XML_E_INVALID_STANDALONE;
    }
    private static final int ERROR_SXS_XML_E_UNEXPECTED_STANDALONE = (int)14071L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_XML_E_UNEXPECTED_STANDALONE 14071
     * }
     */
    public static int ERROR_SXS_XML_E_UNEXPECTED_STANDALONE() {
        return ERROR_SXS_XML_E_UNEXPECTED_STANDALONE;
    }
    private static final int ERROR_SXS_XML_E_INVALID_VERSION = (int)14072L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_XML_E_INVALID_VERSION 14072
     * }
     */
    public static int ERROR_SXS_XML_E_INVALID_VERSION() {
        return ERROR_SXS_XML_E_INVALID_VERSION;
    }
    private static final int ERROR_SXS_XML_E_MISSINGEQUALS = (int)14073L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_XML_E_MISSINGEQUALS 14073
     * }
     */
    public static int ERROR_SXS_XML_E_MISSINGEQUALS() {
        return ERROR_SXS_XML_E_MISSINGEQUALS;
    }
    private static final int ERROR_SXS_PROTECTION_RECOVERY_FAILED = (int)14074L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_PROTECTION_RECOVERY_FAILED 14074
     * }
     */
    public static int ERROR_SXS_PROTECTION_RECOVERY_FAILED() {
        return ERROR_SXS_PROTECTION_RECOVERY_FAILED;
    }
    private static final int ERROR_SXS_PROTECTION_PUBLIC_KEY_TOO_SHORT = (int)14075L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_PROTECTION_PUBLIC_KEY_TOO_SHORT 14075
     * }
     */
    public static int ERROR_SXS_PROTECTION_PUBLIC_KEY_TOO_SHORT() {
        return ERROR_SXS_PROTECTION_PUBLIC_KEY_TOO_SHORT;
    }
    private static final int ERROR_SXS_PROTECTION_CATALOG_NOT_VALID = (int)14076L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_PROTECTION_CATALOG_NOT_VALID 14076
     * }
     */
    public static int ERROR_SXS_PROTECTION_CATALOG_NOT_VALID() {
        return ERROR_SXS_PROTECTION_CATALOG_NOT_VALID;
    }
    private static final int ERROR_SXS_UNTRANSLATABLE_HRESULT = (int)14077L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_UNTRANSLATABLE_HRESULT 14077
     * }
     */
    public static int ERROR_SXS_UNTRANSLATABLE_HRESULT() {
        return ERROR_SXS_UNTRANSLATABLE_HRESULT;
    }
    private static final int ERROR_SXS_PROTECTION_CATALOG_FILE_MISSING = (int)14078L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_PROTECTION_CATALOG_FILE_MISSING 14078
     * }
     */
    public static int ERROR_SXS_PROTECTION_CATALOG_FILE_MISSING() {
        return ERROR_SXS_PROTECTION_CATALOG_FILE_MISSING;
    }
    private static final int ERROR_SXS_MISSING_ASSEMBLY_IDENTITY_ATTRIBUTE = (int)14079L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_MISSING_ASSEMBLY_IDENTITY_ATTRIBUTE 14079
     * }
     */
    public static int ERROR_SXS_MISSING_ASSEMBLY_IDENTITY_ATTRIBUTE() {
        return ERROR_SXS_MISSING_ASSEMBLY_IDENTITY_ATTRIBUTE;
    }
    private static final int ERROR_SXS_INVALID_ASSEMBLY_IDENTITY_ATTRIBUTE_NAME = (int)14080L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_INVALID_ASSEMBLY_IDENTITY_ATTRIBUTE_NAME 14080
     * }
     */
    public static int ERROR_SXS_INVALID_ASSEMBLY_IDENTITY_ATTRIBUTE_NAME() {
        return ERROR_SXS_INVALID_ASSEMBLY_IDENTITY_ATTRIBUTE_NAME;
    }
    private static final int ERROR_SXS_ASSEMBLY_MISSING = (int)14081L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_ASSEMBLY_MISSING 14081
     * }
     */
    public static int ERROR_SXS_ASSEMBLY_MISSING() {
        return ERROR_SXS_ASSEMBLY_MISSING;
    }
    private static final int ERROR_SXS_CORRUPT_ACTIVATION_STACK = (int)14082L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_CORRUPT_ACTIVATION_STACK 14082
     * }
     */
    public static int ERROR_SXS_CORRUPT_ACTIVATION_STACK() {
        return ERROR_SXS_CORRUPT_ACTIVATION_STACK;
    }
    private static final int ERROR_SXS_CORRUPTION = (int)14083L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_CORRUPTION 14083
     * }
     */
    public static int ERROR_SXS_CORRUPTION() {
        return ERROR_SXS_CORRUPTION;
    }
    private static final int ERROR_SXS_EARLY_DEACTIVATION = (int)14084L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_EARLY_DEACTIVATION 14084
     * }
     */
    public static int ERROR_SXS_EARLY_DEACTIVATION() {
        return ERROR_SXS_EARLY_DEACTIVATION;
    }
    private static final int ERROR_SXS_INVALID_DEACTIVATION = (int)14085L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_INVALID_DEACTIVATION 14085
     * }
     */
    public static int ERROR_SXS_INVALID_DEACTIVATION() {
        return ERROR_SXS_INVALID_DEACTIVATION;
    }
    private static final int ERROR_SXS_MULTIPLE_DEACTIVATION = (int)14086L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_MULTIPLE_DEACTIVATION 14086
     * }
     */
    public static int ERROR_SXS_MULTIPLE_DEACTIVATION() {
        return ERROR_SXS_MULTIPLE_DEACTIVATION;
    }
    private static final int ERROR_SXS_PROCESS_TERMINATION_REQUESTED = (int)14087L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_PROCESS_TERMINATION_REQUESTED 14087
     * }
     */
    public static int ERROR_SXS_PROCESS_TERMINATION_REQUESTED() {
        return ERROR_SXS_PROCESS_TERMINATION_REQUESTED;
    }
    private static final int ERROR_SXS_RELEASE_ACTIVATION_CONTEXT = (int)14088L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_RELEASE_ACTIVATION_CONTEXT 14088
     * }
     */
    public static int ERROR_SXS_RELEASE_ACTIVATION_CONTEXT() {
        return ERROR_SXS_RELEASE_ACTIVATION_CONTEXT;
    }
    private static final int ERROR_SXS_SYSTEM_DEFAULT_ACTIVATION_CONTEXT_EMPTY = (int)14089L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_SYSTEM_DEFAULT_ACTIVATION_CONTEXT_EMPTY 14089
     * }
     */
    public static int ERROR_SXS_SYSTEM_DEFAULT_ACTIVATION_CONTEXT_EMPTY() {
        return ERROR_SXS_SYSTEM_DEFAULT_ACTIVATION_CONTEXT_EMPTY;
    }
    private static final int ERROR_SXS_INVALID_IDENTITY_ATTRIBUTE_VALUE = (int)14090L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_INVALID_IDENTITY_ATTRIBUTE_VALUE 14090
     * }
     */
    public static int ERROR_SXS_INVALID_IDENTITY_ATTRIBUTE_VALUE() {
        return ERROR_SXS_INVALID_IDENTITY_ATTRIBUTE_VALUE;
    }
    private static final int ERROR_SXS_INVALID_IDENTITY_ATTRIBUTE_NAME = (int)14091L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_INVALID_IDENTITY_ATTRIBUTE_NAME 14091
     * }
     */
    public static int ERROR_SXS_INVALID_IDENTITY_ATTRIBUTE_NAME() {
        return ERROR_SXS_INVALID_IDENTITY_ATTRIBUTE_NAME;
    }
    private static final int ERROR_SXS_IDENTITY_DUPLICATE_ATTRIBUTE = (int)14092L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_IDENTITY_DUPLICATE_ATTRIBUTE 14092
     * }
     */
    public static int ERROR_SXS_IDENTITY_DUPLICATE_ATTRIBUTE() {
        return ERROR_SXS_IDENTITY_DUPLICATE_ATTRIBUTE;
    }
    private static final int ERROR_SXS_IDENTITY_PARSE_ERROR = (int)14093L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_IDENTITY_PARSE_ERROR 14093
     * }
     */
    public static int ERROR_SXS_IDENTITY_PARSE_ERROR() {
        return ERROR_SXS_IDENTITY_PARSE_ERROR;
    }
    private static final int ERROR_MALFORMED_SUBSTITUTION_STRING = (int)14094L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MALFORMED_SUBSTITUTION_STRING 14094
     * }
     */
    public static int ERROR_MALFORMED_SUBSTITUTION_STRING() {
        return ERROR_MALFORMED_SUBSTITUTION_STRING;
    }
    private static final int ERROR_SXS_INCORRECT_PUBLIC_KEY_TOKEN = (int)14095L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_INCORRECT_PUBLIC_KEY_TOKEN 14095
     * }
     */
    public static int ERROR_SXS_INCORRECT_PUBLIC_KEY_TOKEN() {
        return ERROR_SXS_INCORRECT_PUBLIC_KEY_TOKEN;
    }
    private static final int ERROR_UNMAPPED_SUBSTITUTION_STRING = (int)14096L;
    /**
     * {@snippet lang=c :
     * #define ERROR_UNMAPPED_SUBSTITUTION_STRING 14096
     * }
     */
    public static int ERROR_UNMAPPED_SUBSTITUTION_STRING() {
        return ERROR_UNMAPPED_SUBSTITUTION_STRING;
    }
    private static final int ERROR_SXS_ASSEMBLY_NOT_LOCKED = (int)14097L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_ASSEMBLY_NOT_LOCKED 14097
     * }
     */
    public static int ERROR_SXS_ASSEMBLY_NOT_LOCKED() {
        return ERROR_SXS_ASSEMBLY_NOT_LOCKED;
    }
    private static final int ERROR_SXS_COMPONENT_STORE_CORRUPT = (int)14098L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_COMPONENT_STORE_CORRUPT 14098
     * }
     */
    public static int ERROR_SXS_COMPONENT_STORE_CORRUPT() {
        return ERROR_SXS_COMPONENT_STORE_CORRUPT;
    }
    private static final int ERROR_ADVANCED_INSTALLER_FAILED = (int)14099L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ADVANCED_INSTALLER_FAILED 14099
     * }
     */
    public static int ERROR_ADVANCED_INSTALLER_FAILED() {
        return ERROR_ADVANCED_INSTALLER_FAILED;
    }
    private static final int ERROR_XML_ENCODING_MISMATCH = (int)14100L;
    /**
     * {@snippet lang=c :
     * #define ERROR_XML_ENCODING_MISMATCH 14100
     * }
     */
    public static int ERROR_XML_ENCODING_MISMATCH() {
        return ERROR_XML_ENCODING_MISMATCH;
    }
    private static final int ERROR_SXS_MANIFEST_IDENTITY_SAME_BUT_CONTENTS_DIFFERENT = (int)14101L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_MANIFEST_IDENTITY_SAME_BUT_CONTENTS_DIFFERENT 14101
     * }
     */
    public static int ERROR_SXS_MANIFEST_IDENTITY_SAME_BUT_CONTENTS_DIFFERENT() {
        return ERROR_SXS_MANIFEST_IDENTITY_SAME_BUT_CONTENTS_DIFFERENT;
    }
    private static final int ERROR_SXS_IDENTITIES_DIFFERENT = (int)14102L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_IDENTITIES_DIFFERENT 14102
     * }
     */
    public static int ERROR_SXS_IDENTITIES_DIFFERENT() {
        return ERROR_SXS_IDENTITIES_DIFFERENT;
    }
    private static final int ERROR_SXS_ASSEMBLY_IS_NOT_A_DEPLOYMENT = (int)14103L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_ASSEMBLY_IS_NOT_A_DEPLOYMENT 14103
     * }
     */
    public static int ERROR_SXS_ASSEMBLY_IS_NOT_A_DEPLOYMENT() {
        return ERROR_SXS_ASSEMBLY_IS_NOT_A_DEPLOYMENT;
    }
    private static final int ERROR_SXS_FILE_NOT_PART_OF_ASSEMBLY = (int)14104L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_FILE_NOT_PART_OF_ASSEMBLY 14104
     * }
     */
    public static int ERROR_SXS_FILE_NOT_PART_OF_ASSEMBLY() {
        return ERROR_SXS_FILE_NOT_PART_OF_ASSEMBLY;
    }
    private static final int ERROR_SXS_MANIFEST_TOO_BIG = (int)14105L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_MANIFEST_TOO_BIG 14105
     * }
     */
    public static int ERROR_SXS_MANIFEST_TOO_BIG() {
        return ERROR_SXS_MANIFEST_TOO_BIG;
    }
    private static final int ERROR_SXS_SETTING_NOT_REGISTERED = (int)14106L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_SETTING_NOT_REGISTERED 14106
     * }
     */
    public static int ERROR_SXS_SETTING_NOT_REGISTERED() {
        return ERROR_SXS_SETTING_NOT_REGISTERED;
    }
    private static final int ERROR_SXS_TRANSACTION_CLOSURE_INCOMPLETE = (int)14107L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_TRANSACTION_CLOSURE_INCOMPLETE 14107
     * }
     */
    public static int ERROR_SXS_TRANSACTION_CLOSURE_INCOMPLETE() {
        return ERROR_SXS_TRANSACTION_CLOSURE_INCOMPLETE;
    }
    private static final int ERROR_SMI_PRIMITIVE_INSTALLER_FAILED = (int)14108L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SMI_PRIMITIVE_INSTALLER_FAILED 14108
     * }
     */
    public static int ERROR_SMI_PRIMITIVE_INSTALLER_FAILED() {
        return ERROR_SMI_PRIMITIVE_INSTALLER_FAILED;
    }
    private static final int ERROR_GENERIC_COMMAND_FAILED = (int)14109L;
    /**
     * {@snippet lang=c :
     * #define ERROR_GENERIC_COMMAND_FAILED 14109
     * }
     */
    public static int ERROR_GENERIC_COMMAND_FAILED() {
        return ERROR_GENERIC_COMMAND_FAILED;
    }
    private static final int ERROR_SXS_FILE_HASH_MISSING = (int)14110L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_FILE_HASH_MISSING 14110
     * }
     */
    public static int ERROR_SXS_FILE_HASH_MISSING() {
        return ERROR_SXS_FILE_HASH_MISSING;
    }
    private static final int ERROR_SXS_DUPLICATE_ACTIVATABLE_CLASS = (int)14111L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SXS_DUPLICATE_ACTIVATABLE_CLASS 14111
     * }
     */
    public static int ERROR_SXS_DUPLICATE_ACTIVATABLE_CLASS() {
        return ERROR_SXS_DUPLICATE_ACTIVATABLE_CLASS;
    }
    private static final int ERROR_EVT_INVALID_CHANNEL_PATH = (int)15000L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EVT_INVALID_CHANNEL_PATH 15000
     * }
     */
    public static int ERROR_EVT_INVALID_CHANNEL_PATH() {
        return ERROR_EVT_INVALID_CHANNEL_PATH;
    }
    private static final int ERROR_EVT_INVALID_QUERY = (int)15001L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EVT_INVALID_QUERY 15001
     * }
     */
    public static int ERROR_EVT_INVALID_QUERY() {
        return ERROR_EVT_INVALID_QUERY;
    }
    private static final int ERROR_EVT_PUBLISHER_METADATA_NOT_FOUND = (int)15002L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EVT_PUBLISHER_METADATA_NOT_FOUND 15002
     * }
     */
    public static int ERROR_EVT_PUBLISHER_METADATA_NOT_FOUND() {
        return ERROR_EVT_PUBLISHER_METADATA_NOT_FOUND;
    }
    private static final int ERROR_EVT_EVENT_TEMPLATE_NOT_FOUND = (int)15003L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EVT_EVENT_TEMPLATE_NOT_FOUND 15003
     * }
     */
    public static int ERROR_EVT_EVENT_TEMPLATE_NOT_FOUND() {
        return ERROR_EVT_EVENT_TEMPLATE_NOT_FOUND;
    }
    private static final int ERROR_EVT_INVALID_PUBLISHER_NAME = (int)15004L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EVT_INVALID_PUBLISHER_NAME 15004
     * }
     */
    public static int ERROR_EVT_INVALID_PUBLISHER_NAME() {
        return ERROR_EVT_INVALID_PUBLISHER_NAME;
    }
    private static final int ERROR_EVT_INVALID_EVENT_DATA = (int)15005L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EVT_INVALID_EVENT_DATA 15005
     * }
     */
    public static int ERROR_EVT_INVALID_EVENT_DATA() {
        return ERROR_EVT_INVALID_EVENT_DATA;
    }
    private static final int ERROR_EVT_CHANNEL_NOT_FOUND = (int)15007L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EVT_CHANNEL_NOT_FOUND 15007
     * }
     */
    public static int ERROR_EVT_CHANNEL_NOT_FOUND() {
        return ERROR_EVT_CHANNEL_NOT_FOUND;
    }
    private static final int ERROR_EVT_MALFORMED_XML_TEXT = (int)15008L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EVT_MALFORMED_XML_TEXT 15008
     * }
     */
    public static int ERROR_EVT_MALFORMED_XML_TEXT() {
        return ERROR_EVT_MALFORMED_XML_TEXT;
    }
    private static final int ERROR_EVT_SUBSCRIPTION_TO_DIRECT_CHANNEL = (int)15009L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EVT_SUBSCRIPTION_TO_DIRECT_CHANNEL 15009
     * }
     */
    public static int ERROR_EVT_SUBSCRIPTION_TO_DIRECT_CHANNEL() {
        return ERROR_EVT_SUBSCRIPTION_TO_DIRECT_CHANNEL;
    }
    private static final int ERROR_EVT_CONFIGURATION_ERROR = (int)15010L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EVT_CONFIGURATION_ERROR 15010
     * }
     */
    public static int ERROR_EVT_CONFIGURATION_ERROR() {
        return ERROR_EVT_CONFIGURATION_ERROR;
    }
    private static final int ERROR_EVT_QUERY_RESULT_STALE = (int)15011L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EVT_QUERY_RESULT_STALE 15011
     * }
     */
    public static int ERROR_EVT_QUERY_RESULT_STALE() {
        return ERROR_EVT_QUERY_RESULT_STALE;
    }
    private static final int ERROR_EVT_QUERY_RESULT_INVALID_POSITION = (int)15012L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EVT_QUERY_RESULT_INVALID_POSITION 15012
     * }
     */
    public static int ERROR_EVT_QUERY_RESULT_INVALID_POSITION() {
        return ERROR_EVT_QUERY_RESULT_INVALID_POSITION;
    }
    private static final int ERROR_EVT_NON_VALIDATING_MSXML = (int)15013L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EVT_NON_VALIDATING_MSXML 15013
     * }
     */
    public static int ERROR_EVT_NON_VALIDATING_MSXML() {
        return ERROR_EVT_NON_VALIDATING_MSXML;
    }
    private static final int ERROR_EVT_FILTER_ALREADYSCOPED = (int)15014L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EVT_FILTER_ALREADYSCOPED 15014
     * }
     */
    public static int ERROR_EVT_FILTER_ALREADYSCOPED() {
        return ERROR_EVT_FILTER_ALREADYSCOPED;
    }
    private static final int ERROR_EVT_FILTER_NOTELTSET = (int)15015L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EVT_FILTER_NOTELTSET 15015
     * }
     */
    public static int ERROR_EVT_FILTER_NOTELTSET() {
        return ERROR_EVT_FILTER_NOTELTSET;
    }
    private static final int ERROR_EVT_FILTER_INVARG = (int)15016L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EVT_FILTER_INVARG 15016
     * }
     */
    public static int ERROR_EVT_FILTER_INVARG() {
        return ERROR_EVT_FILTER_INVARG;
    }
    private static final int ERROR_EVT_FILTER_INVTEST = (int)15017L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EVT_FILTER_INVTEST 15017
     * }
     */
    public static int ERROR_EVT_FILTER_INVTEST() {
        return ERROR_EVT_FILTER_INVTEST;
    }
    private static final int ERROR_EVT_FILTER_INVTYPE = (int)15018L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EVT_FILTER_INVTYPE 15018
     * }
     */
    public static int ERROR_EVT_FILTER_INVTYPE() {
        return ERROR_EVT_FILTER_INVTYPE;
    }
    private static final int ERROR_EVT_FILTER_PARSEERR = (int)15019L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EVT_FILTER_PARSEERR 15019
     * }
     */
    public static int ERROR_EVT_FILTER_PARSEERR() {
        return ERROR_EVT_FILTER_PARSEERR;
    }
    private static final int ERROR_EVT_FILTER_UNSUPPORTEDOP = (int)15020L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EVT_FILTER_UNSUPPORTEDOP 15020
     * }
     */
    public static int ERROR_EVT_FILTER_UNSUPPORTEDOP() {
        return ERROR_EVT_FILTER_UNSUPPORTEDOP;
    }
    private static final int ERROR_EVT_FILTER_UNEXPECTEDTOKEN = (int)15021L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EVT_FILTER_UNEXPECTEDTOKEN 15021
     * }
     */
    public static int ERROR_EVT_FILTER_UNEXPECTEDTOKEN() {
        return ERROR_EVT_FILTER_UNEXPECTEDTOKEN;
    }
    private static final int ERROR_EVT_INVALID_OPERATION_OVER_ENABLED_DIRECT_CHANNEL = (int)15022L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EVT_INVALID_OPERATION_OVER_ENABLED_DIRECT_CHANNEL 15022
     * }
     */
    public static int ERROR_EVT_INVALID_OPERATION_OVER_ENABLED_DIRECT_CHANNEL() {
        return ERROR_EVT_INVALID_OPERATION_OVER_ENABLED_DIRECT_CHANNEL;
    }
    private static final int ERROR_EVT_INVALID_CHANNEL_PROPERTY_VALUE = (int)15023L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EVT_INVALID_CHANNEL_PROPERTY_VALUE 15023
     * }
     */
    public static int ERROR_EVT_INVALID_CHANNEL_PROPERTY_VALUE() {
        return ERROR_EVT_INVALID_CHANNEL_PROPERTY_VALUE;
    }
    private static final int ERROR_EVT_INVALID_PUBLISHER_PROPERTY_VALUE = (int)15024L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EVT_INVALID_PUBLISHER_PROPERTY_VALUE 15024
     * }
     */
    public static int ERROR_EVT_INVALID_PUBLISHER_PROPERTY_VALUE() {
        return ERROR_EVT_INVALID_PUBLISHER_PROPERTY_VALUE;
    }
    private static final int ERROR_EVT_CHANNEL_CANNOT_ACTIVATE = (int)15025L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EVT_CHANNEL_CANNOT_ACTIVATE 15025
     * }
     */
    public static int ERROR_EVT_CHANNEL_CANNOT_ACTIVATE() {
        return ERROR_EVT_CHANNEL_CANNOT_ACTIVATE;
    }
    private static final int ERROR_EVT_FILTER_TOO_COMPLEX = (int)15026L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EVT_FILTER_TOO_COMPLEX 15026
     * }
     */
    public static int ERROR_EVT_FILTER_TOO_COMPLEX() {
        return ERROR_EVT_FILTER_TOO_COMPLEX;
    }
    private static final int ERROR_EVT_MESSAGE_NOT_FOUND = (int)15027L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EVT_MESSAGE_NOT_FOUND 15027
     * }
     */
    public static int ERROR_EVT_MESSAGE_NOT_FOUND() {
        return ERROR_EVT_MESSAGE_NOT_FOUND;
    }
    private static final int ERROR_EVT_MESSAGE_ID_NOT_FOUND = (int)15028L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EVT_MESSAGE_ID_NOT_FOUND 15028
     * }
     */
    public static int ERROR_EVT_MESSAGE_ID_NOT_FOUND() {
        return ERROR_EVT_MESSAGE_ID_NOT_FOUND;
    }
    private static final int ERROR_EVT_UNRESOLVED_VALUE_INSERT = (int)15029L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EVT_UNRESOLVED_VALUE_INSERT 15029
     * }
     */
    public static int ERROR_EVT_UNRESOLVED_VALUE_INSERT() {
        return ERROR_EVT_UNRESOLVED_VALUE_INSERT;
    }
    private static final int ERROR_EVT_UNRESOLVED_PARAMETER_INSERT = (int)15030L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EVT_UNRESOLVED_PARAMETER_INSERT 15030
     * }
     */
    public static int ERROR_EVT_UNRESOLVED_PARAMETER_INSERT() {
        return ERROR_EVT_UNRESOLVED_PARAMETER_INSERT;
    }
    private static final int ERROR_EVT_MAX_INSERTS_REACHED = (int)15031L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EVT_MAX_INSERTS_REACHED 15031
     * }
     */
    public static int ERROR_EVT_MAX_INSERTS_REACHED() {
        return ERROR_EVT_MAX_INSERTS_REACHED;
    }
    private static final int ERROR_EVT_EVENT_DEFINITION_NOT_FOUND = (int)15032L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EVT_EVENT_DEFINITION_NOT_FOUND 15032
     * }
     */
    public static int ERROR_EVT_EVENT_DEFINITION_NOT_FOUND() {
        return ERROR_EVT_EVENT_DEFINITION_NOT_FOUND;
    }
    private static final int ERROR_EVT_MESSAGE_LOCALE_NOT_FOUND = (int)15033L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EVT_MESSAGE_LOCALE_NOT_FOUND 15033
     * }
     */
    public static int ERROR_EVT_MESSAGE_LOCALE_NOT_FOUND() {
        return ERROR_EVT_MESSAGE_LOCALE_NOT_FOUND;
    }
    private static final int ERROR_EVT_VERSION_TOO_OLD = (int)15034L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EVT_VERSION_TOO_OLD 15034
     * }
     */
    public static int ERROR_EVT_VERSION_TOO_OLD() {
        return ERROR_EVT_VERSION_TOO_OLD;
    }
    private static final int ERROR_EVT_VERSION_TOO_NEW = (int)15035L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EVT_VERSION_TOO_NEW 15035
     * }
     */
    public static int ERROR_EVT_VERSION_TOO_NEW() {
        return ERROR_EVT_VERSION_TOO_NEW;
    }
    private static final int ERROR_EVT_CANNOT_OPEN_CHANNEL_OF_QUERY = (int)15036L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EVT_CANNOT_OPEN_CHANNEL_OF_QUERY 15036
     * }
     */
    public static int ERROR_EVT_CANNOT_OPEN_CHANNEL_OF_QUERY() {
        return ERROR_EVT_CANNOT_OPEN_CHANNEL_OF_QUERY;
    }
    private static final int ERROR_EVT_PUBLISHER_DISABLED = (int)15037L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EVT_PUBLISHER_DISABLED 15037
     * }
     */
    public static int ERROR_EVT_PUBLISHER_DISABLED() {
        return ERROR_EVT_PUBLISHER_DISABLED;
    }
    private static final int ERROR_EVT_FILTER_OUT_OF_RANGE = (int)15038L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EVT_FILTER_OUT_OF_RANGE 15038
     * }
     */
    public static int ERROR_EVT_FILTER_OUT_OF_RANGE() {
        return ERROR_EVT_FILTER_OUT_OF_RANGE;
    }
    private static final int ERROR_EC_SUBSCRIPTION_CANNOT_ACTIVATE = (int)15080L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EC_SUBSCRIPTION_CANNOT_ACTIVATE 15080
     * }
     */
    public static int ERROR_EC_SUBSCRIPTION_CANNOT_ACTIVATE() {
        return ERROR_EC_SUBSCRIPTION_CANNOT_ACTIVATE;
    }
    private static final int ERROR_EC_LOG_DISABLED = (int)15081L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EC_LOG_DISABLED 15081
     * }
     */
    public static int ERROR_EC_LOG_DISABLED() {
        return ERROR_EC_LOG_DISABLED;
    }
    private static final int ERROR_EC_CIRCULAR_FORWARDING = (int)15082L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EC_CIRCULAR_FORWARDING 15082
     * }
     */
    public static int ERROR_EC_CIRCULAR_FORWARDING() {
        return ERROR_EC_CIRCULAR_FORWARDING;
    }
    private static final int ERROR_EC_CREDSTORE_FULL = (int)15083L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EC_CREDSTORE_FULL 15083
     * }
     */
    public static int ERROR_EC_CREDSTORE_FULL() {
        return ERROR_EC_CREDSTORE_FULL;
    }
    private static final int ERROR_EC_CRED_NOT_FOUND = (int)15084L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EC_CRED_NOT_FOUND 15084
     * }
     */
    public static int ERROR_EC_CRED_NOT_FOUND() {
        return ERROR_EC_CRED_NOT_FOUND;
    }
    private static final int ERROR_EC_NO_ACTIVE_CHANNEL = (int)15085L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EC_NO_ACTIVE_CHANNEL 15085
     * }
     */
    public static int ERROR_EC_NO_ACTIVE_CHANNEL() {
        return ERROR_EC_NO_ACTIVE_CHANNEL;
    }
    private static final int ERROR_MUI_FILE_NOT_FOUND = (int)15100L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MUI_FILE_NOT_FOUND 15100
     * }
     */
    public static int ERROR_MUI_FILE_NOT_FOUND() {
        return ERROR_MUI_FILE_NOT_FOUND;
    }
    private static final int ERROR_MUI_INVALID_FILE = (int)15101L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MUI_INVALID_FILE 15101
     * }
     */
    public static int ERROR_MUI_INVALID_FILE() {
        return ERROR_MUI_INVALID_FILE;
    }
    private static final int ERROR_MUI_INVALID_RC_CONFIG = (int)15102L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MUI_INVALID_RC_CONFIG 15102
     * }
     */
    public static int ERROR_MUI_INVALID_RC_CONFIG() {
        return ERROR_MUI_INVALID_RC_CONFIG;
    }
    private static final int ERROR_MUI_INVALID_LOCALE_NAME = (int)15103L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MUI_INVALID_LOCALE_NAME 15103
     * }
     */
    public static int ERROR_MUI_INVALID_LOCALE_NAME() {
        return ERROR_MUI_INVALID_LOCALE_NAME;
    }
    private static final int ERROR_MUI_INVALID_ULTIMATEFALLBACK_NAME = (int)15104L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MUI_INVALID_ULTIMATEFALLBACK_NAME 15104
     * }
     */
    public static int ERROR_MUI_INVALID_ULTIMATEFALLBACK_NAME() {
        return ERROR_MUI_INVALID_ULTIMATEFALLBACK_NAME;
    }
    private static final int ERROR_MUI_FILE_NOT_LOADED = (int)15105L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MUI_FILE_NOT_LOADED 15105
     * }
     */
    public static int ERROR_MUI_FILE_NOT_LOADED() {
        return ERROR_MUI_FILE_NOT_LOADED;
    }
    private static final int ERROR_RESOURCE_ENUM_USER_STOP = (int)15106L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RESOURCE_ENUM_USER_STOP 15106
     * }
     */
    public static int ERROR_RESOURCE_ENUM_USER_STOP() {
        return ERROR_RESOURCE_ENUM_USER_STOP;
    }
    private static final int ERROR_MUI_INTLSETTINGS_UILANG_NOT_INSTALLED = (int)15107L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MUI_INTLSETTINGS_UILANG_NOT_INSTALLED 15107
     * }
     */
    public static int ERROR_MUI_INTLSETTINGS_UILANG_NOT_INSTALLED() {
        return ERROR_MUI_INTLSETTINGS_UILANG_NOT_INSTALLED;
    }
    private static final int ERROR_MUI_INTLSETTINGS_INVALID_LOCALE_NAME = (int)15108L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MUI_INTLSETTINGS_INVALID_LOCALE_NAME 15108
     * }
     */
    public static int ERROR_MUI_INTLSETTINGS_INVALID_LOCALE_NAME() {
        return ERROR_MUI_INTLSETTINGS_INVALID_LOCALE_NAME;
    }
    private static final int ERROR_MRM_RUNTIME_NO_DEFAULT_OR_NEUTRAL_RESOURCE = (int)15110L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MRM_RUNTIME_NO_DEFAULT_OR_NEUTRAL_RESOURCE 15110
     * }
     */
    public static int ERROR_MRM_RUNTIME_NO_DEFAULT_OR_NEUTRAL_RESOURCE() {
        return ERROR_MRM_RUNTIME_NO_DEFAULT_OR_NEUTRAL_RESOURCE;
    }
    private static final int ERROR_MRM_INVALID_PRICONFIG = (int)15111L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MRM_INVALID_PRICONFIG 15111
     * }
     */
    public static int ERROR_MRM_INVALID_PRICONFIG() {
        return ERROR_MRM_INVALID_PRICONFIG;
    }
    private static final int ERROR_MRM_INVALID_FILE_TYPE = (int)15112L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MRM_INVALID_FILE_TYPE 15112
     * }
     */
    public static int ERROR_MRM_INVALID_FILE_TYPE() {
        return ERROR_MRM_INVALID_FILE_TYPE;
    }
    private static final int ERROR_MRM_UNKNOWN_QUALIFIER = (int)15113L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MRM_UNKNOWN_QUALIFIER 15113
     * }
     */
    public static int ERROR_MRM_UNKNOWN_QUALIFIER() {
        return ERROR_MRM_UNKNOWN_QUALIFIER;
    }
    private static final int ERROR_MRM_INVALID_QUALIFIER_VALUE = (int)15114L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MRM_INVALID_QUALIFIER_VALUE 15114
     * }
     */
    public static int ERROR_MRM_INVALID_QUALIFIER_VALUE() {
        return ERROR_MRM_INVALID_QUALIFIER_VALUE;
    }
    private static final int ERROR_MRM_NO_CANDIDATE = (int)15115L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MRM_NO_CANDIDATE 15115
     * }
     */
    public static int ERROR_MRM_NO_CANDIDATE() {
        return ERROR_MRM_NO_CANDIDATE;
    }
    private static final int ERROR_MRM_NO_MATCH_OR_DEFAULT_CANDIDATE = (int)15116L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MRM_NO_MATCH_OR_DEFAULT_CANDIDATE 15116
     * }
     */
    public static int ERROR_MRM_NO_MATCH_OR_DEFAULT_CANDIDATE() {
        return ERROR_MRM_NO_MATCH_OR_DEFAULT_CANDIDATE;
    }
    private static final int ERROR_MRM_RESOURCE_TYPE_MISMATCH = (int)15117L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MRM_RESOURCE_TYPE_MISMATCH 15117
     * }
     */
    public static int ERROR_MRM_RESOURCE_TYPE_MISMATCH() {
        return ERROR_MRM_RESOURCE_TYPE_MISMATCH;
    }
    private static final int ERROR_MRM_DUPLICATE_MAP_NAME = (int)15118L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MRM_DUPLICATE_MAP_NAME 15118
     * }
     */
    public static int ERROR_MRM_DUPLICATE_MAP_NAME() {
        return ERROR_MRM_DUPLICATE_MAP_NAME;
    }
    private static final int ERROR_MRM_DUPLICATE_ENTRY = (int)15119L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MRM_DUPLICATE_ENTRY 15119
     * }
     */
    public static int ERROR_MRM_DUPLICATE_ENTRY() {
        return ERROR_MRM_DUPLICATE_ENTRY;
    }
    private static final int ERROR_MRM_INVALID_RESOURCE_IDENTIFIER = (int)15120L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MRM_INVALID_RESOURCE_IDENTIFIER 15120
     * }
     */
    public static int ERROR_MRM_INVALID_RESOURCE_IDENTIFIER() {
        return ERROR_MRM_INVALID_RESOURCE_IDENTIFIER;
    }
    private static final int ERROR_MRM_FILEPATH_TOO_LONG = (int)15121L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MRM_FILEPATH_TOO_LONG 15121
     * }
     */
    public static int ERROR_MRM_FILEPATH_TOO_LONG() {
        return ERROR_MRM_FILEPATH_TOO_LONG;
    }
    private static final int ERROR_MRM_UNSUPPORTED_DIRECTORY_TYPE = (int)15122L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MRM_UNSUPPORTED_DIRECTORY_TYPE 15122
     * }
     */
    public static int ERROR_MRM_UNSUPPORTED_DIRECTORY_TYPE() {
        return ERROR_MRM_UNSUPPORTED_DIRECTORY_TYPE;
    }
    private static final int ERROR_MRM_INVALID_PRI_FILE = (int)15126L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MRM_INVALID_PRI_FILE 15126
     * }
     */
    public static int ERROR_MRM_INVALID_PRI_FILE() {
        return ERROR_MRM_INVALID_PRI_FILE;
    }
    private static final int ERROR_MRM_NAMED_RESOURCE_NOT_FOUND = (int)15127L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MRM_NAMED_RESOURCE_NOT_FOUND 15127
     * }
     */
    public static int ERROR_MRM_NAMED_RESOURCE_NOT_FOUND() {
        return ERROR_MRM_NAMED_RESOURCE_NOT_FOUND;
    }
    private static final int ERROR_MRM_MAP_NOT_FOUND = (int)15135L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MRM_MAP_NOT_FOUND 15135
     * }
     */
    public static int ERROR_MRM_MAP_NOT_FOUND() {
        return ERROR_MRM_MAP_NOT_FOUND;
    }
    private static final int ERROR_MRM_UNSUPPORTED_PROFILE_TYPE = (int)15136L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MRM_UNSUPPORTED_PROFILE_TYPE 15136
     * }
     */
    public static int ERROR_MRM_UNSUPPORTED_PROFILE_TYPE() {
        return ERROR_MRM_UNSUPPORTED_PROFILE_TYPE;
    }
    private static final int ERROR_MRM_INVALID_QUALIFIER_OPERATOR = (int)15137L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MRM_INVALID_QUALIFIER_OPERATOR 15137
     * }
     */
    public static int ERROR_MRM_INVALID_QUALIFIER_OPERATOR() {
        return ERROR_MRM_INVALID_QUALIFIER_OPERATOR;
    }
    private static final int ERROR_MRM_INDETERMINATE_QUALIFIER_VALUE = (int)15138L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MRM_INDETERMINATE_QUALIFIER_VALUE 15138
     * }
     */
    public static int ERROR_MRM_INDETERMINATE_QUALIFIER_VALUE() {
        return ERROR_MRM_INDETERMINATE_QUALIFIER_VALUE;
    }
    private static final int ERROR_MRM_AUTOMERGE_ENABLED = (int)15139L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MRM_AUTOMERGE_ENABLED 15139
     * }
     */
    public static int ERROR_MRM_AUTOMERGE_ENABLED() {
        return ERROR_MRM_AUTOMERGE_ENABLED;
    }
    private static final int ERROR_MRM_TOO_MANY_RESOURCES = (int)15140L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MRM_TOO_MANY_RESOURCES 15140
     * }
     */
    public static int ERROR_MRM_TOO_MANY_RESOURCES() {
        return ERROR_MRM_TOO_MANY_RESOURCES;
    }
    private static final int ERROR_MRM_UNSUPPORTED_FILE_TYPE_FOR_MERGE = (int)15141L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MRM_UNSUPPORTED_FILE_TYPE_FOR_MERGE 15141
     * }
     */
    public static int ERROR_MRM_UNSUPPORTED_FILE_TYPE_FOR_MERGE() {
        return ERROR_MRM_UNSUPPORTED_FILE_TYPE_FOR_MERGE;
    }
    private static final int ERROR_MRM_UNSUPPORTED_FILE_TYPE_FOR_LOAD_UNLOAD_PRI_FILE = (int)15142L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MRM_UNSUPPORTED_FILE_TYPE_FOR_LOAD_UNLOAD_PRI_FILE 15142
     * }
     */
    public static int ERROR_MRM_UNSUPPORTED_FILE_TYPE_FOR_LOAD_UNLOAD_PRI_FILE() {
        return ERROR_MRM_UNSUPPORTED_FILE_TYPE_FOR_LOAD_UNLOAD_PRI_FILE;
    }
    private static final int ERROR_MRM_NO_CURRENT_VIEW_ON_THREAD = (int)15143L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MRM_NO_CURRENT_VIEW_ON_THREAD 15143
     * }
     */
    public static int ERROR_MRM_NO_CURRENT_VIEW_ON_THREAD() {
        return ERROR_MRM_NO_CURRENT_VIEW_ON_THREAD;
    }
    private static final int ERROR_DIFFERENT_PROFILE_RESOURCE_MANAGER_EXIST = (int)15144L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DIFFERENT_PROFILE_RESOURCE_MANAGER_EXIST 15144
     * }
     */
    public static int ERROR_DIFFERENT_PROFILE_RESOURCE_MANAGER_EXIST() {
        return ERROR_DIFFERENT_PROFILE_RESOURCE_MANAGER_EXIST;
    }
    private static final int ERROR_OPERATION_NOT_ALLOWED_FROM_SYSTEM_COMPONENT = (int)15145L;
    /**
     * {@snippet lang=c :
     * #define ERROR_OPERATION_NOT_ALLOWED_FROM_SYSTEM_COMPONENT 15145
     * }
     */
    public static int ERROR_OPERATION_NOT_ALLOWED_FROM_SYSTEM_COMPONENT() {
        return ERROR_OPERATION_NOT_ALLOWED_FROM_SYSTEM_COMPONENT;
    }
    private static final int ERROR_MRM_DIRECT_REF_TO_NON_DEFAULT_RESOURCE = (int)15146L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MRM_DIRECT_REF_TO_NON_DEFAULT_RESOURCE 15146
     * }
     */
    public static int ERROR_MRM_DIRECT_REF_TO_NON_DEFAULT_RESOURCE() {
        return ERROR_MRM_DIRECT_REF_TO_NON_DEFAULT_RESOURCE;
    }
    private static final int ERROR_MRM_GENERATION_COUNT_MISMATCH = (int)15147L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MRM_GENERATION_COUNT_MISMATCH 15147
     * }
     */
    public static int ERROR_MRM_GENERATION_COUNT_MISMATCH() {
        return ERROR_MRM_GENERATION_COUNT_MISMATCH;
    }
    private static final int ERROR_PRI_MERGE_VERSION_MISMATCH = (int)15148L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PRI_MERGE_VERSION_MISMATCH 15148
     * }
     */
    public static int ERROR_PRI_MERGE_VERSION_MISMATCH() {
        return ERROR_PRI_MERGE_VERSION_MISMATCH;
    }
    private static final int ERROR_PRI_MERGE_MISSING_SCHEMA = (int)15149L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PRI_MERGE_MISSING_SCHEMA 15149
     * }
     */
    public static int ERROR_PRI_MERGE_MISSING_SCHEMA() {
        return ERROR_PRI_MERGE_MISSING_SCHEMA;
    }
    private static final int ERROR_PRI_MERGE_LOAD_FILE_FAILED = (int)15150L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PRI_MERGE_LOAD_FILE_FAILED 15150
     * }
     */
    public static int ERROR_PRI_MERGE_LOAD_FILE_FAILED() {
        return ERROR_PRI_MERGE_LOAD_FILE_FAILED;
    }
    private static final int ERROR_PRI_MERGE_ADD_FILE_FAILED = (int)15151L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PRI_MERGE_ADD_FILE_FAILED 15151
     * }
     */
    public static int ERROR_PRI_MERGE_ADD_FILE_FAILED() {
        return ERROR_PRI_MERGE_ADD_FILE_FAILED;
    }
    private static final int ERROR_PRI_MERGE_WRITE_FILE_FAILED = (int)15152L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PRI_MERGE_WRITE_FILE_FAILED 15152
     * }
     */
    public static int ERROR_PRI_MERGE_WRITE_FILE_FAILED() {
        return ERROR_PRI_MERGE_WRITE_FILE_FAILED;
    }
    private static final int ERROR_PRI_MERGE_MULTIPLE_PACKAGE_FAMILIES_NOT_ALLOWED = (int)15153L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PRI_MERGE_MULTIPLE_PACKAGE_FAMILIES_NOT_ALLOWED 15153
     * }
     */
    public static int ERROR_PRI_MERGE_MULTIPLE_PACKAGE_FAMILIES_NOT_ALLOWED() {
        return ERROR_PRI_MERGE_MULTIPLE_PACKAGE_FAMILIES_NOT_ALLOWED;
    }
    private static final int ERROR_PRI_MERGE_MULTIPLE_MAIN_PACKAGES_NOT_ALLOWED = (int)15154L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PRI_MERGE_MULTIPLE_MAIN_PACKAGES_NOT_ALLOWED 15154
     * }
     */
    public static int ERROR_PRI_MERGE_MULTIPLE_MAIN_PACKAGES_NOT_ALLOWED() {
        return ERROR_PRI_MERGE_MULTIPLE_MAIN_PACKAGES_NOT_ALLOWED;
    }
    private static final int ERROR_PRI_MERGE_BUNDLE_PACKAGES_NOT_ALLOWED = (int)15155L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PRI_MERGE_BUNDLE_PACKAGES_NOT_ALLOWED 15155
     * }
     */
    public static int ERROR_PRI_MERGE_BUNDLE_PACKAGES_NOT_ALLOWED() {
        return ERROR_PRI_MERGE_BUNDLE_PACKAGES_NOT_ALLOWED;
    }
    private static final int ERROR_PRI_MERGE_MAIN_PACKAGE_REQUIRED = (int)15156L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PRI_MERGE_MAIN_PACKAGE_REQUIRED 15156
     * }
     */
    public static int ERROR_PRI_MERGE_MAIN_PACKAGE_REQUIRED() {
        return ERROR_PRI_MERGE_MAIN_PACKAGE_REQUIRED;
    }
    private static final int ERROR_PRI_MERGE_RESOURCE_PACKAGE_REQUIRED = (int)15157L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PRI_MERGE_RESOURCE_PACKAGE_REQUIRED 15157
     * }
     */
    public static int ERROR_PRI_MERGE_RESOURCE_PACKAGE_REQUIRED() {
        return ERROR_PRI_MERGE_RESOURCE_PACKAGE_REQUIRED;
    }
    private static final int ERROR_PRI_MERGE_INVALID_FILE_NAME = (int)15158L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PRI_MERGE_INVALID_FILE_NAME 15158
     * }
     */
    public static int ERROR_PRI_MERGE_INVALID_FILE_NAME() {
        return ERROR_PRI_MERGE_INVALID_FILE_NAME;
    }
    private static final int ERROR_MRM_PACKAGE_NOT_FOUND = (int)15159L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MRM_PACKAGE_NOT_FOUND 15159
     * }
     */
    public static int ERROR_MRM_PACKAGE_NOT_FOUND() {
        return ERROR_MRM_PACKAGE_NOT_FOUND;
    }
    private static final int ERROR_MRM_MISSING_DEFAULT_LANGUAGE = (int)15160L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MRM_MISSING_DEFAULT_LANGUAGE 15160
     * }
     */
    public static int ERROR_MRM_MISSING_DEFAULT_LANGUAGE() {
        return ERROR_MRM_MISSING_DEFAULT_LANGUAGE;
    }
    private static final int ERROR_MRM_SCOPE_ITEM_CONFLICT = (int)15161L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MRM_SCOPE_ITEM_CONFLICT 15161
     * }
     */
    public static int ERROR_MRM_SCOPE_ITEM_CONFLICT() {
        return ERROR_MRM_SCOPE_ITEM_CONFLICT;
    }
    private static final int ERROR_MCA_INVALID_CAPABILITIES_STRING = (int)15200L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MCA_INVALID_CAPABILITIES_STRING 15200
     * }
     */
    public static int ERROR_MCA_INVALID_CAPABILITIES_STRING() {
        return ERROR_MCA_INVALID_CAPABILITIES_STRING;
    }
    private static final int ERROR_MCA_INVALID_VCP_VERSION = (int)15201L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MCA_INVALID_VCP_VERSION 15201
     * }
     */
    public static int ERROR_MCA_INVALID_VCP_VERSION() {
        return ERROR_MCA_INVALID_VCP_VERSION;
    }
    private static final int ERROR_MCA_MONITOR_VIOLATES_MCCS_SPECIFICATION = (int)15202L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MCA_MONITOR_VIOLATES_MCCS_SPECIFICATION 15202
     * }
     */
    public static int ERROR_MCA_MONITOR_VIOLATES_MCCS_SPECIFICATION() {
        return ERROR_MCA_MONITOR_VIOLATES_MCCS_SPECIFICATION;
    }
    private static final int ERROR_MCA_MCCS_VERSION_MISMATCH = (int)15203L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MCA_MCCS_VERSION_MISMATCH 15203
     * }
     */
    public static int ERROR_MCA_MCCS_VERSION_MISMATCH() {
        return ERROR_MCA_MCCS_VERSION_MISMATCH;
    }
    private static final int ERROR_MCA_UNSUPPORTED_MCCS_VERSION = (int)15204L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MCA_UNSUPPORTED_MCCS_VERSION 15204
     * }
     */
    public static int ERROR_MCA_UNSUPPORTED_MCCS_VERSION() {
        return ERROR_MCA_UNSUPPORTED_MCCS_VERSION;
    }
    private static final int ERROR_MCA_INTERNAL_ERROR = (int)15205L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MCA_INTERNAL_ERROR 15205
     * }
     */
    public static int ERROR_MCA_INTERNAL_ERROR() {
        return ERROR_MCA_INTERNAL_ERROR;
    }
    private static final int ERROR_MCA_INVALID_TECHNOLOGY_TYPE_RETURNED = (int)15206L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MCA_INVALID_TECHNOLOGY_TYPE_RETURNED 15206
     * }
     */
    public static int ERROR_MCA_INVALID_TECHNOLOGY_TYPE_RETURNED() {
        return ERROR_MCA_INVALID_TECHNOLOGY_TYPE_RETURNED;
    }
    private static final int ERROR_MCA_UNSUPPORTED_COLOR_TEMPERATURE = (int)15207L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MCA_UNSUPPORTED_COLOR_TEMPERATURE 15207
     * }
     */
    public static int ERROR_MCA_UNSUPPORTED_COLOR_TEMPERATURE() {
        return ERROR_MCA_UNSUPPORTED_COLOR_TEMPERATURE;
    }
    private static final int ERROR_AMBIGUOUS_SYSTEM_DEVICE = (int)15250L;
    /**
     * {@snippet lang=c :
     * #define ERROR_AMBIGUOUS_SYSTEM_DEVICE 15250
     * }
     */
    public static int ERROR_AMBIGUOUS_SYSTEM_DEVICE() {
        return ERROR_AMBIGUOUS_SYSTEM_DEVICE;
    }
    private static final int ERROR_SYSTEM_DEVICE_NOT_FOUND = (int)15299L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SYSTEM_DEVICE_NOT_FOUND 15299
     * }
     */
    public static int ERROR_SYSTEM_DEVICE_NOT_FOUND() {
        return ERROR_SYSTEM_DEVICE_NOT_FOUND;
    }
    private static final int ERROR_HASH_NOT_SUPPORTED = (int)15300L;
    /**
     * {@snippet lang=c :
     * #define ERROR_HASH_NOT_SUPPORTED 15300
     * }
     */
    public static int ERROR_HASH_NOT_SUPPORTED() {
        return ERROR_HASH_NOT_SUPPORTED;
    }
    private static final int ERROR_HASH_NOT_PRESENT = (int)15301L;
    /**
     * {@snippet lang=c :
     * #define ERROR_HASH_NOT_PRESENT 15301
     * }
     */
    public static int ERROR_HASH_NOT_PRESENT() {
        return ERROR_HASH_NOT_PRESENT;
    }
    private static final int ERROR_SECONDARY_IC_PROVIDER_NOT_REGISTERED = (int)15321L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SECONDARY_IC_PROVIDER_NOT_REGISTERED 15321
     * }
     */
    public static int ERROR_SECONDARY_IC_PROVIDER_NOT_REGISTERED() {
        return ERROR_SECONDARY_IC_PROVIDER_NOT_REGISTERED;
    }
    private static final int ERROR_GPIO_CLIENT_INFORMATION_INVALID = (int)15322L;
    /**
     * {@snippet lang=c :
     * #define ERROR_GPIO_CLIENT_INFORMATION_INVALID 15322
     * }
     */
    public static int ERROR_GPIO_CLIENT_INFORMATION_INVALID() {
        return ERROR_GPIO_CLIENT_INFORMATION_INVALID;
    }
    private static final int ERROR_GPIO_VERSION_NOT_SUPPORTED = (int)15323L;
    /**
     * {@snippet lang=c :
     * #define ERROR_GPIO_VERSION_NOT_SUPPORTED 15323
     * }
     */
    public static int ERROR_GPIO_VERSION_NOT_SUPPORTED() {
        return ERROR_GPIO_VERSION_NOT_SUPPORTED;
    }
    private static final int ERROR_GPIO_INVALID_REGISTRATION_PACKET = (int)15324L;
    /**
     * {@snippet lang=c :
     * #define ERROR_GPIO_INVALID_REGISTRATION_PACKET 15324
     * }
     */
    public static int ERROR_GPIO_INVALID_REGISTRATION_PACKET() {
        return ERROR_GPIO_INVALID_REGISTRATION_PACKET;
    }
    private static final int ERROR_GPIO_OPERATION_DENIED = (int)15325L;
    /**
     * {@snippet lang=c :
     * #define ERROR_GPIO_OPERATION_DENIED 15325
     * }
     */
    public static int ERROR_GPIO_OPERATION_DENIED() {
        return ERROR_GPIO_OPERATION_DENIED;
    }
    private static final int ERROR_GPIO_INCOMPATIBLE_CONNECT_MODE = (int)15326L;
    /**
     * {@snippet lang=c :
     * #define ERROR_GPIO_INCOMPATIBLE_CONNECT_MODE 15326
     * }
     */
    public static int ERROR_GPIO_INCOMPATIBLE_CONNECT_MODE() {
        return ERROR_GPIO_INCOMPATIBLE_CONNECT_MODE;
    }
    private static final int ERROR_GPIO_INTERRUPT_ALREADY_UNMASKED = (int)15327L;
    /**
     * {@snippet lang=c :
     * #define ERROR_GPIO_INTERRUPT_ALREADY_UNMASKED 15327
     * }
     */
    public static int ERROR_GPIO_INTERRUPT_ALREADY_UNMASKED() {
        return ERROR_GPIO_INTERRUPT_ALREADY_UNMASKED;
    }
    private static final int ERROR_CANNOT_SWITCH_RUNLEVEL = (int)15400L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CANNOT_SWITCH_RUNLEVEL 15400
     * }
     */
    public static int ERROR_CANNOT_SWITCH_RUNLEVEL() {
        return ERROR_CANNOT_SWITCH_RUNLEVEL;
    }
    private static final int ERROR_INVALID_RUNLEVEL_SETTING = (int)15401L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_RUNLEVEL_SETTING 15401
     * }
     */
    public static int ERROR_INVALID_RUNLEVEL_SETTING() {
        return ERROR_INVALID_RUNLEVEL_SETTING;
    }
    private static final int ERROR_RUNLEVEL_SWITCH_TIMEOUT = (int)15402L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RUNLEVEL_SWITCH_TIMEOUT 15402
     * }
     */
    public static int ERROR_RUNLEVEL_SWITCH_TIMEOUT() {
        return ERROR_RUNLEVEL_SWITCH_TIMEOUT;
    }
    private static final int ERROR_RUNLEVEL_SWITCH_AGENT_TIMEOUT = (int)15403L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RUNLEVEL_SWITCH_AGENT_TIMEOUT 15403
     * }
     */
    public static int ERROR_RUNLEVEL_SWITCH_AGENT_TIMEOUT() {
        return ERROR_RUNLEVEL_SWITCH_AGENT_TIMEOUT;
    }
    private static final int ERROR_RUNLEVEL_SWITCH_IN_PROGRESS = (int)15404L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RUNLEVEL_SWITCH_IN_PROGRESS 15404
     * }
     */
    public static int ERROR_RUNLEVEL_SWITCH_IN_PROGRESS() {
        return ERROR_RUNLEVEL_SWITCH_IN_PROGRESS;
    }
    private static final int ERROR_SERVICES_FAILED_AUTOSTART = (int)15405L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SERVICES_FAILED_AUTOSTART 15405
     * }
     */
    public static int ERROR_SERVICES_FAILED_AUTOSTART() {
        return ERROR_SERVICES_FAILED_AUTOSTART;
    }
    private static final int ERROR_COM_TASK_STOP_PENDING = (int)15501L;
    /**
     * {@snippet lang=c :
     * #define ERROR_COM_TASK_STOP_PENDING 15501
     * }
     */
    public static int ERROR_COM_TASK_STOP_PENDING() {
        return ERROR_COM_TASK_STOP_PENDING;
    }
    private static final int ERROR_INSTALL_OPEN_PACKAGE_FAILED = (int)15600L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INSTALL_OPEN_PACKAGE_FAILED 15600
     * }
     */
    public static int ERROR_INSTALL_OPEN_PACKAGE_FAILED() {
        return ERROR_INSTALL_OPEN_PACKAGE_FAILED;
    }
    private static final int ERROR_INSTALL_PACKAGE_NOT_FOUND = (int)15601L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INSTALL_PACKAGE_NOT_FOUND 15601
     * }
     */
    public static int ERROR_INSTALL_PACKAGE_NOT_FOUND() {
        return ERROR_INSTALL_PACKAGE_NOT_FOUND;
    }
    private static final int ERROR_INSTALL_INVALID_PACKAGE = (int)15602L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INSTALL_INVALID_PACKAGE 15602
     * }
     */
    public static int ERROR_INSTALL_INVALID_PACKAGE() {
        return ERROR_INSTALL_INVALID_PACKAGE;
    }
    private static final int ERROR_INSTALL_RESOLVE_DEPENDENCY_FAILED = (int)15603L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INSTALL_RESOLVE_DEPENDENCY_FAILED 15603
     * }
     */
    public static int ERROR_INSTALL_RESOLVE_DEPENDENCY_FAILED() {
        return ERROR_INSTALL_RESOLVE_DEPENDENCY_FAILED;
    }
    private static final int ERROR_INSTALL_OUT_OF_DISK_SPACE = (int)15604L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INSTALL_OUT_OF_DISK_SPACE 15604
     * }
     */
    public static int ERROR_INSTALL_OUT_OF_DISK_SPACE() {
        return ERROR_INSTALL_OUT_OF_DISK_SPACE;
    }
    private static final int ERROR_INSTALL_NETWORK_FAILURE = (int)15605L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INSTALL_NETWORK_FAILURE 15605
     * }
     */
    public static int ERROR_INSTALL_NETWORK_FAILURE() {
        return ERROR_INSTALL_NETWORK_FAILURE;
    }
    private static final int ERROR_INSTALL_REGISTRATION_FAILURE = (int)15606L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INSTALL_REGISTRATION_FAILURE 15606
     * }
     */
    public static int ERROR_INSTALL_REGISTRATION_FAILURE() {
        return ERROR_INSTALL_REGISTRATION_FAILURE;
    }
    private static final int ERROR_INSTALL_DEREGISTRATION_FAILURE = (int)15607L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INSTALL_DEREGISTRATION_FAILURE 15607
     * }
     */
    public static int ERROR_INSTALL_DEREGISTRATION_FAILURE() {
        return ERROR_INSTALL_DEREGISTRATION_FAILURE;
    }
    private static final int ERROR_INSTALL_CANCEL = (int)15608L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INSTALL_CANCEL 15608
     * }
     */
    public static int ERROR_INSTALL_CANCEL() {
        return ERROR_INSTALL_CANCEL;
    }
    private static final int ERROR_INSTALL_FAILED = (int)15609L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INSTALL_FAILED 15609
     * }
     */
    public static int ERROR_INSTALL_FAILED() {
        return ERROR_INSTALL_FAILED;
    }
    private static final int ERROR_REMOVE_FAILED = (int)15610L;
    /**
     * {@snippet lang=c :
     * #define ERROR_REMOVE_FAILED 15610
     * }
     */
    public static int ERROR_REMOVE_FAILED() {
        return ERROR_REMOVE_FAILED;
    }
    private static final int ERROR_PACKAGE_ALREADY_EXISTS = (int)15611L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PACKAGE_ALREADY_EXISTS 15611
     * }
     */
    public static int ERROR_PACKAGE_ALREADY_EXISTS() {
        return ERROR_PACKAGE_ALREADY_EXISTS;
    }
    private static final int ERROR_NEEDS_REMEDIATION = (int)15612L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NEEDS_REMEDIATION 15612
     * }
     */
    public static int ERROR_NEEDS_REMEDIATION() {
        return ERROR_NEEDS_REMEDIATION;
    }
    private static final int ERROR_INSTALL_PREREQUISITE_FAILED = (int)15613L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INSTALL_PREREQUISITE_FAILED 15613
     * }
     */
    public static int ERROR_INSTALL_PREREQUISITE_FAILED() {
        return ERROR_INSTALL_PREREQUISITE_FAILED;
    }
    private static final int ERROR_PACKAGE_REPOSITORY_CORRUPTED = (int)15614L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PACKAGE_REPOSITORY_CORRUPTED 15614
     * }
     */
    public static int ERROR_PACKAGE_REPOSITORY_CORRUPTED() {
        return ERROR_PACKAGE_REPOSITORY_CORRUPTED;
    }
    private static final int ERROR_INSTALL_POLICY_FAILURE = (int)15615L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INSTALL_POLICY_FAILURE 15615
     * }
     */
    public static int ERROR_INSTALL_POLICY_FAILURE() {
        return ERROR_INSTALL_POLICY_FAILURE;
    }
    private static final int ERROR_PACKAGE_UPDATING = (int)15616L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PACKAGE_UPDATING 15616
     * }
     */
    public static int ERROR_PACKAGE_UPDATING() {
        return ERROR_PACKAGE_UPDATING;
    }
    private static final int ERROR_DEPLOYMENT_BLOCKED_BY_POLICY = (int)15617L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DEPLOYMENT_BLOCKED_BY_POLICY 15617
     * }
     */
    public static int ERROR_DEPLOYMENT_BLOCKED_BY_POLICY() {
        return ERROR_DEPLOYMENT_BLOCKED_BY_POLICY;
    }
    private static final int ERROR_PACKAGES_IN_USE = (int)15618L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PACKAGES_IN_USE 15618
     * }
     */
    public static int ERROR_PACKAGES_IN_USE() {
        return ERROR_PACKAGES_IN_USE;
    }
    private static final int ERROR_RECOVERY_FILE_CORRUPT = (int)15619L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RECOVERY_FILE_CORRUPT 15619
     * }
     */
    public static int ERROR_RECOVERY_FILE_CORRUPT() {
        return ERROR_RECOVERY_FILE_CORRUPT;
    }
    private static final int ERROR_INVALID_STAGED_SIGNATURE = (int)15620L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_STAGED_SIGNATURE 15620
     * }
     */
    public static int ERROR_INVALID_STAGED_SIGNATURE() {
        return ERROR_INVALID_STAGED_SIGNATURE;
    }
    private static final int ERROR_DELETING_EXISTING_APPLICATIONDATA_STORE_FAILED = (int)15621L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DELETING_EXISTING_APPLICATIONDATA_STORE_FAILED 15621
     * }
     */
    public static int ERROR_DELETING_EXISTING_APPLICATIONDATA_STORE_FAILED() {
        return ERROR_DELETING_EXISTING_APPLICATIONDATA_STORE_FAILED;
    }
    private static final int ERROR_INSTALL_PACKAGE_DOWNGRADE = (int)15622L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INSTALL_PACKAGE_DOWNGRADE 15622
     * }
     */
    public static int ERROR_INSTALL_PACKAGE_DOWNGRADE() {
        return ERROR_INSTALL_PACKAGE_DOWNGRADE;
    }
    private static final int ERROR_SYSTEM_NEEDS_REMEDIATION = (int)15623L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SYSTEM_NEEDS_REMEDIATION 15623
     * }
     */
    public static int ERROR_SYSTEM_NEEDS_REMEDIATION() {
        return ERROR_SYSTEM_NEEDS_REMEDIATION;
    }
    private static final int ERROR_APPX_INTEGRITY_FAILURE_CLR_NGEN = (int)15624L;
    /**
     * {@snippet lang=c :
     * #define ERROR_APPX_INTEGRITY_FAILURE_CLR_NGEN 15624
     * }
     */
    public static int ERROR_APPX_INTEGRITY_FAILURE_CLR_NGEN() {
        return ERROR_APPX_INTEGRITY_FAILURE_CLR_NGEN;
    }
    private static final int ERROR_RESILIENCY_FILE_CORRUPT = (int)15625L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RESILIENCY_FILE_CORRUPT 15625
     * }
     */
    public static int ERROR_RESILIENCY_FILE_CORRUPT() {
        return ERROR_RESILIENCY_FILE_CORRUPT;
    }
    private static final int ERROR_INSTALL_FIREWALL_SERVICE_NOT_RUNNING = (int)15626L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INSTALL_FIREWALL_SERVICE_NOT_RUNNING 15626
     * }
     */
    public static int ERROR_INSTALL_FIREWALL_SERVICE_NOT_RUNNING() {
        return ERROR_INSTALL_FIREWALL_SERVICE_NOT_RUNNING;
    }
    private static final int ERROR_PACKAGE_MOVE_FAILED = (int)15627L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PACKAGE_MOVE_FAILED 15627
     * }
     */
    public static int ERROR_PACKAGE_MOVE_FAILED() {
        return ERROR_PACKAGE_MOVE_FAILED;
    }
    private static final int ERROR_INSTALL_VOLUME_NOT_EMPTY = (int)15628L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INSTALL_VOLUME_NOT_EMPTY 15628
     * }
     */
    public static int ERROR_INSTALL_VOLUME_NOT_EMPTY() {
        return ERROR_INSTALL_VOLUME_NOT_EMPTY;
    }
    private static final int ERROR_INSTALL_VOLUME_OFFLINE = (int)15629L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INSTALL_VOLUME_OFFLINE 15629
     * }
     */
    public static int ERROR_INSTALL_VOLUME_OFFLINE() {
        return ERROR_INSTALL_VOLUME_OFFLINE;
    }
    private static final int ERROR_INSTALL_VOLUME_CORRUPT = (int)15630L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INSTALL_VOLUME_CORRUPT 15630
     * }
     */
    public static int ERROR_INSTALL_VOLUME_CORRUPT() {
        return ERROR_INSTALL_VOLUME_CORRUPT;
    }
    private static final int ERROR_NEEDS_REGISTRATION = (int)15631L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NEEDS_REGISTRATION 15631
     * }
     */
    public static int ERROR_NEEDS_REGISTRATION() {
        return ERROR_NEEDS_REGISTRATION;
    }
    private static final int ERROR_INSTALL_WRONG_PROCESSOR_ARCHITECTURE = (int)15632L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INSTALL_WRONG_PROCESSOR_ARCHITECTURE 15632
     * }
     */
    public static int ERROR_INSTALL_WRONG_PROCESSOR_ARCHITECTURE() {
        return ERROR_INSTALL_WRONG_PROCESSOR_ARCHITECTURE;
    }
    private static final int ERROR_DEV_SIDELOAD_LIMIT_EXCEEDED = (int)15633L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DEV_SIDELOAD_LIMIT_EXCEEDED 15633
     * }
     */
    public static int ERROR_DEV_SIDELOAD_LIMIT_EXCEEDED() {
        return ERROR_DEV_SIDELOAD_LIMIT_EXCEEDED;
    }
    private static final int ERROR_INSTALL_OPTIONAL_PACKAGE_REQUIRES_MAIN_PACKAGE = (int)15634L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INSTALL_OPTIONAL_PACKAGE_REQUIRES_MAIN_PACKAGE 15634
     * }
     */
    public static int ERROR_INSTALL_OPTIONAL_PACKAGE_REQUIRES_MAIN_PACKAGE() {
        return ERROR_INSTALL_OPTIONAL_PACKAGE_REQUIRES_MAIN_PACKAGE;
    }
    private static final int ERROR_PACKAGE_NOT_SUPPORTED_ON_FILESYSTEM = (int)15635L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PACKAGE_NOT_SUPPORTED_ON_FILESYSTEM 15635
     * }
     */
    public static int ERROR_PACKAGE_NOT_SUPPORTED_ON_FILESYSTEM() {
        return ERROR_PACKAGE_NOT_SUPPORTED_ON_FILESYSTEM;
    }
    private static final int ERROR_PACKAGE_MOVE_BLOCKED_BY_STREAMING = (int)15636L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PACKAGE_MOVE_BLOCKED_BY_STREAMING 15636
     * }
     */
    public static int ERROR_PACKAGE_MOVE_BLOCKED_BY_STREAMING() {
        return ERROR_PACKAGE_MOVE_BLOCKED_BY_STREAMING;
    }
    private static final int ERROR_INSTALL_OPTIONAL_PACKAGE_APPLICATIONID_NOT_UNIQUE = (int)15637L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INSTALL_OPTIONAL_PACKAGE_APPLICATIONID_NOT_UNIQUE 15637
     * }
     */
    public static int ERROR_INSTALL_OPTIONAL_PACKAGE_APPLICATIONID_NOT_UNIQUE() {
        return ERROR_INSTALL_OPTIONAL_PACKAGE_APPLICATIONID_NOT_UNIQUE;
    }
    private static final int ERROR_PACKAGE_STAGING_ONHOLD = (int)15638L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PACKAGE_STAGING_ONHOLD 15638
     * }
     */
    public static int ERROR_PACKAGE_STAGING_ONHOLD() {
        return ERROR_PACKAGE_STAGING_ONHOLD;
    }
    private static final int ERROR_INSTALL_INVALID_RELATED_SET_UPDATE = (int)15639L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INSTALL_INVALID_RELATED_SET_UPDATE 15639
     * }
     */
    public static int ERROR_INSTALL_INVALID_RELATED_SET_UPDATE() {
        return ERROR_INSTALL_INVALID_RELATED_SET_UPDATE;
    }
    private static final int ERROR_INSTALL_OPTIONAL_PACKAGE_REQUIRES_MAIN_PACKAGE_FULLTRUST_CAPABILITY = (int)15640L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INSTALL_OPTIONAL_PACKAGE_REQUIRES_MAIN_PACKAGE_FULLTRUST_CAPABILITY 15640
     * }
     */
    public static int ERROR_INSTALL_OPTIONAL_PACKAGE_REQUIRES_MAIN_PACKAGE_FULLTRUST_CAPABILITY() {
        return ERROR_INSTALL_OPTIONAL_PACKAGE_REQUIRES_MAIN_PACKAGE_FULLTRUST_CAPABILITY;
    }
    private static final int ERROR_DEPLOYMENT_BLOCKED_BY_USER_LOG_OFF = (int)15641L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DEPLOYMENT_BLOCKED_BY_USER_LOG_OFF 15641
     * }
     */
    public static int ERROR_DEPLOYMENT_BLOCKED_BY_USER_LOG_OFF() {
        return ERROR_DEPLOYMENT_BLOCKED_BY_USER_LOG_OFF;
    }
    private static final int ERROR_PROVISION_OPTIONAL_PACKAGE_REQUIRES_MAIN_PACKAGE_PROVISIONED = (int)15642L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PROVISION_OPTIONAL_PACKAGE_REQUIRES_MAIN_PACKAGE_PROVISIONED 15642
     * }
     */
    public static int ERROR_PROVISION_OPTIONAL_PACKAGE_REQUIRES_MAIN_PACKAGE_PROVISIONED() {
        return ERROR_PROVISION_OPTIONAL_PACKAGE_REQUIRES_MAIN_PACKAGE_PROVISIONED;
    }
    private static final int ERROR_PACKAGES_REPUTATION_CHECK_FAILED = (int)15643L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PACKAGES_REPUTATION_CHECK_FAILED 15643
     * }
     */
    public static int ERROR_PACKAGES_REPUTATION_CHECK_FAILED() {
        return ERROR_PACKAGES_REPUTATION_CHECK_FAILED;
    }
    private static final int ERROR_PACKAGES_REPUTATION_CHECK_TIMEDOUT = (int)15644L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PACKAGES_REPUTATION_CHECK_TIMEDOUT 15644
     * }
     */
    public static int ERROR_PACKAGES_REPUTATION_CHECK_TIMEDOUT() {
        return ERROR_PACKAGES_REPUTATION_CHECK_TIMEDOUT;
    }
    private static final int ERROR_DEPLOYMENT_OPTION_NOT_SUPPORTED = (int)15645L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DEPLOYMENT_OPTION_NOT_SUPPORTED 15645
     * }
     */
    public static int ERROR_DEPLOYMENT_OPTION_NOT_SUPPORTED() {
        return ERROR_DEPLOYMENT_OPTION_NOT_SUPPORTED;
    }
    private static final int ERROR_APPINSTALLER_ACTIVATION_BLOCKED = (int)15646L;
    /**
     * {@snippet lang=c :
     * #define ERROR_APPINSTALLER_ACTIVATION_BLOCKED 15646
     * }
     */
    public static int ERROR_APPINSTALLER_ACTIVATION_BLOCKED() {
        return ERROR_APPINSTALLER_ACTIVATION_BLOCKED;
    }
    private static final int ERROR_REGISTRATION_FROM_REMOTE_DRIVE_NOT_SUPPORTED = (int)15647L;
    /**
     * {@snippet lang=c :
     * #define ERROR_REGISTRATION_FROM_REMOTE_DRIVE_NOT_SUPPORTED 15647
     * }
     */
    public static int ERROR_REGISTRATION_FROM_REMOTE_DRIVE_NOT_SUPPORTED() {
        return ERROR_REGISTRATION_FROM_REMOTE_DRIVE_NOT_SUPPORTED;
    }
    private static final int ERROR_APPX_RAW_DATA_WRITE_FAILED = (int)15648L;
    /**
     * {@snippet lang=c :
     * #define ERROR_APPX_RAW_DATA_WRITE_FAILED 15648
     * }
     */
    public static int ERROR_APPX_RAW_DATA_WRITE_FAILED() {
        return ERROR_APPX_RAW_DATA_WRITE_FAILED;
    }
    private static final int ERROR_DEPLOYMENT_BLOCKED_BY_VOLUME_POLICY_PACKAGE = (int)15649L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DEPLOYMENT_BLOCKED_BY_VOLUME_POLICY_PACKAGE 15649
     * }
     */
    public static int ERROR_DEPLOYMENT_BLOCKED_BY_VOLUME_POLICY_PACKAGE() {
        return ERROR_DEPLOYMENT_BLOCKED_BY_VOLUME_POLICY_PACKAGE;
    }
    private static final int ERROR_DEPLOYMENT_BLOCKED_BY_VOLUME_POLICY_MACHINE = (int)15650L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DEPLOYMENT_BLOCKED_BY_VOLUME_POLICY_MACHINE 15650
     * }
     */
    public static int ERROR_DEPLOYMENT_BLOCKED_BY_VOLUME_POLICY_MACHINE() {
        return ERROR_DEPLOYMENT_BLOCKED_BY_VOLUME_POLICY_MACHINE;
    }
    private static final int ERROR_DEPLOYMENT_BLOCKED_BY_PROFILE_POLICY = (int)15651L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DEPLOYMENT_BLOCKED_BY_PROFILE_POLICY 15651
     * }
     */
    public static int ERROR_DEPLOYMENT_BLOCKED_BY_PROFILE_POLICY() {
        return ERROR_DEPLOYMENT_BLOCKED_BY_PROFILE_POLICY;
    }
    private static final int ERROR_DEPLOYMENT_FAILED_CONFLICTING_MUTABLE_PACKAGE_DIRECTORY = (int)15652L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DEPLOYMENT_FAILED_CONFLICTING_MUTABLE_PACKAGE_DIRECTORY 15652
     * }
     */
    public static int ERROR_DEPLOYMENT_FAILED_CONFLICTING_MUTABLE_PACKAGE_DIRECTORY() {
        return ERROR_DEPLOYMENT_FAILED_CONFLICTING_MUTABLE_PACKAGE_DIRECTORY;
    }
    private static final int ERROR_SINGLETON_RESOURCE_INSTALLED_IN_ACTIVE_USER = (int)15653L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SINGLETON_RESOURCE_INSTALLED_IN_ACTIVE_USER 15653
     * }
     */
    public static int ERROR_SINGLETON_RESOURCE_INSTALLED_IN_ACTIVE_USER() {
        return ERROR_SINGLETON_RESOURCE_INSTALLED_IN_ACTIVE_USER;
    }
    private static final int ERROR_DIFFERENT_VERSION_OF_PACKAGED_SERVICE_INSTALLED = (int)15654L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DIFFERENT_VERSION_OF_PACKAGED_SERVICE_INSTALLED 15654
     * }
     */
    public static int ERROR_DIFFERENT_VERSION_OF_PACKAGED_SERVICE_INSTALLED() {
        return ERROR_DIFFERENT_VERSION_OF_PACKAGED_SERVICE_INSTALLED;
    }
    private static final int ERROR_SERVICE_EXISTS_AS_NON_PACKAGED_SERVICE = (int)15655L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SERVICE_EXISTS_AS_NON_PACKAGED_SERVICE 15655
     * }
     */
    public static int ERROR_SERVICE_EXISTS_AS_NON_PACKAGED_SERVICE() {
        return ERROR_SERVICE_EXISTS_AS_NON_PACKAGED_SERVICE;
    }
    private static final int ERROR_PACKAGED_SERVICE_REQUIRES_ADMIN_PRIVILEGES = (int)15656L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PACKAGED_SERVICE_REQUIRES_ADMIN_PRIVILEGES 15656
     * }
     */
    public static int ERROR_PACKAGED_SERVICE_REQUIRES_ADMIN_PRIVILEGES() {
        return ERROR_PACKAGED_SERVICE_REQUIRES_ADMIN_PRIVILEGES;
    }
    private static final int ERROR_REDIRECTION_TO_DEFAULT_ACCOUNT_NOT_ALLOWED = (int)15657L;
    /**
     * {@snippet lang=c :
     * #define ERROR_REDIRECTION_TO_DEFAULT_ACCOUNT_NOT_ALLOWED 15657
     * }
     */
    public static int ERROR_REDIRECTION_TO_DEFAULT_ACCOUNT_NOT_ALLOWED() {
        return ERROR_REDIRECTION_TO_DEFAULT_ACCOUNT_NOT_ALLOWED;
    }
    private static final int ERROR_PACKAGE_LACKS_CAPABILITY_TO_DEPLOY_ON_HOST = (int)15658L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PACKAGE_LACKS_CAPABILITY_TO_DEPLOY_ON_HOST 15658
     * }
     */
    public static int ERROR_PACKAGE_LACKS_CAPABILITY_TO_DEPLOY_ON_HOST() {
        return ERROR_PACKAGE_LACKS_CAPABILITY_TO_DEPLOY_ON_HOST;
    }
    private static final int ERROR_UNSIGNED_PACKAGE_INVALID_CONTENT = (int)15659L;
    /**
     * {@snippet lang=c :
     * #define ERROR_UNSIGNED_PACKAGE_INVALID_CONTENT 15659
     * }
     */
    public static int ERROR_UNSIGNED_PACKAGE_INVALID_CONTENT() {
        return ERROR_UNSIGNED_PACKAGE_INVALID_CONTENT;
    }
    private static final int ERROR_UNSIGNED_PACKAGE_INVALID_PUBLISHER_NAMESPACE = (int)15660L;
    /**
     * {@snippet lang=c :
     * #define ERROR_UNSIGNED_PACKAGE_INVALID_PUBLISHER_NAMESPACE 15660
     * }
     */
    public static int ERROR_UNSIGNED_PACKAGE_INVALID_PUBLISHER_NAMESPACE() {
        return ERROR_UNSIGNED_PACKAGE_INVALID_PUBLISHER_NAMESPACE;
    }
    private static final int ERROR_SIGNED_PACKAGE_INVALID_PUBLISHER_NAMESPACE = (int)15661L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SIGNED_PACKAGE_INVALID_PUBLISHER_NAMESPACE 15661
     * }
     */
    public static int ERROR_SIGNED_PACKAGE_INVALID_PUBLISHER_NAMESPACE() {
        return ERROR_SIGNED_PACKAGE_INVALID_PUBLISHER_NAMESPACE;
    }
    private static final int ERROR_PACKAGE_EXTERNAL_LOCATION_NOT_ALLOWED = (int)15662L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PACKAGE_EXTERNAL_LOCATION_NOT_ALLOWED 15662
     * }
     */
    public static int ERROR_PACKAGE_EXTERNAL_LOCATION_NOT_ALLOWED() {
        return ERROR_PACKAGE_EXTERNAL_LOCATION_NOT_ALLOWED;
    }
    private static final int ERROR_INSTALL_FULLTRUST_HOSTRUNTIME_REQUIRES_MAIN_PACKAGE_FULLTRUST_CAPABILITY = (int)15663L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INSTALL_FULLTRUST_HOSTRUNTIME_REQUIRES_MAIN_PACKAGE_FULLTRUST_CAPABILITY 15663
     * }
     */
    public static int ERROR_INSTALL_FULLTRUST_HOSTRUNTIME_REQUIRES_MAIN_PACKAGE_FULLTRUST_CAPABILITY() {
        return ERROR_INSTALL_FULLTRUST_HOSTRUNTIME_REQUIRES_MAIN_PACKAGE_FULLTRUST_CAPABILITY;
    }
    private static final int ERROR_PACKAGE_LACKS_CAPABILITY_FOR_MANDATORY_STARTUPTASKS = (int)15664L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PACKAGE_LACKS_CAPABILITY_FOR_MANDATORY_STARTUPTASKS 15664
     * }
     */
    public static int ERROR_PACKAGE_LACKS_CAPABILITY_FOR_MANDATORY_STARTUPTASKS() {
        return ERROR_PACKAGE_LACKS_CAPABILITY_FOR_MANDATORY_STARTUPTASKS;
    }
    private static final int ERROR_INSTALL_RESOLVE_HOSTRUNTIME_DEPENDENCY_FAILED = (int)15665L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INSTALL_RESOLVE_HOSTRUNTIME_DEPENDENCY_FAILED 15665
     * }
     */
    public static int ERROR_INSTALL_RESOLVE_HOSTRUNTIME_DEPENDENCY_FAILED() {
        return ERROR_INSTALL_RESOLVE_HOSTRUNTIME_DEPENDENCY_FAILED;
    }
    private static final int ERROR_MACHINE_SCOPE_NOT_ALLOWED = (int)15666L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MACHINE_SCOPE_NOT_ALLOWED 15666
     * }
     */
    public static int ERROR_MACHINE_SCOPE_NOT_ALLOWED() {
        return ERROR_MACHINE_SCOPE_NOT_ALLOWED;
    }
    private static final int ERROR_CLASSIC_COMPAT_MODE_NOT_ALLOWED = (int)15667L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLASSIC_COMPAT_MODE_NOT_ALLOWED 15667
     * }
     */
    public static int ERROR_CLASSIC_COMPAT_MODE_NOT_ALLOWED() {
        return ERROR_CLASSIC_COMPAT_MODE_NOT_ALLOWED;
    }
    private static final int ERROR_STAGEFROMUPDATEAGENT_PACKAGE_NOT_APPLICABLE = (int)15668L;
    /**
     * {@snippet lang=c :
     * #define ERROR_STAGEFROMUPDATEAGENT_PACKAGE_NOT_APPLICABLE 15668
     * }
     */
    public static int ERROR_STAGEFROMUPDATEAGENT_PACKAGE_NOT_APPLICABLE() {
        return ERROR_STAGEFROMUPDATEAGENT_PACKAGE_NOT_APPLICABLE;
    }
    private static final int ERROR_PACKAGE_NOT_REGISTERED_FOR_USER = (int)15669L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PACKAGE_NOT_REGISTERED_FOR_USER 15669
     * }
     */
    public static int ERROR_PACKAGE_NOT_REGISTERED_FOR_USER() {
        return ERROR_PACKAGE_NOT_REGISTERED_FOR_USER;
    }
    private static final int ERROR_PACKAGE_NAME_MISMATCH = (int)15670L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PACKAGE_NAME_MISMATCH 15670
     * }
     */
    public static int ERROR_PACKAGE_NAME_MISMATCH() {
        return ERROR_PACKAGE_NAME_MISMATCH;
    }
    private static final int ERROR_APPINSTALLER_URI_IN_USE = (int)15671L;
    /**
     * {@snippet lang=c :
     * #define ERROR_APPINSTALLER_URI_IN_USE 15671
     * }
     */
    public static int ERROR_APPINSTALLER_URI_IN_USE() {
        return ERROR_APPINSTALLER_URI_IN_USE;
    }
    private static final int ERROR_APPINSTALLER_IS_MANAGED_BY_SYSTEM = (int)15672L;
    /**
     * {@snippet lang=c :
     * #define ERROR_APPINSTALLER_IS_MANAGED_BY_SYSTEM 15672
     * }
     */
    public static int ERROR_APPINSTALLER_IS_MANAGED_BY_SYSTEM() {
        return ERROR_APPINSTALLER_IS_MANAGED_BY_SYSTEM;
    }
    private static final int ERROR_SERVICE_BLOCKED_BY_SYSPREP_IN_PROGRESS = (int)15673L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SERVICE_BLOCKED_BY_SYSPREP_IN_PROGRESS 15673
     * }
     */
    public static int ERROR_SERVICE_BLOCKED_BY_SYSPREP_IN_PROGRESS() {
        return ERROR_SERVICE_BLOCKED_BY_SYSPREP_IN_PROGRESS;
    }
    private static final int ERROR_UNSUPPORTED_ARM32_PACKAGE_REQUIRES_REMEDIAITON = (int)15674L;
    /**
     * {@snippet lang=c :
     * #define ERROR_UNSUPPORTED_ARM32_PACKAGE_REQUIRES_REMEDIAITON 15674
     * }
     */
    public static int ERROR_UNSUPPORTED_ARM32_PACKAGE_REQUIRES_REMEDIAITON() {
        return ERROR_UNSUPPORTED_ARM32_PACKAGE_REQUIRES_REMEDIAITON;
    }
    private static final int ERROR_UUP_PRODUCT_NOT_APPLICABLE = (int)15675L;
    /**
     * {@snippet lang=c :
     * #define ERROR_UUP_PRODUCT_NOT_APPLICABLE 15675
     * }
     */
    public static int ERROR_UUP_PRODUCT_NOT_APPLICABLE() {
        return ERROR_UUP_PRODUCT_NOT_APPLICABLE;
    }
    private static final int ERROR_BLOCKED_BY_PENDING_PACKAGE_REMOVAL = (int)15676L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BLOCKED_BY_PENDING_PACKAGE_REMOVAL 15676
     * }
     */
    public static int ERROR_BLOCKED_BY_PENDING_PACKAGE_REMOVAL() {
        return ERROR_BLOCKED_BY_PENDING_PACKAGE_REMOVAL;
    }
    private static final int APPMODEL_ERROR_NO_PACKAGE = (int)15700L;
    /**
     * {@snippet lang=c :
     * #define APPMODEL_ERROR_NO_PACKAGE 15700
     * }
     */
    public static int APPMODEL_ERROR_NO_PACKAGE() {
        return APPMODEL_ERROR_NO_PACKAGE;
    }
    private static final int APPMODEL_ERROR_PACKAGE_RUNTIME_CORRUPT = (int)15701L;
    /**
     * {@snippet lang=c :
     * #define APPMODEL_ERROR_PACKAGE_RUNTIME_CORRUPT 15701
     * }
     */
    public static int APPMODEL_ERROR_PACKAGE_RUNTIME_CORRUPT() {
        return APPMODEL_ERROR_PACKAGE_RUNTIME_CORRUPT;
    }
    private static final int APPMODEL_ERROR_PACKAGE_IDENTITY_CORRUPT = (int)15702L;
    /**
     * {@snippet lang=c :
     * #define APPMODEL_ERROR_PACKAGE_IDENTITY_CORRUPT 15702
     * }
     */
    public static int APPMODEL_ERROR_PACKAGE_IDENTITY_CORRUPT() {
        return APPMODEL_ERROR_PACKAGE_IDENTITY_CORRUPT;
    }
    private static final int APPMODEL_ERROR_NO_APPLICATION = (int)15703L;
    /**
     * {@snippet lang=c :
     * #define APPMODEL_ERROR_NO_APPLICATION 15703
     * }
     */
    public static int APPMODEL_ERROR_NO_APPLICATION() {
        return APPMODEL_ERROR_NO_APPLICATION;
    }
    private static final int APPMODEL_ERROR_DYNAMIC_PROPERTY_READ_FAILED = (int)15704L;
    /**
     * {@snippet lang=c :
     * #define APPMODEL_ERROR_DYNAMIC_PROPERTY_READ_FAILED 15704
     * }
     */
    public static int APPMODEL_ERROR_DYNAMIC_PROPERTY_READ_FAILED() {
        return APPMODEL_ERROR_DYNAMIC_PROPERTY_READ_FAILED;
    }
    private static final int APPMODEL_ERROR_DYNAMIC_PROPERTY_INVALID = (int)15705L;
    /**
     * {@snippet lang=c :
     * #define APPMODEL_ERROR_DYNAMIC_PROPERTY_INVALID 15705
     * }
     */
    public static int APPMODEL_ERROR_DYNAMIC_PROPERTY_INVALID() {
        return APPMODEL_ERROR_DYNAMIC_PROPERTY_INVALID;
    }
    private static final int APPMODEL_ERROR_PACKAGE_NOT_AVAILABLE = (int)15706L;
    /**
     * {@snippet lang=c :
     * #define APPMODEL_ERROR_PACKAGE_NOT_AVAILABLE 15706
     * }
     */
    public static int APPMODEL_ERROR_PACKAGE_NOT_AVAILABLE() {
        return APPMODEL_ERROR_PACKAGE_NOT_AVAILABLE;
    }
    private static final int APPMODEL_ERROR_NO_MUTABLE_DIRECTORY = (int)15707L;
    /**
     * {@snippet lang=c :
     * #define APPMODEL_ERROR_NO_MUTABLE_DIRECTORY 15707
     * }
     */
    public static int APPMODEL_ERROR_NO_MUTABLE_DIRECTORY() {
        return APPMODEL_ERROR_NO_MUTABLE_DIRECTORY;
    }
    private static final int ERROR_STATE_LOAD_STORE_FAILED = (int)15800L;
    /**
     * {@snippet lang=c :
     * #define ERROR_STATE_LOAD_STORE_FAILED 15800
     * }
     */
    public static int ERROR_STATE_LOAD_STORE_FAILED() {
        return ERROR_STATE_LOAD_STORE_FAILED;
    }
    private static final int ERROR_STATE_GET_VERSION_FAILED = (int)15801L;
    /**
     * {@snippet lang=c :
     * #define ERROR_STATE_GET_VERSION_FAILED 15801
     * }
     */
    public static int ERROR_STATE_GET_VERSION_FAILED() {
        return ERROR_STATE_GET_VERSION_FAILED;
    }
    private static final int ERROR_STATE_SET_VERSION_FAILED = (int)15802L;
    /**
     * {@snippet lang=c :
     * #define ERROR_STATE_SET_VERSION_FAILED 15802
     * }
     */
    public static int ERROR_STATE_SET_VERSION_FAILED() {
        return ERROR_STATE_SET_VERSION_FAILED;
    }
    private static final int ERROR_STATE_STRUCTURED_RESET_FAILED = (int)15803L;
    /**
     * {@snippet lang=c :
     * #define ERROR_STATE_STRUCTURED_RESET_FAILED 15803
     * }
     */
    public static int ERROR_STATE_STRUCTURED_RESET_FAILED() {
        return ERROR_STATE_STRUCTURED_RESET_FAILED;
    }
    private static final int ERROR_STATE_OPEN_CONTAINER_FAILED = (int)15804L;
    /**
     * {@snippet lang=c :
     * #define ERROR_STATE_OPEN_CONTAINER_FAILED 15804
     * }
     */
    public static int ERROR_STATE_OPEN_CONTAINER_FAILED() {
        return ERROR_STATE_OPEN_CONTAINER_FAILED;
    }
    private static final int ERROR_STATE_CREATE_CONTAINER_FAILED = (int)15805L;
    /**
     * {@snippet lang=c :
     * #define ERROR_STATE_CREATE_CONTAINER_FAILED 15805
     * }
     */
    public static int ERROR_STATE_CREATE_CONTAINER_FAILED() {
        return ERROR_STATE_CREATE_CONTAINER_FAILED;
    }
    private static final int ERROR_STATE_DELETE_CONTAINER_FAILED = (int)15806L;
    /**
     * {@snippet lang=c :
     * #define ERROR_STATE_DELETE_CONTAINER_FAILED 15806
     * }
     */
    public static int ERROR_STATE_DELETE_CONTAINER_FAILED() {
        return ERROR_STATE_DELETE_CONTAINER_FAILED;
    }
    private static final int ERROR_STATE_READ_SETTING_FAILED = (int)15807L;
    /**
     * {@snippet lang=c :
     * #define ERROR_STATE_READ_SETTING_FAILED 15807
     * }
     */
    public static int ERROR_STATE_READ_SETTING_FAILED() {
        return ERROR_STATE_READ_SETTING_FAILED;
    }
    private static final int ERROR_STATE_WRITE_SETTING_FAILED = (int)15808L;
    /**
     * {@snippet lang=c :
     * #define ERROR_STATE_WRITE_SETTING_FAILED 15808
     * }
     */
    public static int ERROR_STATE_WRITE_SETTING_FAILED() {
        return ERROR_STATE_WRITE_SETTING_FAILED;
    }
    private static final int ERROR_STATE_DELETE_SETTING_FAILED = (int)15809L;
    /**
     * {@snippet lang=c :
     * #define ERROR_STATE_DELETE_SETTING_FAILED 15809
     * }
     */
    public static int ERROR_STATE_DELETE_SETTING_FAILED() {
        return ERROR_STATE_DELETE_SETTING_FAILED;
    }
    private static final int ERROR_STATE_QUERY_SETTING_FAILED = (int)15810L;
    /**
     * {@snippet lang=c :
     * #define ERROR_STATE_QUERY_SETTING_FAILED 15810
     * }
     */
    public static int ERROR_STATE_QUERY_SETTING_FAILED() {
        return ERROR_STATE_QUERY_SETTING_FAILED;
    }
    private static final int ERROR_STATE_READ_COMPOSITE_SETTING_FAILED = (int)15811L;
    /**
     * {@snippet lang=c :
     * #define ERROR_STATE_READ_COMPOSITE_SETTING_FAILED 15811
     * }
     */
    public static int ERROR_STATE_READ_COMPOSITE_SETTING_FAILED() {
        return ERROR_STATE_READ_COMPOSITE_SETTING_FAILED;
    }
    private static final int ERROR_STATE_WRITE_COMPOSITE_SETTING_FAILED = (int)15812L;
    /**
     * {@snippet lang=c :
     * #define ERROR_STATE_WRITE_COMPOSITE_SETTING_FAILED 15812
     * }
     */
    public static int ERROR_STATE_WRITE_COMPOSITE_SETTING_FAILED() {
        return ERROR_STATE_WRITE_COMPOSITE_SETTING_FAILED;
    }
    private static final int ERROR_STATE_ENUMERATE_CONTAINER_FAILED = (int)15813L;
    /**
     * {@snippet lang=c :
     * #define ERROR_STATE_ENUMERATE_CONTAINER_FAILED 15813
     * }
     */
    public static int ERROR_STATE_ENUMERATE_CONTAINER_FAILED() {
        return ERROR_STATE_ENUMERATE_CONTAINER_FAILED;
    }
    private static final int ERROR_STATE_ENUMERATE_SETTINGS_FAILED = (int)15814L;
    /**
     * {@snippet lang=c :
     * #define ERROR_STATE_ENUMERATE_SETTINGS_FAILED 15814
     * }
     */
    public static int ERROR_STATE_ENUMERATE_SETTINGS_FAILED() {
        return ERROR_STATE_ENUMERATE_SETTINGS_FAILED;
    }
    private static final int ERROR_STATE_COMPOSITE_SETTING_VALUE_SIZE_LIMIT_EXCEEDED = (int)15815L;
    /**
     * {@snippet lang=c :
     * #define ERROR_STATE_COMPOSITE_SETTING_VALUE_SIZE_LIMIT_EXCEEDED 15815
     * }
     */
    public static int ERROR_STATE_COMPOSITE_SETTING_VALUE_SIZE_LIMIT_EXCEEDED() {
        return ERROR_STATE_COMPOSITE_SETTING_VALUE_SIZE_LIMIT_EXCEEDED;
    }
    private static final int ERROR_STATE_SETTING_VALUE_SIZE_LIMIT_EXCEEDED = (int)15816L;
    /**
     * {@snippet lang=c :
     * #define ERROR_STATE_SETTING_VALUE_SIZE_LIMIT_EXCEEDED 15816
     * }
     */
    public static int ERROR_STATE_SETTING_VALUE_SIZE_LIMIT_EXCEEDED() {
        return ERROR_STATE_SETTING_VALUE_SIZE_LIMIT_EXCEEDED;
    }
    private static final int ERROR_STATE_SETTING_NAME_SIZE_LIMIT_EXCEEDED = (int)15817L;
    /**
     * {@snippet lang=c :
     * #define ERROR_STATE_SETTING_NAME_SIZE_LIMIT_EXCEEDED 15817
     * }
     */
    public static int ERROR_STATE_SETTING_NAME_SIZE_LIMIT_EXCEEDED() {
        return ERROR_STATE_SETTING_NAME_SIZE_LIMIT_EXCEEDED;
    }
    private static final int ERROR_STATE_CONTAINER_NAME_SIZE_LIMIT_EXCEEDED = (int)15818L;
    /**
     * {@snippet lang=c :
     * #define ERROR_STATE_CONTAINER_NAME_SIZE_LIMIT_EXCEEDED 15818
     * }
     */
    public static int ERROR_STATE_CONTAINER_NAME_SIZE_LIMIT_EXCEEDED() {
        return ERROR_STATE_CONTAINER_NAME_SIZE_LIMIT_EXCEEDED;
    }
    private static final int ERROR_API_UNAVAILABLE = (int)15841L;
    /**
     * {@snippet lang=c :
     * #define ERROR_API_UNAVAILABLE 15841
     * }
     */
    public static int ERROR_API_UNAVAILABLE() {
        return ERROR_API_UNAVAILABLE;
    }
    private static final int STORE_ERROR_UNLICENSED = (int)15861L;
    /**
     * {@snippet lang=c :
     * #define STORE_ERROR_UNLICENSED 15861
     * }
     */
    public static int STORE_ERROR_UNLICENSED() {
        return STORE_ERROR_UNLICENSED;
    }
    private static final int STORE_ERROR_UNLICENSED_USER = (int)15862L;
    /**
     * {@snippet lang=c :
     * #define STORE_ERROR_UNLICENSED_USER 15862
     * }
     */
    public static int STORE_ERROR_UNLICENSED_USER() {
        return STORE_ERROR_UNLICENSED_USER;
    }
    private static final int STORE_ERROR_PENDING_COM_TRANSACTION = (int)15863L;
    /**
     * {@snippet lang=c :
     * #define STORE_ERROR_PENDING_COM_TRANSACTION 15863
     * }
     */
    public static int STORE_ERROR_PENDING_COM_TRANSACTION() {
        return STORE_ERROR_PENDING_COM_TRANSACTION;
    }
    private static final int STORE_ERROR_LICENSE_REVOKED = (int)15864L;
    /**
     * {@snippet lang=c :
     * #define STORE_ERROR_LICENSE_REVOKED 15864
     * }
     */
    public static int STORE_ERROR_LICENSE_REVOKED() {
        return STORE_ERROR_LICENSE_REVOKED;
    }
    private static final int E_UNEXPECTED = (int)-2147418113L;
    /**
     * {@snippet lang=c :
     * #define E_UNEXPECTED -2147418113
     * }
     */
    public static int E_UNEXPECTED() {
        return E_UNEXPECTED;
    }
    private static final int E_NOTIMPL = (int)-2147467263L;
    /**
     * {@snippet lang=c :
     * #define E_NOTIMPL -2147467263
     * }
     */
    public static int E_NOTIMPL() {
        return E_NOTIMPL;
    }
    private static final int E_OUTOFMEMORY = (int)-2147024882L;
    /**
     * {@snippet lang=c :
     * #define E_OUTOFMEMORY -2147024882
     * }
     */
    public static int E_OUTOFMEMORY() {
        return E_OUTOFMEMORY;
    }
    private static final int E_INVALIDARG = (int)-2147024809L;
    /**
     * {@snippet lang=c :
     * #define E_INVALIDARG -2147024809
     * }
     */
    public static int E_INVALIDARG() {
        return E_INVALIDARG;
    }
    private static final int E_NOINTERFACE = (int)-2147467262L;
    /**
     * {@snippet lang=c :
     * #define E_NOINTERFACE -2147467262
     * }
     */
    public static int E_NOINTERFACE() {
        return E_NOINTERFACE;
    }
    private static final int E_POINTER = (int)-2147467261L;
    /**
     * {@snippet lang=c :
     * #define E_POINTER -2147467261
     * }
     */
    public static int E_POINTER() {
        return E_POINTER;
    }
    private static final int E_HANDLE = (int)-2147024890L;
    /**
     * {@snippet lang=c :
     * #define E_HANDLE -2147024890
     * }
     */
    public static int E_HANDLE() {
        return E_HANDLE;
    }
    private static final int E_ABORT = (int)-2147467260L;
    /**
     * {@snippet lang=c :
     * #define E_ABORT -2147467260
     * }
     */
    public static int E_ABORT() {
        return E_ABORT;
    }
    private static final int E_FAIL = (int)-2147467259L;
    /**
     * {@snippet lang=c :
     * #define E_FAIL -2147467259
     * }
     */
    public static int E_FAIL() {
        return E_FAIL;
    }
    private static final int E_ACCESSDENIED = (int)-2147024891L;
    /**
     * {@snippet lang=c :
     * #define E_ACCESSDENIED -2147024891
     * }
     */
    public static int E_ACCESSDENIED() {
        return E_ACCESSDENIED;
    }
    private static final int E_PENDING = (int)-2147483638L;
    /**
     * {@snippet lang=c :
     * #define E_PENDING -2147483638
     * }
     */
    public static int E_PENDING() {
        return E_PENDING;
    }
    private static final int E_BOUNDS = (int)-2147483637L;
    /**
     * {@snippet lang=c :
     * #define E_BOUNDS -2147483637
     * }
     */
    public static int E_BOUNDS() {
        return E_BOUNDS;
    }
    private static final int E_CHANGED_STATE = (int)-2147483636L;
    /**
     * {@snippet lang=c :
     * #define E_CHANGED_STATE -2147483636
     * }
     */
    public static int E_CHANGED_STATE() {
        return E_CHANGED_STATE;
    }
    private static final int E_ILLEGAL_STATE_CHANGE = (int)-2147483635L;
    /**
     * {@snippet lang=c :
     * #define E_ILLEGAL_STATE_CHANGE -2147483635
     * }
     */
    public static int E_ILLEGAL_STATE_CHANGE() {
        return E_ILLEGAL_STATE_CHANGE;
    }
    private static final int E_ILLEGAL_METHOD_CALL = (int)-2147483634L;
    /**
     * {@snippet lang=c :
     * #define E_ILLEGAL_METHOD_CALL -2147483634
     * }
     */
    public static int E_ILLEGAL_METHOD_CALL() {
        return E_ILLEGAL_METHOD_CALL;
    }
    private static final int RO_E_METADATA_NAME_NOT_FOUND = (int)-2147483633L;
    /**
     * {@snippet lang=c :
     * #define RO_E_METADATA_NAME_NOT_FOUND -2147483633
     * }
     */
    public static int RO_E_METADATA_NAME_NOT_FOUND() {
        return RO_E_METADATA_NAME_NOT_FOUND;
    }
    private static final int RO_E_METADATA_NAME_IS_NAMESPACE = (int)-2147483632L;
    /**
     * {@snippet lang=c :
     * #define RO_E_METADATA_NAME_IS_NAMESPACE -2147483632
     * }
     */
    public static int RO_E_METADATA_NAME_IS_NAMESPACE() {
        return RO_E_METADATA_NAME_IS_NAMESPACE;
    }
    private static final int RO_E_METADATA_INVALID_TYPE_FORMAT = (int)-2147483631L;
    /**
     * {@snippet lang=c :
     * #define RO_E_METADATA_INVALID_TYPE_FORMAT -2147483631
     * }
     */
    public static int RO_E_METADATA_INVALID_TYPE_FORMAT() {
        return RO_E_METADATA_INVALID_TYPE_FORMAT;
    }
    private static final int RO_E_INVALID_METADATA_FILE = (int)-2147483630L;
    /**
     * {@snippet lang=c :
     * #define RO_E_INVALID_METADATA_FILE -2147483630
     * }
     */
    public static int RO_E_INVALID_METADATA_FILE() {
        return RO_E_INVALID_METADATA_FILE;
    }
    private static final int RO_E_CLOSED = (int)-2147483629L;
    /**
     * {@snippet lang=c :
     * #define RO_E_CLOSED -2147483629
     * }
     */
    public static int RO_E_CLOSED() {
        return RO_E_CLOSED;
    }
    private static final int RO_E_EXCLUSIVE_WRITE = (int)-2147483628L;
    /**
     * {@snippet lang=c :
     * #define RO_E_EXCLUSIVE_WRITE -2147483628
     * }
     */
    public static int RO_E_EXCLUSIVE_WRITE() {
        return RO_E_EXCLUSIVE_WRITE;
    }
    private static final int RO_E_CHANGE_NOTIFICATION_IN_PROGRESS = (int)-2147483627L;
    /**
     * {@snippet lang=c :
     * #define RO_E_CHANGE_NOTIFICATION_IN_PROGRESS -2147483627
     * }
     */
    public static int RO_E_CHANGE_NOTIFICATION_IN_PROGRESS() {
        return RO_E_CHANGE_NOTIFICATION_IN_PROGRESS;
    }
    private static final int RO_E_ERROR_STRING_NOT_FOUND = (int)-2147483626L;
    /**
     * {@snippet lang=c :
     * #define RO_E_ERROR_STRING_NOT_FOUND -2147483626
     * }
     */
    public static int RO_E_ERROR_STRING_NOT_FOUND() {
        return RO_E_ERROR_STRING_NOT_FOUND;
    }
    private static final int E_STRING_NOT_NULL_TERMINATED = (int)-2147483625L;
    /**
     * {@snippet lang=c :
     * #define E_STRING_NOT_NULL_TERMINATED -2147483625
     * }
     */
    public static int E_STRING_NOT_NULL_TERMINATED() {
        return E_STRING_NOT_NULL_TERMINATED;
    }
    private static final int E_ILLEGAL_DELEGATE_ASSIGNMENT = (int)-2147483624L;
    /**
     * {@snippet lang=c :
     * #define E_ILLEGAL_DELEGATE_ASSIGNMENT -2147483624
     * }
     */
    public static int E_ILLEGAL_DELEGATE_ASSIGNMENT() {
        return E_ILLEGAL_DELEGATE_ASSIGNMENT;
    }
    private static final int E_ASYNC_OPERATION_NOT_STARTED = (int)-2147483623L;
    /**
     * {@snippet lang=c :
     * #define E_ASYNC_OPERATION_NOT_STARTED -2147483623
     * }
     */
    public static int E_ASYNC_OPERATION_NOT_STARTED() {
        return E_ASYNC_OPERATION_NOT_STARTED;
    }
    private static final int E_APPLICATION_EXITING = (int)-2147483622L;
    /**
     * {@snippet lang=c :
     * #define E_APPLICATION_EXITING -2147483622
     * }
     */
    public static int E_APPLICATION_EXITING() {
        return E_APPLICATION_EXITING;
    }
    private static final int E_APPLICATION_VIEW_EXITING = (int)-2147483621L;
    /**
     * {@snippet lang=c :
     * #define E_APPLICATION_VIEW_EXITING -2147483621
     * }
     */
    public static int E_APPLICATION_VIEW_EXITING() {
        return E_APPLICATION_VIEW_EXITING;
    }
    private static final int RO_E_MUST_BE_AGILE = (int)-2147483620L;
    /**
     * {@snippet lang=c :
     * #define RO_E_MUST_BE_AGILE -2147483620
     * }
     */
    public static int RO_E_MUST_BE_AGILE() {
        return RO_E_MUST_BE_AGILE;
    }
    private static final int RO_E_UNSUPPORTED_FROM_MTA = (int)-2147483619L;
    /**
     * {@snippet lang=c :
     * #define RO_E_UNSUPPORTED_FROM_MTA -2147483619
     * }
     */
    public static int RO_E_UNSUPPORTED_FROM_MTA() {
        return RO_E_UNSUPPORTED_FROM_MTA;
    }
    private static final int RO_E_COMMITTED = (int)-2147483618L;
    /**
     * {@snippet lang=c :
     * #define RO_E_COMMITTED -2147483618
     * }
     */
    public static int RO_E_COMMITTED() {
        return RO_E_COMMITTED;
    }
    private static final int RO_E_BLOCKED_CROSS_ASTA_CALL = (int)-2147483617L;
    /**
     * {@snippet lang=c :
     * #define RO_E_BLOCKED_CROSS_ASTA_CALL -2147483617
     * }
     */
    public static int RO_E_BLOCKED_CROSS_ASTA_CALL() {
        return RO_E_BLOCKED_CROSS_ASTA_CALL;
    }
    private static final int RO_E_CANNOT_ACTIVATE_FULL_TRUST_SERVER = (int)-2147483616L;
    /**
     * {@snippet lang=c :
     * #define RO_E_CANNOT_ACTIVATE_FULL_TRUST_SERVER -2147483616
     * }
     */
    public static int RO_E_CANNOT_ACTIVATE_FULL_TRUST_SERVER() {
        return RO_E_CANNOT_ACTIVATE_FULL_TRUST_SERVER;
    }
    private static final int RO_E_CANNOT_ACTIVATE_UNIVERSAL_APPLICATION_SERVER = (int)-2147483615L;
    /**
     * {@snippet lang=c :
     * #define RO_E_CANNOT_ACTIVATE_UNIVERSAL_APPLICATION_SERVER -2147483615
     * }
     */
    public static int RO_E_CANNOT_ACTIVATE_UNIVERSAL_APPLICATION_SERVER() {
        return RO_E_CANNOT_ACTIVATE_UNIVERSAL_APPLICATION_SERVER;
    }
    private static final int CO_E_INIT_TLS = (int)-2147467258L;
    /**
     * {@snippet lang=c :
     * #define CO_E_INIT_TLS -2147467258
     * }
     */
    public static int CO_E_INIT_TLS() {
        return CO_E_INIT_TLS;
    }
    private static final int CO_E_INIT_SHARED_ALLOCATOR = (int)-2147467257L;
    /**
     * {@snippet lang=c :
     * #define CO_E_INIT_SHARED_ALLOCATOR -2147467257
     * }
     */
    public static int CO_E_INIT_SHARED_ALLOCATOR() {
        return CO_E_INIT_SHARED_ALLOCATOR;
    }
    private static final int CO_E_INIT_MEMORY_ALLOCATOR = (int)-2147467256L;
    /**
     * {@snippet lang=c :
     * #define CO_E_INIT_MEMORY_ALLOCATOR -2147467256
     * }
     */
    public static int CO_E_INIT_MEMORY_ALLOCATOR() {
        return CO_E_INIT_MEMORY_ALLOCATOR;
    }
    private static final int CO_E_INIT_CLASS_CACHE = (int)-2147467255L;
    /**
     * {@snippet lang=c :
     * #define CO_E_INIT_CLASS_CACHE -2147467255
     * }
     */
    public static int CO_E_INIT_CLASS_CACHE() {
        return CO_E_INIT_CLASS_CACHE;
    }
    private static final int CO_E_INIT_RPC_CHANNEL = (int)-2147467254L;
    /**
     * {@snippet lang=c :
     * #define CO_E_INIT_RPC_CHANNEL -2147467254
     * }
     */
    public static int CO_E_INIT_RPC_CHANNEL() {
        return CO_E_INIT_RPC_CHANNEL;
    }
    private static final int CO_E_INIT_TLS_SET_CHANNEL_CONTROL = (int)-2147467253L;
    /**
     * {@snippet lang=c :
     * #define CO_E_INIT_TLS_SET_CHANNEL_CONTROL -2147467253
     * }
     */
    public static int CO_E_INIT_TLS_SET_CHANNEL_CONTROL() {
        return CO_E_INIT_TLS_SET_CHANNEL_CONTROL;
    }
    private static final int CO_E_INIT_TLS_CHANNEL_CONTROL = (int)-2147467252L;
    /**
     * {@snippet lang=c :
     * #define CO_E_INIT_TLS_CHANNEL_CONTROL -2147467252
     * }
     */
    public static int CO_E_INIT_TLS_CHANNEL_CONTROL() {
        return CO_E_INIT_TLS_CHANNEL_CONTROL;
    }
    private static final int CO_E_INIT_UNACCEPTED_USER_ALLOCATOR = (int)-2147467251L;
    /**
     * {@snippet lang=c :
     * #define CO_E_INIT_UNACCEPTED_USER_ALLOCATOR -2147467251
     * }
     */
    public static int CO_E_INIT_UNACCEPTED_USER_ALLOCATOR() {
        return CO_E_INIT_UNACCEPTED_USER_ALLOCATOR;
    }
    private static final int CO_E_INIT_SCM_MUTEX_EXISTS = (int)-2147467250L;
    /**
     * {@snippet lang=c :
     * #define CO_E_INIT_SCM_MUTEX_EXISTS -2147467250
     * }
     */
    public static int CO_E_INIT_SCM_MUTEX_EXISTS() {
        return CO_E_INIT_SCM_MUTEX_EXISTS;
    }
    private static final int CO_E_INIT_SCM_FILE_MAPPING_EXISTS = (int)-2147467249L;
    /**
     * {@snippet lang=c :
     * #define CO_E_INIT_SCM_FILE_MAPPING_EXISTS -2147467249
     * }
     */
    public static int CO_E_INIT_SCM_FILE_MAPPING_EXISTS() {
        return CO_E_INIT_SCM_FILE_MAPPING_EXISTS;
    }
    private static final int CO_E_INIT_SCM_MAP_VIEW_OF_FILE = (int)-2147467248L;
    /**
     * {@snippet lang=c :
     * #define CO_E_INIT_SCM_MAP_VIEW_OF_FILE -2147467248
     * }
     */
    public static int CO_E_INIT_SCM_MAP_VIEW_OF_FILE() {
        return CO_E_INIT_SCM_MAP_VIEW_OF_FILE;
    }
    private static final int CO_E_INIT_SCM_EXEC_FAILURE = (int)-2147467247L;
    /**
     * {@snippet lang=c :
     * #define CO_E_INIT_SCM_EXEC_FAILURE -2147467247
     * }
     */
    public static int CO_E_INIT_SCM_EXEC_FAILURE() {
        return CO_E_INIT_SCM_EXEC_FAILURE;
    }
    private static final int CO_E_INIT_ONLY_SINGLE_THREADED = (int)-2147467246L;
    /**
     * {@snippet lang=c :
     * #define CO_E_INIT_ONLY_SINGLE_THREADED -2147467246
     * }
     */
    public static int CO_E_INIT_ONLY_SINGLE_THREADED() {
        return CO_E_INIT_ONLY_SINGLE_THREADED;
    }
    private static final int CO_E_CANT_REMOTE = (int)-2147467245L;
    /**
     * {@snippet lang=c :
     * #define CO_E_CANT_REMOTE -2147467245
     * }
     */
    public static int CO_E_CANT_REMOTE() {
        return CO_E_CANT_REMOTE;
    }
    private static final int CO_E_BAD_SERVER_NAME = (int)-2147467244L;
    /**
     * {@snippet lang=c :
     * #define CO_E_BAD_SERVER_NAME -2147467244
     * }
     */
    public static int CO_E_BAD_SERVER_NAME() {
        return CO_E_BAD_SERVER_NAME;
    }
    private static final int CO_E_WRONG_SERVER_IDENTITY = (int)-2147467243L;
    /**
     * {@snippet lang=c :
     * #define CO_E_WRONG_SERVER_IDENTITY -2147467243
     * }
     */
    public static int CO_E_WRONG_SERVER_IDENTITY() {
        return CO_E_WRONG_SERVER_IDENTITY;
    }
    private static final int CO_E_OLE1DDE_DISABLED = (int)-2147467242L;
    /**
     * {@snippet lang=c :
     * #define CO_E_OLE1DDE_DISABLED -2147467242
     * }
     */
    public static int CO_E_OLE1DDE_DISABLED() {
        return CO_E_OLE1DDE_DISABLED;
    }
    private static final int CO_E_RUNAS_SYNTAX = (int)-2147467241L;
    /**
     * {@snippet lang=c :
     * #define CO_E_RUNAS_SYNTAX -2147467241
     * }
     */
    public static int CO_E_RUNAS_SYNTAX() {
        return CO_E_RUNAS_SYNTAX;
    }
    private static final int CO_E_CREATEPROCESS_FAILURE = (int)-2147467240L;
    /**
     * {@snippet lang=c :
     * #define CO_E_CREATEPROCESS_FAILURE -2147467240
     * }
     */
    public static int CO_E_CREATEPROCESS_FAILURE() {
        return CO_E_CREATEPROCESS_FAILURE;
    }
    private static final int CO_E_RUNAS_CREATEPROCESS_FAILURE = (int)-2147467239L;
    /**
     * {@snippet lang=c :
     * #define CO_E_RUNAS_CREATEPROCESS_FAILURE -2147467239
     * }
     */
    public static int CO_E_RUNAS_CREATEPROCESS_FAILURE() {
        return CO_E_RUNAS_CREATEPROCESS_FAILURE;
    }
    private static final int CO_E_RUNAS_LOGON_FAILURE = (int)-2147467238L;
    /**
     * {@snippet lang=c :
     * #define CO_E_RUNAS_LOGON_FAILURE -2147467238
     * }
     */
    public static int CO_E_RUNAS_LOGON_FAILURE() {
        return CO_E_RUNAS_LOGON_FAILURE;
    }
    private static final int CO_E_LAUNCH_PERMSSION_DENIED = (int)-2147467237L;
    /**
     * {@snippet lang=c :
     * #define CO_E_LAUNCH_PERMSSION_DENIED -2147467237
     * }
     */
    public static int CO_E_LAUNCH_PERMSSION_DENIED() {
        return CO_E_LAUNCH_PERMSSION_DENIED;
    }
    private static final int CO_E_START_SERVICE_FAILURE = (int)-2147467236L;
    /**
     * {@snippet lang=c :
     * #define CO_E_START_SERVICE_FAILURE -2147467236
     * }
     */
    public static int CO_E_START_SERVICE_FAILURE() {
        return CO_E_START_SERVICE_FAILURE;
    }
    private static final int CO_E_REMOTE_COMMUNICATION_FAILURE = (int)-2147467235L;
    /**
     * {@snippet lang=c :
     * #define CO_E_REMOTE_COMMUNICATION_FAILURE -2147467235
     * }
     */
    public static int CO_E_REMOTE_COMMUNICATION_FAILURE() {
        return CO_E_REMOTE_COMMUNICATION_FAILURE;
    }
    private static final int CO_E_SERVER_START_TIMEOUT = (int)-2147467234L;
    /**
     * {@snippet lang=c :
     * #define CO_E_SERVER_START_TIMEOUT -2147467234
     * }
     */
    public static int CO_E_SERVER_START_TIMEOUT() {
        return CO_E_SERVER_START_TIMEOUT;
    }
    private static final int CO_E_CLSREG_INCONSISTENT = (int)-2147467233L;
    /**
     * {@snippet lang=c :
     * #define CO_E_CLSREG_INCONSISTENT -2147467233
     * }
     */
    public static int CO_E_CLSREG_INCONSISTENT() {
        return CO_E_CLSREG_INCONSISTENT;
    }
    private static final int CO_E_IIDREG_INCONSISTENT = (int)-2147467232L;
    /**
     * {@snippet lang=c :
     * #define CO_E_IIDREG_INCONSISTENT -2147467232
     * }
     */
    public static int CO_E_IIDREG_INCONSISTENT() {
        return CO_E_IIDREG_INCONSISTENT;
    }
    private static final int CO_E_NOT_SUPPORTED = (int)-2147467231L;
    /**
     * {@snippet lang=c :
     * #define CO_E_NOT_SUPPORTED -2147467231
     * }
     */
    public static int CO_E_NOT_SUPPORTED() {
        return CO_E_NOT_SUPPORTED;
    }
    private static final int CO_E_RELOAD_DLL = (int)-2147467230L;
    /**
     * {@snippet lang=c :
     * #define CO_E_RELOAD_DLL -2147467230
     * }
     */
    public static int CO_E_RELOAD_DLL() {
        return CO_E_RELOAD_DLL;
    }
    private static final int CO_E_MSI_ERROR = (int)-2147467229L;
    /**
     * {@snippet lang=c :
     * #define CO_E_MSI_ERROR -2147467229
     * }
     */
    public static int CO_E_MSI_ERROR() {
        return CO_E_MSI_ERROR;
    }
    private static final int CO_E_ATTEMPT_TO_CREATE_OUTSIDE_CLIENT_CONTEXT = (int)-2147467228L;
    /**
     * {@snippet lang=c :
     * #define CO_E_ATTEMPT_TO_CREATE_OUTSIDE_CLIENT_CONTEXT -2147467228
     * }
     */
    public static int CO_E_ATTEMPT_TO_CREATE_OUTSIDE_CLIENT_CONTEXT() {
        return CO_E_ATTEMPT_TO_CREATE_OUTSIDE_CLIENT_CONTEXT;
    }
    private static final int CO_E_SERVER_PAUSED = (int)-2147467227L;
    /**
     * {@snippet lang=c :
     * #define CO_E_SERVER_PAUSED -2147467227
     * }
     */
    public static int CO_E_SERVER_PAUSED() {
        return CO_E_SERVER_PAUSED;
    }
    private static final int CO_E_SERVER_NOT_PAUSED = (int)-2147467226L;
    /**
     * {@snippet lang=c :
     * #define CO_E_SERVER_NOT_PAUSED -2147467226
     * }
     */
    public static int CO_E_SERVER_NOT_PAUSED() {
        return CO_E_SERVER_NOT_PAUSED;
    }
    private static final int CO_E_CLASS_DISABLED = (int)-2147467225L;
    /**
     * {@snippet lang=c :
     * #define CO_E_CLASS_DISABLED -2147467225
     * }
     */
    public static int CO_E_CLASS_DISABLED() {
        return CO_E_CLASS_DISABLED;
    }
    private static final int CO_E_CLRNOTAVAILABLE = (int)-2147467224L;
    /**
     * {@snippet lang=c :
     * #define CO_E_CLRNOTAVAILABLE -2147467224
     * }
     */
    public static int CO_E_CLRNOTAVAILABLE() {
        return CO_E_CLRNOTAVAILABLE;
    }
    private static final int CO_E_ASYNC_WORK_REJECTED = (int)-2147467223L;
    /**
     * {@snippet lang=c :
     * #define CO_E_ASYNC_WORK_REJECTED -2147467223
     * }
     */
    public static int CO_E_ASYNC_WORK_REJECTED() {
        return CO_E_ASYNC_WORK_REJECTED;
    }
    private static final int CO_E_SERVER_INIT_TIMEOUT = (int)-2147467222L;
    /**
     * {@snippet lang=c :
     * #define CO_E_SERVER_INIT_TIMEOUT -2147467222
     * }
     */
    public static int CO_E_SERVER_INIT_TIMEOUT() {
        return CO_E_SERVER_INIT_TIMEOUT;
    }
    private static final int CO_E_NO_SECCTX_IN_ACTIVATE = (int)-2147467221L;
    /**
     * {@snippet lang=c :
     * #define CO_E_NO_SECCTX_IN_ACTIVATE -2147467221
     * }
     */
    public static int CO_E_NO_SECCTX_IN_ACTIVATE() {
        return CO_E_NO_SECCTX_IN_ACTIVATE;
    }
    private static final int CO_E_TRACKER_CONFIG = (int)-2147467216L;
    /**
     * {@snippet lang=c :
     * #define CO_E_TRACKER_CONFIG -2147467216
     * }
     */
    public static int CO_E_TRACKER_CONFIG() {
        return CO_E_TRACKER_CONFIG;
    }
    private static final int CO_E_THREADPOOL_CONFIG = (int)-2147467215L;
    /**
     * {@snippet lang=c :
     * #define CO_E_THREADPOOL_CONFIG -2147467215
     * }
     */
    public static int CO_E_THREADPOOL_CONFIG() {
        return CO_E_THREADPOOL_CONFIG;
    }
    private static final int CO_E_SXS_CONFIG = (int)-2147467214L;
    /**
     * {@snippet lang=c :
     * #define CO_E_SXS_CONFIG -2147467214
     * }
     */
    public static int CO_E_SXS_CONFIG() {
        return CO_E_SXS_CONFIG;
    }
    private static final int CO_E_MALFORMED_SPN = (int)-2147467213L;
    /**
     * {@snippet lang=c :
     * #define CO_E_MALFORMED_SPN -2147467213
     * }
     */
    public static int CO_E_MALFORMED_SPN() {
        return CO_E_MALFORMED_SPN;
    }
    private static final int CO_E_UNREVOKED_REGISTRATION_ON_APARTMENT_SHUTDOWN = (int)-2147467212L;
    /**
     * {@snippet lang=c :
     * #define CO_E_UNREVOKED_REGISTRATION_ON_APARTMENT_SHUTDOWN -2147467212
     * }
     */
    public static int CO_E_UNREVOKED_REGISTRATION_ON_APARTMENT_SHUTDOWN() {
        return CO_E_UNREVOKED_REGISTRATION_ON_APARTMENT_SHUTDOWN;
    }
    private static final int CO_E_PREMATURE_STUB_RUNDOWN = (int)-2147467211L;
    /**
     * {@snippet lang=c :
     * #define CO_E_PREMATURE_STUB_RUNDOWN -2147467211
     * }
     */
    public static int CO_E_PREMATURE_STUB_RUNDOWN() {
        return CO_E_PREMATURE_STUB_RUNDOWN;
    }
    private static final int S_OK = (int)0L;
    /**
     * {@snippet lang=c :
     * #define S_OK 0
     * }
     */
    public static int S_OK() {
        return S_OK;
    }
    private static final int S_FALSE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define S_FALSE 1
     * }
     */
    public static int S_FALSE() {
        return S_FALSE;
    }
    private static final int OLE_E_FIRST = (int)-2147221504L;
    /**
     * {@snippet lang=c :
     * #define OLE_E_FIRST -2147221504
     * }
     */
    public static int OLE_E_FIRST() {
        return OLE_E_FIRST;
    }
    private static final int OLE_E_LAST = (int)-2147221249L;
    /**
     * {@snippet lang=c :
     * #define OLE_E_LAST -2147221249
     * }
     */
    public static int OLE_E_LAST() {
        return OLE_E_LAST;
    }
    private static final int OLE_S_FIRST = (int)262144L;
    /**
     * {@snippet lang=c :
     * #define OLE_S_FIRST 262144
     * }
     */
    public static int OLE_S_FIRST() {
        return OLE_S_FIRST;
    }
    private static final int OLE_S_LAST = (int)262399L;
    /**
     * {@snippet lang=c :
     * #define OLE_S_LAST 262399
     * }
     */
    public static int OLE_S_LAST() {
        return OLE_S_LAST;
    }
    private static final int OLE_E_OLEVERB = (int)-2147221504L;
    /**
     * {@snippet lang=c :
     * #define OLE_E_OLEVERB -2147221504
     * }
     */
    public static int OLE_E_OLEVERB() {
        return OLE_E_OLEVERB;
    }
    private static final int OLE_E_ADVF = (int)-2147221503L;
    /**
     * {@snippet lang=c :
     * #define OLE_E_ADVF -2147221503
     * }
     */
    public static int OLE_E_ADVF() {
        return OLE_E_ADVF;
    }
    private static final int OLE_E_ENUM_NOMORE = (int)-2147221502L;
    /**
     * {@snippet lang=c :
     * #define OLE_E_ENUM_NOMORE -2147221502
     * }
     */
    public static int OLE_E_ENUM_NOMORE() {
        return OLE_E_ENUM_NOMORE;
    }
    private static final int OLE_E_ADVISENOTSUPPORTED = (int)-2147221501L;
    /**
     * {@snippet lang=c :
     * #define OLE_E_ADVISENOTSUPPORTED -2147221501
     * }
     */
    public static int OLE_E_ADVISENOTSUPPORTED() {
        return OLE_E_ADVISENOTSUPPORTED;
    }
    private static final int OLE_E_NOCONNECTION = (int)-2147221500L;
    /**
     * {@snippet lang=c :
     * #define OLE_E_NOCONNECTION -2147221500
     * }
     */
    public static int OLE_E_NOCONNECTION() {
        return OLE_E_NOCONNECTION;
    }
    private static final int OLE_E_NOTRUNNING = (int)-2147221499L;
    /**
     * {@snippet lang=c :
     * #define OLE_E_NOTRUNNING -2147221499
     * }
     */
    public static int OLE_E_NOTRUNNING() {
        return OLE_E_NOTRUNNING;
    }
    private static final int OLE_E_NOCACHE = (int)-2147221498L;
    /**
     * {@snippet lang=c :
     * #define OLE_E_NOCACHE -2147221498
     * }
     */
    public static int OLE_E_NOCACHE() {
        return OLE_E_NOCACHE;
    }
    private static final int OLE_E_BLANK = (int)-2147221497L;
    /**
     * {@snippet lang=c :
     * #define OLE_E_BLANK -2147221497
     * }
     */
    public static int OLE_E_BLANK() {
        return OLE_E_BLANK;
    }
    private static final int OLE_E_CLASSDIFF = (int)-2147221496L;
    /**
     * {@snippet lang=c :
     * #define OLE_E_CLASSDIFF -2147221496
     * }
     */
    public static int OLE_E_CLASSDIFF() {
        return OLE_E_CLASSDIFF;
    }
    private static final int OLE_E_CANT_GETMONIKER = (int)-2147221495L;
    /**
     * {@snippet lang=c :
     * #define OLE_E_CANT_GETMONIKER -2147221495
     * }
     */
    public static int OLE_E_CANT_GETMONIKER() {
        return OLE_E_CANT_GETMONIKER;
    }
    private static final int OLE_E_CANT_BINDTOSOURCE = (int)-2147221494L;
    /**
     * {@snippet lang=c :
     * #define OLE_E_CANT_BINDTOSOURCE -2147221494
     * }
     */
    public static int OLE_E_CANT_BINDTOSOURCE() {
        return OLE_E_CANT_BINDTOSOURCE;
    }
    private static final int OLE_E_STATIC = (int)-2147221493L;
    /**
     * {@snippet lang=c :
     * #define OLE_E_STATIC -2147221493
     * }
     */
    public static int OLE_E_STATIC() {
        return OLE_E_STATIC;
    }
    private static final int OLE_E_PROMPTSAVECANCELLED = (int)-2147221492L;
    /**
     * {@snippet lang=c :
     * #define OLE_E_PROMPTSAVECANCELLED -2147221492
     * }
     */
    public static int OLE_E_PROMPTSAVECANCELLED() {
        return OLE_E_PROMPTSAVECANCELLED;
    }
    private static final int OLE_E_INVALIDRECT = (int)-2147221491L;
    /**
     * {@snippet lang=c :
     * #define OLE_E_INVALIDRECT -2147221491
     * }
     */
    public static int OLE_E_INVALIDRECT() {
        return OLE_E_INVALIDRECT;
    }
    private static final int OLE_E_WRONGCOMPOBJ = (int)-2147221490L;
    /**
     * {@snippet lang=c :
     * #define OLE_E_WRONGCOMPOBJ -2147221490
     * }
     */
    public static int OLE_E_WRONGCOMPOBJ() {
        return OLE_E_WRONGCOMPOBJ;
    }
    private static final int OLE_E_INVALIDHWND = (int)-2147221489L;
    /**
     * {@snippet lang=c :
     * #define OLE_E_INVALIDHWND -2147221489
     * }
     */
    public static int OLE_E_INVALIDHWND() {
        return OLE_E_INVALIDHWND;
    }
    private static final int OLE_E_NOT_INPLACEACTIVE = (int)-2147221488L;
    /**
     * {@snippet lang=c :
     * #define OLE_E_NOT_INPLACEACTIVE -2147221488
     * }
     */
    public static int OLE_E_NOT_INPLACEACTIVE() {
        return OLE_E_NOT_INPLACEACTIVE;
    }
    private static final int OLE_E_CANTCONVERT = (int)-2147221487L;
    /**
     * {@snippet lang=c :
     * #define OLE_E_CANTCONVERT -2147221487
     * }
     */
    public static int OLE_E_CANTCONVERT() {
        return OLE_E_CANTCONVERT;
    }
    private static final int OLE_E_NOSTORAGE = (int)-2147221486L;
    /**
     * {@snippet lang=c :
     * #define OLE_E_NOSTORAGE -2147221486
     * }
     */
    public static int OLE_E_NOSTORAGE() {
        return OLE_E_NOSTORAGE;
    }
    private static final int DV_E_FORMATETC = (int)-2147221404L;
    /**
     * {@snippet lang=c :
     * #define DV_E_FORMATETC -2147221404
     * }
     */
    public static int DV_E_FORMATETC() {
        return DV_E_FORMATETC;
    }
    private static final int DV_E_DVTARGETDEVICE = (int)-2147221403L;
    /**
     * {@snippet lang=c :
     * #define DV_E_DVTARGETDEVICE -2147221403
     * }
     */
    public static int DV_E_DVTARGETDEVICE() {
        return DV_E_DVTARGETDEVICE;
    }
    private static final int DV_E_STGMEDIUM = (int)-2147221402L;
    /**
     * {@snippet lang=c :
     * #define DV_E_STGMEDIUM -2147221402
     * }
     */
    public static int DV_E_STGMEDIUM() {
        return DV_E_STGMEDIUM;
    }
    private static final int DV_E_STATDATA = (int)-2147221401L;
    /**
     * {@snippet lang=c :
     * #define DV_E_STATDATA -2147221401
     * }
     */
    public static int DV_E_STATDATA() {
        return DV_E_STATDATA;
    }
    private static final int DV_E_LINDEX = (int)-2147221400L;
    /**
     * {@snippet lang=c :
     * #define DV_E_LINDEX -2147221400
     * }
     */
    public static int DV_E_LINDEX() {
        return DV_E_LINDEX;
    }
    private static final int DV_E_TYMED = (int)-2147221399L;
    /**
     * {@snippet lang=c :
     * #define DV_E_TYMED -2147221399
     * }
     */
    public static int DV_E_TYMED() {
        return DV_E_TYMED;
    }
    private static final int DV_E_CLIPFORMAT = (int)-2147221398L;
    /**
     * {@snippet lang=c :
     * #define DV_E_CLIPFORMAT -2147221398
     * }
     */
    public static int DV_E_CLIPFORMAT() {
        return DV_E_CLIPFORMAT;
    }
    private static final int DV_E_DVASPECT = (int)-2147221397L;
    /**
     * {@snippet lang=c :
     * #define DV_E_DVASPECT -2147221397
     * }
     */
    public static int DV_E_DVASPECT() {
        return DV_E_DVASPECT;
    }
    private static final int DV_E_DVTARGETDEVICE_SIZE = (int)-2147221396L;
    /**
     * {@snippet lang=c :
     * #define DV_E_DVTARGETDEVICE_SIZE -2147221396
     * }
     */
    public static int DV_E_DVTARGETDEVICE_SIZE() {
        return DV_E_DVTARGETDEVICE_SIZE;
    }
    private static final int DV_E_NOIVIEWOBJECT = (int)-2147221395L;
    /**
     * {@snippet lang=c :
     * #define DV_E_NOIVIEWOBJECT -2147221395
     * }
     */
    public static int DV_E_NOIVIEWOBJECT() {
        return DV_E_NOIVIEWOBJECT;
    }
    private static final int DRAGDROP_E_FIRST = (int)2147746048L;
    /**
     * {@snippet lang=c :
     * #define DRAGDROP_E_FIRST 2147746048
     * }
     */
    public static int DRAGDROP_E_FIRST() {
        return DRAGDROP_E_FIRST;
    }
    private static final int DRAGDROP_E_LAST = (int)2147746063L;
    /**
     * {@snippet lang=c :
     * #define DRAGDROP_E_LAST 2147746063
     * }
     */
    public static int DRAGDROP_E_LAST() {
        return DRAGDROP_E_LAST;
    }
    private static final int DRAGDROP_S_FIRST = (int)262400L;
    /**
     * {@snippet lang=c :
     * #define DRAGDROP_S_FIRST 262400
     * }
     */
    public static int DRAGDROP_S_FIRST() {
        return DRAGDROP_S_FIRST;
    }
    private static final int DRAGDROP_S_LAST = (int)262415L;
    /**
     * {@snippet lang=c :
     * #define DRAGDROP_S_LAST 262415
     * }
     */
    public static int DRAGDROP_S_LAST() {
        return DRAGDROP_S_LAST;
    }
    private static final int DRAGDROP_E_NOTREGISTERED = (int)-2147221248L;
    /**
     * {@snippet lang=c :
     * #define DRAGDROP_E_NOTREGISTERED -2147221248
     * }
     */
    public static int DRAGDROP_E_NOTREGISTERED() {
        return DRAGDROP_E_NOTREGISTERED;
    }
    private static final int DRAGDROP_E_ALREADYREGISTERED = (int)-2147221247L;
    /**
     * {@snippet lang=c :
     * #define DRAGDROP_E_ALREADYREGISTERED -2147221247
     * }
     */
    public static int DRAGDROP_E_ALREADYREGISTERED() {
        return DRAGDROP_E_ALREADYREGISTERED;
    }
    private static final int DRAGDROP_E_INVALIDHWND = (int)-2147221246L;
    /**
     * {@snippet lang=c :
     * #define DRAGDROP_E_INVALIDHWND -2147221246
     * }
     */
    public static int DRAGDROP_E_INVALIDHWND() {
        return DRAGDROP_E_INVALIDHWND;
    }
    private static final int DRAGDROP_E_CONCURRENT_DRAG_ATTEMPTED = (int)-2147221245L;
    /**
     * {@snippet lang=c :
     * #define DRAGDROP_E_CONCURRENT_DRAG_ATTEMPTED -2147221245
     * }
     */
    public static int DRAGDROP_E_CONCURRENT_DRAG_ATTEMPTED() {
        return DRAGDROP_E_CONCURRENT_DRAG_ATTEMPTED;
    }
    private static final int CLASSFACTORY_E_FIRST = (int)2147746064L;
    /**
     * {@snippet lang=c :
     * #define CLASSFACTORY_E_FIRST 2147746064
     * }
     */
    public static int CLASSFACTORY_E_FIRST() {
        return CLASSFACTORY_E_FIRST;
    }
    private static final int CLASSFACTORY_E_LAST = (int)2147746079L;
    /**
     * {@snippet lang=c :
     * #define CLASSFACTORY_E_LAST 2147746079
     * }
     */
    public static int CLASSFACTORY_E_LAST() {
        return CLASSFACTORY_E_LAST;
    }
    private static final int CLASSFACTORY_S_FIRST = (int)262416L;
    /**
     * {@snippet lang=c :
     * #define CLASSFACTORY_S_FIRST 262416
     * }
     */
    public static int CLASSFACTORY_S_FIRST() {
        return CLASSFACTORY_S_FIRST;
    }
    private static final int CLASSFACTORY_S_LAST = (int)262431L;
    /**
     * {@snippet lang=c :
     * #define CLASSFACTORY_S_LAST 262431
     * }
     */
    public static int CLASSFACTORY_S_LAST() {
        return CLASSFACTORY_S_LAST;
    }
    private static final int CLASS_E_NOAGGREGATION = (int)-2147221232L;
    /**
     * {@snippet lang=c :
     * #define CLASS_E_NOAGGREGATION -2147221232
     * }
     */
    public static int CLASS_E_NOAGGREGATION() {
        return CLASS_E_NOAGGREGATION;
    }
    private static final int CLASS_E_CLASSNOTAVAILABLE = (int)-2147221231L;
    /**
     * {@snippet lang=c :
     * #define CLASS_E_CLASSNOTAVAILABLE -2147221231
     * }
     */
    public static int CLASS_E_CLASSNOTAVAILABLE() {
        return CLASS_E_CLASSNOTAVAILABLE;
    }
    private static final int CLASS_E_NOTLICENSED = (int)-2147221230L;
    /**
     * {@snippet lang=c :
     * #define CLASS_E_NOTLICENSED -2147221230
     * }
     */
    public static int CLASS_E_NOTLICENSED() {
        return CLASS_E_NOTLICENSED;
    }
    private static final int MARSHAL_E_FIRST = (int)2147746080L;
    /**
     * {@snippet lang=c :
     * #define MARSHAL_E_FIRST 2147746080
     * }
     */
    public static int MARSHAL_E_FIRST() {
        return MARSHAL_E_FIRST;
    }
    private static final int MARSHAL_E_LAST = (int)2147746095L;
    /**
     * {@snippet lang=c :
     * #define MARSHAL_E_LAST 2147746095
     * }
     */
    public static int MARSHAL_E_LAST() {
        return MARSHAL_E_LAST;
    }
    private static final int MARSHAL_S_FIRST = (int)262432L;
    /**
     * {@snippet lang=c :
     * #define MARSHAL_S_FIRST 262432
     * }
     */
    public static int MARSHAL_S_FIRST() {
        return MARSHAL_S_FIRST;
    }
    private static final int MARSHAL_S_LAST = (int)262447L;
    /**
     * {@snippet lang=c :
     * #define MARSHAL_S_LAST 262447
     * }
     */
    public static int MARSHAL_S_LAST() {
        return MARSHAL_S_LAST;
    }
    private static final int DATA_E_FIRST = (int)2147746096L;
    /**
     * {@snippet lang=c :
     * #define DATA_E_FIRST 2147746096
     * }
     */
    public static int DATA_E_FIRST() {
        return DATA_E_FIRST;
    }
}

