// Generated by jextract

package net.nailuj.win;

import java.lang.invoke.*;
import java.lang.foreign.*;
import java.nio.ByteOrder;
import java.util.*;
import java.util.function.*;
import java.util.stream.*;

import static java.lang.foreign.ValueLayout.*;
import static java.lang.foreign.MemoryLayout.PathElement.*;

public class winapi_29 extends winapi_30 {

    winapi_29() {
        // Should not be called directly
    }
    private static final int CERT_QUERY_CONTENT_CRL = (int)3L;
    /**
     * {@snippet lang=c :
     * #define CERT_QUERY_CONTENT_CRL 3
     * }
     */
    public static int CERT_QUERY_CONTENT_CRL() {
        return CERT_QUERY_CONTENT_CRL;
    }
    private static final int CERT_QUERY_CONTENT_SERIALIZED_STORE = (int)4L;
    /**
     * {@snippet lang=c :
     * #define CERT_QUERY_CONTENT_SERIALIZED_STORE 4
     * }
     */
    public static int CERT_QUERY_CONTENT_SERIALIZED_STORE() {
        return CERT_QUERY_CONTENT_SERIALIZED_STORE;
    }
    private static final int CERT_QUERY_CONTENT_SERIALIZED_CERT = (int)5L;
    /**
     * {@snippet lang=c :
     * #define CERT_QUERY_CONTENT_SERIALIZED_CERT 5
     * }
     */
    public static int CERT_QUERY_CONTENT_SERIALIZED_CERT() {
        return CERT_QUERY_CONTENT_SERIALIZED_CERT;
    }
    private static final int CERT_QUERY_CONTENT_SERIALIZED_CTL = (int)6L;
    /**
     * {@snippet lang=c :
     * #define CERT_QUERY_CONTENT_SERIALIZED_CTL 6
     * }
     */
    public static int CERT_QUERY_CONTENT_SERIALIZED_CTL() {
        return CERT_QUERY_CONTENT_SERIALIZED_CTL;
    }
    private static final int CERT_QUERY_CONTENT_SERIALIZED_CRL = (int)7L;
    /**
     * {@snippet lang=c :
     * #define CERT_QUERY_CONTENT_SERIALIZED_CRL 7
     * }
     */
    public static int CERT_QUERY_CONTENT_SERIALIZED_CRL() {
        return CERT_QUERY_CONTENT_SERIALIZED_CRL;
    }
    private static final int CERT_QUERY_CONTENT_PKCS7_SIGNED = (int)8L;
    /**
     * {@snippet lang=c :
     * #define CERT_QUERY_CONTENT_PKCS7_SIGNED 8
     * }
     */
    public static int CERT_QUERY_CONTENT_PKCS7_SIGNED() {
        return CERT_QUERY_CONTENT_PKCS7_SIGNED;
    }
    private static final int CERT_QUERY_CONTENT_PKCS7_UNSIGNED = (int)9L;
    /**
     * {@snippet lang=c :
     * #define CERT_QUERY_CONTENT_PKCS7_UNSIGNED 9
     * }
     */
    public static int CERT_QUERY_CONTENT_PKCS7_UNSIGNED() {
        return CERT_QUERY_CONTENT_PKCS7_UNSIGNED;
    }
    private static final int CERT_QUERY_CONTENT_PKCS7_SIGNED_EMBED = (int)10L;
    /**
     * {@snippet lang=c :
     * #define CERT_QUERY_CONTENT_PKCS7_SIGNED_EMBED 10
     * }
     */
    public static int CERT_QUERY_CONTENT_PKCS7_SIGNED_EMBED() {
        return CERT_QUERY_CONTENT_PKCS7_SIGNED_EMBED;
    }
    private static final int CERT_QUERY_CONTENT_PKCS10 = (int)11L;
    /**
     * {@snippet lang=c :
     * #define CERT_QUERY_CONTENT_PKCS10 11
     * }
     */
    public static int CERT_QUERY_CONTENT_PKCS10() {
        return CERT_QUERY_CONTENT_PKCS10;
    }
    private static final int CERT_QUERY_CONTENT_PFX = (int)12L;
    /**
     * {@snippet lang=c :
     * #define CERT_QUERY_CONTENT_PFX 12
     * }
     */
    public static int CERT_QUERY_CONTENT_PFX() {
        return CERT_QUERY_CONTENT_PFX;
    }
    private static final int CERT_QUERY_CONTENT_CERT_PAIR = (int)13L;
    /**
     * {@snippet lang=c :
     * #define CERT_QUERY_CONTENT_CERT_PAIR 13
     * }
     */
    public static int CERT_QUERY_CONTENT_CERT_PAIR() {
        return CERT_QUERY_CONTENT_CERT_PAIR;
    }
    private static final int CERT_QUERY_CONTENT_PFX_AND_LOAD = (int)14L;
    /**
     * {@snippet lang=c :
     * #define CERT_QUERY_CONTENT_PFX_AND_LOAD 14
     * }
     */
    public static int CERT_QUERY_CONTENT_PFX_AND_LOAD() {
        return CERT_QUERY_CONTENT_PFX_AND_LOAD;
    }
    private static final int CERT_QUERY_FORMAT_BINARY = (int)1L;
    /**
     * {@snippet lang=c :
     * #define CERT_QUERY_FORMAT_BINARY 1
     * }
     */
    public static int CERT_QUERY_FORMAT_BINARY() {
        return CERT_QUERY_FORMAT_BINARY;
    }
    private static final int CERT_QUERY_FORMAT_BASE64_ENCODED = (int)2L;
    /**
     * {@snippet lang=c :
     * #define CERT_QUERY_FORMAT_BASE64_ENCODED 2
     * }
     */
    public static int CERT_QUERY_FORMAT_BASE64_ENCODED() {
        return CERT_QUERY_FORMAT_BASE64_ENCODED;
    }
    private static final int CERT_QUERY_FORMAT_ASN_ASCII_HEX_ENCODED = (int)3L;
    /**
     * {@snippet lang=c :
     * #define CERT_QUERY_FORMAT_ASN_ASCII_HEX_ENCODED 3
     * }
     */
    public static int CERT_QUERY_FORMAT_ASN_ASCII_HEX_ENCODED() {
        return CERT_QUERY_FORMAT_ASN_ASCII_HEX_ENCODED;
    }
    private static final int CRYPT_RETRIEVE_MULTIPLE_OBJECTS = (int)1L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_RETRIEVE_MULTIPLE_OBJECTS 1
     * }
     */
    public static int CRYPT_RETRIEVE_MULTIPLE_OBJECTS() {
        return CRYPT_RETRIEVE_MULTIPLE_OBJECTS;
    }
    private static final int CRYPT_CACHE_ONLY_RETRIEVAL = (int)2L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_CACHE_ONLY_RETRIEVAL 2
     * }
     */
    public static int CRYPT_CACHE_ONLY_RETRIEVAL() {
        return CRYPT_CACHE_ONLY_RETRIEVAL;
    }
    private static final int CRYPT_WIRE_ONLY_RETRIEVAL = (int)4L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_WIRE_ONLY_RETRIEVAL 4
     * }
     */
    public static int CRYPT_WIRE_ONLY_RETRIEVAL() {
        return CRYPT_WIRE_ONLY_RETRIEVAL;
    }
    private static final int CRYPT_DONT_CACHE_RESULT = (int)8L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_DONT_CACHE_RESULT 8
     * }
     */
    public static int CRYPT_DONT_CACHE_RESULT() {
        return CRYPT_DONT_CACHE_RESULT;
    }
    private static final int CRYPT_ASYNC_RETRIEVAL = (int)16L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_ASYNC_RETRIEVAL 16
     * }
     */
    public static int CRYPT_ASYNC_RETRIEVAL() {
        return CRYPT_ASYNC_RETRIEVAL;
    }
    private static final int CRYPT_STICKY_CACHE_RETRIEVAL = (int)4096L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_STICKY_CACHE_RETRIEVAL 4096
     * }
     */
    public static int CRYPT_STICKY_CACHE_RETRIEVAL() {
        return CRYPT_STICKY_CACHE_RETRIEVAL;
    }
    private static final int CRYPT_LDAP_SCOPE_BASE_ONLY_RETRIEVAL = (int)8192L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_LDAP_SCOPE_BASE_ONLY_RETRIEVAL 8192
     * }
     */
    public static int CRYPT_LDAP_SCOPE_BASE_ONLY_RETRIEVAL() {
        return CRYPT_LDAP_SCOPE_BASE_ONLY_RETRIEVAL;
    }
    private static final int CRYPT_OFFLINE_CHECK_RETRIEVAL = (int)16384L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_OFFLINE_CHECK_RETRIEVAL 16384
     * }
     */
    public static int CRYPT_OFFLINE_CHECK_RETRIEVAL() {
        return CRYPT_OFFLINE_CHECK_RETRIEVAL;
    }
    private static final int CRYPT_LDAP_INSERT_ENTRY_ATTRIBUTE = (int)32768L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_LDAP_INSERT_ENTRY_ATTRIBUTE 32768
     * }
     */
    public static int CRYPT_LDAP_INSERT_ENTRY_ATTRIBUTE() {
        return CRYPT_LDAP_INSERT_ENTRY_ATTRIBUTE;
    }
    private static final int CRYPT_LDAP_SIGN_RETRIEVAL = (int)65536L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_LDAP_SIGN_RETRIEVAL 65536
     * }
     */
    public static int CRYPT_LDAP_SIGN_RETRIEVAL() {
        return CRYPT_LDAP_SIGN_RETRIEVAL;
    }
    private static final int CRYPT_NO_AUTH_RETRIEVAL = (int)131072L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_NO_AUTH_RETRIEVAL 131072
     * }
     */
    public static int CRYPT_NO_AUTH_RETRIEVAL() {
        return CRYPT_NO_AUTH_RETRIEVAL;
    }
    private static final int CRYPT_LDAP_AREC_EXCLUSIVE_RETRIEVAL = (int)262144L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_LDAP_AREC_EXCLUSIVE_RETRIEVAL 262144
     * }
     */
    public static int CRYPT_LDAP_AREC_EXCLUSIVE_RETRIEVAL() {
        return CRYPT_LDAP_AREC_EXCLUSIVE_RETRIEVAL;
    }
    private static final int CRYPT_AIA_RETRIEVAL = (int)524288L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_AIA_RETRIEVAL 524288
     * }
     */
    public static int CRYPT_AIA_RETRIEVAL() {
        return CRYPT_AIA_RETRIEVAL;
    }
    private static final int CRYPT_HTTP_POST_RETRIEVAL = (int)1048576L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_HTTP_POST_RETRIEVAL 1048576
     * }
     */
    public static int CRYPT_HTTP_POST_RETRIEVAL() {
        return CRYPT_HTTP_POST_RETRIEVAL;
    }
    private static final int CRYPT_PROXY_CACHE_RETRIEVAL = (int)2097152L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_PROXY_CACHE_RETRIEVAL 2097152
     * }
     */
    public static int CRYPT_PROXY_CACHE_RETRIEVAL() {
        return CRYPT_PROXY_CACHE_RETRIEVAL;
    }
    private static final int CRYPT_NOT_MODIFIED_RETRIEVAL = (int)4194304L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_NOT_MODIFIED_RETRIEVAL 4194304
     * }
     */
    public static int CRYPT_NOT_MODIFIED_RETRIEVAL() {
        return CRYPT_NOT_MODIFIED_RETRIEVAL;
    }
    private static final int CRYPT_ENABLE_SSL_REVOCATION_RETRIEVAL = (int)8388608L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_ENABLE_SSL_REVOCATION_RETRIEVAL 8388608
     * }
     */
    public static int CRYPT_ENABLE_SSL_REVOCATION_RETRIEVAL() {
        return CRYPT_ENABLE_SSL_REVOCATION_RETRIEVAL;
    }
    private static final int CRYPT_RANDOM_QUERY_STRING_RETRIEVAL = (int)67108864L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_RANDOM_QUERY_STRING_RETRIEVAL 67108864
     * }
     */
    public static int CRYPT_RANDOM_QUERY_STRING_RETRIEVAL() {
        return CRYPT_RANDOM_QUERY_STRING_RETRIEVAL;
    }
    private static final int CRYPT_ENABLE_FILE_RETRIEVAL = (int)134217728L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_ENABLE_FILE_RETRIEVAL 134217728
     * }
     */
    public static int CRYPT_ENABLE_FILE_RETRIEVAL() {
        return CRYPT_ENABLE_FILE_RETRIEVAL;
    }
    private static final int CRYPT_CREATE_NEW_FLUSH_ENTRY = (int)268435456L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_CREATE_NEW_FLUSH_ENTRY 268435456
     * }
     */
    public static int CRYPT_CREATE_NEW_FLUSH_ENTRY() {
        return CRYPT_CREATE_NEW_FLUSH_ENTRY;
    }
    private static final int CRYPT_VERIFY_CONTEXT_SIGNATURE = (int)32L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_VERIFY_CONTEXT_SIGNATURE 32
     * }
     */
    public static int CRYPT_VERIFY_CONTEXT_SIGNATURE() {
        return CRYPT_VERIFY_CONTEXT_SIGNATURE;
    }
    private static final int CRYPT_VERIFY_DATA_HASH = (int)64L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_VERIFY_DATA_HASH 64
     * }
     */
    public static int CRYPT_VERIFY_DATA_HASH() {
        return CRYPT_VERIFY_DATA_HASH;
    }
    private static final int CRYPT_KEEP_TIME_VALID = (int)128L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_KEEP_TIME_VALID 128
     * }
     */
    public static int CRYPT_KEEP_TIME_VALID() {
        return CRYPT_KEEP_TIME_VALID;
    }
    private static final int CRYPT_DONT_VERIFY_SIGNATURE = (int)256L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_DONT_VERIFY_SIGNATURE 256
     * }
     */
    public static int CRYPT_DONT_VERIFY_SIGNATURE() {
        return CRYPT_DONT_VERIFY_SIGNATURE;
    }
    private static final int CRYPT_DONT_CHECK_TIME_VALIDITY = (int)512L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_DONT_CHECK_TIME_VALIDITY 512
     * }
     */
    public static int CRYPT_DONT_CHECK_TIME_VALIDITY() {
        return CRYPT_DONT_CHECK_TIME_VALIDITY;
    }
    private static final int CRYPT_CHECK_FRESHNESS_TIME_VALIDITY = (int)1024L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_CHECK_FRESHNESS_TIME_VALIDITY 1024
     * }
     */
    public static int CRYPT_CHECK_FRESHNESS_TIME_VALIDITY() {
        return CRYPT_CHECK_FRESHNESS_TIME_VALIDITY;
    }
    private static final int CRYPT_ACCUMULATIVE_TIMEOUT = (int)2048L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_ACCUMULATIVE_TIMEOUT 2048
     * }
     */
    public static int CRYPT_ACCUMULATIVE_TIMEOUT() {
        return CRYPT_ACCUMULATIVE_TIMEOUT;
    }
    private static final int CRYPT_OCSP_ONLY_RETRIEVAL = (int)16777216L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_OCSP_ONLY_RETRIEVAL 16777216
     * }
     */
    public static int CRYPT_OCSP_ONLY_RETRIEVAL() {
        return CRYPT_OCSP_ONLY_RETRIEVAL;
    }
    private static final int CRYPT_NO_OCSP_FAILOVER_TO_CRL_RETRIEVAL = (int)33554432L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_NO_OCSP_FAILOVER_TO_CRL_RETRIEVAL 33554432
     * }
     */
    public static int CRYPT_NO_OCSP_FAILOVER_TO_CRL_RETRIEVAL() {
        return CRYPT_NO_OCSP_FAILOVER_TO_CRL_RETRIEVAL;
    }
    private static final int CRYPTNET_URL_CACHE_PRE_FETCH_NONE = (int)0L;
    /**
     * {@snippet lang=c :
     * #define CRYPTNET_URL_CACHE_PRE_FETCH_NONE 0
     * }
     */
    public static int CRYPTNET_URL_CACHE_PRE_FETCH_NONE() {
        return CRYPTNET_URL_CACHE_PRE_FETCH_NONE;
    }
    private static final int CRYPTNET_URL_CACHE_PRE_FETCH_BLOB = (int)1L;
    /**
     * {@snippet lang=c :
     * #define CRYPTNET_URL_CACHE_PRE_FETCH_BLOB 1
     * }
     */
    public static int CRYPTNET_URL_CACHE_PRE_FETCH_BLOB() {
        return CRYPTNET_URL_CACHE_PRE_FETCH_BLOB;
    }
    private static final int CRYPTNET_URL_CACHE_PRE_FETCH_CRL = (int)2L;
    /**
     * {@snippet lang=c :
     * #define CRYPTNET_URL_CACHE_PRE_FETCH_CRL 2
     * }
     */
    public static int CRYPTNET_URL_CACHE_PRE_FETCH_CRL() {
        return CRYPTNET_URL_CACHE_PRE_FETCH_CRL;
    }
    private static final int CRYPTNET_URL_CACHE_PRE_FETCH_OCSP = (int)3L;
    /**
     * {@snippet lang=c :
     * #define CRYPTNET_URL_CACHE_PRE_FETCH_OCSP 3
     * }
     */
    public static int CRYPTNET_URL_CACHE_PRE_FETCH_OCSP() {
        return CRYPTNET_URL_CACHE_PRE_FETCH_OCSP;
    }
    private static final int CRYPTNET_URL_CACHE_PRE_FETCH_AUTOROOT_CAB = (int)5L;
    /**
     * {@snippet lang=c :
     * #define CRYPTNET_URL_CACHE_PRE_FETCH_AUTOROOT_CAB 5
     * }
     */
    public static int CRYPTNET_URL_CACHE_PRE_FETCH_AUTOROOT_CAB() {
        return CRYPTNET_URL_CACHE_PRE_FETCH_AUTOROOT_CAB;
    }
    private static final int CRYPTNET_URL_CACHE_PRE_FETCH_DISALLOWED_CERT_CAB = (int)6L;
    /**
     * {@snippet lang=c :
     * #define CRYPTNET_URL_CACHE_PRE_FETCH_DISALLOWED_CERT_CAB 6
     * }
     */
    public static int CRYPTNET_URL_CACHE_PRE_FETCH_DISALLOWED_CERT_CAB() {
        return CRYPTNET_URL_CACHE_PRE_FETCH_DISALLOWED_CERT_CAB;
    }
    private static final int CRYPTNET_URL_CACHE_PRE_FETCH_PIN_RULES_CAB = (int)7L;
    /**
     * {@snippet lang=c :
     * #define CRYPTNET_URL_CACHE_PRE_FETCH_PIN_RULES_CAB 7
     * }
     */
    public static int CRYPTNET_URL_CACHE_PRE_FETCH_PIN_RULES_CAB() {
        return CRYPTNET_URL_CACHE_PRE_FETCH_PIN_RULES_CAB;
    }
    private static final int CRYPTNET_URL_CACHE_DEFAULT_FLUSH = (int)0L;
    /**
     * {@snippet lang=c :
     * #define CRYPTNET_URL_CACHE_DEFAULT_FLUSH 0
     * }
     */
    public static int CRYPTNET_URL_CACHE_DEFAULT_FLUSH() {
        return CRYPTNET_URL_CACHE_DEFAULT_FLUSH;
    }
    private static final int CRYPTNET_URL_CACHE_RESPONSE_NONE = (int)0L;
    /**
     * {@snippet lang=c :
     * #define CRYPTNET_URL_CACHE_RESPONSE_NONE 0
     * }
     */
    public static int CRYPTNET_URL_CACHE_RESPONSE_NONE() {
        return CRYPTNET_URL_CACHE_RESPONSE_NONE;
    }
    private static final int CRYPTNET_URL_CACHE_RESPONSE_HTTP = (int)1L;
    /**
     * {@snippet lang=c :
     * #define CRYPTNET_URL_CACHE_RESPONSE_HTTP 1
     * }
     */
    public static int CRYPTNET_URL_CACHE_RESPONSE_HTTP() {
        return CRYPTNET_URL_CACHE_RESPONSE_HTTP;
    }
    private static final int CRYPTNET_URL_CACHE_RESPONSE_VALIDATED = (int)32768L;
    /**
     * {@snippet lang=c :
     * #define CRYPTNET_URL_CACHE_RESPONSE_VALIDATED 32768
     * }
     */
    public static int CRYPTNET_URL_CACHE_RESPONSE_VALIDATED() {
        return CRYPTNET_URL_CACHE_RESPONSE_VALIDATED;
    }
    private static final int CRYPT_RETRIEVE_MAX_ERROR_CONTENT_LENGTH = (int)4096L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_RETRIEVE_MAX_ERROR_CONTENT_LENGTH 4096
     * }
     */
    public static int CRYPT_RETRIEVE_MAX_ERROR_CONTENT_LENGTH() {
        return CRYPT_RETRIEVE_MAX_ERROR_CONTENT_LENGTH;
    }
    private static final int CRYPT_GET_URL_FROM_PROPERTY = (int)1L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_GET_URL_FROM_PROPERTY 1
     * }
     */
    public static int CRYPT_GET_URL_FROM_PROPERTY() {
        return CRYPT_GET_URL_FROM_PROPERTY;
    }
    private static final int CRYPT_GET_URL_FROM_EXTENSION = (int)2L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_GET_URL_FROM_EXTENSION 2
     * }
     */
    public static int CRYPT_GET_URL_FROM_EXTENSION() {
        return CRYPT_GET_URL_FROM_EXTENSION;
    }
    private static final int CRYPT_GET_URL_FROM_UNAUTH_ATTRIBUTE = (int)4L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_GET_URL_FROM_UNAUTH_ATTRIBUTE 4
     * }
     */
    public static int CRYPT_GET_URL_FROM_UNAUTH_ATTRIBUTE() {
        return CRYPT_GET_URL_FROM_UNAUTH_ATTRIBUTE;
    }
    private static final int CRYPT_GET_URL_FROM_AUTH_ATTRIBUTE = (int)8L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_GET_URL_FROM_AUTH_ATTRIBUTE 8
     * }
     */
    public static int CRYPT_GET_URL_FROM_AUTH_ATTRIBUTE() {
        return CRYPT_GET_URL_FROM_AUTH_ATTRIBUTE;
    }
    private static final int CERT_CREATE_SELFSIGN_NO_SIGN = (int)1L;
    /**
     * {@snippet lang=c :
     * #define CERT_CREATE_SELFSIGN_NO_SIGN 1
     * }
     */
    public static int CERT_CREATE_SELFSIGN_NO_SIGN() {
        return CERT_CREATE_SELFSIGN_NO_SIGN;
    }
    private static final int CERT_CREATE_SELFSIGN_NO_KEY_INFO = (int)2L;
    /**
     * {@snippet lang=c :
     * #define CERT_CREATE_SELFSIGN_NO_KEY_INFO 2
     * }
     */
    public static int CERT_CREATE_SELFSIGN_NO_KEY_INFO() {
        return CERT_CREATE_SELFSIGN_NO_KEY_INFO;
    }
    private static final int CRYPT_KEYID_MACHINE_FLAG = (int)32L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_KEYID_MACHINE_FLAG 32
     * }
     */
    public static int CRYPT_KEYID_MACHINE_FLAG() {
        return CRYPT_KEYID_MACHINE_FLAG;
    }
    private static final int CRYPT_KEYID_ALLOC_FLAG = (int)32768L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_KEYID_ALLOC_FLAG 32768
     * }
     */
    public static int CRYPT_KEYID_ALLOC_FLAG() {
        return CRYPT_KEYID_ALLOC_FLAG;
    }
    private static final int CRYPT_KEYID_DELETE_FLAG = (int)16L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_KEYID_DELETE_FLAG 16
     * }
     */
    public static int CRYPT_KEYID_DELETE_FLAG() {
        return CRYPT_KEYID_DELETE_FLAG;
    }
    private static final int CRYPT_KEYID_SET_NEW_FLAG = (int)8192L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_KEYID_SET_NEW_FLAG 8192
     * }
     */
    public static int CRYPT_KEYID_SET_NEW_FLAG() {
        return CRYPT_KEYID_SET_NEW_FLAG;
    }
    private static final int CERT_CHAIN_MAX_AIA_URL_COUNT_IN_CERT_DEFAULT = (int)5L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_MAX_AIA_URL_COUNT_IN_CERT_DEFAULT 5
     * }
     */
    public static int CERT_CHAIN_MAX_AIA_URL_COUNT_IN_CERT_DEFAULT() {
        return CERT_CHAIN_MAX_AIA_URL_COUNT_IN_CERT_DEFAULT;
    }
    private static final int CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_COUNT_PER_CHAIN_DEFAULT = (int)3L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_COUNT_PER_CHAIN_DEFAULT 3
     * }
     */
    public static int CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_COUNT_PER_CHAIN_DEFAULT() {
        return CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_COUNT_PER_CHAIN_DEFAULT;
    }
    private static final int CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_BYTE_COUNT_DEFAULT = (int)100000L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_BYTE_COUNT_DEFAULT 100000
     * }
     */
    public static int CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_BYTE_COUNT_DEFAULT() {
        return CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_BYTE_COUNT_DEFAULT;
    }
    private static final int CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_CERT_COUNT_DEFAULT = (int)10L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_CERT_COUNT_DEFAULT 10
     * }
     */
    public static int CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_CERT_COUNT_DEFAULT() {
        return CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_CERT_COUNT_DEFAULT;
    }
    private static final int CERT_CHAIN_MAX_SSL_TIME_UPDATED_EVENT_COUNT_DEFAULT = (int)5L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_MAX_SSL_TIME_UPDATED_EVENT_COUNT_DEFAULT 5
     * }
     */
    public static int CERT_CHAIN_MAX_SSL_TIME_UPDATED_EVENT_COUNT_DEFAULT() {
        return CERT_CHAIN_MAX_SSL_TIME_UPDATED_EVENT_COUNT_DEFAULT;
    }
    private static final int CERT_CHAIN_ENABLE_MD2_MD4_FLAG = (int)1L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_ENABLE_MD2_MD4_FLAG 1
     * }
     */
    public static int CERT_CHAIN_ENABLE_MD2_MD4_FLAG() {
        return CERT_CHAIN_ENABLE_MD2_MD4_FLAG;
    }
    private static final int CERT_CHAIN_ENABLE_WEAK_RSA_ROOT_FLAG = (int)2L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_ENABLE_WEAK_RSA_ROOT_FLAG 2
     * }
     */
    public static int CERT_CHAIN_ENABLE_WEAK_RSA_ROOT_FLAG() {
        return CERT_CHAIN_ENABLE_WEAK_RSA_ROOT_FLAG;
    }
    private static final int CERT_CHAIN_ENABLE_WEAK_LOGGING_FLAG = (int)4L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_ENABLE_WEAK_LOGGING_FLAG 4
     * }
     */
    public static int CERT_CHAIN_ENABLE_WEAK_LOGGING_FLAG() {
        return CERT_CHAIN_ENABLE_WEAK_LOGGING_FLAG;
    }
    private static final int CERT_CHAIN_ENABLE_ONLY_WEAK_LOGGING_FLAG = (int)8L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_ENABLE_ONLY_WEAK_LOGGING_FLAG 8
     * }
     */
    public static int CERT_CHAIN_ENABLE_ONLY_WEAK_LOGGING_FLAG() {
        return CERT_CHAIN_ENABLE_ONLY_WEAK_LOGGING_FLAG;
    }
    private static final int CERT_CHAIN_MIN_RSA_PUB_KEY_BIT_LENGTH_DEFAULT = (int)1023L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_MIN_RSA_PUB_KEY_BIT_LENGTH_DEFAULT 1023
     * }
     */
    public static int CERT_CHAIN_MIN_RSA_PUB_KEY_BIT_LENGTH_DEFAULT() {
        return CERT_CHAIN_MIN_RSA_PUB_KEY_BIT_LENGTH_DEFAULT;
    }
    private static final int CERT_CHAIN_MIN_WEAK_RSA_PUB_KEY_BIT_LENGTH_DEFAULT = (int)2047L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_MIN_WEAK_RSA_PUB_KEY_BIT_LENGTH_DEFAULT 2047
     * }
     */
    public static int CERT_CHAIN_MIN_WEAK_RSA_PUB_KEY_BIT_LENGTH_DEFAULT() {
        return CERT_CHAIN_MIN_WEAK_RSA_PUB_KEY_BIT_LENGTH_DEFAULT;
    }
    private static final int CERT_CHAIN_MIN_TELEMETRY_RSA_PUB_KEY_BIT_LENGTH_DEFAULT = (int)2047L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_MIN_TELEMETRY_RSA_PUB_KEY_BIT_LENGTH_DEFAULT 2047
     * }
     */
    public static int CERT_CHAIN_MIN_TELEMETRY_RSA_PUB_KEY_BIT_LENGTH_DEFAULT() {
        return CERT_CHAIN_MIN_TELEMETRY_RSA_PUB_KEY_BIT_LENGTH_DEFAULT;
    }
    private static final int CERT_CHAIN_DISABLE_ECC_PARA_FLAG = (int)16L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_DISABLE_ECC_PARA_FLAG 16
     * }
     */
    public static int CERT_CHAIN_DISABLE_ECC_PARA_FLAG() {
        return CERT_CHAIN_DISABLE_ECC_PARA_FLAG;
    }
    private static final int CERT_CHAIN_DISABLE_ALL_EKU_WEAK_FLAG = (int)65536L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_DISABLE_ALL_EKU_WEAK_FLAG 65536
     * }
     */
    public static int CERT_CHAIN_DISABLE_ALL_EKU_WEAK_FLAG() {
        return CERT_CHAIN_DISABLE_ALL_EKU_WEAK_FLAG;
    }
    private static final int CERT_CHAIN_ENABLE_ALL_EKU_HYGIENE_FLAG = (int)131072L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_ENABLE_ALL_EKU_HYGIENE_FLAG 131072
     * }
     */
    public static int CERT_CHAIN_ENABLE_ALL_EKU_HYGIENE_FLAG() {
        return CERT_CHAIN_ENABLE_ALL_EKU_HYGIENE_FLAG;
    }
    private static final int CERT_CHAIN_DISABLE_OPT_IN_SERVER_AUTH_WEAK_FLAG = (int)262144L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_DISABLE_OPT_IN_SERVER_AUTH_WEAK_FLAG 262144
     * }
     */
    public static int CERT_CHAIN_DISABLE_OPT_IN_SERVER_AUTH_WEAK_FLAG() {
        return CERT_CHAIN_DISABLE_OPT_IN_SERVER_AUTH_WEAK_FLAG;
    }
    private static final int CERT_CHAIN_DISABLE_SERVER_AUTH_WEAK_FLAG = (int)1048576L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_DISABLE_SERVER_AUTH_WEAK_FLAG 1048576
     * }
     */
    public static int CERT_CHAIN_DISABLE_SERVER_AUTH_WEAK_FLAG() {
        return CERT_CHAIN_DISABLE_SERVER_AUTH_WEAK_FLAG;
    }
    private static final int CERT_CHAIN_ENABLE_SERVER_AUTH_HYGIENE_FLAG = (int)2097152L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_ENABLE_SERVER_AUTH_HYGIENE_FLAG 2097152
     * }
     */
    public static int CERT_CHAIN_ENABLE_SERVER_AUTH_HYGIENE_FLAG() {
        return CERT_CHAIN_ENABLE_SERVER_AUTH_HYGIENE_FLAG;
    }
    private static final int CERT_CHAIN_DISABLE_CODE_SIGNING_WEAK_FLAG = (int)4194304L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_DISABLE_CODE_SIGNING_WEAK_FLAG 4194304
     * }
     */
    public static int CERT_CHAIN_DISABLE_CODE_SIGNING_WEAK_FLAG() {
        return CERT_CHAIN_DISABLE_CODE_SIGNING_WEAK_FLAG;
    }
    private static final int CERT_CHAIN_DISABLE_MOTW_CODE_SIGNING_WEAK_FLAG = (int)8388608L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_DISABLE_MOTW_CODE_SIGNING_WEAK_FLAG 8388608
     * }
     */
    public static int CERT_CHAIN_DISABLE_MOTW_CODE_SIGNING_WEAK_FLAG() {
        return CERT_CHAIN_DISABLE_MOTW_CODE_SIGNING_WEAK_FLAG;
    }
    private static final int CERT_CHAIN_ENABLE_CODE_SIGNING_HYGIENE_FLAG = (int)16777216L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_ENABLE_CODE_SIGNING_HYGIENE_FLAG 16777216
     * }
     */
    public static int CERT_CHAIN_ENABLE_CODE_SIGNING_HYGIENE_FLAG() {
        return CERT_CHAIN_ENABLE_CODE_SIGNING_HYGIENE_FLAG;
    }
    private static final int CERT_CHAIN_ENABLE_MOTW_CODE_SIGNING_HYGIENE_FLAG = (int)33554432L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_ENABLE_MOTW_CODE_SIGNING_HYGIENE_FLAG 33554432
     * }
     */
    public static int CERT_CHAIN_ENABLE_MOTW_CODE_SIGNING_HYGIENE_FLAG() {
        return CERT_CHAIN_ENABLE_MOTW_CODE_SIGNING_HYGIENE_FLAG;
    }
    private static final int CERT_CHAIN_DISABLE_TIMESTAMP_WEAK_FLAG = (int)67108864L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_DISABLE_TIMESTAMP_WEAK_FLAG 67108864
     * }
     */
    public static int CERT_CHAIN_DISABLE_TIMESTAMP_WEAK_FLAG() {
        return CERT_CHAIN_DISABLE_TIMESTAMP_WEAK_FLAG;
    }
    private static final int CERT_CHAIN_DISABLE_MOTW_TIMESTAMP_WEAK_FLAG = (int)134217728L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_DISABLE_MOTW_TIMESTAMP_WEAK_FLAG 134217728
     * }
     */
    public static int CERT_CHAIN_DISABLE_MOTW_TIMESTAMP_WEAK_FLAG() {
        return CERT_CHAIN_DISABLE_MOTW_TIMESTAMP_WEAK_FLAG;
    }
    private static final int CERT_CHAIN_ENABLE_TIMESTAMP_HYGIENE_FLAG = (int)268435456L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_ENABLE_TIMESTAMP_HYGIENE_FLAG 268435456
     * }
     */
    public static int CERT_CHAIN_ENABLE_TIMESTAMP_HYGIENE_FLAG() {
        return CERT_CHAIN_ENABLE_TIMESTAMP_HYGIENE_FLAG;
    }
    private static final int CERT_CHAIN_ENABLE_MOTW_TIMESTAMP_HYGIENE_FLAG = (int)536870912L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_ENABLE_MOTW_TIMESTAMP_HYGIENE_FLAG 536870912
     * }
     */
    public static int CERT_CHAIN_ENABLE_MOTW_TIMESTAMP_HYGIENE_FLAG() {
        return CERT_CHAIN_ENABLE_MOTW_TIMESTAMP_HYGIENE_FLAG;
    }
    private static final int CERT_CHAIN_MOTW_IGNORE_AFTER_TIME_WEAK_FLAG = (int)1073741824L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_MOTW_IGNORE_AFTER_TIME_WEAK_FLAG 1073741824
     * }
     */
    public static int CERT_CHAIN_MOTW_IGNORE_AFTER_TIME_WEAK_FLAG() {
        return CERT_CHAIN_MOTW_IGNORE_AFTER_TIME_WEAK_FLAG;
    }
    private static final int CERT_CHAIN_DISABLE_FILE_HASH_WEAK_FLAG = (int)4096L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_DISABLE_FILE_HASH_WEAK_FLAG 4096
     * }
     */
    public static int CERT_CHAIN_DISABLE_FILE_HASH_WEAK_FLAG() {
        return CERT_CHAIN_DISABLE_FILE_HASH_WEAK_FLAG;
    }
    private static final int CERT_CHAIN_DISABLE_MOTW_FILE_HASH_WEAK_FLAG = (int)8192L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_DISABLE_MOTW_FILE_HASH_WEAK_FLAG 8192
     * }
     */
    public static int CERT_CHAIN_DISABLE_MOTW_FILE_HASH_WEAK_FLAG() {
        return CERT_CHAIN_DISABLE_MOTW_FILE_HASH_WEAK_FLAG;
    }
    private static final int CERT_CHAIN_DISABLE_TIMESTAMP_HASH_WEAK_FLAG = (int)16384L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_DISABLE_TIMESTAMP_HASH_WEAK_FLAG 16384
     * }
     */
    public static int CERT_CHAIN_DISABLE_TIMESTAMP_HASH_WEAK_FLAG() {
        return CERT_CHAIN_DISABLE_TIMESTAMP_HASH_WEAK_FLAG;
    }
    private static final int CERT_CHAIN_DISABLE_MOTW_TIMESTAMP_HASH_WEAK_FLAG = (int)32768L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_DISABLE_MOTW_TIMESTAMP_HASH_WEAK_FLAG 32768
     * }
     */
    public static int CERT_CHAIN_DISABLE_MOTW_TIMESTAMP_HASH_WEAK_FLAG() {
        return CERT_CHAIN_DISABLE_MOTW_TIMESTAMP_HASH_WEAK_FLAG;
    }
    private static final int CERT_CHAIN_AUTO_CURRENT_USER = (int)1L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_AUTO_CURRENT_USER 1
     * }
     */
    public static int CERT_CHAIN_AUTO_CURRENT_USER() {
        return CERT_CHAIN_AUTO_CURRENT_USER;
    }
    private static final int CERT_CHAIN_AUTO_LOCAL_MACHINE = (int)2L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_AUTO_LOCAL_MACHINE 2
     * }
     */
    public static int CERT_CHAIN_AUTO_LOCAL_MACHINE() {
        return CERT_CHAIN_AUTO_LOCAL_MACHINE;
    }
    private static final int CERT_CHAIN_AUTO_IMPERSONATED = (int)3L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_AUTO_IMPERSONATED 3
     * }
     */
    public static int CERT_CHAIN_AUTO_IMPERSONATED() {
        return CERT_CHAIN_AUTO_IMPERSONATED;
    }
    private static final int CERT_CHAIN_AUTO_PROCESS_INFO = (int)4L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_AUTO_PROCESS_INFO 4
     * }
     */
    public static int CERT_CHAIN_AUTO_PROCESS_INFO() {
        return CERT_CHAIN_AUTO_PROCESS_INFO;
    }
    private static final int CERT_CHAIN_AUTO_PINRULE_INFO = (int)5L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_AUTO_PINRULE_INFO 5
     * }
     */
    public static int CERT_CHAIN_AUTO_PINRULE_INFO() {
        return CERT_CHAIN_AUTO_PINRULE_INFO;
    }
    private static final int CERT_CHAIN_AUTO_NETWORK_INFO = (int)6L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_AUTO_NETWORK_INFO 6
     * }
     */
    public static int CERT_CHAIN_AUTO_NETWORK_INFO() {
        return CERT_CHAIN_AUTO_NETWORK_INFO;
    }
    private static final int CERT_CHAIN_AUTO_SERIAL_LOCAL_MACHINE = (int)7L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_AUTO_SERIAL_LOCAL_MACHINE 7
     * }
     */
    public static int CERT_CHAIN_AUTO_SERIAL_LOCAL_MACHINE() {
        return CERT_CHAIN_AUTO_SERIAL_LOCAL_MACHINE;
    }
    private static final int CERT_CHAIN_AUTO_HPKP_RULE_INFO = (int)8L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_AUTO_HPKP_RULE_INFO 8
     * }
     */
    public static int CERT_CHAIN_AUTO_HPKP_RULE_INFO() {
        return CERT_CHAIN_AUTO_HPKP_RULE_INFO;
    }
    private static final int CERT_CHAIN_AUTO_FLUSH_DISABLE_FLAG = (int)1L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_AUTO_FLUSH_DISABLE_FLAG 1
     * }
     */
    public static int CERT_CHAIN_AUTO_FLUSH_DISABLE_FLAG() {
        return CERT_CHAIN_AUTO_FLUSH_DISABLE_FLAG;
    }
    private static final int CERT_CHAIN_AUTO_LOG_CREATE_FLAG = (int)2L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_AUTO_LOG_CREATE_FLAG 2
     * }
     */
    public static int CERT_CHAIN_AUTO_LOG_CREATE_FLAG() {
        return CERT_CHAIN_AUTO_LOG_CREATE_FLAG;
    }
    private static final int CERT_CHAIN_AUTO_LOG_FREE_FLAG = (int)4L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_AUTO_LOG_FREE_FLAG 4
     * }
     */
    public static int CERT_CHAIN_AUTO_LOG_FREE_FLAG() {
        return CERT_CHAIN_AUTO_LOG_FREE_FLAG;
    }
    private static final int CERT_CHAIN_AUTO_LOG_FLUSH_FLAG = (int)8L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_AUTO_LOG_FLUSH_FLAG 8
     * }
     */
    public static int CERT_CHAIN_AUTO_LOG_FLUSH_FLAG() {
        return CERT_CHAIN_AUTO_LOG_FLUSH_FLAG;
    }
    private static final int CERT_SRV_OCSP_RESP_MIN_SYNC_CERT_FILE_SECONDS_DEFAULT = (int)5L;
    /**
     * {@snippet lang=c :
     * #define CERT_SRV_OCSP_RESP_MIN_SYNC_CERT_FILE_SECONDS_DEFAULT 5
     * }
     */
    public static int CERT_SRV_OCSP_RESP_MIN_SYNC_CERT_FILE_SECONDS_DEFAULT() {
        return CERT_SRV_OCSP_RESP_MIN_SYNC_CERT_FILE_SECONDS_DEFAULT;
    }
    private static final int CRYPTNET_MAX_CACHED_OCSP_PER_CRL_COUNT_DEFAULT = (int)500L;
    /**
     * {@snippet lang=c :
     * #define CRYPTNET_MAX_CACHED_OCSP_PER_CRL_COUNT_DEFAULT 500
     * }
     */
    public static int CRYPTNET_MAX_CACHED_OCSP_PER_CRL_COUNT_DEFAULT() {
        return CRYPTNET_MAX_CACHED_OCSP_PER_CRL_COUNT_DEFAULT;
    }
    private static final int CRYPTNET_PRE_FETCH_AFTER_PUBLISH_PRE_FETCH_DIVISOR_DEFAULT = (int)10L;
    /**
     * {@snippet lang=c :
     * #define CRYPTNET_PRE_FETCH_AFTER_PUBLISH_PRE_FETCH_DIVISOR_DEFAULT 10
     * }
     */
    public static int CRYPTNET_PRE_FETCH_AFTER_PUBLISH_PRE_FETCH_DIVISOR_DEFAULT() {
        return CRYPTNET_PRE_FETCH_AFTER_PUBLISH_PRE_FETCH_DIVISOR_DEFAULT;
    }
    private static final int CRYPTNET_PRE_FETCH_BEFORE_NEXT_UPDATE_PRE_FETCH_DIVISOR_DEFAULT = (int)20L;
    /**
     * {@snippet lang=c :
     * #define CRYPTNET_PRE_FETCH_BEFORE_NEXT_UPDATE_PRE_FETCH_DIVISOR_DEFAULT 20
     * }
     */
    public static int CRYPTNET_PRE_FETCH_BEFORE_NEXT_UPDATE_PRE_FETCH_DIVISOR_DEFAULT() {
        return CRYPTNET_PRE_FETCH_BEFORE_NEXT_UPDATE_PRE_FETCH_DIVISOR_DEFAULT;
    }
    private static final int CRYPTNET_PRE_FETCH_VALIDITY_PERIOD_AFTER_NEXT_UPDATE_PRE_FETCH_DIVISOR_DEFAULT = (int)10L;
    /**
     * {@snippet lang=c :
     * #define CRYPTNET_PRE_FETCH_VALIDITY_PERIOD_AFTER_NEXT_UPDATE_PRE_FETCH_DIVISOR_DEFAULT 10
     * }
     */
    public static int CRYPTNET_PRE_FETCH_VALIDITY_PERIOD_AFTER_NEXT_UPDATE_PRE_FETCH_DIVISOR_DEFAULT() {
        return CRYPTNET_PRE_FETCH_VALIDITY_PERIOD_AFTER_NEXT_UPDATE_PRE_FETCH_DIVISOR_DEFAULT;
    }
    private static final int CRYPTNET_PRE_FETCH_SCAN_AFTER_TRIGGER_DELAY_SECONDS_DEFAULT = (int)60L;
    /**
     * {@snippet lang=c :
     * #define CRYPTNET_PRE_FETCH_SCAN_AFTER_TRIGGER_DELAY_SECONDS_DEFAULT 60
     * }
     */
    public static int CRYPTNET_PRE_FETCH_SCAN_AFTER_TRIGGER_DELAY_SECONDS_DEFAULT() {
        return CRYPTNET_PRE_FETCH_SCAN_AFTER_TRIGGER_DELAY_SECONDS_DEFAULT;
    }
    private static final int CRYPTNET_CACHED_OCSP_SWITCH_TO_CRL_COUNT_DEFAULT = (int)50L;
    /**
     * {@snippet lang=c :
     * #define CRYPTNET_CACHED_OCSP_SWITCH_TO_CRL_COUNT_DEFAULT 50
     * }
     */
    public static int CRYPTNET_CACHED_OCSP_SWITCH_TO_CRL_COUNT_DEFAULT() {
        return CRYPTNET_CACHED_OCSP_SWITCH_TO_CRL_COUNT_DEFAULT;
    }
    private static final int CERT_CHAIN_OPTION_DISABLE_AIA_URL_RETRIEVAL = (int)2L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_OPTION_DISABLE_AIA_URL_RETRIEVAL 2
     * }
     */
    public static int CERT_CHAIN_OPTION_DISABLE_AIA_URL_RETRIEVAL() {
        return CERT_CHAIN_OPTION_DISABLE_AIA_URL_RETRIEVAL;
    }
    private static final int CERT_CHAIN_OPTION_ENABLE_SIA_URL_RETRIEVAL = (int)4L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_OPTION_ENABLE_SIA_URL_RETRIEVAL 4
     * }
     */
    public static int CERT_CHAIN_OPTION_ENABLE_SIA_URL_RETRIEVAL() {
        return CERT_CHAIN_OPTION_ENABLE_SIA_URL_RETRIEVAL;
    }
    private static final int CERT_CHAIN_CRL_VALIDITY_EXT_PERIOD_HOURS_DEFAULT = (int)12L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_CRL_VALIDITY_EXT_PERIOD_HOURS_DEFAULT 12
     * }
     */
    public static int CERT_CHAIN_CRL_VALIDITY_EXT_PERIOD_HOURS_DEFAULT() {
        return CERT_CHAIN_CRL_VALIDITY_EXT_PERIOD_HOURS_DEFAULT;
    }
    private static final int CERT_CHAIN_CACHE_END_CERT = (int)1L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_CACHE_END_CERT 1
     * }
     */
    public static int CERT_CHAIN_CACHE_END_CERT() {
        return CERT_CHAIN_CACHE_END_CERT;
    }
    private static final int CERT_CHAIN_THREAD_STORE_SYNC = (int)2L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_THREAD_STORE_SYNC 2
     * }
     */
    public static int CERT_CHAIN_THREAD_STORE_SYNC() {
        return CERT_CHAIN_THREAD_STORE_SYNC;
    }
    private static final int CERT_CHAIN_CACHE_ONLY_URL_RETRIEVAL = (int)4L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_CACHE_ONLY_URL_RETRIEVAL 4
     * }
     */
    public static int CERT_CHAIN_CACHE_ONLY_URL_RETRIEVAL() {
        return CERT_CHAIN_CACHE_ONLY_URL_RETRIEVAL;
    }
    private static final int CERT_CHAIN_USE_LOCAL_MACHINE_STORE = (int)8L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_USE_LOCAL_MACHINE_STORE 8
     * }
     */
    public static int CERT_CHAIN_USE_LOCAL_MACHINE_STORE() {
        return CERT_CHAIN_USE_LOCAL_MACHINE_STORE;
    }
    private static final int CERT_CHAIN_ENABLE_CACHE_AUTO_UPDATE = (int)16L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_ENABLE_CACHE_AUTO_UPDATE 16
     * }
     */
    public static int CERT_CHAIN_ENABLE_CACHE_AUTO_UPDATE() {
        return CERT_CHAIN_ENABLE_CACHE_AUTO_UPDATE;
    }
    private static final int CERT_CHAIN_ENABLE_SHARE_STORE = (int)32L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_ENABLE_SHARE_STORE 32
     * }
     */
    public static int CERT_CHAIN_ENABLE_SHARE_STORE() {
        return CERT_CHAIN_ENABLE_SHARE_STORE;
    }
    private static final int CERT_CHAIN_EXCLUSIVE_ENABLE_CA_FLAG = (int)1L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_EXCLUSIVE_ENABLE_CA_FLAG 1
     * }
     */
    public static int CERT_CHAIN_EXCLUSIVE_ENABLE_CA_FLAG() {
        return CERT_CHAIN_EXCLUSIVE_ENABLE_CA_FLAG;
    }
    private static final int CERT_TRUST_NO_ERROR = (int)0L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_NO_ERROR 0
     * }
     */
    public static int CERT_TRUST_NO_ERROR() {
        return CERT_TRUST_NO_ERROR;
    }
    private static final int CERT_TRUST_IS_NOT_TIME_VALID = (int)1L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_IS_NOT_TIME_VALID 1
     * }
     */
    public static int CERT_TRUST_IS_NOT_TIME_VALID() {
        return CERT_TRUST_IS_NOT_TIME_VALID;
    }
    private static final int CERT_TRUST_IS_NOT_TIME_NESTED = (int)2L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_IS_NOT_TIME_NESTED 2
     * }
     */
    public static int CERT_TRUST_IS_NOT_TIME_NESTED() {
        return CERT_TRUST_IS_NOT_TIME_NESTED;
    }
    private static final int CERT_TRUST_IS_REVOKED = (int)4L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_IS_REVOKED 4
     * }
     */
    public static int CERT_TRUST_IS_REVOKED() {
        return CERT_TRUST_IS_REVOKED;
    }
    private static final int CERT_TRUST_IS_NOT_SIGNATURE_VALID = (int)8L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_IS_NOT_SIGNATURE_VALID 8
     * }
     */
    public static int CERT_TRUST_IS_NOT_SIGNATURE_VALID() {
        return CERT_TRUST_IS_NOT_SIGNATURE_VALID;
    }
    private static final int CERT_TRUST_IS_NOT_VALID_FOR_USAGE = (int)16L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_IS_NOT_VALID_FOR_USAGE 16
     * }
     */
    public static int CERT_TRUST_IS_NOT_VALID_FOR_USAGE() {
        return CERT_TRUST_IS_NOT_VALID_FOR_USAGE;
    }
    private static final int CERT_TRUST_IS_UNTRUSTED_ROOT = (int)32L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_IS_UNTRUSTED_ROOT 32
     * }
     */
    public static int CERT_TRUST_IS_UNTRUSTED_ROOT() {
        return CERT_TRUST_IS_UNTRUSTED_ROOT;
    }
    private static final int CERT_TRUST_REVOCATION_STATUS_UNKNOWN = (int)64L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_REVOCATION_STATUS_UNKNOWN 64
     * }
     */
    public static int CERT_TRUST_REVOCATION_STATUS_UNKNOWN() {
        return CERT_TRUST_REVOCATION_STATUS_UNKNOWN;
    }
    private static final int CERT_TRUST_IS_CYCLIC = (int)128L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_IS_CYCLIC 128
     * }
     */
    public static int CERT_TRUST_IS_CYCLIC() {
        return CERT_TRUST_IS_CYCLIC;
    }
    private static final int CERT_TRUST_INVALID_EXTENSION = (int)256L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_INVALID_EXTENSION 256
     * }
     */
    public static int CERT_TRUST_INVALID_EXTENSION() {
        return CERT_TRUST_INVALID_EXTENSION;
    }
    private static final int CERT_TRUST_INVALID_POLICY_CONSTRAINTS = (int)512L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_INVALID_POLICY_CONSTRAINTS 512
     * }
     */
    public static int CERT_TRUST_INVALID_POLICY_CONSTRAINTS() {
        return CERT_TRUST_INVALID_POLICY_CONSTRAINTS;
    }
    private static final int CERT_TRUST_INVALID_BASIC_CONSTRAINTS = (int)1024L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_INVALID_BASIC_CONSTRAINTS 1024
     * }
     */
    public static int CERT_TRUST_INVALID_BASIC_CONSTRAINTS() {
        return CERT_TRUST_INVALID_BASIC_CONSTRAINTS;
    }
    private static final int CERT_TRUST_INVALID_NAME_CONSTRAINTS = (int)2048L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_INVALID_NAME_CONSTRAINTS 2048
     * }
     */
    public static int CERT_TRUST_INVALID_NAME_CONSTRAINTS() {
        return CERT_TRUST_INVALID_NAME_CONSTRAINTS;
    }
    private static final int CERT_TRUST_HAS_NOT_SUPPORTED_NAME_CONSTRAINT = (int)4096L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_HAS_NOT_SUPPORTED_NAME_CONSTRAINT 4096
     * }
     */
    public static int CERT_TRUST_HAS_NOT_SUPPORTED_NAME_CONSTRAINT() {
        return CERT_TRUST_HAS_NOT_SUPPORTED_NAME_CONSTRAINT;
    }
    private static final int CERT_TRUST_HAS_NOT_DEFINED_NAME_CONSTRAINT = (int)8192L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_HAS_NOT_DEFINED_NAME_CONSTRAINT 8192
     * }
     */
    public static int CERT_TRUST_HAS_NOT_DEFINED_NAME_CONSTRAINT() {
        return CERT_TRUST_HAS_NOT_DEFINED_NAME_CONSTRAINT;
    }
    private static final int CERT_TRUST_HAS_NOT_PERMITTED_NAME_CONSTRAINT = (int)16384L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_HAS_NOT_PERMITTED_NAME_CONSTRAINT 16384
     * }
     */
    public static int CERT_TRUST_HAS_NOT_PERMITTED_NAME_CONSTRAINT() {
        return CERT_TRUST_HAS_NOT_PERMITTED_NAME_CONSTRAINT;
    }
    private static final int CERT_TRUST_HAS_EXCLUDED_NAME_CONSTRAINT = (int)32768L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_HAS_EXCLUDED_NAME_CONSTRAINT 32768
     * }
     */
    public static int CERT_TRUST_HAS_EXCLUDED_NAME_CONSTRAINT() {
        return CERT_TRUST_HAS_EXCLUDED_NAME_CONSTRAINT;
    }
    private static final int CERT_TRUST_IS_OFFLINE_REVOCATION = (int)16777216L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_IS_OFFLINE_REVOCATION 16777216
     * }
     */
    public static int CERT_TRUST_IS_OFFLINE_REVOCATION() {
        return CERT_TRUST_IS_OFFLINE_REVOCATION;
    }
    private static final int CERT_TRUST_NO_ISSUANCE_CHAIN_POLICY = (int)33554432L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_NO_ISSUANCE_CHAIN_POLICY 33554432
     * }
     */
    public static int CERT_TRUST_NO_ISSUANCE_CHAIN_POLICY() {
        return CERT_TRUST_NO_ISSUANCE_CHAIN_POLICY;
    }
    private static final int CERT_TRUST_IS_EXPLICIT_DISTRUST = (int)67108864L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_IS_EXPLICIT_DISTRUST 67108864
     * }
     */
    public static int CERT_TRUST_IS_EXPLICIT_DISTRUST() {
        return CERT_TRUST_IS_EXPLICIT_DISTRUST;
    }
    private static final int CERT_TRUST_HAS_NOT_SUPPORTED_CRITICAL_EXT = (int)134217728L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_HAS_NOT_SUPPORTED_CRITICAL_EXT 134217728
     * }
     */
    public static int CERT_TRUST_HAS_NOT_SUPPORTED_CRITICAL_EXT() {
        return CERT_TRUST_HAS_NOT_SUPPORTED_CRITICAL_EXT;
    }
    private static final int CERT_TRUST_HAS_WEAK_SIGNATURE = (int)1048576L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_HAS_WEAK_SIGNATURE 1048576
     * }
     */
    public static int CERT_TRUST_HAS_WEAK_SIGNATURE() {
        return CERT_TRUST_HAS_WEAK_SIGNATURE;
    }
    private static final int CERT_TRUST_HAS_WEAK_HYGIENE = (int)2097152L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_HAS_WEAK_HYGIENE 2097152
     * }
     */
    public static int CERT_TRUST_HAS_WEAK_HYGIENE() {
        return CERT_TRUST_HAS_WEAK_HYGIENE;
    }
    private static final int CERT_TRUST_HAS_MIN_TELEMETRY_RSA = (int)4194304L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_HAS_MIN_TELEMETRY_RSA 4194304
     * }
     */
    public static int CERT_TRUST_HAS_MIN_TELEMETRY_RSA() {
        return CERT_TRUST_HAS_MIN_TELEMETRY_RSA;
    }
    private static final int CERT_TRUST_HAS_MIN_WEAK_RSA = (int)8388608L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_HAS_MIN_WEAK_RSA 8388608
     * }
     */
    public static int CERT_TRUST_HAS_MIN_WEAK_RSA() {
        return CERT_TRUST_HAS_MIN_WEAK_RSA;
    }
    private static final int CERT_TRUST_IS_PARTIAL_CHAIN = (int)65536L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_IS_PARTIAL_CHAIN 65536
     * }
     */
    public static int CERT_TRUST_IS_PARTIAL_CHAIN() {
        return CERT_TRUST_IS_PARTIAL_CHAIN;
    }
    private static final int CERT_TRUST_CTL_IS_NOT_TIME_VALID = (int)131072L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_CTL_IS_NOT_TIME_VALID 131072
     * }
     */
    public static int CERT_TRUST_CTL_IS_NOT_TIME_VALID() {
        return CERT_TRUST_CTL_IS_NOT_TIME_VALID;
    }
    private static final int CERT_TRUST_CTL_IS_NOT_SIGNATURE_VALID = (int)262144L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_CTL_IS_NOT_SIGNATURE_VALID 262144
     * }
     */
    public static int CERT_TRUST_CTL_IS_NOT_SIGNATURE_VALID() {
        return CERT_TRUST_CTL_IS_NOT_SIGNATURE_VALID;
    }
    private static final int CERT_TRUST_CTL_IS_NOT_VALID_FOR_USAGE = (int)524288L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_CTL_IS_NOT_VALID_FOR_USAGE 524288
     * }
     */
    public static int CERT_TRUST_CTL_IS_NOT_VALID_FOR_USAGE() {
        return CERT_TRUST_CTL_IS_NOT_VALID_FOR_USAGE;
    }
    private static final int CERT_TRUST_HAS_EXACT_MATCH_ISSUER = (int)1L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_HAS_EXACT_MATCH_ISSUER 1
     * }
     */
    public static int CERT_TRUST_HAS_EXACT_MATCH_ISSUER() {
        return CERT_TRUST_HAS_EXACT_MATCH_ISSUER;
    }
    private static final int CERT_TRUST_HAS_KEY_MATCH_ISSUER = (int)2L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_HAS_KEY_MATCH_ISSUER 2
     * }
     */
    public static int CERT_TRUST_HAS_KEY_MATCH_ISSUER() {
        return CERT_TRUST_HAS_KEY_MATCH_ISSUER;
    }
    private static final int CERT_TRUST_HAS_NAME_MATCH_ISSUER = (int)4L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_HAS_NAME_MATCH_ISSUER 4
     * }
     */
    public static int CERT_TRUST_HAS_NAME_MATCH_ISSUER() {
        return CERT_TRUST_HAS_NAME_MATCH_ISSUER;
    }
    private static final int CERT_TRUST_IS_SELF_SIGNED = (int)8L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_IS_SELF_SIGNED 8
     * }
     */
    public static int CERT_TRUST_IS_SELF_SIGNED() {
        return CERT_TRUST_IS_SELF_SIGNED;
    }
    private static final int CERT_TRUST_AUTO_UPDATE_CA_REVOCATION = (int)16L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_AUTO_UPDATE_CA_REVOCATION 16
     * }
     */
    public static int CERT_TRUST_AUTO_UPDATE_CA_REVOCATION() {
        return CERT_TRUST_AUTO_UPDATE_CA_REVOCATION;
    }
    private static final int CERT_TRUST_AUTO_UPDATE_END_REVOCATION = (int)32L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_AUTO_UPDATE_END_REVOCATION 32
     * }
     */
    public static int CERT_TRUST_AUTO_UPDATE_END_REVOCATION() {
        return CERT_TRUST_AUTO_UPDATE_END_REVOCATION;
    }
    private static final int CERT_TRUST_NO_OCSP_FAILOVER_TO_CRL = (int)64L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_NO_OCSP_FAILOVER_TO_CRL 64
     * }
     */
    public static int CERT_TRUST_NO_OCSP_FAILOVER_TO_CRL() {
        return CERT_TRUST_NO_OCSP_FAILOVER_TO_CRL;
    }
    private static final int CERT_TRUST_IS_KEY_ROLLOVER = (int)128L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_IS_KEY_ROLLOVER 128
     * }
     */
    public static int CERT_TRUST_IS_KEY_ROLLOVER() {
        return CERT_TRUST_IS_KEY_ROLLOVER;
    }
    private static final int CERT_TRUST_SSL_HANDSHAKE_OCSP = (int)262144L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_SSL_HANDSHAKE_OCSP 262144
     * }
     */
    public static int CERT_TRUST_SSL_HANDSHAKE_OCSP() {
        return CERT_TRUST_SSL_HANDSHAKE_OCSP;
    }
    private static final int CERT_TRUST_SSL_TIME_VALID_OCSP = (int)524288L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_SSL_TIME_VALID_OCSP 524288
     * }
     */
    public static int CERT_TRUST_SSL_TIME_VALID_OCSP() {
        return CERT_TRUST_SSL_TIME_VALID_OCSP;
    }
    private static final int CERT_TRUST_SSL_RECONNECT_OCSP = (int)1048576L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_SSL_RECONNECT_OCSP 1048576
     * }
     */
    public static int CERT_TRUST_SSL_RECONNECT_OCSP() {
        return CERT_TRUST_SSL_RECONNECT_OCSP;
    }
    private static final int CERT_TRUST_HAS_PREFERRED_ISSUER = (int)256L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_HAS_PREFERRED_ISSUER 256
     * }
     */
    public static int CERT_TRUST_HAS_PREFERRED_ISSUER() {
        return CERT_TRUST_HAS_PREFERRED_ISSUER;
    }
    private static final int CERT_TRUST_HAS_ISSUANCE_CHAIN_POLICY = (int)512L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_HAS_ISSUANCE_CHAIN_POLICY 512
     * }
     */
    public static int CERT_TRUST_HAS_ISSUANCE_CHAIN_POLICY() {
        return CERT_TRUST_HAS_ISSUANCE_CHAIN_POLICY;
    }
    private static final int CERT_TRUST_HAS_VALID_NAME_CONSTRAINTS = (int)1024L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_HAS_VALID_NAME_CONSTRAINTS 1024
     * }
     */
    public static int CERT_TRUST_HAS_VALID_NAME_CONSTRAINTS() {
        return CERT_TRUST_HAS_VALID_NAME_CONSTRAINTS;
    }
    private static final int CERT_TRUST_IS_PEER_TRUSTED = (int)2048L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_IS_PEER_TRUSTED 2048
     * }
     */
    public static int CERT_TRUST_IS_PEER_TRUSTED() {
        return CERT_TRUST_IS_PEER_TRUSTED;
    }
    private static final int CERT_TRUST_HAS_CRL_VALIDITY_EXTENDED = (int)4096L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_HAS_CRL_VALIDITY_EXTENDED 4096
     * }
     */
    public static int CERT_TRUST_HAS_CRL_VALIDITY_EXTENDED() {
        return CERT_TRUST_HAS_CRL_VALIDITY_EXTENDED;
    }
    private static final int CERT_TRUST_IS_FROM_EXCLUSIVE_TRUST_STORE = (int)8192L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_IS_FROM_EXCLUSIVE_TRUST_STORE 8192
     * }
     */
    public static int CERT_TRUST_IS_FROM_EXCLUSIVE_TRUST_STORE() {
        return CERT_TRUST_IS_FROM_EXCLUSIVE_TRUST_STORE;
    }
    private static final int CERT_TRUST_IS_CA_TRUSTED = (int)16384L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_IS_CA_TRUSTED 16384
     * }
     */
    public static int CERT_TRUST_IS_CA_TRUSTED() {
        return CERT_TRUST_IS_CA_TRUSTED;
    }
    private static final int CERT_TRUST_HAS_AUTO_UPDATE_WEAK_SIGNATURE = (int)32768L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_HAS_AUTO_UPDATE_WEAK_SIGNATURE 32768
     * }
     */
    public static int CERT_TRUST_HAS_AUTO_UPDATE_WEAK_SIGNATURE() {
        return CERT_TRUST_HAS_AUTO_UPDATE_WEAK_SIGNATURE;
    }
    private static final int CERT_TRUST_HAS_ALLOW_WEAK_SIGNATURE = (int)131072L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_HAS_ALLOW_WEAK_SIGNATURE 131072
     * }
     */
    public static int CERT_TRUST_HAS_ALLOW_WEAK_SIGNATURE() {
        return CERT_TRUST_HAS_ALLOW_WEAK_SIGNATURE;
    }
    private static final int CERT_TRUST_BEFORE_DISALLOWED_CA_FILETIME = (int)2097152L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_BEFORE_DISALLOWED_CA_FILETIME 2097152
     * }
     */
    public static int CERT_TRUST_BEFORE_DISALLOWED_CA_FILETIME() {
        return CERT_TRUST_BEFORE_DISALLOWED_CA_FILETIME;
    }
    private static final int CERT_TRUST_IS_COMPLEX_CHAIN = (int)65536L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_IS_COMPLEX_CHAIN 65536
     * }
     */
    public static int CERT_TRUST_IS_COMPLEX_CHAIN() {
        return CERT_TRUST_IS_COMPLEX_CHAIN;
    }
    private static final int CERT_TRUST_SSL_TIME_VALID = (int)16777216L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_SSL_TIME_VALID 16777216
     * }
     */
    public static int CERT_TRUST_SSL_TIME_VALID() {
        return CERT_TRUST_SSL_TIME_VALID;
    }
    private static final int CERT_TRUST_NO_TIME_CHECK = (int)33554432L;
    /**
     * {@snippet lang=c :
     * #define CERT_TRUST_NO_TIME_CHECK 33554432
     * }
     */
    public static int CERT_TRUST_NO_TIME_CHECK() {
        return CERT_TRUST_NO_TIME_CHECK;
    }
    private static final int USAGE_MATCH_TYPE_AND = (int)0L;
    /**
     * {@snippet lang=c :
     * #define USAGE_MATCH_TYPE_AND 0
     * }
     */
    public static int USAGE_MATCH_TYPE_AND() {
        return USAGE_MATCH_TYPE_AND;
    }
    private static final int USAGE_MATCH_TYPE_OR = (int)1L;
    /**
     * {@snippet lang=c :
     * #define USAGE_MATCH_TYPE_OR 1
     * }
     */
    public static int USAGE_MATCH_TYPE_OR() {
        return USAGE_MATCH_TYPE_OR;
    }
    private static final int CERT_CHAIN_STRONG_SIGN_DISABLE_END_CHECK_FLAG = (int)1L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_STRONG_SIGN_DISABLE_END_CHECK_FLAG 1
     * }
     */
    public static int CERT_CHAIN_STRONG_SIGN_DISABLE_END_CHECK_FLAG() {
        return CERT_CHAIN_STRONG_SIGN_DISABLE_END_CHECK_FLAG;
    }
    private static final int CERT_CHAIN_REVOCATION_CHECK_END_CERT = (int)268435456L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_REVOCATION_CHECK_END_CERT 268435456
     * }
     */
    public static int CERT_CHAIN_REVOCATION_CHECK_END_CERT() {
        return CERT_CHAIN_REVOCATION_CHECK_END_CERT;
    }
    private static final int CERT_CHAIN_REVOCATION_CHECK_CHAIN = (int)536870912L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_REVOCATION_CHECK_CHAIN 536870912
     * }
     */
    public static int CERT_CHAIN_REVOCATION_CHECK_CHAIN() {
        return CERT_CHAIN_REVOCATION_CHECK_CHAIN;
    }
    private static final int CERT_CHAIN_REVOCATION_CHECK_CHAIN_EXCLUDE_ROOT = (int)1073741824L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_REVOCATION_CHECK_CHAIN_EXCLUDE_ROOT 1073741824
     * }
     */
    public static int CERT_CHAIN_REVOCATION_CHECK_CHAIN_EXCLUDE_ROOT() {
        return CERT_CHAIN_REVOCATION_CHECK_CHAIN_EXCLUDE_ROOT;
    }
    private static final int CERT_CHAIN_REVOCATION_ACCUMULATIVE_TIMEOUT = (int)134217728L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_REVOCATION_ACCUMULATIVE_TIMEOUT 134217728
     * }
     */
    public static int CERT_CHAIN_REVOCATION_ACCUMULATIVE_TIMEOUT() {
        return CERT_CHAIN_REVOCATION_ACCUMULATIVE_TIMEOUT;
    }
    private static final int CERT_CHAIN_REVOCATION_CHECK_OCSP_CERT = (int)67108864L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_REVOCATION_CHECK_OCSP_CERT 67108864
     * }
     */
    public static int CERT_CHAIN_REVOCATION_CHECK_OCSP_CERT() {
        return CERT_CHAIN_REVOCATION_CHECK_OCSP_CERT;
    }
    private static final int CERT_CHAIN_DISABLE_PASS1_QUALITY_FILTERING = (int)64L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_DISABLE_PASS1_QUALITY_FILTERING 64
     * }
     */
    public static int CERT_CHAIN_DISABLE_PASS1_QUALITY_FILTERING() {
        return CERT_CHAIN_DISABLE_PASS1_QUALITY_FILTERING;
    }
    private static final int CERT_CHAIN_RETURN_LOWER_QUALITY_CONTEXTS = (int)128L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_RETURN_LOWER_QUALITY_CONTEXTS 128
     * }
     */
    public static int CERT_CHAIN_RETURN_LOWER_QUALITY_CONTEXTS() {
        return CERT_CHAIN_RETURN_LOWER_QUALITY_CONTEXTS;
    }
    private static final int CERT_CHAIN_DISABLE_AUTH_ROOT_AUTO_UPDATE = (int)256L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_DISABLE_AUTH_ROOT_AUTO_UPDATE 256
     * }
     */
    public static int CERT_CHAIN_DISABLE_AUTH_ROOT_AUTO_UPDATE() {
        return CERT_CHAIN_DISABLE_AUTH_ROOT_AUTO_UPDATE;
    }
    private static final int CERT_CHAIN_TIMESTAMP_TIME = (int)512L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_TIMESTAMP_TIME 512
     * }
     */
    public static int CERT_CHAIN_TIMESTAMP_TIME() {
        return CERT_CHAIN_TIMESTAMP_TIME;
    }
    private static final int CERT_CHAIN_ENABLE_PEER_TRUST = (int)1024L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_ENABLE_PEER_TRUST 1024
     * }
     */
    public static int CERT_CHAIN_ENABLE_PEER_TRUST() {
        return CERT_CHAIN_ENABLE_PEER_TRUST;
    }
    private static final int CERT_CHAIN_DISABLE_MY_PEER_TRUST = (int)2048L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_DISABLE_MY_PEER_TRUST 2048
     * }
     */
    public static int CERT_CHAIN_DISABLE_MY_PEER_TRUST() {
        return CERT_CHAIN_DISABLE_MY_PEER_TRUST;
    }
    private static final int CERT_CHAIN_DISABLE_MD2_MD4 = (int)4096L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_DISABLE_MD2_MD4 4096
     * }
     */
    public static int CERT_CHAIN_DISABLE_MD2_MD4() {
        return CERT_CHAIN_DISABLE_MD2_MD4;
    }
    private static final int CERT_CHAIN_DISABLE_AIA = (int)8192L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_DISABLE_AIA 8192
     * }
     */
    public static int CERT_CHAIN_DISABLE_AIA() {
        return CERT_CHAIN_DISABLE_AIA;
    }
    private static final int CERT_CHAIN_HAS_MOTW = (int)16384L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_HAS_MOTW 16384
     * }
     */
    public static int CERT_CHAIN_HAS_MOTW() {
        return CERT_CHAIN_HAS_MOTW;
    }
    private static final int CERT_CHAIN_ONLY_ADDITIONAL_AND_AUTH_ROOT = (int)32768L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_ONLY_ADDITIONAL_AND_AUTH_ROOT 32768
     * }
     */
    public static int CERT_CHAIN_ONLY_ADDITIONAL_AND_AUTH_ROOT() {
        return CERT_CHAIN_ONLY_ADDITIONAL_AND_AUTH_ROOT;
    }
    private static final int CERT_CHAIN_OPT_IN_WEAK_SIGNATURE = (int)65536L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_OPT_IN_WEAK_SIGNATURE 65536
     * }
     */
    public static int CERT_CHAIN_OPT_IN_WEAK_SIGNATURE() {
        return CERT_CHAIN_OPT_IN_WEAK_SIGNATURE;
    }
    private static final int CERT_CHAIN_ENABLE_DISALLOWED_CA = (int)131072L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_ENABLE_DISALLOWED_CA 131072
     * }
     */
    public static int CERT_CHAIN_ENABLE_DISALLOWED_CA() {
        return CERT_CHAIN_ENABLE_DISALLOWED_CA;
    }
    private static final int CERT_CHAIN_FIND_BY_ISSUER = (int)1L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_FIND_BY_ISSUER 1
     * }
     */
    public static int CERT_CHAIN_FIND_BY_ISSUER() {
        return CERT_CHAIN_FIND_BY_ISSUER;
    }
    private static final int CERT_CHAIN_FIND_BY_ISSUER_COMPARE_KEY_FLAG = (int)1L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_FIND_BY_ISSUER_COMPARE_KEY_FLAG 1
     * }
     */
    public static int CERT_CHAIN_FIND_BY_ISSUER_COMPARE_KEY_FLAG() {
        return CERT_CHAIN_FIND_BY_ISSUER_COMPARE_KEY_FLAG;
    }
    private static final int CERT_CHAIN_FIND_BY_ISSUER_COMPLEX_CHAIN_FLAG = (int)2L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_FIND_BY_ISSUER_COMPLEX_CHAIN_FLAG 2
     * }
     */
    public static int CERT_CHAIN_FIND_BY_ISSUER_COMPLEX_CHAIN_FLAG() {
        return CERT_CHAIN_FIND_BY_ISSUER_COMPLEX_CHAIN_FLAG;
    }
    private static final int CERT_CHAIN_FIND_BY_ISSUER_CACHE_ONLY_URL_FLAG = (int)4L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_FIND_BY_ISSUER_CACHE_ONLY_URL_FLAG 4
     * }
     */
    public static int CERT_CHAIN_FIND_BY_ISSUER_CACHE_ONLY_URL_FLAG() {
        return CERT_CHAIN_FIND_BY_ISSUER_CACHE_ONLY_URL_FLAG;
    }
    private static final int CERT_CHAIN_FIND_BY_ISSUER_LOCAL_MACHINE_FLAG = (int)8L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_FIND_BY_ISSUER_LOCAL_MACHINE_FLAG 8
     * }
     */
    public static int CERT_CHAIN_FIND_BY_ISSUER_LOCAL_MACHINE_FLAG() {
        return CERT_CHAIN_FIND_BY_ISSUER_LOCAL_MACHINE_FLAG;
    }
    private static final int CERT_CHAIN_FIND_BY_ISSUER_NO_KEY_FLAG = (int)16384L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_FIND_BY_ISSUER_NO_KEY_FLAG 16384
     * }
     */
    public static int CERT_CHAIN_FIND_BY_ISSUER_NO_KEY_FLAG() {
        return CERT_CHAIN_FIND_BY_ISSUER_NO_KEY_FLAG;
    }
    private static final int CERT_CHAIN_FIND_BY_ISSUER_CACHE_ONLY_FLAG = (int)32768L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_FIND_BY_ISSUER_CACHE_ONLY_FLAG 32768
     * }
     */
    public static int CERT_CHAIN_FIND_BY_ISSUER_CACHE_ONLY_FLAG() {
        return CERT_CHAIN_FIND_BY_ISSUER_CACHE_ONLY_FLAG;
    }
    private static final int CERT_CHAIN_POLICY_IGNORE_NOT_TIME_VALID_FLAG = (int)1L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_POLICY_IGNORE_NOT_TIME_VALID_FLAG 1
     * }
     */
    public static int CERT_CHAIN_POLICY_IGNORE_NOT_TIME_VALID_FLAG() {
        return CERT_CHAIN_POLICY_IGNORE_NOT_TIME_VALID_FLAG;
    }
    private static final int CERT_CHAIN_POLICY_IGNORE_CTL_NOT_TIME_VALID_FLAG = (int)2L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_POLICY_IGNORE_CTL_NOT_TIME_VALID_FLAG 2
     * }
     */
    public static int CERT_CHAIN_POLICY_IGNORE_CTL_NOT_TIME_VALID_FLAG() {
        return CERT_CHAIN_POLICY_IGNORE_CTL_NOT_TIME_VALID_FLAG;
    }
    private static final int CERT_CHAIN_POLICY_IGNORE_NOT_TIME_NESTED_FLAG = (int)4L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_POLICY_IGNORE_NOT_TIME_NESTED_FLAG 4
     * }
     */
    public static int CERT_CHAIN_POLICY_IGNORE_NOT_TIME_NESTED_FLAG() {
        return CERT_CHAIN_POLICY_IGNORE_NOT_TIME_NESTED_FLAG;
    }
    private static final int CERT_CHAIN_POLICY_IGNORE_INVALID_BASIC_CONSTRAINTS_FLAG = (int)8L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_POLICY_IGNORE_INVALID_BASIC_CONSTRAINTS_FLAG 8
     * }
     */
    public static int CERT_CHAIN_POLICY_IGNORE_INVALID_BASIC_CONSTRAINTS_FLAG() {
        return CERT_CHAIN_POLICY_IGNORE_INVALID_BASIC_CONSTRAINTS_FLAG;
    }
    private static final int CERT_CHAIN_POLICY_ALLOW_UNKNOWN_CA_FLAG = (int)16L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_POLICY_ALLOW_UNKNOWN_CA_FLAG 16
     * }
     */
    public static int CERT_CHAIN_POLICY_ALLOW_UNKNOWN_CA_FLAG() {
        return CERT_CHAIN_POLICY_ALLOW_UNKNOWN_CA_FLAG;
    }
    private static final int CERT_CHAIN_POLICY_IGNORE_WRONG_USAGE_FLAG = (int)32L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_POLICY_IGNORE_WRONG_USAGE_FLAG 32
     * }
     */
    public static int CERT_CHAIN_POLICY_IGNORE_WRONG_USAGE_FLAG() {
        return CERT_CHAIN_POLICY_IGNORE_WRONG_USAGE_FLAG;
    }
    private static final int CERT_CHAIN_POLICY_IGNORE_INVALID_NAME_FLAG = (int)64L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_POLICY_IGNORE_INVALID_NAME_FLAG 64
     * }
     */
    public static int CERT_CHAIN_POLICY_IGNORE_INVALID_NAME_FLAG() {
        return CERT_CHAIN_POLICY_IGNORE_INVALID_NAME_FLAG;
    }
    private static final int CERT_CHAIN_POLICY_IGNORE_INVALID_POLICY_FLAG = (int)128L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_POLICY_IGNORE_INVALID_POLICY_FLAG 128
     * }
     */
    public static int CERT_CHAIN_POLICY_IGNORE_INVALID_POLICY_FLAG() {
        return CERT_CHAIN_POLICY_IGNORE_INVALID_POLICY_FLAG;
    }
    private static final int CERT_CHAIN_POLICY_IGNORE_END_REV_UNKNOWN_FLAG = (int)256L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_POLICY_IGNORE_END_REV_UNKNOWN_FLAG 256
     * }
     */
    public static int CERT_CHAIN_POLICY_IGNORE_END_REV_UNKNOWN_FLAG() {
        return CERT_CHAIN_POLICY_IGNORE_END_REV_UNKNOWN_FLAG;
    }
    private static final int CERT_CHAIN_POLICY_IGNORE_CTL_SIGNER_REV_UNKNOWN_FLAG = (int)512L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_POLICY_IGNORE_CTL_SIGNER_REV_UNKNOWN_FLAG 512
     * }
     */
    public static int CERT_CHAIN_POLICY_IGNORE_CTL_SIGNER_REV_UNKNOWN_FLAG() {
        return CERT_CHAIN_POLICY_IGNORE_CTL_SIGNER_REV_UNKNOWN_FLAG;
    }
    private static final int CERT_CHAIN_POLICY_IGNORE_CA_REV_UNKNOWN_FLAG = (int)1024L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_POLICY_IGNORE_CA_REV_UNKNOWN_FLAG 1024
     * }
     */
    public static int CERT_CHAIN_POLICY_IGNORE_CA_REV_UNKNOWN_FLAG() {
        return CERT_CHAIN_POLICY_IGNORE_CA_REV_UNKNOWN_FLAG;
    }
    private static final int CERT_CHAIN_POLICY_IGNORE_ROOT_REV_UNKNOWN_FLAG = (int)2048L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_POLICY_IGNORE_ROOT_REV_UNKNOWN_FLAG 2048
     * }
     */
    public static int CERT_CHAIN_POLICY_IGNORE_ROOT_REV_UNKNOWN_FLAG() {
        return CERT_CHAIN_POLICY_IGNORE_ROOT_REV_UNKNOWN_FLAG;
    }
    private static final int CERT_CHAIN_POLICY_ALLOW_TESTROOT_FLAG = (int)32768L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_POLICY_ALLOW_TESTROOT_FLAG 32768
     * }
     */
    public static int CERT_CHAIN_POLICY_ALLOW_TESTROOT_FLAG() {
        return CERT_CHAIN_POLICY_ALLOW_TESTROOT_FLAG;
    }
    private static final int CERT_CHAIN_POLICY_TRUST_TESTROOT_FLAG = (int)16384L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_POLICY_TRUST_TESTROOT_FLAG 16384
     * }
     */
    public static int CERT_CHAIN_POLICY_TRUST_TESTROOT_FLAG() {
        return CERT_CHAIN_POLICY_TRUST_TESTROOT_FLAG;
    }
    private static final int CERT_CHAIN_POLICY_IGNORE_NOT_SUPPORTED_CRITICAL_EXT_FLAG = (int)8192L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_POLICY_IGNORE_NOT_SUPPORTED_CRITICAL_EXT_FLAG 8192
     * }
     */
    public static int CERT_CHAIN_POLICY_IGNORE_NOT_SUPPORTED_CRITICAL_EXT_FLAG() {
        return CERT_CHAIN_POLICY_IGNORE_NOT_SUPPORTED_CRITICAL_EXT_FLAG;
    }
    private static final int CERT_CHAIN_POLICY_IGNORE_PEER_TRUST_FLAG = (int)4096L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_POLICY_IGNORE_PEER_TRUST_FLAG 4096
     * }
     */
    public static int CERT_CHAIN_POLICY_IGNORE_PEER_TRUST_FLAG() {
        return CERT_CHAIN_POLICY_IGNORE_PEER_TRUST_FLAG;
    }
    private static final int CERT_CHAIN_POLICY_IGNORE_WEAK_SIGNATURE_FLAG = (int)134217728L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_POLICY_IGNORE_WEAK_SIGNATURE_FLAG 134217728
     * }
     */
    public static int CERT_CHAIN_POLICY_IGNORE_WEAK_SIGNATURE_FLAG() {
        return CERT_CHAIN_POLICY_IGNORE_WEAK_SIGNATURE_FLAG;
    }
    private static final int AUTHTYPE_CLIENT = (int)1L;
    /**
     * {@snippet lang=c :
     * #define AUTHTYPE_CLIENT 1
     * }
     */
    public static int AUTHTYPE_CLIENT() {
        return AUTHTYPE_CLIENT;
    }
    private static final int AUTHTYPE_SERVER = (int)2L;
    /**
     * {@snippet lang=c :
     * #define AUTHTYPE_SERVER 2
     * }
     */
    public static int AUTHTYPE_SERVER() {
        return AUTHTYPE_SERVER;
    }
    private static final int BASIC_CONSTRAINTS_CERT_CHAIN_POLICY_END_ENTITY_FLAG = (int)1073741824L;
    /**
     * {@snippet lang=c :
     * #define BASIC_CONSTRAINTS_CERT_CHAIN_POLICY_END_ENTITY_FLAG 1073741824
     * }
     */
    public static int BASIC_CONSTRAINTS_CERT_CHAIN_POLICY_END_ENTITY_FLAG() {
        return BASIC_CONSTRAINTS_CERT_CHAIN_POLICY_END_ENTITY_FLAG;
    }
    private static final int MICROSOFT_ROOT_CERT_CHAIN_POLICY_ENABLE_TEST_ROOT_FLAG = (int)65536L;
    /**
     * {@snippet lang=c :
     * #define MICROSOFT_ROOT_CERT_CHAIN_POLICY_ENABLE_TEST_ROOT_FLAG 65536
     * }
     */
    public static int MICROSOFT_ROOT_CERT_CHAIN_POLICY_ENABLE_TEST_ROOT_FLAG() {
        return MICROSOFT_ROOT_CERT_CHAIN_POLICY_ENABLE_TEST_ROOT_FLAG;
    }
    private static final int MICROSOFT_ROOT_CERT_CHAIN_POLICY_CHECK_APPLICATION_ROOT_FLAG = (int)131072L;
    /**
     * {@snippet lang=c :
     * #define MICROSOFT_ROOT_CERT_CHAIN_POLICY_CHECK_APPLICATION_ROOT_FLAG 131072
     * }
     */
    public static int MICROSOFT_ROOT_CERT_CHAIN_POLICY_CHECK_APPLICATION_ROOT_FLAG() {
        return MICROSOFT_ROOT_CERT_CHAIN_POLICY_CHECK_APPLICATION_ROOT_FLAG;
    }
    private static final int MICROSOFT_ROOT_CERT_CHAIN_POLICY_DISABLE_FLIGHT_ROOT_FLAG = (int)262144L;
    /**
     * {@snippet lang=c :
     * #define MICROSOFT_ROOT_CERT_CHAIN_POLICY_DISABLE_FLIGHT_ROOT_FLAG 262144
     * }
     */
    public static int MICROSOFT_ROOT_CERT_CHAIN_POLICY_DISABLE_FLIGHT_ROOT_FLAG() {
        return MICROSOFT_ROOT_CERT_CHAIN_POLICY_DISABLE_FLIGHT_ROOT_FLAG;
    }
    private static final int SSL_F12_ERROR_TEXT_LENGTH = (int)256L;
    /**
     * {@snippet lang=c :
     * #define SSL_F12_ERROR_TEXT_LENGTH 256
     * }
     */
    public static int SSL_F12_ERROR_TEXT_LENGTH() {
        return SSL_F12_ERROR_TEXT_LENGTH;
    }
    private static final int CERT_CHAIN_POLICY_SSL_F12_SUCCESS_LEVEL = (int)0L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_POLICY_SSL_F12_SUCCESS_LEVEL 0
     * }
     */
    public static int CERT_CHAIN_POLICY_SSL_F12_SUCCESS_LEVEL() {
        return CERT_CHAIN_POLICY_SSL_F12_SUCCESS_LEVEL;
    }
    private static final int CERT_CHAIN_POLICY_SSL_F12_WARNING_LEVEL = (int)1L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_POLICY_SSL_F12_WARNING_LEVEL 1
     * }
     */
    public static int CERT_CHAIN_POLICY_SSL_F12_WARNING_LEVEL() {
        return CERT_CHAIN_POLICY_SSL_F12_WARNING_LEVEL;
    }
    private static final int CERT_CHAIN_POLICY_SSL_F12_ERROR_LEVEL = (int)2L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_POLICY_SSL_F12_ERROR_LEVEL 2
     * }
     */
    public static int CERT_CHAIN_POLICY_SSL_F12_ERROR_LEVEL() {
        return CERT_CHAIN_POLICY_SSL_F12_ERROR_LEVEL;
    }
    private static final int CERT_CHAIN_POLICY_SSL_F12_NONE_CATEGORY = (int)0L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_POLICY_SSL_F12_NONE_CATEGORY 0
     * }
     */
    public static int CERT_CHAIN_POLICY_SSL_F12_NONE_CATEGORY() {
        return CERT_CHAIN_POLICY_SSL_F12_NONE_CATEGORY;
    }
    private static final int CERT_CHAIN_POLICY_SSL_F12_WEAK_CRYPTO_CATEGORY = (int)1L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_POLICY_SSL_F12_WEAK_CRYPTO_CATEGORY 1
     * }
     */
    public static int CERT_CHAIN_POLICY_SSL_F12_WEAK_CRYPTO_CATEGORY() {
        return CERT_CHAIN_POLICY_SSL_F12_WEAK_CRYPTO_CATEGORY;
    }
    private static final int CERT_CHAIN_POLICY_SSL_F12_ROOT_PROGRAM_CATEGORY = (int)2L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_POLICY_SSL_F12_ROOT_PROGRAM_CATEGORY 2
     * }
     */
    public static int CERT_CHAIN_POLICY_SSL_F12_ROOT_PROGRAM_CATEGORY() {
        return CERT_CHAIN_POLICY_SSL_F12_ROOT_PROGRAM_CATEGORY;
    }
    private static final int SSL_HPKP_PKP_HEADER_INDEX = (int)0L;
    /**
     * {@snippet lang=c :
     * #define SSL_HPKP_PKP_HEADER_INDEX 0
     * }
     */
    public static int SSL_HPKP_PKP_HEADER_INDEX() {
        return SSL_HPKP_PKP_HEADER_INDEX;
    }
    private static final int SSL_HPKP_PKP_RO_HEADER_INDEX = (int)1L;
    /**
     * {@snippet lang=c :
     * #define SSL_HPKP_PKP_RO_HEADER_INDEX 1
     * }
     */
    public static int SSL_HPKP_PKP_RO_HEADER_INDEX() {
        return SSL_HPKP_PKP_RO_HEADER_INDEX;
    }
    private static final int SSL_HPKP_HEADER_COUNT = (int)2L;
    /**
     * {@snippet lang=c :
     * #define SSL_HPKP_HEADER_COUNT 2
     * }
     */
    public static int SSL_HPKP_HEADER_COUNT() {
        return SSL_HPKP_HEADER_COUNT;
    }
    private static final int SSL_KEY_PIN_ERROR_TEXT_LENGTH = (int)512L;
    /**
     * {@snippet lang=c :
     * #define SSL_KEY_PIN_ERROR_TEXT_LENGTH 512
     * }
     */
    public static int SSL_KEY_PIN_ERROR_TEXT_LENGTH() {
        return SSL_KEY_PIN_ERROR_TEXT_LENGTH;
    }
    private static final int CERT_CHAIN_POLICY_SSL_KEY_PIN_SUCCESS = (int)0L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_POLICY_SSL_KEY_PIN_SUCCESS 0
     * }
     */
    public static int CERT_CHAIN_POLICY_SSL_KEY_PIN_SUCCESS() {
        return CERT_CHAIN_POLICY_SSL_KEY_PIN_SUCCESS;
    }
    private static final int CERT_CHAIN_POLICY_SSL_KEY_PIN_MITM_WARNING = (int)1L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_POLICY_SSL_KEY_PIN_MITM_WARNING 1
     * }
     */
    public static int CERT_CHAIN_POLICY_SSL_KEY_PIN_MITM_WARNING() {
        return CERT_CHAIN_POLICY_SSL_KEY_PIN_MITM_WARNING;
    }
    private static final int CERT_CHAIN_POLICY_SSL_KEY_PIN_MISMATCH_WARNING = (int)2L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_POLICY_SSL_KEY_PIN_MISMATCH_WARNING 2
     * }
     */
    public static int CERT_CHAIN_POLICY_SSL_KEY_PIN_MISMATCH_WARNING() {
        return CERT_CHAIN_POLICY_SSL_KEY_PIN_MISMATCH_WARNING;
    }
    private static final int CERT_CHAIN_POLICY_CT_SUCCESS_SCT_VALIDIDATION_STATUS_VALID = (int)0L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_POLICY_CT_SUCCESS_SCT_VALIDIDATION_STATUS_VALID 0
     * }
     */
    public static int CERT_CHAIN_POLICY_CT_SUCCESS_SCT_VALIDIDATION_STATUS_VALID() {
        return CERT_CHAIN_POLICY_CT_SUCCESS_SCT_VALIDIDATION_STATUS_VALID;
    }
    private static final int CERT_CHAIN_POLICY_CT_WARNING_OUT_OF_MEMORY = (int)1L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_POLICY_CT_WARNING_OUT_OF_MEMORY 1
     * }
     */
    public static int CERT_CHAIN_POLICY_CT_WARNING_OUT_OF_MEMORY() {
        return CERT_CHAIN_POLICY_CT_WARNING_OUT_OF_MEMORY;
    }
    private static final int CERT_CHAIN_POLICY_CT_WARNING_BEFORE_CODE_SIGNING_CT_LOGGING = (int)2L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_POLICY_CT_WARNING_BEFORE_CODE_SIGNING_CT_LOGGING 2
     * }
     */
    public static int CERT_CHAIN_POLICY_CT_WARNING_BEFORE_CODE_SIGNING_CT_LOGGING() {
        return CERT_CHAIN_POLICY_CT_WARNING_BEFORE_CODE_SIGNING_CT_LOGGING;
    }
    private static final int CERT_CHAIN_POLICY_CT_WARNING_NOT_THIRD_PARTY_CERT = (int)3L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_POLICY_CT_WARNING_NOT_THIRD_PARTY_CERT 3
     * }
     */
    public static int CERT_CHAIN_POLICY_CT_WARNING_NOT_THIRD_PARTY_CERT() {
        return CERT_CHAIN_POLICY_CT_WARNING_NOT_THIRD_PARTY_CERT;
    }
    private static final int CERT_CHAIN_POLICY_CT_WARNING_EXPIRED_ROOT_CTL = (int)4L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_POLICY_CT_WARNING_EXPIRED_ROOT_CTL 4
     * }
     */
    public static int CERT_CHAIN_POLICY_CT_WARNING_EXPIRED_ROOT_CTL() {
        return CERT_CHAIN_POLICY_CT_WARNING_EXPIRED_ROOT_CTL;
    }
    private static final int CERT_CHAIN_POLICY_CT_WARNING_INVALID_CHAIN_CONTEXT = (int)50L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_POLICY_CT_WARNING_INVALID_CHAIN_CONTEXT 50
     * }
     */
    public static int CERT_CHAIN_POLICY_CT_WARNING_INVALID_CHAIN_CONTEXT() {
        return CERT_CHAIN_POLICY_CT_WARNING_INVALID_CHAIN_CONTEXT;
    }
    private static final int CERT_CHAIN_POLICY_CT_WARNING_NOT_SUPPORTED_CA = (int)51L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_POLICY_CT_WARNING_NOT_SUPPORTED_CA 51
     * }
     */
    public static int CERT_CHAIN_POLICY_CT_WARNING_NOT_SUPPORTED_CA() {
        return CERT_CHAIN_POLICY_CT_WARNING_NOT_SUPPORTED_CA;
    }
    private static final int CERT_CHAIN_POLICY_CT_WARNING_MISSING_ROOT_CTL = (int)52L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_POLICY_CT_WARNING_MISSING_ROOT_CTL 52
     * }
     */
    public static int CERT_CHAIN_POLICY_CT_WARNING_MISSING_ROOT_CTL() {
        return CERT_CHAIN_POLICY_CT_WARNING_MISSING_ROOT_CTL;
    }
    private static final int CERT_CHAIN_POLICY_CT_WARNING_MISSING_CT_EXT = (int)60L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_POLICY_CT_WARNING_MISSING_CT_EXT 60
     * }
     */
    public static int CERT_CHAIN_POLICY_CT_WARNING_MISSING_CT_EXT() {
        return CERT_CHAIN_POLICY_CT_WARNING_MISSING_CT_EXT;
    }
    private static final int CERT_CHAIN_POLICY_CT_WARNING_INVALID_CT_EXT = (int)61L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_POLICY_CT_WARNING_INVALID_CT_EXT 61
     * }
     */
    public static int CERT_CHAIN_POLICY_CT_WARNING_INVALID_CT_EXT() {
        return CERT_CHAIN_POLICY_CT_WARNING_INVALID_CT_EXT;
    }
    private static final int CERT_CHAIN_POLICY_CT_WARNING_UNABLE_TO_DECODE_EXT = (int)62L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_POLICY_CT_WARNING_UNABLE_TO_DECODE_EXT 62
     * }
     */
    public static int CERT_CHAIN_POLICY_CT_WARNING_UNABLE_TO_DECODE_EXT() {
        return CERT_CHAIN_POLICY_CT_WARNING_UNABLE_TO_DECODE_EXT;
    }
    private static final int CERT_CHAIN_POLICY_CT_WARNING_UNABLE_TO_DECODE_PARAMETERS = (int)70L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_POLICY_CT_WARNING_UNABLE_TO_DECODE_PARAMETERS 70
     * }
     */
    public static int CERT_CHAIN_POLICY_CT_WARNING_UNABLE_TO_DECODE_PARAMETERS() {
        return CERT_CHAIN_POLICY_CT_WARNING_UNABLE_TO_DECODE_PARAMETERS;
    }
    private static final int CERT_CHAIN_POLICY_CT_WARNING_INVALID_TEMP_FILE = (int)80L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_POLICY_CT_WARNING_INVALID_TEMP_FILE 80
     * }
     */
    public static int CERT_CHAIN_POLICY_CT_WARNING_INVALID_TEMP_FILE() {
        return CERT_CHAIN_POLICY_CT_WARNING_INVALID_TEMP_FILE;
    }
    private static final int CERT_CHAIN_POLICY_CT_WARNING_CANNOT_CREATE_TEMP_FILE = (int)81L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_POLICY_CT_WARNING_CANNOT_CREATE_TEMP_FILE 81
     * }
     */
    public static int CERT_CHAIN_POLICY_CT_WARNING_CANNOT_CREATE_TEMP_FILE() {
        return CERT_CHAIN_POLICY_CT_WARNING_CANNOT_CREATE_TEMP_FILE;
    }
    private static final int CERT_CHAIN_POLICY_CT_WARNING_CANNOT_WRITE_TEMP_FILE = (int)82L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_POLICY_CT_WARNING_CANNOT_WRITE_TEMP_FILE 82
     * }
     */
    public static int CERT_CHAIN_POLICY_CT_WARNING_CANNOT_WRITE_TEMP_FILE() {
        return CERT_CHAIN_POLICY_CT_WARNING_CANNOT_WRITE_TEMP_FILE;
    }
    private static final int CERT_CHAIN_POLICY_CT_WARNING_CANNOT_LOAD_CTLOG_STORE_FILE = (int)83L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_POLICY_CT_WARNING_CANNOT_LOAD_CTLOG_STORE_FILE 83
     * }
     */
    public static int CERT_CHAIN_POLICY_CT_WARNING_CANNOT_LOAD_CTLOG_STORE_FILE() {
        return CERT_CHAIN_POLICY_CT_WARNING_CANNOT_LOAD_CTLOG_STORE_FILE;
    }
    private static final int CERT_CHAIN_POLICY_CT_WARNING_FAILED_INIT = (int)90L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_POLICY_CT_WARNING_FAILED_INIT 90
     * }
     */
    public static int CERT_CHAIN_POLICY_CT_WARNING_FAILED_INIT() {
        return CERT_CHAIN_POLICY_CT_WARNING_FAILED_INIT;
    }
    private static final int CERT_CHAIN_POLICY_CT_WARNING_HASHING_ERROR = (int)200L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_POLICY_CT_WARNING_HASHING_ERROR 200
     * }
     */
    public static int CERT_CHAIN_POLICY_CT_WARNING_HASHING_ERROR() {
        return CERT_CHAIN_POLICY_CT_WARNING_HASHING_ERROR;
    }
    private static final int CERT_CHAIN_POLICY_CT_WARNING_INVALID_STR = (int)201L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_POLICY_CT_WARNING_INVALID_STR 201
     * }
     */
    public static int CERT_CHAIN_POLICY_CT_WARNING_INVALID_STR() {
        return CERT_CHAIN_POLICY_CT_WARNING_INVALID_STR;
    }
    private static final int CERT_CHAIN_POLICY_CT_WARNING_CANNOT_CREATE_POLICY = (int)300L;
    /**
     * {@snippet lang=c :
     * #define CERT_CHAIN_POLICY_CT_WARNING_CANNOT_CREATE_POLICY 300
     * }
     */
    public static int CERT_CHAIN_POLICY_CT_WARNING_CANNOT_CREATE_POLICY() {
        return CERT_CHAIN_POLICY_CT_WARNING_CANNOT_CREATE_POLICY;
    }
    private static final int CRYPT_STRING_BASE64HEADER = (int)0L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_STRING_BASE64HEADER 0
     * }
     */
    public static int CRYPT_STRING_BASE64HEADER() {
        return CRYPT_STRING_BASE64HEADER;
    }
    private static final int CRYPT_STRING_BASE64 = (int)1L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_STRING_BASE64 1
     * }
     */
    public static int CRYPT_STRING_BASE64() {
        return CRYPT_STRING_BASE64;
    }
    private static final int CRYPT_STRING_BINARY = (int)2L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_STRING_BINARY 2
     * }
     */
    public static int CRYPT_STRING_BINARY() {
        return CRYPT_STRING_BINARY;
    }
    private static final int CRYPT_STRING_BASE64REQUESTHEADER = (int)3L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_STRING_BASE64REQUESTHEADER 3
     * }
     */
    public static int CRYPT_STRING_BASE64REQUESTHEADER() {
        return CRYPT_STRING_BASE64REQUESTHEADER;
    }
    private static final int CRYPT_STRING_HEX = (int)4L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_STRING_HEX 4
     * }
     */
    public static int CRYPT_STRING_HEX() {
        return CRYPT_STRING_HEX;
    }
    private static final int CRYPT_STRING_HEXASCII = (int)5L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_STRING_HEXASCII 5
     * }
     */
    public static int CRYPT_STRING_HEXASCII() {
        return CRYPT_STRING_HEXASCII;
    }
    private static final int CRYPT_STRING_BASE64_ANY = (int)6L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_STRING_BASE64_ANY 6
     * }
     */
    public static int CRYPT_STRING_BASE64_ANY() {
        return CRYPT_STRING_BASE64_ANY;
    }
    private static final int CRYPT_STRING_ANY = (int)7L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_STRING_ANY 7
     * }
     */
    public static int CRYPT_STRING_ANY() {
        return CRYPT_STRING_ANY;
    }
    private static final int CRYPT_STRING_HEX_ANY = (int)8L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_STRING_HEX_ANY 8
     * }
     */
    public static int CRYPT_STRING_HEX_ANY() {
        return CRYPT_STRING_HEX_ANY;
    }
    private static final int CRYPT_STRING_BASE64X509CRLHEADER = (int)9L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_STRING_BASE64X509CRLHEADER 9
     * }
     */
    public static int CRYPT_STRING_BASE64X509CRLHEADER() {
        return CRYPT_STRING_BASE64X509CRLHEADER;
    }
    private static final int CRYPT_STRING_HEXADDR = (int)10L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_STRING_HEXADDR 10
     * }
     */
    public static int CRYPT_STRING_HEXADDR() {
        return CRYPT_STRING_HEXADDR;
    }
    private static final int CRYPT_STRING_HEXASCIIADDR = (int)11L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_STRING_HEXASCIIADDR 11
     * }
     */
    public static int CRYPT_STRING_HEXASCIIADDR() {
        return CRYPT_STRING_HEXASCIIADDR;
    }
    private static final int CRYPT_STRING_HEXRAW = (int)12L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_STRING_HEXRAW 12
     * }
     */
    public static int CRYPT_STRING_HEXRAW() {
        return CRYPT_STRING_HEXRAW;
    }
    private static final int CRYPT_STRING_BASE64URI = (int)13L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_STRING_BASE64URI 13
     * }
     */
    public static int CRYPT_STRING_BASE64URI() {
        return CRYPT_STRING_BASE64URI;
    }
    private static final int CRYPT_STRING_ENCODEMASK = (int)255L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_STRING_ENCODEMASK 255
     * }
     */
    public static int CRYPT_STRING_ENCODEMASK() {
        return CRYPT_STRING_ENCODEMASK;
    }
    private static final int CRYPT_STRING_RESERVED100 = (int)256L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_STRING_RESERVED100 256
     * }
     */
    public static int CRYPT_STRING_RESERVED100() {
        return CRYPT_STRING_RESERVED100;
    }
    private static final int CRYPT_STRING_RESERVED200 = (int)512L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_STRING_RESERVED200 512
     * }
     */
    public static int CRYPT_STRING_RESERVED200() {
        return CRYPT_STRING_RESERVED200;
    }
    private static final int CRYPT_STRING_PERCENTESCAPE = (int)134217728L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_STRING_PERCENTESCAPE 134217728
     * }
     */
    public static int CRYPT_STRING_PERCENTESCAPE() {
        return CRYPT_STRING_PERCENTESCAPE;
    }
    private static final int CRYPT_STRING_HASHDATA = (int)268435456L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_STRING_HASHDATA 268435456
     * }
     */
    public static int CRYPT_STRING_HASHDATA() {
        return CRYPT_STRING_HASHDATA;
    }
    private static final int CRYPT_STRING_STRICT = (int)536870912L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_STRING_STRICT 536870912
     * }
     */
    public static int CRYPT_STRING_STRICT() {
        return CRYPT_STRING_STRICT;
    }
    private static final int CRYPT_STRING_NOCRLF = (int)1073741824L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_STRING_NOCRLF 1073741824
     * }
     */
    public static int CRYPT_STRING_NOCRLF() {
        return CRYPT_STRING_NOCRLF;
    }
    private static final int PKCS12_IMPORT_SILENT = (int)64L;
    /**
     * {@snippet lang=c :
     * #define PKCS12_IMPORT_SILENT 64
     * }
     */
    public static int PKCS12_IMPORT_SILENT() {
        return PKCS12_IMPORT_SILENT;
    }
    private static final int CRYPT_USER_KEYSET = (int)4096L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_USER_KEYSET 4096
     * }
     */
    public static int CRYPT_USER_KEYSET() {
        return CRYPT_USER_KEYSET;
    }
    private static final int PKCS12_PREFER_CNG_KSP = (int)256L;
    /**
     * {@snippet lang=c :
     * #define PKCS12_PREFER_CNG_KSP 256
     * }
     */
    public static int PKCS12_PREFER_CNG_KSP() {
        return PKCS12_PREFER_CNG_KSP;
    }
    private static final int PKCS12_ALWAYS_CNG_KSP = (int)512L;
    /**
     * {@snippet lang=c :
     * #define PKCS12_ALWAYS_CNG_KSP 512
     * }
     */
    public static int PKCS12_ALWAYS_CNG_KSP() {
        return PKCS12_ALWAYS_CNG_KSP;
    }
    private static final int PKCS12_ONLY_CERTIFICATES = (int)1024L;
    /**
     * {@snippet lang=c :
     * #define PKCS12_ONLY_CERTIFICATES 1024
     * }
     */
    public static int PKCS12_ONLY_CERTIFICATES() {
        return PKCS12_ONLY_CERTIFICATES;
    }
    private static final int PKCS12_ONLY_NOT_ENCRYPTED_CERTIFICATES = (int)2048L;
    /**
     * {@snippet lang=c :
     * #define PKCS12_ONLY_NOT_ENCRYPTED_CERTIFICATES 2048
     * }
     */
    public static int PKCS12_ONLY_NOT_ENCRYPTED_CERTIFICATES() {
        return PKCS12_ONLY_NOT_ENCRYPTED_CERTIFICATES;
    }
    private static final int PKCS12_ALLOW_OVERWRITE_KEY = (int)16384L;
    /**
     * {@snippet lang=c :
     * #define PKCS12_ALLOW_OVERWRITE_KEY 16384
     * }
     */
    public static int PKCS12_ALLOW_OVERWRITE_KEY() {
        return PKCS12_ALLOW_OVERWRITE_KEY;
    }
    private static final int PKCS12_NO_PERSIST_KEY = (int)32768L;
    /**
     * {@snippet lang=c :
     * #define PKCS12_NO_PERSIST_KEY 32768
     * }
     */
    public static int PKCS12_NO_PERSIST_KEY() {
        return PKCS12_NO_PERSIST_KEY;
    }
    private static final int PKCS12_VIRTUAL_ISOLATION_KEY = (int)65536L;
    /**
     * {@snippet lang=c :
     * #define PKCS12_VIRTUAL_ISOLATION_KEY 65536
     * }
     */
    public static int PKCS12_VIRTUAL_ISOLATION_KEY() {
        return PKCS12_VIRTUAL_ISOLATION_KEY;
    }
    private static final int PKCS12_NAMED_NO_PERSIST_KEY = (int)131072L;
    /**
     * {@snippet lang=c :
     * #define PKCS12_NAMED_NO_PERSIST_KEY 131072
     * }
     */
    public static int PKCS12_NAMED_NO_PERSIST_KEY() {
        return PKCS12_NAMED_NO_PERSIST_KEY;
    }
    private static final int PKCS12_ONLY_CERTIFICATES_PROVIDER_TYPE = (int)0L;
    /**
     * {@snippet lang=c :
     * #define PKCS12_ONLY_CERTIFICATES_PROVIDER_TYPE 0
     * }
     */
    public static int PKCS12_ONLY_CERTIFICATES_PROVIDER_TYPE() {
        return PKCS12_ONLY_CERTIFICATES_PROVIDER_TYPE;
    }
    private static final int REPORT_NO_PRIVATE_KEY = (int)1L;
    /**
     * {@snippet lang=c :
     * #define REPORT_NO_PRIVATE_KEY 1
     * }
     */
    public static int REPORT_NO_PRIVATE_KEY() {
        return REPORT_NO_PRIVATE_KEY;
    }
    private static final int REPORT_NOT_ABLE_TO_EXPORT_PRIVATE_KEY = (int)2L;
    /**
     * {@snippet lang=c :
     * #define REPORT_NOT_ABLE_TO_EXPORT_PRIVATE_KEY 2
     * }
     */
    public static int REPORT_NOT_ABLE_TO_EXPORT_PRIVATE_KEY() {
        return REPORT_NOT_ABLE_TO_EXPORT_PRIVATE_KEY;
    }
    private static final int EXPORT_PRIVATE_KEYS = (int)4L;
    /**
     * {@snippet lang=c :
     * #define EXPORT_PRIVATE_KEYS 4
     * }
     */
    public static int EXPORT_PRIVATE_KEYS() {
        return EXPORT_PRIVATE_KEYS;
    }
    private static final int PKCS12_INCLUDE_EXTENDED_PROPERTIES = (int)16L;
    /**
     * {@snippet lang=c :
     * #define PKCS12_INCLUDE_EXTENDED_PROPERTIES 16
     * }
     */
    public static int PKCS12_INCLUDE_EXTENDED_PROPERTIES() {
        return PKCS12_INCLUDE_EXTENDED_PROPERTIES;
    }
    private static final int PKCS12_PROTECT_TO_DOMAIN_SIDS = (int)32L;
    /**
     * {@snippet lang=c :
     * #define PKCS12_PROTECT_TO_DOMAIN_SIDS 32
     * }
     */
    public static int PKCS12_PROTECT_TO_DOMAIN_SIDS() {
        return PKCS12_PROTECT_TO_DOMAIN_SIDS;
    }
    private static final int PKCS12_EXPORT_SILENT = (int)64L;
    /**
     * {@snippet lang=c :
     * #define PKCS12_EXPORT_SILENT 64
     * }
     */
    public static int PKCS12_EXPORT_SILENT() {
        return PKCS12_EXPORT_SILENT;
    }
    private static final int PKCS12_EXPORT_PBES2_PARAMS = (int)128L;
    /**
     * {@snippet lang=c :
     * #define PKCS12_EXPORT_PBES2_PARAMS 128
     * }
     */
    public static int PKCS12_EXPORT_PBES2_PARAMS() {
        return PKCS12_EXPORT_PBES2_PARAMS;
    }
    private static final int PKCS12_DISABLE_ENCRYPT_CERTIFICATES = (int)256L;
    /**
     * {@snippet lang=c :
     * #define PKCS12_DISABLE_ENCRYPT_CERTIFICATES 256
     * }
     */
    public static int PKCS12_DISABLE_ENCRYPT_CERTIFICATES() {
        return PKCS12_DISABLE_ENCRYPT_CERTIFICATES;
    }
    private static final int PKCS12_ENCRYPT_CERTIFICATES = (int)512L;
    /**
     * {@snippet lang=c :
     * #define PKCS12_ENCRYPT_CERTIFICATES 512
     * }
     */
    public static int PKCS12_ENCRYPT_CERTIFICATES() {
        return PKCS12_ENCRYPT_CERTIFICATES;
    }
    private static final int PKCS12_EXPORT_ECC_CURVE_PARAMETERS = (int)4096L;
    /**
     * {@snippet lang=c :
     * #define PKCS12_EXPORT_ECC_CURVE_PARAMETERS 4096
     * }
     */
    public static int PKCS12_EXPORT_ECC_CURVE_PARAMETERS() {
        return PKCS12_EXPORT_ECC_CURVE_PARAMETERS;
    }
    private static final int PKCS12_EXPORT_ECC_CURVE_OID = (int)8192L;
    /**
     * {@snippet lang=c :
     * #define PKCS12_EXPORT_ECC_CURVE_OID 8192
     * }
     */
    public static int PKCS12_EXPORT_ECC_CURVE_OID() {
        return PKCS12_EXPORT_ECC_CURVE_OID;
    }
    private static final int CERT_SERVER_OCSP_RESPONSE_OPEN_PARA_READ_FLAG = (int)1L;
    /**
     * {@snippet lang=c :
     * #define CERT_SERVER_OCSP_RESPONSE_OPEN_PARA_READ_FLAG 1
     * }
     */
    public static int CERT_SERVER_OCSP_RESPONSE_OPEN_PARA_READ_FLAG() {
        return CERT_SERVER_OCSP_RESPONSE_OPEN_PARA_READ_FLAG;
    }
    private static final int CERT_SERVER_OCSP_RESPONSE_OPEN_PARA_WRITE_FLAG = (int)2L;
    /**
     * {@snippet lang=c :
     * #define CERT_SERVER_OCSP_RESPONSE_OPEN_PARA_WRITE_FLAG 2
     * }
     */
    public static int CERT_SERVER_OCSP_RESPONSE_OPEN_PARA_WRITE_FLAG() {
        return CERT_SERVER_OCSP_RESPONSE_OPEN_PARA_WRITE_FLAG;
    }
    private static final int CERT_SERVER_OCSP_RESPONSE_ASYNC_FLAG = (int)1L;
    /**
     * {@snippet lang=c :
     * #define CERT_SERVER_OCSP_RESPONSE_ASYNC_FLAG 1
     * }
     */
    public static int CERT_SERVER_OCSP_RESPONSE_ASYNC_FLAG() {
        return CERT_SERVER_OCSP_RESPONSE_ASYNC_FLAG;
    }
    private static final int CERT_SELECT_MAX_PARA = (int)500L;
    /**
     * {@snippet lang=c :
     * #define CERT_SELECT_MAX_PARA 500
     * }
     */
    public static int CERT_SELECT_MAX_PARA() {
        return CERT_SELECT_MAX_PARA;
    }
    private static final int CERT_SELECT_BY_ENHKEY_USAGE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define CERT_SELECT_BY_ENHKEY_USAGE 1
     * }
     */
    public static int CERT_SELECT_BY_ENHKEY_USAGE() {
        return CERT_SELECT_BY_ENHKEY_USAGE;
    }
    private static final int CERT_SELECT_BY_KEY_USAGE = (int)2L;
    /**
     * {@snippet lang=c :
     * #define CERT_SELECT_BY_KEY_USAGE 2
     * }
     */
    public static int CERT_SELECT_BY_KEY_USAGE() {
        return CERT_SELECT_BY_KEY_USAGE;
    }
    private static final int CERT_SELECT_BY_POLICY_OID = (int)3L;
    /**
     * {@snippet lang=c :
     * #define CERT_SELECT_BY_POLICY_OID 3
     * }
     */
    public static int CERT_SELECT_BY_POLICY_OID() {
        return CERT_SELECT_BY_POLICY_OID;
    }
    private static final int CERT_SELECT_BY_PROV_NAME = (int)4L;
    /**
     * {@snippet lang=c :
     * #define CERT_SELECT_BY_PROV_NAME 4
     * }
     */
    public static int CERT_SELECT_BY_PROV_NAME() {
        return CERT_SELECT_BY_PROV_NAME;
    }
    private static final int CERT_SELECT_BY_EXTENSION = (int)5L;
    /**
     * {@snippet lang=c :
     * #define CERT_SELECT_BY_EXTENSION 5
     * }
     */
    public static int CERT_SELECT_BY_EXTENSION() {
        return CERT_SELECT_BY_EXTENSION;
    }
    private static final int CERT_SELECT_BY_SUBJECT_HOST_NAME = (int)6L;
    /**
     * {@snippet lang=c :
     * #define CERT_SELECT_BY_SUBJECT_HOST_NAME 6
     * }
     */
    public static int CERT_SELECT_BY_SUBJECT_HOST_NAME() {
        return CERT_SELECT_BY_SUBJECT_HOST_NAME;
    }
    private static final int CERT_SELECT_BY_ISSUER_ATTR = (int)7L;
    /**
     * {@snippet lang=c :
     * #define CERT_SELECT_BY_ISSUER_ATTR 7
     * }
     */
    public static int CERT_SELECT_BY_ISSUER_ATTR() {
        return CERT_SELECT_BY_ISSUER_ATTR;
    }
    private static final int CERT_SELECT_BY_SUBJECT_ATTR = (int)8L;
    /**
     * {@snippet lang=c :
     * #define CERT_SELECT_BY_SUBJECT_ATTR 8
     * }
     */
    public static int CERT_SELECT_BY_SUBJECT_ATTR() {
        return CERT_SELECT_BY_SUBJECT_ATTR;
    }
    private static final int CERT_SELECT_BY_ISSUER_NAME = (int)9L;
    /**
     * {@snippet lang=c :
     * #define CERT_SELECT_BY_ISSUER_NAME 9
     * }
     */
    public static int CERT_SELECT_BY_ISSUER_NAME() {
        return CERT_SELECT_BY_ISSUER_NAME;
    }
    private static final int CERT_SELECT_BY_PUBLIC_KEY = (int)10L;
    /**
     * {@snippet lang=c :
     * #define CERT_SELECT_BY_PUBLIC_KEY 10
     * }
     */
    public static int CERT_SELECT_BY_PUBLIC_KEY() {
        return CERT_SELECT_BY_PUBLIC_KEY;
    }
    private static final int CERT_SELECT_BY_TLS_SIGNATURES = (int)11L;
    /**
     * {@snippet lang=c :
     * #define CERT_SELECT_BY_TLS_SIGNATURES 11
     * }
     */
    public static int CERT_SELECT_BY_TLS_SIGNATURES() {
        return CERT_SELECT_BY_TLS_SIGNATURES;
    }
    private static final int CERT_SELECT_BY_ISSUER_DISPLAYNAME = (int)12L;
    /**
     * {@snippet lang=c :
     * #define CERT_SELECT_BY_ISSUER_DISPLAYNAME 12
     * }
     */
    public static int CERT_SELECT_BY_ISSUER_DISPLAYNAME() {
        return CERT_SELECT_BY_ISSUER_DISPLAYNAME;
    }
    private static final int CERT_SELECT_BY_FRIENDLYNAME = (int)13L;
    /**
     * {@snippet lang=c :
     * #define CERT_SELECT_BY_FRIENDLYNAME 13
     * }
     */
    public static int CERT_SELECT_BY_FRIENDLYNAME() {
        return CERT_SELECT_BY_FRIENDLYNAME;
    }
    private static final int CERT_SELECT_BY_THUMBPRINT = (int)14L;
    /**
     * {@snippet lang=c :
     * #define CERT_SELECT_BY_THUMBPRINT 14
     * }
     */
    public static int CERT_SELECT_BY_THUMBPRINT() {
        return CERT_SELECT_BY_THUMBPRINT;
    }
    private static final int CERT_SELECT_ALLOW_EXPIRED = (int)1L;
    /**
     * {@snippet lang=c :
     * #define CERT_SELECT_ALLOW_EXPIRED 1
     * }
     */
    public static int CERT_SELECT_ALLOW_EXPIRED() {
        return CERT_SELECT_ALLOW_EXPIRED;
    }
    private static final int CERT_SELECT_TRUSTED_ROOT = (int)2L;
    /**
     * {@snippet lang=c :
     * #define CERT_SELECT_TRUSTED_ROOT 2
     * }
     */
    public static int CERT_SELECT_TRUSTED_ROOT() {
        return CERT_SELECT_TRUSTED_ROOT;
    }
    private static final int CERT_SELECT_DISALLOW_SELFSIGNED = (int)4L;
    /**
     * {@snippet lang=c :
     * #define CERT_SELECT_DISALLOW_SELFSIGNED 4
     * }
     */
    public static int CERT_SELECT_DISALLOW_SELFSIGNED() {
        return CERT_SELECT_DISALLOW_SELFSIGNED;
    }
    private static final int CERT_SELECT_HAS_PRIVATE_KEY = (int)8L;
    /**
     * {@snippet lang=c :
     * #define CERT_SELECT_HAS_PRIVATE_KEY 8
     * }
     */
    public static int CERT_SELECT_HAS_PRIVATE_KEY() {
        return CERT_SELECT_HAS_PRIVATE_KEY;
    }
    private static final int CERT_SELECT_HAS_KEY_FOR_SIGNATURE = (int)16L;
    /**
     * {@snippet lang=c :
     * #define CERT_SELECT_HAS_KEY_FOR_SIGNATURE 16
     * }
     */
    public static int CERT_SELECT_HAS_KEY_FOR_SIGNATURE() {
        return CERT_SELECT_HAS_KEY_FOR_SIGNATURE;
    }
    private static final int CERT_SELECT_HAS_KEY_FOR_KEY_EXCHANGE = (int)32L;
    /**
     * {@snippet lang=c :
     * #define CERT_SELECT_HAS_KEY_FOR_KEY_EXCHANGE 32
     * }
     */
    public static int CERT_SELECT_HAS_KEY_FOR_KEY_EXCHANGE() {
        return CERT_SELECT_HAS_KEY_FOR_KEY_EXCHANGE;
    }
    private static final int CERT_SELECT_HARDWARE_ONLY = (int)64L;
    /**
     * {@snippet lang=c :
     * #define CERT_SELECT_HARDWARE_ONLY 64
     * }
     */
    public static int CERT_SELECT_HARDWARE_ONLY() {
        return CERT_SELECT_HARDWARE_ONLY;
    }
    private static final int CERT_SELECT_ALLOW_DUPLICATES = (int)128L;
    /**
     * {@snippet lang=c :
     * #define CERT_SELECT_ALLOW_DUPLICATES 128
     * }
     */
    public static int CERT_SELECT_ALLOW_DUPLICATES() {
        return CERT_SELECT_ALLOW_DUPLICATES;
    }
    private static final int CERT_SELECT_IGNORE_AUTOSELECT = (int)256L;
    /**
     * {@snippet lang=c :
     * #define CERT_SELECT_IGNORE_AUTOSELECT 256
     * }
     */
    public static int CERT_SELECT_IGNORE_AUTOSELECT() {
        return CERT_SELECT_IGNORE_AUTOSELECT;
    }
    private static final int TIMESTAMP_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define TIMESTAMP_VERSION 1
     * }
     */
    public static int TIMESTAMP_VERSION() {
        return TIMESTAMP_VERSION;
    }
    private static final int TIMESTAMP_STATUS_GRANTED = (int)0L;
    /**
     * {@snippet lang=c :
     * #define TIMESTAMP_STATUS_GRANTED 0
     * }
     */
    public static int TIMESTAMP_STATUS_GRANTED() {
        return TIMESTAMP_STATUS_GRANTED;
    }
    private static final int TIMESTAMP_STATUS_GRANTED_WITH_MODS = (int)1L;
    /**
     * {@snippet lang=c :
     * #define TIMESTAMP_STATUS_GRANTED_WITH_MODS 1
     * }
     */
    public static int TIMESTAMP_STATUS_GRANTED_WITH_MODS() {
        return TIMESTAMP_STATUS_GRANTED_WITH_MODS;
    }
    private static final int TIMESTAMP_STATUS_REJECTED = (int)2L;
    /**
     * {@snippet lang=c :
     * #define TIMESTAMP_STATUS_REJECTED 2
     * }
     */
    public static int TIMESTAMP_STATUS_REJECTED() {
        return TIMESTAMP_STATUS_REJECTED;
    }
    private static final int TIMESTAMP_STATUS_WAITING = (int)3L;
    /**
     * {@snippet lang=c :
     * #define TIMESTAMP_STATUS_WAITING 3
     * }
     */
    public static int TIMESTAMP_STATUS_WAITING() {
        return TIMESTAMP_STATUS_WAITING;
    }
    private static final int TIMESTAMP_STATUS_REVOCATION_WARNING = (int)4L;
    /**
     * {@snippet lang=c :
     * #define TIMESTAMP_STATUS_REVOCATION_WARNING 4
     * }
     */
    public static int TIMESTAMP_STATUS_REVOCATION_WARNING() {
        return TIMESTAMP_STATUS_REVOCATION_WARNING;
    }
    private static final int TIMESTAMP_STATUS_REVOKED = (int)5L;
    /**
     * {@snippet lang=c :
     * #define TIMESTAMP_STATUS_REVOKED 5
     * }
     */
    public static int TIMESTAMP_STATUS_REVOKED() {
        return TIMESTAMP_STATUS_REVOKED;
    }
    private static final int TIMESTAMP_FAILURE_BAD_ALG = (int)0L;
    /**
     * {@snippet lang=c :
     * #define TIMESTAMP_FAILURE_BAD_ALG 0
     * }
     */
    public static int TIMESTAMP_FAILURE_BAD_ALG() {
        return TIMESTAMP_FAILURE_BAD_ALG;
    }
    private static final int TIMESTAMP_FAILURE_BAD_REQUEST = (int)2L;
    /**
     * {@snippet lang=c :
     * #define TIMESTAMP_FAILURE_BAD_REQUEST 2
     * }
     */
    public static int TIMESTAMP_FAILURE_BAD_REQUEST() {
        return TIMESTAMP_FAILURE_BAD_REQUEST;
    }
    private static final int TIMESTAMP_FAILURE_BAD_FORMAT = (int)5L;
    /**
     * {@snippet lang=c :
     * #define TIMESTAMP_FAILURE_BAD_FORMAT 5
     * }
     */
    public static int TIMESTAMP_FAILURE_BAD_FORMAT() {
        return TIMESTAMP_FAILURE_BAD_FORMAT;
    }
    private static final int TIMESTAMP_FAILURE_TIME_NOT_AVAILABLE = (int)14L;
    /**
     * {@snippet lang=c :
     * #define TIMESTAMP_FAILURE_TIME_NOT_AVAILABLE 14
     * }
     */
    public static int TIMESTAMP_FAILURE_TIME_NOT_AVAILABLE() {
        return TIMESTAMP_FAILURE_TIME_NOT_AVAILABLE;
    }
    private static final int TIMESTAMP_FAILURE_POLICY_NOT_SUPPORTED = (int)15L;
    /**
     * {@snippet lang=c :
     * #define TIMESTAMP_FAILURE_POLICY_NOT_SUPPORTED 15
     * }
     */
    public static int TIMESTAMP_FAILURE_POLICY_NOT_SUPPORTED() {
        return TIMESTAMP_FAILURE_POLICY_NOT_SUPPORTED;
    }
    private static final int TIMESTAMP_FAILURE_EXTENSION_NOT_SUPPORTED = (int)16L;
    /**
     * {@snippet lang=c :
     * #define TIMESTAMP_FAILURE_EXTENSION_NOT_SUPPORTED 16
     * }
     */
    public static int TIMESTAMP_FAILURE_EXTENSION_NOT_SUPPORTED() {
        return TIMESTAMP_FAILURE_EXTENSION_NOT_SUPPORTED;
    }
    private static final int TIMESTAMP_FAILURE_INFO_NOT_AVAILABLE = (int)17L;
    /**
     * {@snippet lang=c :
     * #define TIMESTAMP_FAILURE_INFO_NOT_AVAILABLE 17
     * }
     */
    public static int TIMESTAMP_FAILURE_INFO_NOT_AVAILABLE() {
        return TIMESTAMP_FAILURE_INFO_NOT_AVAILABLE;
    }
    private static final int TIMESTAMP_FAILURE_SYSTEM_FAILURE = (int)25L;
    /**
     * {@snippet lang=c :
     * #define TIMESTAMP_FAILURE_SYSTEM_FAILURE 25
     * }
     */
    public static int TIMESTAMP_FAILURE_SYSTEM_FAILURE() {
        return TIMESTAMP_FAILURE_SYSTEM_FAILURE;
    }
    private static final int TIMESTAMP_DONT_HASH_DATA = (int)1L;
    /**
     * {@snippet lang=c :
     * #define TIMESTAMP_DONT_HASH_DATA 1
     * }
     */
    public static int TIMESTAMP_DONT_HASH_DATA() {
        return TIMESTAMP_DONT_HASH_DATA;
    }
    private static final int TIMESTAMP_VERIFY_CONTEXT_SIGNATURE = (int)32L;
    /**
     * {@snippet lang=c :
     * #define TIMESTAMP_VERIFY_CONTEXT_SIGNATURE 32
     * }
     */
    public static int TIMESTAMP_VERIFY_CONTEXT_SIGNATURE() {
        return TIMESTAMP_VERIFY_CONTEXT_SIGNATURE;
    }
    private static final int TIMESTAMP_NO_AUTH_RETRIEVAL = (int)131072L;
    /**
     * {@snippet lang=c :
     * #define TIMESTAMP_NO_AUTH_RETRIEVAL 131072
     * }
     */
    public static int TIMESTAMP_NO_AUTH_RETRIEVAL() {
        return TIMESTAMP_NO_AUTH_RETRIEVAL;
    }
    private static final int CRYPT_OBJECT_LOCATOR_SPN_NAME_TYPE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_OBJECT_LOCATOR_SPN_NAME_TYPE 1
     * }
     */
    public static int CRYPT_OBJECT_LOCATOR_SPN_NAME_TYPE() {
        return CRYPT_OBJECT_LOCATOR_SPN_NAME_TYPE;
    }
    private static final int CRYPT_OBJECT_LOCATOR_LAST_RESERVED_NAME_TYPE = (int)32L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_OBJECT_LOCATOR_LAST_RESERVED_NAME_TYPE 32
     * }
     */
    public static int CRYPT_OBJECT_LOCATOR_LAST_RESERVED_NAME_TYPE() {
        return CRYPT_OBJECT_LOCATOR_LAST_RESERVED_NAME_TYPE;
    }
    private static final int CRYPT_OBJECT_LOCATOR_FIRST_RESERVED_USER_NAME_TYPE = (int)33L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_OBJECT_LOCATOR_FIRST_RESERVED_USER_NAME_TYPE 33
     * }
     */
    public static int CRYPT_OBJECT_LOCATOR_FIRST_RESERVED_USER_NAME_TYPE() {
        return CRYPT_OBJECT_LOCATOR_FIRST_RESERVED_USER_NAME_TYPE;
    }
    private static final int CRYPT_OBJECT_LOCATOR_LAST_RESERVED_USER_NAME_TYPE = (int)65535L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_OBJECT_LOCATOR_LAST_RESERVED_USER_NAME_TYPE 65535
     * }
     */
    public static int CRYPT_OBJECT_LOCATOR_LAST_RESERVED_USER_NAME_TYPE() {
        return CRYPT_OBJECT_LOCATOR_LAST_RESERVED_USER_NAME_TYPE;
    }
    private static final int CRYPT_OBJECT_LOCATOR_RELEASE_SYSTEM_SHUTDOWN = (int)1L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_OBJECT_LOCATOR_RELEASE_SYSTEM_SHUTDOWN 1
     * }
     */
    public static int CRYPT_OBJECT_LOCATOR_RELEASE_SYSTEM_SHUTDOWN() {
        return CRYPT_OBJECT_LOCATOR_RELEASE_SYSTEM_SHUTDOWN;
    }
    private static final int CRYPT_OBJECT_LOCATOR_RELEASE_SERVICE_STOP = (int)2L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_OBJECT_LOCATOR_RELEASE_SERVICE_STOP 2
     * }
     */
    public static int CRYPT_OBJECT_LOCATOR_RELEASE_SERVICE_STOP() {
        return CRYPT_OBJECT_LOCATOR_RELEASE_SERVICE_STOP;
    }
    private static final int CRYPT_OBJECT_LOCATOR_RELEASE_PROCESS_EXIT = (int)3L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_OBJECT_LOCATOR_RELEASE_PROCESS_EXIT 3
     * }
     */
    public static int CRYPT_OBJECT_LOCATOR_RELEASE_PROCESS_EXIT() {
        return CRYPT_OBJECT_LOCATOR_RELEASE_PROCESS_EXIT;
    }
    private static final int CRYPT_OBJECT_LOCATOR_RELEASE_DLL_UNLOAD = (int)4L;
    /**
     * {@snippet lang=c :
     * #define CRYPT_OBJECT_LOCATOR_RELEASE_DLL_UNLOAD 4
     * }
     */
    public static int CRYPT_OBJECT_LOCATOR_RELEASE_DLL_UNLOAD() {
        return CRYPT_OBJECT_LOCATOR_RELEASE_DLL_UNLOAD;
    }
    private static final int CERT_FILE_HASH_USE_TYPE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define CERT_FILE_HASH_USE_TYPE 1
     * }
     */
    public static int CERT_FILE_HASH_USE_TYPE() {
        return CERT_FILE_HASH_USE_TYPE;
    }
    private static final int CERT_TIMESTAMP_HASH_USE_TYPE = (int)2L;
    /**
     * {@snippet lang=c :
     * #define CERT_TIMESTAMP_HASH_USE_TYPE 2
     * }
     */
    public static int CERT_TIMESTAMP_HASH_USE_TYPE() {
        return CERT_TIMESTAMP_HASH_USE_TYPE;
    }
    private static final int dwFORCE_KEY_PROTECTION_DISABLED = (int)0L;
    /**
     * {@snippet lang=c :
     * #define dwFORCE_KEY_PROTECTION_DISABLED 0
     * }
     */
    public static int dwFORCE_KEY_PROTECTION_DISABLED() {
        return dwFORCE_KEY_PROTECTION_DISABLED;
    }
    private static final int dwFORCE_KEY_PROTECTION_USER_SELECT = (int)1L;
    /**
     * {@snippet lang=c :
     * #define dwFORCE_KEY_PROTECTION_USER_SELECT 1
     * }
     */
    public static int dwFORCE_KEY_PROTECTION_USER_SELECT() {
        return dwFORCE_KEY_PROTECTION_USER_SELECT;
    }
    private static final int dwFORCE_KEY_PROTECTION_HIGH = (int)2L;
    /**
     * {@snippet lang=c :
     * #define dwFORCE_KEY_PROTECTION_HIGH 2
     * }
     */
    public static int dwFORCE_KEY_PROTECTION_HIGH() {
        return dwFORCE_KEY_PROTECTION_HIGH;
    }
    private static final int CRYPTPROTECT_PROMPT_ON_UNPROTECT = (int)1L;
    /**
     * {@snippet lang=c :
     * #define CRYPTPROTECT_PROMPT_ON_UNPROTECT 1
     * }
     */
    public static int CRYPTPROTECT_PROMPT_ON_UNPROTECT() {
        return CRYPTPROTECT_PROMPT_ON_UNPROTECT;
    }
    private static final int CRYPTPROTECT_PROMPT_ON_PROTECT = (int)2L;
    /**
     * {@snippet lang=c :
     * #define CRYPTPROTECT_PROMPT_ON_PROTECT 2
     * }
     */
    public static int CRYPTPROTECT_PROMPT_ON_PROTECT() {
        return CRYPTPROTECT_PROMPT_ON_PROTECT;
    }
    private static final int CRYPTPROTECT_PROMPT_RESERVED = (int)4L;
    /**
     * {@snippet lang=c :
     * #define CRYPTPROTECT_PROMPT_RESERVED 4
     * }
     */
    public static int CRYPTPROTECT_PROMPT_RESERVED() {
        return CRYPTPROTECT_PROMPT_RESERVED;
    }
    private static final int CRYPTPROTECT_PROMPT_STRONG = (int)8L;
    /**
     * {@snippet lang=c :
     * #define CRYPTPROTECT_PROMPT_STRONG 8
     * }
     */
    public static int CRYPTPROTECT_PROMPT_STRONG() {
        return CRYPTPROTECT_PROMPT_STRONG;
    }
    private static final int CRYPTPROTECT_PROMPT_REQUIRE_STRONG = (int)16L;
    /**
     * {@snippet lang=c :
     * #define CRYPTPROTECT_PROMPT_REQUIRE_STRONG 16
     * }
     */
    public static int CRYPTPROTECT_PROMPT_REQUIRE_STRONG() {
        return CRYPTPROTECT_PROMPT_REQUIRE_STRONG;
    }
    private static final int CRYPTPROTECT_UI_FORBIDDEN = (int)1L;
    /**
     * {@snippet lang=c :
     * #define CRYPTPROTECT_UI_FORBIDDEN 1
     * }
     */
    public static int CRYPTPROTECT_UI_FORBIDDEN() {
        return CRYPTPROTECT_UI_FORBIDDEN;
    }
    private static final int CRYPTPROTECT_LOCAL_MACHINE = (int)4L;
    /**
     * {@snippet lang=c :
     * #define CRYPTPROTECT_LOCAL_MACHINE 4
     * }
     */
    public static int CRYPTPROTECT_LOCAL_MACHINE() {
        return CRYPTPROTECT_LOCAL_MACHINE;
    }
    private static final int CRYPTPROTECT_CRED_SYNC = (int)8L;
    /**
     * {@snippet lang=c :
     * #define CRYPTPROTECT_CRED_SYNC 8
     * }
     */
    public static int CRYPTPROTECT_CRED_SYNC() {
        return CRYPTPROTECT_CRED_SYNC;
    }
    private static final int CRYPTPROTECT_AUDIT = (int)16L;
    /**
     * {@snippet lang=c :
     * #define CRYPTPROTECT_AUDIT 16
     * }
     */
    public static int CRYPTPROTECT_AUDIT() {
        return CRYPTPROTECT_AUDIT;
    }
    private static final int CRYPTPROTECT_NO_RECOVERY = (int)32L;
    /**
     * {@snippet lang=c :
     * #define CRYPTPROTECT_NO_RECOVERY 32
     * }
     */
    public static int CRYPTPROTECT_NO_RECOVERY() {
        return CRYPTPROTECT_NO_RECOVERY;
    }
    private static final int CRYPTPROTECT_VERIFY_PROTECTION = (int)64L;
    /**
     * {@snippet lang=c :
     * #define CRYPTPROTECT_VERIFY_PROTECTION 64
     * }
     */
    public static int CRYPTPROTECT_VERIFY_PROTECTION() {
        return CRYPTPROTECT_VERIFY_PROTECTION;
    }
    private static final int CRYPTPROTECT_CRED_REGENERATE = (int)128L;
    /**
     * {@snippet lang=c :
     * #define CRYPTPROTECT_CRED_REGENERATE 128
     * }
     */
    public static int CRYPTPROTECT_CRED_REGENERATE() {
        return CRYPTPROTECT_CRED_REGENERATE;
    }
    private static final int CRYPTPROTECT_FIRST_RESERVED_FLAGVAL = (int)268435455L;
    /**
     * {@snippet lang=c :
     * #define CRYPTPROTECT_FIRST_RESERVED_FLAGVAL 268435455
     * }
     */
    public static int CRYPTPROTECT_FIRST_RESERVED_FLAGVAL() {
        return CRYPTPROTECT_FIRST_RESERVED_FLAGVAL;
    }
    private static final int CRYPTPROTECTMEMORY_BLOCK_SIZE = (int)16L;
    /**
     * {@snippet lang=c :
     * #define CRYPTPROTECTMEMORY_BLOCK_SIZE 16
     * }
     */
    public static int CRYPTPROTECTMEMORY_BLOCK_SIZE() {
        return CRYPTPROTECTMEMORY_BLOCK_SIZE;
    }
    private static final int CRYPTPROTECTMEMORY_SAME_PROCESS = (int)0L;
    /**
     * {@snippet lang=c :
     * #define CRYPTPROTECTMEMORY_SAME_PROCESS 0
     * }
     */
    public static int CRYPTPROTECTMEMORY_SAME_PROCESS() {
        return CRYPTPROTECTMEMORY_SAME_PROCESS;
    }
    private static final int CRYPTPROTECTMEMORY_CROSS_PROCESS = (int)1L;
    /**
     * {@snippet lang=c :
     * #define CRYPTPROTECTMEMORY_CROSS_PROCESS 1
     * }
     */
    public static int CRYPTPROTECTMEMORY_CROSS_PROCESS() {
        return CRYPTPROTECTMEMORY_CROSS_PROCESS;
    }
    private static final int CRYPTPROTECTMEMORY_SAME_LOGON = (int)2L;
    /**
     * {@snippet lang=c :
     * #define CRYPTPROTECTMEMORY_SAME_LOGON 2
     * }
     */
    public static int CRYPTPROTECTMEMORY_SAME_LOGON() {
        return CRYPTPROTECTMEMORY_SAME_LOGON;
    }
    private static final int WINEFS_SETUSERKEY_SET_CAPABILITIES = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WINEFS_SETUSERKEY_SET_CAPABILITIES 1
     * }
     */
    public static int WINEFS_SETUSERKEY_SET_CAPABILITIES() {
        return WINEFS_SETUSERKEY_SET_CAPABILITIES;
    }
    private static final int EFS_COMPATIBILITY_VERSION_NCRYPT_PROTECTOR = (int)5L;
    /**
     * {@snippet lang=c :
     * #define EFS_COMPATIBILITY_VERSION_NCRYPT_PROTECTOR 5
     * }
     */
    public static int EFS_COMPATIBILITY_VERSION_NCRYPT_PROTECTOR() {
        return EFS_COMPATIBILITY_VERSION_NCRYPT_PROTECTOR;
    }
    private static final int EFS_COMPATIBILITY_VERSION_PFILE_PROTECTOR = (int)6L;
    /**
     * {@snippet lang=c :
     * #define EFS_COMPATIBILITY_VERSION_PFILE_PROTECTOR 6
     * }
     */
    public static int EFS_COMPATIBILITY_VERSION_PFILE_PROTECTOR() {
        return EFS_COMPATIBILITY_VERSION_PFILE_PROTECTOR;
    }
    private static final int EFS_SUBVER_UNKNOWN = (int)0L;
    /**
     * {@snippet lang=c :
     * #define EFS_SUBVER_UNKNOWN 0
     * }
     */
    public static int EFS_SUBVER_UNKNOWN() {
        return EFS_SUBVER_UNKNOWN;
    }
    private static final int EFS_EFS_SUBVER_EFS_CERT = (int)1L;
    /**
     * {@snippet lang=c :
     * #define EFS_EFS_SUBVER_EFS_CERT 1
     * }
     */
    public static int EFS_EFS_SUBVER_EFS_CERT() {
        return EFS_EFS_SUBVER_EFS_CERT;
    }
    private static final int EFS_PFILE_SUBVER_RMS = (int)2L;
    /**
     * {@snippet lang=c :
     * #define EFS_PFILE_SUBVER_RMS 2
     * }
     */
    public static int EFS_PFILE_SUBVER_RMS() {
        return EFS_PFILE_SUBVER_RMS;
    }
    private static final int EFS_PFILE_SUBVER_APPX = (int)3L;
    /**
     * {@snippet lang=c :
     * #define EFS_PFILE_SUBVER_APPX 3
     * }
     */
    public static int EFS_PFILE_SUBVER_APPX() {
        return EFS_PFILE_SUBVER_APPX;
    }
    private static final int MAX_SID_SIZE = (int)256L;
    /**
     * {@snippet lang=c :
     * #define MAX_SID_SIZE 256
     * }
     */
    public static int MAX_SID_SIZE() {
        return MAX_SID_SIZE;
    }
    private static final int EFS_METADATA_ADD_USER = (int)1L;
    /**
     * {@snippet lang=c :
     * #define EFS_METADATA_ADD_USER 1
     * }
     */
    public static int EFS_METADATA_ADD_USER() {
        return EFS_METADATA_ADD_USER;
    }
    private static final int EFS_METADATA_REMOVE_USER = (int)2L;
    /**
     * {@snippet lang=c :
     * #define EFS_METADATA_REMOVE_USER 2
     * }
     */
    public static int EFS_METADATA_REMOVE_USER() {
        return EFS_METADATA_REMOVE_USER;
    }
    private static final int EFS_METADATA_REPLACE_USER = (int)4L;
    /**
     * {@snippet lang=c :
     * #define EFS_METADATA_REPLACE_USER 4
     * }
     */
    public static int EFS_METADATA_REPLACE_USER() {
        return EFS_METADATA_REPLACE_USER;
    }
    private static final int EFS_METADATA_GENERAL_OP = (int)8L;
    /**
     * {@snippet lang=c :
     * #define EFS_METADATA_GENERAL_OP 8
     * }
     */
    public static int EFS_METADATA_GENERAL_OP() {
        return EFS_METADATA_GENERAL_OP;
    }
    private static final int __REQUIRED_RPCNDR_H_VERSION__ = (int)501L;
    /**
     * {@snippet lang=c :
     * #define __REQUIRED_RPCNDR_H_VERSION__ 501
     * }
     */
    public static int __REQUIRED_RPCNDR_H_VERSION__() {
        return __REQUIRED_RPCNDR_H_VERSION__;
    }
    private static final int __REQUIRED_RPCSAL_H_VERSION__ = (int)100L;
    /**
     * {@snippet lang=c :
     * #define __REQUIRED_RPCSAL_H_VERSION__ 100
     * }
     */
    public static int __REQUIRED_RPCSAL_H_VERSION__() {
        return __REQUIRED_RPCSAL_H_VERSION__;
    }
    private static final int TARGET_IS_NT1012_OR_LATER = (int)1L;
    /**
     * {@snippet lang=c :
     * #define TARGET_IS_NT1012_OR_LATER 1
     * }
     */
    public static int TARGET_IS_NT1012_OR_LATER() {
        return TARGET_IS_NT1012_OR_LATER;
    }
    private static final int TARGET_IS_NT102_OR_LATER = (int)1L;
    /**
     * {@snippet lang=c :
     * #define TARGET_IS_NT102_OR_LATER 1
     * }
     */
    public static int TARGET_IS_NT102_OR_LATER() {
        return TARGET_IS_NT102_OR_LATER;
    }
    private static final int TARGET_IS_NT100_OR_LATER = (int)1L;
    /**
     * {@snippet lang=c :
     * #define TARGET_IS_NT100_OR_LATER 1
     * }
     */
    public static int TARGET_IS_NT100_OR_LATER() {
        return TARGET_IS_NT100_OR_LATER;
    }
    private static final int TARGET_IS_NT63_OR_LATER = (int)1L;
    /**
     * {@snippet lang=c :
     * #define TARGET_IS_NT63_OR_LATER 1
     * }
     */
    public static int TARGET_IS_NT63_OR_LATER() {
        return TARGET_IS_NT63_OR_LATER;
    }
    private static final int TARGET_IS_NT62_OR_LATER = (int)1L;
    /**
     * {@snippet lang=c :
     * #define TARGET_IS_NT62_OR_LATER 1
     * }
     */
    public static int TARGET_IS_NT62_OR_LATER() {
        return TARGET_IS_NT62_OR_LATER;
    }
    private static final int TARGET_IS_NT61_OR_LATER = (int)1L;
    /**
     * {@snippet lang=c :
     * #define TARGET_IS_NT61_OR_LATER 1
     * }
     */
    public static int TARGET_IS_NT61_OR_LATER() {
        return TARGET_IS_NT61_OR_LATER;
    }
    private static final int TARGET_IS_NT60_OR_LATER = (int)1L;
    /**
     * {@snippet lang=c :
     * #define TARGET_IS_NT60_OR_LATER 1
     * }
     */
    public static int TARGET_IS_NT60_OR_LATER() {
        return TARGET_IS_NT60_OR_LATER;
    }
    private static final int TARGET_IS_NT51_OR_LATER = (int)1L;
    /**
     * {@snippet lang=c :
     * #define TARGET_IS_NT51_OR_LATER 1
     * }
     */
    public static int TARGET_IS_NT51_OR_LATER() {
        return TARGET_IS_NT51_OR_LATER;
    }
    private static final int TARGET_IS_NT50_OR_LATER = (int)1L;
    /**
     * {@snippet lang=c :
     * #define TARGET_IS_NT50_OR_LATER 1
     * }
     */
    public static int TARGET_IS_NT50_OR_LATER() {
        return TARGET_IS_NT50_OR_LATER;
    }
    private static final int TARGET_IS_NT40_OR_LATER = (int)1L;
    /**
     * {@snippet lang=c :
     * #define TARGET_IS_NT40_OR_LATER 1
     * }
     */
    public static int TARGET_IS_NT40_OR_LATER() {
        return TARGET_IS_NT40_OR_LATER;
    }
    private static final int TARGET_IS_NT351_OR_WIN95_OR_LATER = (int)1L;
    /**
     * {@snippet lang=c :
     * #define TARGET_IS_NT351_OR_WIN95_OR_LATER 1
     * }
     */
    public static int TARGET_IS_NT351_OR_WIN95_OR_LATER() {
        return TARGET_IS_NT351_OR_WIN95_OR_LATER;
    }
    private static final int cbNDRContext = (int)20L;
    /**
     * {@snippet lang=c :
     * #define cbNDRContext 20
     * }
     */
    public static int cbNDRContext() {
        return cbNDRContext;
    }
    private static final int USER_CALL_IS_ASYNC = (int)256L;
    /**
     * {@snippet lang=c :
     * #define USER_CALL_IS_ASYNC 256
     * }
     */
    public static int USER_CALL_IS_ASYNC() {
        return USER_CALL_IS_ASYNC;
    }
    private static final int USER_CALL_NEW_CORRELATION_DESC = (int)512L;
    /**
     * {@snippet lang=c :
     * #define USER_CALL_NEW_CORRELATION_DESC 512
     * }
     */
    public static int USER_CALL_NEW_CORRELATION_DESC() {
        return USER_CALL_NEW_CORRELATION_DESC;
    }
    private static final int USER_MARSHAL_FC_BYTE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define USER_MARSHAL_FC_BYTE 1
     * }
     */
    public static int USER_MARSHAL_FC_BYTE() {
        return USER_MARSHAL_FC_BYTE;
    }
    private static final int USER_MARSHAL_FC_CHAR = (int)2L;
    /**
     * {@snippet lang=c :
     * #define USER_MARSHAL_FC_CHAR 2
     * }
     */
    public static int USER_MARSHAL_FC_CHAR() {
        return USER_MARSHAL_FC_CHAR;
    }
    private static final int USER_MARSHAL_FC_SMALL = (int)3L;
    /**
     * {@snippet lang=c :
     * #define USER_MARSHAL_FC_SMALL 3
     * }
     */
    public static int USER_MARSHAL_FC_SMALL() {
        return USER_MARSHAL_FC_SMALL;
    }
    private static final int USER_MARSHAL_FC_USMALL = (int)4L;
    /**
     * {@snippet lang=c :
     * #define USER_MARSHAL_FC_USMALL 4
     * }
     */
    public static int USER_MARSHAL_FC_USMALL() {
        return USER_MARSHAL_FC_USMALL;
    }
    private static final int USER_MARSHAL_FC_WCHAR = (int)5L;
    /**
     * {@snippet lang=c :
     * #define USER_MARSHAL_FC_WCHAR 5
     * }
     */
    public static int USER_MARSHAL_FC_WCHAR() {
        return USER_MARSHAL_FC_WCHAR;
    }
    private static final int USER_MARSHAL_FC_SHORT = (int)6L;
    /**
     * {@snippet lang=c :
     * #define USER_MARSHAL_FC_SHORT 6
     * }
     */
    public static int USER_MARSHAL_FC_SHORT() {
        return USER_MARSHAL_FC_SHORT;
    }
    private static final int USER_MARSHAL_FC_USHORT = (int)7L;
    /**
     * {@snippet lang=c :
     * #define USER_MARSHAL_FC_USHORT 7
     * }
     */
    public static int USER_MARSHAL_FC_USHORT() {
        return USER_MARSHAL_FC_USHORT;
    }
    private static final int USER_MARSHAL_FC_LONG = (int)8L;
    /**
     * {@snippet lang=c :
     * #define USER_MARSHAL_FC_LONG 8
     * }
     */
    public static int USER_MARSHAL_FC_LONG() {
        return USER_MARSHAL_FC_LONG;
    }
    private static final int USER_MARSHAL_FC_ULONG = (int)9L;
    /**
     * {@snippet lang=c :
     * #define USER_MARSHAL_FC_ULONG 9
     * }
     */
    public static int USER_MARSHAL_FC_ULONG() {
        return USER_MARSHAL_FC_ULONG;
    }
    private static final int USER_MARSHAL_FC_FLOAT = (int)10L;
    /**
     * {@snippet lang=c :
     * #define USER_MARSHAL_FC_FLOAT 10
     * }
     */
    public static int USER_MARSHAL_FC_FLOAT() {
        return USER_MARSHAL_FC_FLOAT;
    }
    private static final int USER_MARSHAL_FC_HYPER = (int)11L;
    /**
     * {@snippet lang=c :
     * #define USER_MARSHAL_FC_HYPER 11
     * }
     */
    public static int USER_MARSHAL_FC_HYPER() {
        return USER_MARSHAL_FC_HYPER;
    }
    private static final int USER_MARSHAL_FC_DOUBLE = (int)12L;
    /**
     * {@snippet lang=c :
     * #define USER_MARSHAL_FC_DOUBLE 12
     * }
     */
    public static int USER_MARSHAL_FC_DOUBLE() {
        return USER_MARSHAL_FC_DOUBLE;
    }
    private static final int ROTREGFLAGS_ALLOWANYCLIENT = (int)1L;
    /**
     * {@snippet lang=c :
     * #define ROTREGFLAGS_ALLOWANYCLIENT 1
     * }
     */
    public static int ROTREGFLAGS_ALLOWANYCLIENT() {
        return ROTREGFLAGS_ALLOWANYCLIENT;
    }
    private static final int APPIDREGFLAGS_ACTIVATE_IUSERVER_INDESKTOP = (int)1L;
    /**
     * {@snippet lang=c :
     * #define APPIDREGFLAGS_ACTIVATE_IUSERVER_INDESKTOP 1
     * }
     */
    public static int APPIDREGFLAGS_ACTIVATE_IUSERVER_INDESKTOP() {
        return APPIDREGFLAGS_ACTIVATE_IUSERVER_INDESKTOP;
    }
    private static final int APPIDREGFLAGS_SECURE_SERVER_PROCESS_SD_AND_BIND = (int)2L;
    /**
     * {@snippet lang=c :
     * #define APPIDREGFLAGS_SECURE_SERVER_PROCESS_SD_AND_BIND 2
     * }
     */
    public static int APPIDREGFLAGS_SECURE_SERVER_PROCESS_SD_AND_BIND() {
        return APPIDREGFLAGS_SECURE_SERVER_PROCESS_SD_AND_BIND;
    }
    private static final int APPIDREGFLAGS_ISSUE_ACTIVATION_RPC_AT_IDENTIFY = (int)4L;
    /**
     * {@snippet lang=c :
     * #define APPIDREGFLAGS_ISSUE_ACTIVATION_RPC_AT_IDENTIFY 4
     * }
     */
    public static int APPIDREGFLAGS_ISSUE_ACTIVATION_RPC_AT_IDENTIFY() {
        return APPIDREGFLAGS_ISSUE_ACTIVATION_RPC_AT_IDENTIFY;
    }
    private static final int APPIDREGFLAGS_IUSERVER_UNMODIFIED_LOGON_TOKEN = (int)8L;
    /**
     * {@snippet lang=c :
     * #define APPIDREGFLAGS_IUSERVER_UNMODIFIED_LOGON_TOKEN 8
     * }
     */
    public static int APPIDREGFLAGS_IUSERVER_UNMODIFIED_LOGON_TOKEN() {
        return APPIDREGFLAGS_IUSERVER_UNMODIFIED_LOGON_TOKEN;
    }
    private static final int APPIDREGFLAGS_IUSERVER_SELF_SID_IN_LAUNCH_PERMISSION = (int)16L;
    /**
     * {@snippet lang=c :
     * #define APPIDREGFLAGS_IUSERVER_SELF_SID_IN_LAUNCH_PERMISSION 16
     * }
     */
    public static int APPIDREGFLAGS_IUSERVER_SELF_SID_IN_LAUNCH_PERMISSION() {
        return APPIDREGFLAGS_IUSERVER_SELF_SID_IN_LAUNCH_PERMISSION;
    }
    private static final int APPIDREGFLAGS_IUSERVER_ACTIVATE_IN_CLIENT_SESSION_ONLY = (int)32L;
    /**
     * {@snippet lang=c :
     * #define APPIDREGFLAGS_IUSERVER_ACTIVATE_IN_CLIENT_SESSION_ONLY 32
     * }
     */
    public static int APPIDREGFLAGS_IUSERVER_ACTIVATE_IN_CLIENT_SESSION_ONLY() {
        return APPIDREGFLAGS_IUSERVER_ACTIVATE_IN_CLIENT_SESSION_ONLY;
    }
    private static final int APPIDREGFLAGS_RESERVED1 = (int)64L;
    /**
     * {@snippet lang=c :
     * #define APPIDREGFLAGS_RESERVED1 64
     * }
     */
    public static int APPIDREGFLAGS_RESERVED1() {
        return APPIDREGFLAGS_RESERVED1;
    }
    private static final int APPIDREGFLAGS_RESERVED2 = (int)128L;
    /**
     * {@snippet lang=c :
     * #define APPIDREGFLAGS_RESERVED2 128
     * }
     */
    public static int APPIDREGFLAGS_RESERVED2() {
        return APPIDREGFLAGS_RESERVED2;
    }
    private static final int APPIDREGFLAGS_RESERVED3 = (int)256L;
    /**
     * {@snippet lang=c :
     * #define APPIDREGFLAGS_RESERVED3 256
     * }
     */
    public static int APPIDREGFLAGS_RESERVED3() {
        return APPIDREGFLAGS_RESERVED3;
    }
    private static final int APPIDREGFLAGS_RESERVED4 = (int)512L;
    /**
     * {@snippet lang=c :
     * #define APPIDREGFLAGS_RESERVED4 512
     * }
     */
    public static int APPIDREGFLAGS_RESERVED4() {
        return APPIDREGFLAGS_RESERVED4;
    }
    private static final int APPIDREGFLAGS_RESERVED5 = (int)1024L;
    /**
     * {@snippet lang=c :
     * #define APPIDREGFLAGS_RESERVED5 1024
     * }
     */
    public static int APPIDREGFLAGS_RESERVED5() {
        return APPIDREGFLAGS_RESERVED5;
    }
    private static final int APPIDREGFLAGS_AAA_NO_IMPLICIT_ACTIVATE_AS_IU = (int)2048L;
    /**
     * {@snippet lang=c :
     * #define APPIDREGFLAGS_AAA_NO_IMPLICIT_ACTIVATE_AS_IU 2048
     * }
     */
    public static int APPIDREGFLAGS_AAA_NO_IMPLICIT_ACTIVATE_AS_IU() {
        return APPIDREGFLAGS_AAA_NO_IMPLICIT_ACTIVATE_AS_IU;
    }
    private static final int APPIDREGFLAGS_RESERVED7 = (int)4096L;
    /**
     * {@snippet lang=c :
     * #define APPIDREGFLAGS_RESERVED7 4096
     * }
     */
    public static int APPIDREGFLAGS_RESERVED7() {
        return APPIDREGFLAGS_RESERVED7;
    }
    private static final int APPIDREGFLAGS_RESERVED8 = (int)8192L;
    /**
     * {@snippet lang=c :
     * #define APPIDREGFLAGS_RESERVED8 8192
     * }
     */
    public static int APPIDREGFLAGS_RESERVED8() {
        return APPIDREGFLAGS_RESERVED8;
    }
    private static final int APPIDREGFLAGS_RESERVED9 = (int)16384L;
    /**
     * {@snippet lang=c :
     * #define APPIDREGFLAGS_RESERVED9 16384
     * }
     */
    public static int APPIDREGFLAGS_RESERVED9() {
        return APPIDREGFLAGS_RESERVED9;
    }
    private static final int APPIDREGFLAGS_RESERVED10 = (int)32768L;
    /**
     * {@snippet lang=c :
     * #define APPIDREGFLAGS_RESERVED10 32768
     * }
     */
    public static int APPIDREGFLAGS_RESERVED10() {
        return APPIDREGFLAGS_RESERVED10;
    }
    private static final int DCOMSCM_ACTIVATION_USE_ALL_AUTHNSERVICES = (int)1L;
    /**
     * {@snippet lang=c :
     * #define DCOMSCM_ACTIVATION_USE_ALL_AUTHNSERVICES 1
     * }
     */
    public static int DCOMSCM_ACTIVATION_USE_ALL_AUTHNSERVICES() {
        return DCOMSCM_ACTIVATION_USE_ALL_AUTHNSERVICES;
    }
    private static final int DCOMSCM_ACTIVATION_DISALLOW_UNSECURE_CALL = (int)2L;
    /**
     * {@snippet lang=c :
     * #define DCOMSCM_ACTIVATION_DISALLOW_UNSECURE_CALL 2
     * }
     */
    public static int DCOMSCM_ACTIVATION_DISALLOW_UNSECURE_CALL() {
        return DCOMSCM_ACTIVATION_DISALLOW_UNSECURE_CALL;
    }
    private static final int DCOMSCM_RESOLVE_USE_ALL_AUTHNSERVICES = (int)4L;
    /**
     * {@snippet lang=c :
     * #define DCOMSCM_RESOLVE_USE_ALL_AUTHNSERVICES 4
     * }
     */
    public static int DCOMSCM_RESOLVE_USE_ALL_AUTHNSERVICES() {
        return DCOMSCM_RESOLVE_USE_ALL_AUTHNSERVICES;
    }
    private static final int DCOMSCM_RESOLVE_DISALLOW_UNSECURE_CALL = (int)8L;
    /**
     * {@snippet lang=c :
     * #define DCOMSCM_RESOLVE_DISALLOW_UNSECURE_CALL 8
     * }
     */
    public static int DCOMSCM_RESOLVE_DISALLOW_UNSECURE_CALL() {
        return DCOMSCM_RESOLVE_DISALLOW_UNSECURE_CALL;
    }
    private static final int DCOMSCM_PING_USE_MID_AUTHNSERVICE = (int)16L;
    /**
     * {@snippet lang=c :
     * #define DCOMSCM_PING_USE_MID_AUTHNSERVICE 16
     * }
     */
    public static int DCOMSCM_PING_USE_MID_AUTHNSERVICE() {
        return DCOMSCM_PING_USE_MID_AUTHNSERVICE;
    }
    private static final int DCOMSCM_PING_DISALLOW_UNSECURE_CALL = (int)32L;
    /**
     * {@snippet lang=c :
     * #define DCOMSCM_PING_DISALLOW_UNSECURE_CALL 32
     * }
     */
    public static int DCOMSCM_PING_DISALLOW_UNSECURE_CALL() {
        return DCOMSCM_PING_DISALLOW_UNSECURE_CALL;
    }
    private static final int ROTFLAGS_REGISTRATIONKEEPSALIVE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define ROTFLAGS_REGISTRATIONKEEPSALIVE 1
     * }
     */
    public static int ROTFLAGS_REGISTRATIONKEEPSALIVE() {
        return ROTFLAGS_REGISTRATIONKEEPSALIVE;
    }
    private static final int ROTFLAGS_ALLOWANYCLIENT = (int)2L;
    /**
     * {@snippet lang=c :
     * #define ROTFLAGS_ALLOWANYCLIENT 2
     * }
     */
    public static int ROTFLAGS_ALLOWANYCLIENT() {
        return ROTFLAGS_ALLOWANYCLIENT;
    }
    private static final int ROT_COMPARE_MAX = (int)2048L;
    /**
     * {@snippet lang=c :
     * #define ROT_COMPARE_MAX 2048
     * }
     */
    public static int ROT_COMPARE_MAX() {
        return ROT_COMPARE_MAX;
    }
    private static final int FILE_DEVICE_BEEP = (int)1L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_BEEP 1
     * }
     */
    public static int FILE_DEVICE_BEEP() {
        return FILE_DEVICE_BEEP;
    }
    private static final int FILE_DEVICE_CD_ROM = (int)2L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_CD_ROM 2
     * }
     */
    public static int FILE_DEVICE_CD_ROM() {
        return FILE_DEVICE_CD_ROM;
    }
    private static final int FILE_DEVICE_CD_ROM_FILE_SYSTEM = (int)3L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_CD_ROM_FILE_SYSTEM 3
     * }
     */
    public static int FILE_DEVICE_CD_ROM_FILE_SYSTEM() {
        return FILE_DEVICE_CD_ROM_FILE_SYSTEM;
    }
    private static final int FILE_DEVICE_CONTROLLER = (int)4L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_CONTROLLER 4
     * }
     */
    public static int FILE_DEVICE_CONTROLLER() {
        return FILE_DEVICE_CONTROLLER;
    }
    private static final int FILE_DEVICE_DATALINK = (int)5L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_DATALINK 5
     * }
     */
    public static int FILE_DEVICE_DATALINK() {
        return FILE_DEVICE_DATALINK;
    }
    private static final int FILE_DEVICE_DFS = (int)6L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_DFS 6
     * }
     */
    public static int FILE_DEVICE_DFS() {
        return FILE_DEVICE_DFS;
    }
    private static final int FILE_DEVICE_DISK = (int)7L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_DISK 7
     * }
     */
    public static int FILE_DEVICE_DISK() {
        return FILE_DEVICE_DISK;
    }
    private static final int FILE_DEVICE_DISK_FILE_SYSTEM = (int)8L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_DISK_FILE_SYSTEM 8
     * }
     */
    public static int FILE_DEVICE_DISK_FILE_SYSTEM() {
        return FILE_DEVICE_DISK_FILE_SYSTEM;
    }
    private static final int FILE_DEVICE_FILE_SYSTEM = (int)9L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_FILE_SYSTEM 9
     * }
     */
    public static int FILE_DEVICE_FILE_SYSTEM() {
        return FILE_DEVICE_FILE_SYSTEM;
    }
    private static final int FILE_DEVICE_INPORT_PORT = (int)10L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_INPORT_PORT 10
     * }
     */
    public static int FILE_DEVICE_INPORT_PORT() {
        return FILE_DEVICE_INPORT_PORT;
    }
    private static final int FILE_DEVICE_KEYBOARD = (int)11L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_KEYBOARD 11
     * }
     */
    public static int FILE_DEVICE_KEYBOARD() {
        return FILE_DEVICE_KEYBOARD;
    }
    private static final int FILE_DEVICE_MAILSLOT = (int)12L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_MAILSLOT 12
     * }
     */
    public static int FILE_DEVICE_MAILSLOT() {
        return FILE_DEVICE_MAILSLOT;
    }
    private static final int FILE_DEVICE_MIDI_IN = (int)13L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_MIDI_IN 13
     * }
     */
    public static int FILE_DEVICE_MIDI_IN() {
        return FILE_DEVICE_MIDI_IN;
    }
    private static final int FILE_DEVICE_MIDI_OUT = (int)14L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_MIDI_OUT 14
     * }
     */
    public static int FILE_DEVICE_MIDI_OUT() {
        return FILE_DEVICE_MIDI_OUT;
    }
    private static final int FILE_DEVICE_MOUSE = (int)15L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_MOUSE 15
     * }
     */
    public static int FILE_DEVICE_MOUSE() {
        return FILE_DEVICE_MOUSE;
    }
    private static final int FILE_DEVICE_MULTI_UNC_PROVIDER = (int)16L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_MULTI_UNC_PROVIDER 16
     * }
     */
    public static int FILE_DEVICE_MULTI_UNC_PROVIDER() {
        return FILE_DEVICE_MULTI_UNC_PROVIDER;
    }
    private static final int FILE_DEVICE_NAMED_PIPE = (int)17L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_NAMED_PIPE 17
     * }
     */
    public static int FILE_DEVICE_NAMED_PIPE() {
        return FILE_DEVICE_NAMED_PIPE;
    }
    private static final int FILE_DEVICE_NETWORK = (int)18L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_NETWORK 18
     * }
     */
    public static int FILE_DEVICE_NETWORK() {
        return FILE_DEVICE_NETWORK;
    }
    private static final int FILE_DEVICE_NETWORK_BROWSER = (int)19L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_NETWORK_BROWSER 19
     * }
     */
    public static int FILE_DEVICE_NETWORK_BROWSER() {
        return FILE_DEVICE_NETWORK_BROWSER;
    }
    private static final int FILE_DEVICE_NETWORK_FILE_SYSTEM = (int)20L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_NETWORK_FILE_SYSTEM 20
     * }
     */
    public static int FILE_DEVICE_NETWORK_FILE_SYSTEM() {
        return FILE_DEVICE_NETWORK_FILE_SYSTEM;
    }
    private static final int FILE_DEVICE_NULL = (int)21L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_NULL 21
     * }
     */
    public static int FILE_DEVICE_NULL() {
        return FILE_DEVICE_NULL;
    }
    private static final int FILE_DEVICE_PARALLEL_PORT = (int)22L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_PARALLEL_PORT 22
     * }
     */
    public static int FILE_DEVICE_PARALLEL_PORT() {
        return FILE_DEVICE_PARALLEL_PORT;
    }
    private static final int FILE_DEVICE_PHYSICAL_NETCARD = (int)23L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_PHYSICAL_NETCARD 23
     * }
     */
    public static int FILE_DEVICE_PHYSICAL_NETCARD() {
        return FILE_DEVICE_PHYSICAL_NETCARD;
    }
    private static final int FILE_DEVICE_PRINTER = (int)24L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_PRINTER 24
     * }
     */
    public static int FILE_DEVICE_PRINTER() {
        return FILE_DEVICE_PRINTER;
    }
    private static final int FILE_DEVICE_SCANNER = (int)25L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_SCANNER 25
     * }
     */
    public static int FILE_DEVICE_SCANNER() {
        return FILE_DEVICE_SCANNER;
    }
    private static final int FILE_DEVICE_SERIAL_MOUSE_PORT = (int)26L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_SERIAL_MOUSE_PORT 26
     * }
     */
    public static int FILE_DEVICE_SERIAL_MOUSE_PORT() {
        return FILE_DEVICE_SERIAL_MOUSE_PORT;
    }
    private static final int FILE_DEVICE_SERIAL_PORT = (int)27L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_SERIAL_PORT 27
     * }
     */
    public static int FILE_DEVICE_SERIAL_PORT() {
        return FILE_DEVICE_SERIAL_PORT;
    }
    private static final int FILE_DEVICE_SCREEN = (int)28L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_SCREEN 28
     * }
     */
    public static int FILE_DEVICE_SCREEN() {
        return FILE_DEVICE_SCREEN;
    }
    private static final int FILE_DEVICE_SOUND = (int)29L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_SOUND 29
     * }
     */
    public static int FILE_DEVICE_SOUND() {
        return FILE_DEVICE_SOUND;
    }
    private static final int FILE_DEVICE_STREAMS = (int)30L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_STREAMS 30
     * }
     */
    public static int FILE_DEVICE_STREAMS() {
        return FILE_DEVICE_STREAMS;
    }
    private static final int FILE_DEVICE_TAPE = (int)31L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_TAPE 31
     * }
     */
    public static int FILE_DEVICE_TAPE() {
        return FILE_DEVICE_TAPE;
    }
    private static final int FILE_DEVICE_TAPE_FILE_SYSTEM = (int)32L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_TAPE_FILE_SYSTEM 32
     * }
     */
    public static int FILE_DEVICE_TAPE_FILE_SYSTEM() {
        return FILE_DEVICE_TAPE_FILE_SYSTEM;
    }
    private static final int FILE_DEVICE_TRANSPORT = (int)33L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_TRANSPORT 33
     * }
     */
    public static int FILE_DEVICE_TRANSPORT() {
        return FILE_DEVICE_TRANSPORT;
    }
    private static final int FILE_DEVICE_UNKNOWN = (int)34L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_UNKNOWN 34
     * }
     */
    public static int FILE_DEVICE_UNKNOWN() {
        return FILE_DEVICE_UNKNOWN;
    }
    private static final int FILE_DEVICE_VIDEO = (int)35L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_VIDEO 35
     * }
     */
    public static int FILE_DEVICE_VIDEO() {
        return FILE_DEVICE_VIDEO;
    }
    private static final int FILE_DEVICE_VIRTUAL_DISK = (int)36L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_VIRTUAL_DISK 36
     * }
     */
    public static int FILE_DEVICE_VIRTUAL_DISK() {
        return FILE_DEVICE_VIRTUAL_DISK;
    }
    private static final int FILE_DEVICE_WAVE_IN = (int)37L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_WAVE_IN 37
     * }
     */
    public static int FILE_DEVICE_WAVE_IN() {
        return FILE_DEVICE_WAVE_IN;
    }
    private static final int FILE_DEVICE_WAVE_OUT = (int)38L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_WAVE_OUT 38
     * }
     */
    public static int FILE_DEVICE_WAVE_OUT() {
        return FILE_DEVICE_WAVE_OUT;
    }
    private static final int FILE_DEVICE_8042_PORT = (int)39L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_8042_PORT 39
     * }
     */
    public static int FILE_DEVICE_8042_PORT() {
        return FILE_DEVICE_8042_PORT;
    }
    private static final int FILE_DEVICE_NETWORK_REDIRECTOR = (int)40L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_NETWORK_REDIRECTOR 40
     * }
     */
    public static int FILE_DEVICE_NETWORK_REDIRECTOR() {
        return FILE_DEVICE_NETWORK_REDIRECTOR;
    }
    private static final int FILE_DEVICE_BATTERY = (int)41L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_BATTERY 41
     * }
     */
    public static int FILE_DEVICE_BATTERY() {
        return FILE_DEVICE_BATTERY;
    }
    private static final int FILE_DEVICE_BUS_EXTENDER = (int)42L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_BUS_EXTENDER 42
     * }
     */
    public static int FILE_DEVICE_BUS_EXTENDER() {
        return FILE_DEVICE_BUS_EXTENDER;
    }
    private static final int FILE_DEVICE_MODEM = (int)43L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_MODEM 43
     * }
     */
    public static int FILE_DEVICE_MODEM() {
        return FILE_DEVICE_MODEM;
    }
    private static final int FILE_DEVICE_VDM = (int)44L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_VDM 44
     * }
     */
    public static int FILE_DEVICE_VDM() {
        return FILE_DEVICE_VDM;
    }
    private static final int FILE_DEVICE_MASS_STORAGE = (int)45L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_MASS_STORAGE 45
     * }
     */
    public static int FILE_DEVICE_MASS_STORAGE() {
        return FILE_DEVICE_MASS_STORAGE;
    }
    private static final int FILE_DEVICE_SMB = (int)46L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_SMB 46
     * }
     */
    public static int FILE_DEVICE_SMB() {
        return FILE_DEVICE_SMB;
    }
    private static final int FILE_DEVICE_KS = (int)47L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_KS 47
     * }
     */
    public static int FILE_DEVICE_KS() {
        return FILE_DEVICE_KS;
    }
    private static final int FILE_DEVICE_CHANGER = (int)48L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_CHANGER 48
     * }
     */
    public static int FILE_DEVICE_CHANGER() {
        return FILE_DEVICE_CHANGER;
    }
    private static final int FILE_DEVICE_SMARTCARD = (int)49L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_SMARTCARD 49
     * }
     */
    public static int FILE_DEVICE_SMARTCARD() {
        return FILE_DEVICE_SMARTCARD;
    }
    private static final int FILE_DEVICE_ACPI = (int)50L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_ACPI 50
     * }
     */
    public static int FILE_DEVICE_ACPI() {
        return FILE_DEVICE_ACPI;
    }
    private static final int FILE_DEVICE_DVD = (int)51L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_DVD 51
     * }
     */
    public static int FILE_DEVICE_DVD() {
        return FILE_DEVICE_DVD;
    }
    private static final int FILE_DEVICE_FULLSCREEN_VIDEO = (int)52L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_FULLSCREEN_VIDEO 52
     * }
     */
    public static int FILE_DEVICE_FULLSCREEN_VIDEO() {
        return FILE_DEVICE_FULLSCREEN_VIDEO;
    }
    private static final int FILE_DEVICE_DFS_FILE_SYSTEM = (int)53L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_DFS_FILE_SYSTEM 53
     * }
     */
    public static int FILE_DEVICE_DFS_FILE_SYSTEM() {
        return FILE_DEVICE_DFS_FILE_SYSTEM;
    }
    private static final int FILE_DEVICE_DFS_VOLUME = (int)54L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_DFS_VOLUME 54
     * }
     */
    public static int FILE_DEVICE_DFS_VOLUME() {
        return FILE_DEVICE_DFS_VOLUME;
    }
    private static final int FILE_DEVICE_SERENUM = (int)55L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_SERENUM 55
     * }
     */
    public static int FILE_DEVICE_SERENUM() {
        return FILE_DEVICE_SERENUM;
    }
    private static final int FILE_DEVICE_TERMSRV = (int)56L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_TERMSRV 56
     * }
     */
    public static int FILE_DEVICE_TERMSRV() {
        return FILE_DEVICE_TERMSRV;
    }
    private static final int FILE_DEVICE_KSEC = (int)57L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_KSEC 57
     * }
     */
    public static int FILE_DEVICE_KSEC() {
        return FILE_DEVICE_KSEC;
    }
    private static final int FILE_DEVICE_FIPS = (int)58L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_FIPS 58
     * }
     */
    public static int FILE_DEVICE_FIPS() {
        return FILE_DEVICE_FIPS;
    }
    private static final int FILE_DEVICE_INFINIBAND = (int)59L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_INFINIBAND 59
     * }
     */
    public static int FILE_DEVICE_INFINIBAND() {
        return FILE_DEVICE_INFINIBAND;
    }
    private static final int FILE_DEVICE_VMBUS = (int)62L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_VMBUS 62
     * }
     */
    public static int FILE_DEVICE_VMBUS() {
        return FILE_DEVICE_VMBUS;
    }
    private static final int FILE_DEVICE_CRYPT_PROVIDER = (int)63L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_CRYPT_PROVIDER 63
     * }
     */
    public static int FILE_DEVICE_CRYPT_PROVIDER() {
        return FILE_DEVICE_CRYPT_PROVIDER;
    }
    private static final int FILE_DEVICE_WPD = (int)64L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_WPD 64
     * }
     */
    public static int FILE_DEVICE_WPD() {
        return FILE_DEVICE_WPD;
    }
    private static final int FILE_DEVICE_BLUETOOTH = (int)65L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_BLUETOOTH 65
     * }
     */
    public static int FILE_DEVICE_BLUETOOTH() {
        return FILE_DEVICE_BLUETOOTH;
    }
    private static final int FILE_DEVICE_MT_COMPOSITE = (int)66L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_MT_COMPOSITE 66
     * }
     */
    public static int FILE_DEVICE_MT_COMPOSITE() {
        return FILE_DEVICE_MT_COMPOSITE;
    }
    private static final int FILE_DEVICE_MT_TRANSPORT = (int)67L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_MT_TRANSPORT 67
     * }
     */
    public static int FILE_DEVICE_MT_TRANSPORT() {
        return FILE_DEVICE_MT_TRANSPORT;
    }
    private static final int FILE_DEVICE_BIOMETRIC = (int)68L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_BIOMETRIC 68
     * }
     */
    public static int FILE_DEVICE_BIOMETRIC() {
        return FILE_DEVICE_BIOMETRIC;
    }
    private static final int FILE_DEVICE_PMI = (int)69L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_PMI 69
     * }
     */
    public static int FILE_DEVICE_PMI() {
        return FILE_DEVICE_PMI;
    }
    private static final int FILE_DEVICE_EHSTOR = (int)70L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_EHSTOR 70
     * }
     */
    public static int FILE_DEVICE_EHSTOR() {
        return FILE_DEVICE_EHSTOR;
    }
    private static final int FILE_DEVICE_DEVAPI = (int)71L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_DEVAPI 71
     * }
     */
    public static int FILE_DEVICE_DEVAPI() {
        return FILE_DEVICE_DEVAPI;
    }
    private static final int FILE_DEVICE_GPIO = (int)72L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_GPIO 72
     * }
     */
    public static int FILE_DEVICE_GPIO() {
        return FILE_DEVICE_GPIO;
    }
    private static final int FILE_DEVICE_USBEX = (int)73L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_USBEX 73
     * }
     */
    public static int FILE_DEVICE_USBEX() {
        return FILE_DEVICE_USBEX;
    }
    private static final int FILE_DEVICE_CONSOLE = (int)80L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_CONSOLE 80
     * }
     */
    public static int FILE_DEVICE_CONSOLE() {
        return FILE_DEVICE_CONSOLE;
    }
    private static final int FILE_DEVICE_NFP = (int)81L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_NFP 81
     * }
     */
    public static int FILE_DEVICE_NFP() {
        return FILE_DEVICE_NFP;
    }
    private static final int FILE_DEVICE_SYSENV = (int)82L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_SYSENV 82
     * }
     */
    public static int FILE_DEVICE_SYSENV() {
        return FILE_DEVICE_SYSENV;
    }
    private static final int FILE_DEVICE_VIRTUAL_BLOCK = (int)83L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_VIRTUAL_BLOCK 83
     * }
     */
    public static int FILE_DEVICE_VIRTUAL_BLOCK() {
        return FILE_DEVICE_VIRTUAL_BLOCK;
    }
    private static final int FILE_DEVICE_POINT_OF_SERVICE = (int)84L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_POINT_OF_SERVICE 84
     * }
     */
    public static int FILE_DEVICE_POINT_OF_SERVICE() {
        return FILE_DEVICE_POINT_OF_SERVICE;
    }
    private static final int FILE_DEVICE_STORAGE_REPLICATION = (int)85L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_STORAGE_REPLICATION 85
     * }
     */
    public static int FILE_DEVICE_STORAGE_REPLICATION() {
        return FILE_DEVICE_STORAGE_REPLICATION;
    }
    private static final int FILE_DEVICE_TRUST_ENV = (int)86L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_TRUST_ENV 86
     * }
     */
    public static int FILE_DEVICE_TRUST_ENV() {
        return FILE_DEVICE_TRUST_ENV;
    }
    private static final int FILE_DEVICE_UCM = (int)87L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_UCM 87
     * }
     */
    public static int FILE_DEVICE_UCM() {
        return FILE_DEVICE_UCM;
    }
    private static final int FILE_DEVICE_UCMTCPCI = (int)88L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_UCMTCPCI 88
     * }
     */
    public static int FILE_DEVICE_UCMTCPCI() {
        return FILE_DEVICE_UCMTCPCI;
    }
    private static final int FILE_DEVICE_PERSISTENT_MEMORY = (int)89L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_PERSISTENT_MEMORY 89
     * }
     */
    public static int FILE_DEVICE_PERSISTENT_MEMORY() {
        return FILE_DEVICE_PERSISTENT_MEMORY;
    }
    private static final int FILE_DEVICE_NVDIMM = (int)90L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_NVDIMM 90
     * }
     */
    public static int FILE_DEVICE_NVDIMM() {
        return FILE_DEVICE_NVDIMM;
    }
    private static final int FILE_DEVICE_HOLOGRAPHIC = (int)91L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_HOLOGRAPHIC 91
     * }
     */
    public static int FILE_DEVICE_HOLOGRAPHIC() {
        return FILE_DEVICE_HOLOGRAPHIC;
    }
    private static final int FILE_DEVICE_SDFXHCI = (int)92L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_SDFXHCI 92
     * }
     */
    public static int FILE_DEVICE_SDFXHCI() {
        return FILE_DEVICE_SDFXHCI;
    }
    private static final int FILE_DEVICE_UCMUCSI = (int)93L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_UCMUCSI 93
     * }
     */
    public static int FILE_DEVICE_UCMUCSI() {
        return FILE_DEVICE_UCMUCSI;
    }
    private static final int FILE_DEVICE_PRM = (int)94L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_PRM 94
     * }
     */
    public static int FILE_DEVICE_PRM() {
        return FILE_DEVICE_PRM;
    }
    private static final int FILE_DEVICE_EVENT_COLLECTOR = (int)95L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_EVENT_COLLECTOR 95
     * }
     */
    public static int FILE_DEVICE_EVENT_COLLECTOR() {
        return FILE_DEVICE_EVENT_COLLECTOR;
    }
    private static final int FILE_DEVICE_USB4 = (int)96L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_USB4 96
     * }
     */
    public static int FILE_DEVICE_USB4() {
        return FILE_DEVICE_USB4;
    }
    private static final int FILE_DEVICE_SOUNDWIRE = (int)97L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_SOUNDWIRE 97
     * }
     */
    public static int FILE_DEVICE_SOUNDWIRE() {
        return FILE_DEVICE_SOUNDWIRE;
    }
    private static final int FILE_DEVICE_FABRIC_NVME = (int)98L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_FABRIC_NVME 98
     * }
     */
    public static int FILE_DEVICE_FABRIC_NVME() {
        return FILE_DEVICE_FABRIC_NVME;
    }
    private static final int FILE_DEVICE_SVM = (int)99L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_SVM 99
     * }
     */
    public static int FILE_DEVICE_SVM() {
        return FILE_DEVICE_SVM;
    }
    private static final int FILE_DEVICE_HARDWARE_ACCELERATOR = (int)100L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_HARDWARE_ACCELERATOR 100
     * }
     */
    public static int FILE_DEVICE_HARDWARE_ACCELERATOR() {
        return FILE_DEVICE_HARDWARE_ACCELERATOR;
    }
    private static final int FILE_DEVICE_I3C = (int)101L;
    /**
     * {@snippet lang=c :
     * #define FILE_DEVICE_I3C 101
     * }
     */
    public static int FILE_DEVICE_I3C() {
        return FILE_DEVICE_I3C;
    }
    private static final int METHOD_BUFFERED = (int)0L;
    /**
     * {@snippet lang=c :
     * #define METHOD_BUFFERED 0
     * }
     */
    public static int METHOD_BUFFERED() {
        return METHOD_BUFFERED;
    }
    private static final int METHOD_IN_DIRECT = (int)1L;
    /**
     * {@snippet lang=c :
     * #define METHOD_IN_DIRECT 1
     * }
     */
    public static int METHOD_IN_DIRECT() {
        return METHOD_IN_DIRECT;
    }
    private static final int METHOD_OUT_DIRECT = (int)2L;
    /**
     * {@snippet lang=c :
     * #define METHOD_OUT_DIRECT 2
     * }
     */
    public static int METHOD_OUT_DIRECT() {
        return METHOD_OUT_DIRECT;
    }
    private static final int METHOD_NEITHER = (int)3L;
    /**
     * {@snippet lang=c :
     * #define METHOD_NEITHER 3
     * }
     */
    public static int METHOD_NEITHER() {
        return METHOD_NEITHER;
    }
    private static final int FILE_ANY_ACCESS = (int)0L;
    /**
     * {@snippet lang=c :
     * #define FILE_ANY_ACCESS 0
     * }
     */
    public static int FILE_ANY_ACCESS() {
        return FILE_ANY_ACCESS;
    }
    private static final int STORAGE_FEATURE_SUPPORT_V1 = (int)1L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_FEATURE_SUPPORT_V1 1
     * }
     */
    public static int STORAGE_FEATURE_SUPPORT_V1() {
        return STORAGE_FEATURE_SUPPORT_V1;
    }
    private static final int STORAGE_DEVICE_FLAGS_RANDOM_DEVICEGUID_REASON_CONFLICT = (int)1L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_DEVICE_FLAGS_RANDOM_DEVICEGUID_REASON_CONFLICT 1
     * }
     */
    public static int STORAGE_DEVICE_FLAGS_RANDOM_DEVICEGUID_REASON_CONFLICT() {
        return STORAGE_DEVICE_FLAGS_RANDOM_DEVICEGUID_REASON_CONFLICT;
    }
    private static final int STORAGE_DEVICE_FLAGS_RANDOM_DEVICEGUID_REASON_NOHWID = (int)2L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_DEVICE_FLAGS_RANDOM_DEVICEGUID_REASON_NOHWID 2
     * }
     */
    public static int STORAGE_DEVICE_FLAGS_RANDOM_DEVICEGUID_REASON_NOHWID() {
        return STORAGE_DEVICE_FLAGS_RANDOM_DEVICEGUID_REASON_NOHWID;
    }
    private static final int STORAGE_DEVICE_FLAGS_PAGE_83_DEVICEGUID = (int)4L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_DEVICE_FLAGS_PAGE_83_DEVICEGUID 4
     * }
     */
    public static int STORAGE_DEVICE_FLAGS_PAGE_83_DEVICEGUID() {
        return STORAGE_DEVICE_FLAGS_PAGE_83_DEVICEGUID;
    }
    private static final int RECOVERED_WRITES_VALID = (int)1L;
    /**
     * {@snippet lang=c :
     * #define RECOVERED_WRITES_VALID 1
     * }
     */
    public static int RECOVERED_WRITES_VALID() {
        return RECOVERED_WRITES_VALID;
    }
    private static final int UNRECOVERED_WRITES_VALID = (int)2L;
    /**
     * {@snippet lang=c :
     * #define UNRECOVERED_WRITES_VALID 2
     * }
     */
    public static int UNRECOVERED_WRITES_VALID() {
        return UNRECOVERED_WRITES_VALID;
    }
    private static final int RECOVERED_READS_VALID = (int)4L;
    /**
     * {@snippet lang=c :
     * #define RECOVERED_READS_VALID 4
     * }
     */
    public static int RECOVERED_READS_VALID() {
        return RECOVERED_READS_VALID;
    }
    private static final int UNRECOVERED_READS_VALID = (int)8L;
    /**
     * {@snippet lang=c :
     * #define UNRECOVERED_READS_VALID 8
     * }
     */
    public static int UNRECOVERED_READS_VALID() {
        return UNRECOVERED_READS_VALID;
    }
    private static final int WRITE_COMPRESSION_INFO_VALID = (int)16L;
    /**
     * {@snippet lang=c :
     * #define WRITE_COMPRESSION_INFO_VALID 16
     * }
     */
    public static int WRITE_COMPRESSION_INFO_VALID() {
        return WRITE_COMPRESSION_INFO_VALID;
    }
    private static final int READ_COMPRESSION_INFO_VALID = (int)32L;
    /**
     * {@snippet lang=c :
     * #define READ_COMPRESSION_INFO_VALID 32
     * }
     */
    public static int READ_COMPRESSION_INFO_VALID() {
        return READ_COMPRESSION_INFO_VALID;
    }
    private static final int MEDIA_ERASEABLE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define MEDIA_ERASEABLE 1
     * }
     */
    public static int MEDIA_ERASEABLE() {
        return MEDIA_ERASEABLE;
    }
    private static final int MEDIA_WRITE_ONCE = (int)2L;
    /**
     * {@snippet lang=c :
     * #define MEDIA_WRITE_ONCE 2
     * }
     */
    public static int MEDIA_WRITE_ONCE() {
        return MEDIA_WRITE_ONCE;
    }
    private static final int MEDIA_READ_ONLY = (int)4L;
    /**
     * {@snippet lang=c :
     * #define MEDIA_READ_ONLY 4
     * }
     */
    public static int MEDIA_READ_ONLY() {
        return MEDIA_READ_ONLY;
    }
    private static final int MEDIA_READ_WRITE = (int)8L;
    /**
     * {@snippet lang=c :
     * #define MEDIA_READ_WRITE 8
     * }
     */
    public static int MEDIA_READ_WRITE() {
        return MEDIA_READ_WRITE;
    }
    private static final int MEDIA_WRITE_PROTECTED = (int)256L;
    /**
     * {@snippet lang=c :
     * #define MEDIA_WRITE_PROTECTED 256
     * }
     */
    public static int MEDIA_WRITE_PROTECTED() {
        return MEDIA_WRITE_PROTECTED;
    }
    private static final int STORAGE_FAILURE_PREDICTION_CONFIG_V1 = (int)1L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_FAILURE_PREDICTION_CONFIG_V1 1
     * }
     */
    public static int STORAGE_FAILURE_PREDICTION_CONFIG_V1() {
        return STORAGE_FAILURE_PREDICTION_CONFIG_V1;
    }
    private static final int SRB_TYPE_SCSI_REQUEST_BLOCK = (int)0L;
    /**
     * {@snippet lang=c :
     * #define SRB_TYPE_SCSI_REQUEST_BLOCK 0
     * }
     */
    public static int SRB_TYPE_SCSI_REQUEST_BLOCK() {
        return SRB_TYPE_SCSI_REQUEST_BLOCK;
    }
    private static final int SRB_TYPE_STORAGE_REQUEST_BLOCK = (int)1L;
    /**
     * {@snippet lang=c :
     * #define SRB_TYPE_STORAGE_REQUEST_BLOCK 1
     * }
     */
    public static int SRB_TYPE_STORAGE_REQUEST_BLOCK() {
        return SRB_TYPE_STORAGE_REQUEST_BLOCK;
    }
    private static final int STORAGE_ADDRESS_TYPE_BTL8 = (int)0L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_ADDRESS_TYPE_BTL8 0
     * }
     */
    public static int STORAGE_ADDRESS_TYPE_BTL8() {
        return STORAGE_ADDRESS_TYPE_BTL8;
    }
    private static final int STORAGE_RPMB_DESCRIPTOR_VERSION_1 = (int)1L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_RPMB_DESCRIPTOR_VERSION_1 1
     * }
     */
    public static int STORAGE_RPMB_DESCRIPTOR_VERSION_1() {
        return STORAGE_RPMB_DESCRIPTOR_VERSION_1;
    }
    private static final int STORAGE_RPMB_MINIMUM_RELIABLE_WRITE_SIZE = (int)512L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_RPMB_MINIMUM_RELIABLE_WRITE_SIZE 512
     * }
     */
    public static int STORAGE_RPMB_MINIMUM_RELIABLE_WRITE_SIZE() {
        return STORAGE_RPMB_MINIMUM_RELIABLE_WRITE_SIZE;
    }
    private static final int STORAGE_CRYPTO_CAPABILITY_VERSION_1 = (int)1L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_CRYPTO_CAPABILITY_VERSION_1 1
     * }
     */
    public static int STORAGE_CRYPTO_CAPABILITY_VERSION_1() {
        return STORAGE_CRYPTO_CAPABILITY_VERSION_1;
    }
    private static final int STORAGE_CRYPTO_CAPABILITY_VERSION_2 = (int)2L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_CRYPTO_CAPABILITY_VERSION_2 2
     * }
     */
    public static int STORAGE_CRYPTO_CAPABILITY_VERSION_2() {
        return STORAGE_CRYPTO_CAPABILITY_VERSION_2;
    }
    private static final int STORAGE_CRYPTO_DESCRIPTOR_VERSION_1 = (int)1L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_CRYPTO_DESCRIPTOR_VERSION_1 1
     * }
     */
    public static int STORAGE_CRYPTO_DESCRIPTOR_VERSION_1() {
        return STORAGE_CRYPTO_DESCRIPTOR_VERSION_1;
    }
    private static final int STORAGE_CRYPTO_DESCRIPTOR_VERSION_2 = (int)2L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_CRYPTO_DESCRIPTOR_VERSION_2 2
     * }
     */
    public static int STORAGE_CRYPTO_DESCRIPTOR_VERSION_2() {
        return STORAGE_CRYPTO_DESCRIPTOR_VERSION_2;
    }
    private static final int STORAGE_HW_CRYPTO_CAPABILITY_VERSION_1 = (int)1L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_HW_CRYPTO_CAPABILITY_VERSION_1 1
     * }
     */
    public static int STORAGE_HW_CRYPTO_CAPABILITY_VERSION_1() {
        return STORAGE_HW_CRYPTO_CAPABILITY_VERSION_1;
    }
    private static final int STORAGE_HW_CRYPTO_DESCRIPTOR_VERSION_1 = (int)1L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_HW_CRYPTO_DESCRIPTOR_VERSION_1 1
     * }
     */
    public static int STORAGE_HW_CRYPTO_DESCRIPTOR_VERSION_1() {
        return STORAGE_HW_CRYPTO_DESCRIPTOR_VERSION_1;
    }
    private static final int STORAGE_PROTOCOL_DATA_DESCRIPTOR_EXT_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_PROTOCOL_DATA_DESCRIPTOR_EXT_VERSION 1
     * }
     */
    public static int STORAGE_PROTOCOL_DATA_DESCRIPTOR_EXT_VERSION() {
        return STORAGE_PROTOCOL_DATA_DESCRIPTOR_EXT_VERSION;
    }
    private static final int STORAGE_TEMPERATURE_VALUE_NOT_REPORTED = (int)32768L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_TEMPERATURE_VALUE_NOT_REPORTED 32768
     * }
     */
    public static int STORAGE_TEMPERATURE_VALUE_NOT_REPORTED() {
        return STORAGE_TEMPERATURE_VALUE_NOT_REPORTED;
    }
    private static final int STORAGE_TEMPERATURE_THRESHOLD_FLAG_ADAPTER_REQUEST = (int)1L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_TEMPERATURE_THRESHOLD_FLAG_ADAPTER_REQUEST 1
     * }
     */
    public static int STORAGE_TEMPERATURE_THRESHOLD_FLAG_ADAPTER_REQUEST() {
        return STORAGE_TEMPERATURE_THRESHOLD_FLAG_ADAPTER_REQUEST;
    }
    private static final int STORAGE_COMPONENT_ROLE_CACHE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_COMPONENT_ROLE_CACHE 1
     * }
     */
    public static int STORAGE_COMPONENT_ROLE_CACHE() {
        return STORAGE_COMPONENT_ROLE_CACHE;
    }
    private static final int STORAGE_COMPONENT_ROLE_TIERING = (int)2L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_COMPONENT_ROLE_TIERING 2
     * }
     */
    public static int STORAGE_COMPONENT_ROLE_TIERING() {
        return STORAGE_COMPONENT_ROLE_TIERING;
    }
    private static final int STORAGE_COMPONENT_ROLE_DATA = (int)4L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_COMPONENT_ROLE_DATA 4
     * }
     */
    public static int STORAGE_COMPONENT_ROLE_DATA() {
        return STORAGE_COMPONENT_ROLE_DATA;
    }
    private static final int STORAGE_ATTRIBUTE_BYTE_ADDRESSABLE_IO = (int)1L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_ATTRIBUTE_BYTE_ADDRESSABLE_IO 1
     * }
     */
    public static int STORAGE_ATTRIBUTE_BYTE_ADDRESSABLE_IO() {
        return STORAGE_ATTRIBUTE_BYTE_ADDRESSABLE_IO;
    }
    private static final int STORAGE_ATTRIBUTE_BLOCK_IO = (int)2L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_ATTRIBUTE_BLOCK_IO 2
     * }
     */
    public static int STORAGE_ATTRIBUTE_BLOCK_IO() {
        return STORAGE_ATTRIBUTE_BLOCK_IO;
    }
    private static final int STORAGE_ATTRIBUTE_DYNAMIC_PERSISTENCE = (int)4L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_ATTRIBUTE_DYNAMIC_PERSISTENCE 4
     * }
     */
    public static int STORAGE_ATTRIBUTE_DYNAMIC_PERSISTENCE() {
        return STORAGE_ATTRIBUTE_DYNAMIC_PERSISTENCE;
    }
    private static final int STORAGE_ATTRIBUTE_VOLATILE = (int)8L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_ATTRIBUTE_VOLATILE 8
     * }
     */
    public static int STORAGE_ATTRIBUTE_VOLATILE() {
        return STORAGE_ATTRIBUTE_VOLATILE;
    }
    private static final int STORAGE_ATTRIBUTE_ASYNC_EVENT_NOTIFICATION = (int)16L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_ATTRIBUTE_ASYNC_EVENT_NOTIFICATION 16
     * }
     */
    public static int STORAGE_ATTRIBUTE_ASYNC_EVENT_NOTIFICATION() {
        return STORAGE_ATTRIBUTE_ASYNC_EVENT_NOTIFICATION;
    }
    private static final int STORAGE_ATTRIBUTE_PERF_SIZE_INDEPENDENT = (int)32L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_ATTRIBUTE_PERF_SIZE_INDEPENDENT 32
     * }
     */
    public static int STORAGE_ATTRIBUTE_PERF_SIZE_INDEPENDENT() {
        return STORAGE_ATTRIBUTE_PERF_SIZE_INDEPENDENT;
    }
    private static final int STORAGE_DEVICE_MAX_OPERATIONAL_STATUS = (int)16L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_DEVICE_MAX_OPERATIONAL_STATUS 16
     * }
     */
    public static int STORAGE_DEVICE_MAX_OPERATIONAL_STATUS() {
        return STORAGE_DEVICE_MAX_OPERATIONAL_STATUS;
    }
    private static final int DEVICE_DSM_FLAG_ENTIRE_DATA_SET_RANGE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define DEVICE_DSM_FLAG_ENTIRE_DATA_SET_RANGE 1
     * }
     */
    public static int DEVICE_DSM_FLAG_ENTIRE_DATA_SET_RANGE() {
        return DEVICE_DSM_FLAG_ENTIRE_DATA_SET_RANGE;
    }
    private static final int DEVICE_DSM_FLAG_TRIM_BYPASS_RZAT = (int)1073741824L;
    /**
     * {@snippet lang=c :
     * #define DEVICE_DSM_FLAG_TRIM_BYPASS_RZAT 1073741824
     * }
     */
    public static int DEVICE_DSM_FLAG_TRIM_BYPASS_RZAT() {
        return DEVICE_DSM_FLAG_TRIM_BYPASS_RZAT;
    }
    private static final int DEVICE_DSM_NOTIFY_FLAG_BEGIN = (int)1L;
    /**
     * {@snippet lang=c :
     * #define DEVICE_DSM_NOTIFY_FLAG_BEGIN 1
     * }
     */
    public static int DEVICE_DSM_NOTIFY_FLAG_BEGIN() {
        return DEVICE_DSM_NOTIFY_FLAG_BEGIN;
    }
    private static final int DEVICE_DSM_NOTIFY_FLAG_END = (int)2L;
    /**
     * {@snippet lang=c :
     * #define DEVICE_DSM_NOTIFY_FLAG_END 2
     * }
     */
    public static int DEVICE_DSM_NOTIFY_FLAG_END() {
        return DEVICE_DSM_NOTIFY_FLAG_END;
    }
    private static final int STORAGE_OFFLOAD_MAX_TOKEN_LENGTH = (int)512L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_OFFLOAD_MAX_TOKEN_LENGTH 512
     * }
     */
    public static int STORAGE_OFFLOAD_MAX_TOKEN_LENGTH() {
        return STORAGE_OFFLOAD_MAX_TOKEN_LENGTH;
    }
    private static final int STORAGE_OFFLOAD_TOKEN_ID_LENGTH = (int)504L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_OFFLOAD_TOKEN_ID_LENGTH 504
     * }
     */
    public static int STORAGE_OFFLOAD_TOKEN_ID_LENGTH() {
        return STORAGE_OFFLOAD_TOKEN_ID_LENGTH;
    }
    private static final int STORAGE_OFFLOAD_READ_RANGE_TRUNCATED = (int)1L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_OFFLOAD_READ_RANGE_TRUNCATED 1
     * }
     */
    public static int STORAGE_OFFLOAD_READ_RANGE_TRUNCATED() {
        return STORAGE_OFFLOAD_READ_RANGE_TRUNCATED;
    }
    private static final int STORAGE_OFFLOAD_WRITE_RANGE_TRUNCATED = (int)1L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_OFFLOAD_WRITE_RANGE_TRUNCATED 1
     * }
     */
    public static int STORAGE_OFFLOAD_WRITE_RANGE_TRUNCATED() {
        return STORAGE_OFFLOAD_WRITE_RANGE_TRUNCATED;
    }
    private static final int STORAGE_OFFLOAD_TOKEN_INVALID = (int)2L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_OFFLOAD_TOKEN_INVALID 2
     * }
     */
    public static int STORAGE_OFFLOAD_TOKEN_INVALID() {
        return STORAGE_OFFLOAD_TOKEN_INVALID;
    }
    private static final int DEVICE_DSM_FLAG_ALLOCATION_CONSOLIDATEABLE_ONLY = (int)1073741824L;
    /**
     * {@snippet lang=c :
     * #define DEVICE_DSM_FLAG_ALLOCATION_CONSOLIDATEABLE_ONLY 1073741824
     * }
     */
    public static int DEVICE_DSM_FLAG_ALLOCATION_CONSOLIDATEABLE_ONLY() {
        return DEVICE_DSM_FLAG_ALLOCATION_CONSOLIDATEABLE_ONLY;
    }
    private static final int DEVICE_DSM_PARAMETERS_V1 = (int)1L;
    /**
     * {@snippet lang=c :
     * #define DEVICE_DSM_PARAMETERS_V1 1
     * }
     */
    public static int DEVICE_DSM_PARAMETERS_V1() {
        return DEVICE_DSM_PARAMETERS_V1;
    }
    private static final int DEVICE_DSM_FLAG_REPAIR_INPUT_TOPOLOGY_ID_PRESENT = (int)1073741824L;
    /**
     * {@snippet lang=c :
     * #define DEVICE_DSM_FLAG_REPAIR_INPUT_TOPOLOGY_ID_PRESENT 1073741824
     * }
     */
    public static int DEVICE_DSM_FLAG_REPAIR_INPUT_TOPOLOGY_ID_PRESENT() {
        return DEVICE_DSM_FLAG_REPAIR_INPUT_TOPOLOGY_ID_PRESENT;
    }
    private static final int DEVICE_DSM_FLAG_REPAIR_OUTPUT_PARITY_EXTENT = (int)536870912L;
    /**
     * {@snippet lang=c :
     * #define DEVICE_DSM_FLAG_REPAIR_OUTPUT_PARITY_EXTENT 536870912
     * }
     */
    public static int DEVICE_DSM_FLAG_REPAIR_OUTPUT_PARITY_EXTENT() {
        return DEVICE_DSM_FLAG_REPAIR_OUTPUT_PARITY_EXTENT;
    }
    private static final int DEVICE_DSM_FLAG_SCRUB_SKIP_IN_SYNC = (int)268435456L;
    /**
     * {@snippet lang=c :
     * #define DEVICE_DSM_FLAG_SCRUB_SKIP_IN_SYNC 268435456
     * }
     */
    public static int DEVICE_DSM_FLAG_SCRUB_SKIP_IN_SYNC() {
        return DEVICE_DSM_FLAG_SCRUB_SKIP_IN_SYNC;
    }
    private static final int DEVICE_DSM_FLAG_SCRUB_OUTPUT_PARITY_EXTENT = (int)536870912L;
    /**
     * {@snippet lang=c :
     * #define DEVICE_DSM_FLAG_SCRUB_OUTPUT_PARITY_EXTENT 536870912
     * }
     */
    public static int DEVICE_DSM_FLAG_SCRUB_OUTPUT_PARITY_EXTENT() {
        return DEVICE_DSM_FLAG_SCRUB_OUTPUT_PARITY_EXTENT;
    }
    private static final int DEVICE_DSM_FLAG_PHYSICAL_ADDRESSES_OMIT_TOTAL_RANGES = (int)268435456L;
    /**
     * {@snippet lang=c :
     * #define DEVICE_DSM_FLAG_PHYSICAL_ADDRESSES_OMIT_TOTAL_RANGES 268435456
     * }
     */
    public static int DEVICE_DSM_FLAG_PHYSICAL_ADDRESSES_OMIT_TOTAL_RANGES() {
        return DEVICE_DSM_FLAG_PHYSICAL_ADDRESSES_OMIT_TOTAL_RANGES;
    }
    private static final int DEVICE_DSM_PHYSICAL_ADDRESSES_OUTPUT_V1 = (int)1L;
    /**
     * {@snippet lang=c :
     * #define DEVICE_DSM_PHYSICAL_ADDRESSES_OUTPUT_V1 1
     * }
     */
    public static int DEVICE_DSM_PHYSICAL_ADDRESSES_OUTPUT_V1() {
        return DEVICE_DSM_PHYSICAL_ADDRESSES_OUTPUT_V1;
    }
    private static final int DEVICE_STORAGE_NO_ERRORS = (int)1L;
    /**
     * {@snippet lang=c :
     * #define DEVICE_STORAGE_NO_ERRORS 1
     * }
     */
    public static int DEVICE_STORAGE_NO_ERRORS() {
        return DEVICE_STORAGE_NO_ERRORS;
    }
    private static final int DEVICE_DSM_RANGE_ERROR_OUTPUT_V1 = (int)1L;
    /**
     * {@snippet lang=c :
     * #define DEVICE_DSM_RANGE_ERROR_OUTPUT_V1 1
     * }
     */
    public static int DEVICE_DSM_RANGE_ERROR_OUTPUT_V1() {
        return DEVICE_DSM_RANGE_ERROR_OUTPUT_V1;
    }
    private static final int IOCTL_STORAGE_BC_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define IOCTL_STORAGE_BC_VERSION 1
     * }
     */
    public static int IOCTL_STORAGE_BC_VERSION() {
        return IOCTL_STORAGE_BC_VERSION;
    }
    private static final int STORAGE_PRIORITY_HINT_SUPPORTED = (int)1L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_PRIORITY_HINT_SUPPORTED 1
     * }
     */
    public static int STORAGE_PRIORITY_HINT_SUPPORTED() {
        return STORAGE_PRIORITY_HINT_SUPPORTED;
    }
    private static final int STORAGE_DIAGNOSTIC_FLAG_ADAPTER_REQUEST = (int)1L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_DIAGNOSTIC_FLAG_ADAPTER_REQUEST 1
     * }
     */
    public static int STORAGE_DIAGNOSTIC_FLAG_ADAPTER_REQUEST() {
        return STORAGE_DIAGNOSTIC_FLAG_ADAPTER_REQUEST;
    }
    private static final int ERROR_HISTORY_DIRECTORY_ENTRY_DEFAULT_COUNT = (int)8L;
    /**
     * {@snippet lang=c :
     * #define ERROR_HISTORY_DIRECTORY_ENTRY_DEFAULT_COUNT 8
     * }
     */
    public static int ERROR_HISTORY_DIRECTORY_ENTRY_DEFAULT_COUNT() {
        return ERROR_HISTORY_DIRECTORY_ENTRY_DEFAULT_COUNT;
    }
    private static final int DEVICEDUMP_STRUCTURE_VERSION_V1 = (int)1L;
    /**
     * {@snippet lang=c :
     * #define DEVICEDUMP_STRUCTURE_VERSION_V1 1
     * }
     */
    public static int DEVICEDUMP_STRUCTURE_VERSION_V1() {
        return DEVICEDUMP_STRUCTURE_VERSION_V1;
    }
    private static final int DEVICEDUMP_MAX_IDSTRING = (int)32L;
    /**
     * {@snippet lang=c :
     * #define DEVICEDUMP_MAX_IDSTRING 32
     * }
     */
    public static int DEVICEDUMP_MAX_IDSTRING() {
        return DEVICEDUMP_MAX_IDSTRING;
    }
    private static final int MAX_FW_BUCKET_ID_LENGTH = (int)132L;
    /**
     * {@snippet lang=c :
     * #define MAX_FW_BUCKET_ID_LENGTH 132
     * }
     */
    public static int MAX_FW_BUCKET_ID_LENGTH() {
        return MAX_FW_BUCKET_ID_LENGTH;
    }
    private static final int DDUMP_FLAG_DATA_READ_FROM_DEVICE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define DDUMP_FLAG_DATA_READ_FROM_DEVICE 1
     * }
     */
    public static int DDUMP_FLAG_DATA_READ_FROM_DEVICE() {
        return DDUMP_FLAG_DATA_READ_FROM_DEVICE;
    }
    private static final int FW_ISSUEID_NO_ISSUE = (int)0L;
    /**
     * {@snippet lang=c :
     * #define FW_ISSUEID_NO_ISSUE 0
     * }
     */
    public static int FW_ISSUEID_NO_ISSUE() {
        return FW_ISSUEID_NO_ISSUE;
    }
    private static final int TC_PUBLIC_DEVICEDUMP_CONTENT_SMART = (int)1L;
    /**
     * {@snippet lang=c :
     * #define TC_PUBLIC_DEVICEDUMP_CONTENT_SMART 1
     * }
     */
    public static int TC_PUBLIC_DEVICEDUMP_CONTENT_SMART() {
        return TC_PUBLIC_DEVICEDUMP_CONTENT_SMART;
    }
    private static final int TC_PUBLIC_DEVICEDUMP_CONTENT_GPLOG = (int)2L;
    /**
     * {@snippet lang=c :
     * #define TC_PUBLIC_DEVICEDUMP_CONTENT_GPLOG 2
     * }
     */
    public static int TC_PUBLIC_DEVICEDUMP_CONTENT_GPLOG() {
        return TC_PUBLIC_DEVICEDUMP_CONTENT_GPLOG;
    }
    private static final int TC_PUBLIC_DEVICEDUMP_CONTENT_GPLOG_MAX = (int)16L;
    /**
     * {@snippet lang=c :
     * #define TC_PUBLIC_DEVICEDUMP_CONTENT_GPLOG_MAX 16
     * }
     */
    public static int TC_PUBLIC_DEVICEDUMP_CONTENT_GPLOG_MAX() {
        return TC_PUBLIC_DEVICEDUMP_CONTENT_GPLOG_MAX;
    }
    private static final int TC_DEVICEDUMP_SUBSECTION_DESC_LENGTH = (int)16L;
    /**
     * {@snippet lang=c :
     * #define TC_DEVICEDUMP_SUBSECTION_DESC_LENGTH 16
     * }
     */
    public static int TC_DEVICEDUMP_SUBSECTION_DESC_LENGTH() {
        return TC_DEVICEDUMP_SUBSECTION_DESC_LENGTH;
    }
    private static final int CDB_SIZE = (int)16L;
    /**
     * {@snippet lang=c :
     * #define CDB_SIZE 16
     * }
     */
    public static int CDB_SIZE() {
        return CDB_SIZE;
    }
    private static final int TELEMETRY_COMMAND_SIZE = (int)16L;
    /**
     * {@snippet lang=c :
     * #define TELEMETRY_COMMAND_SIZE 16
     * }
     */
    public static int TELEMETRY_COMMAND_SIZE() {
        return TELEMETRY_COMMAND_SIZE;
    }
    private static final int DEVICEDUMP_CAP_PRIVATE_SECTION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define DEVICEDUMP_CAP_PRIVATE_SECTION 1
     * }
     */
    public static int DEVICEDUMP_CAP_PRIVATE_SECTION() {
        return DEVICEDUMP_CAP_PRIVATE_SECTION;
    }
    private static final int DEVICEDUMP_CAP_RESTRICTED_SECTION = (int)2L;
    /**
     * {@snippet lang=c :
     * #define DEVICEDUMP_CAP_RESTRICTED_SECTION 2
     * }
     */
    public static int DEVICEDUMP_CAP_RESTRICTED_SECTION() {
        return DEVICEDUMP_CAP_RESTRICTED_SECTION;
    }
    private static final int STORAGE_IDLE_POWERUP_REASON_VERSION_V1 = (int)1L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_IDLE_POWERUP_REASON_VERSION_V1 1
     * }
     */
    public static int STORAGE_IDLE_POWERUP_REASON_VERSION_V1() {
        return STORAGE_IDLE_POWERUP_REASON_VERSION_V1;
    }
    private static final int STORAGE_DEVICE_POWER_CAP_VERSION_V1 = (int)1L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_DEVICE_POWER_CAP_VERSION_V1 1
     * }
     */
    public static int STORAGE_DEVICE_POWER_CAP_VERSION_V1() {
        return STORAGE_DEVICE_POWER_CAP_VERSION_V1;
    }
    private static final int STORAGE_EVENT_NOTIFICATION_VERSION_V1 = (int)1L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_EVENT_NOTIFICATION_VERSION_V1 1
     * }
     */
    public static int STORAGE_EVENT_NOTIFICATION_VERSION_V1() {
        return STORAGE_EVENT_NOTIFICATION_VERSION_V1;
    }
    private static final int STORAGE_EVENT_MEDIA_STATUS = (int)1L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_EVENT_MEDIA_STATUS 1
     * }
     */
    public static int STORAGE_EVENT_MEDIA_STATUS() {
        return STORAGE_EVENT_MEDIA_STATUS;
    }
    private static final int STORAGE_EVENT_DEVICE_STATUS = (int)2L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_EVENT_DEVICE_STATUS 2
     * }
     */
    public static int STORAGE_EVENT_DEVICE_STATUS() {
        return STORAGE_EVENT_DEVICE_STATUS;
    }
    private static final int STORAGE_EVENT_DEVICE_OPERATION = (int)4L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_EVENT_DEVICE_OPERATION 4
     * }
     */
    public static int STORAGE_EVENT_DEVICE_OPERATION() {
        return STORAGE_EVENT_DEVICE_OPERATION;
    }
    private static final int READ_COPY_NUMBER_KEY = (int)1380142592L;
    /**
     * {@snippet lang=c :
     * #define READ_COPY_NUMBER_KEY 1380142592
     * }
     */
    public static int READ_COPY_NUMBER_KEY() {
        return READ_COPY_NUMBER_KEY;
    }
    private static final int READ_COPY_NUMBER_BYPASS_CACHE_FLAG = (int)256L;
    /**
     * {@snippet lang=c :
     * #define READ_COPY_NUMBER_BYPASS_CACHE_FLAG 256
     * }
     */
    public static int READ_COPY_NUMBER_BYPASS_CACHE_FLAG() {
        return READ_COPY_NUMBER_BYPASS_CACHE_FLAG;
    }
    private static final int STORAGE_HW_FIRMWARE_REQUEST_FLAG_CONTROLLER = (int)1L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_HW_FIRMWARE_REQUEST_FLAG_CONTROLLER 1
     * }
     */
    public static int STORAGE_HW_FIRMWARE_REQUEST_FLAG_CONTROLLER() {
        return STORAGE_HW_FIRMWARE_REQUEST_FLAG_CONTROLLER;
    }
    private static final int STORAGE_HW_FIRMWARE_REQUEST_FLAG_LAST_SEGMENT = (int)2L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_HW_FIRMWARE_REQUEST_FLAG_LAST_SEGMENT 2
     * }
     */
    public static int STORAGE_HW_FIRMWARE_REQUEST_FLAG_LAST_SEGMENT() {
        return STORAGE_HW_FIRMWARE_REQUEST_FLAG_LAST_SEGMENT;
    }
    private static final int STORAGE_HW_FIRMWARE_REQUEST_FLAG_FIRST_SEGMENT = (int)4L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_HW_FIRMWARE_REQUEST_FLAG_FIRST_SEGMENT 4
     * }
     */
    public static int STORAGE_HW_FIRMWARE_REQUEST_FLAG_FIRST_SEGMENT() {
        return STORAGE_HW_FIRMWARE_REQUEST_FLAG_FIRST_SEGMENT;
    }
    private static final int STORAGE_HW_FIRMWARE_REQUEST_FLAG_SWITCH_TO_FIRMWARE_WITHOUT_RESET = (int)268435456L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_HW_FIRMWARE_REQUEST_FLAG_SWITCH_TO_FIRMWARE_WITHOUT_RESET 268435456
     * }
     */
    public static int STORAGE_HW_FIRMWARE_REQUEST_FLAG_SWITCH_TO_FIRMWARE_WITHOUT_RESET() {
        return STORAGE_HW_FIRMWARE_REQUEST_FLAG_SWITCH_TO_FIRMWARE_WITHOUT_RESET;
    }
    private static final int STORAGE_HW_FIRMWARE_REQUEST_FLAG_REPLACE_AND_SWITCH_UPON_RESET = (int)536870912L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_HW_FIRMWARE_REQUEST_FLAG_REPLACE_AND_SWITCH_UPON_RESET 536870912
     * }
     */
    public static int STORAGE_HW_FIRMWARE_REQUEST_FLAG_REPLACE_AND_SWITCH_UPON_RESET() {
        return STORAGE_HW_FIRMWARE_REQUEST_FLAG_REPLACE_AND_SWITCH_UPON_RESET;
    }
    private static final int STORAGE_HW_FIRMWARE_REQUEST_FLAG_REPLACE_EXISTING_IMAGE = (int)1073741824L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_HW_FIRMWARE_REQUEST_FLAG_REPLACE_EXISTING_IMAGE 1073741824
     * }
     */
    public static int STORAGE_HW_FIRMWARE_REQUEST_FLAG_REPLACE_EXISTING_IMAGE() {
        return STORAGE_HW_FIRMWARE_REQUEST_FLAG_REPLACE_EXISTING_IMAGE;
    }
    private static final int STORAGE_HW_FIRMWARE_INVALID_SLOT = (int)255L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_HW_FIRMWARE_INVALID_SLOT 255
     * }
     */
    public static int STORAGE_HW_FIRMWARE_INVALID_SLOT() {
        return STORAGE_HW_FIRMWARE_INVALID_SLOT;
    }
    private static final int STORAGE_HW_FIRMWARE_REVISION_LENGTH = (int)16L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_HW_FIRMWARE_REVISION_LENGTH 16
     * }
     */
    public static int STORAGE_HW_FIRMWARE_REVISION_LENGTH() {
        return STORAGE_HW_FIRMWARE_REVISION_LENGTH;
    }
    private static final int STORAGE_PROTOCOL_STRUCTURE_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_PROTOCOL_STRUCTURE_VERSION 1
     * }
     */
    public static int STORAGE_PROTOCOL_STRUCTURE_VERSION() {
        return STORAGE_PROTOCOL_STRUCTURE_VERSION;
    }
    private static final int STORAGE_PROTOCOL_STATUS_PENDING = (int)0L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_PROTOCOL_STATUS_PENDING 0
     * }
     */
    public static int STORAGE_PROTOCOL_STATUS_PENDING() {
        return STORAGE_PROTOCOL_STATUS_PENDING;
    }
    private static final int STORAGE_PROTOCOL_STATUS_SUCCESS = (int)1L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_PROTOCOL_STATUS_SUCCESS 1
     * }
     */
    public static int STORAGE_PROTOCOL_STATUS_SUCCESS() {
        return STORAGE_PROTOCOL_STATUS_SUCCESS;
    }
    private static final int STORAGE_PROTOCOL_STATUS_ERROR = (int)2L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_PROTOCOL_STATUS_ERROR 2
     * }
     */
    public static int STORAGE_PROTOCOL_STATUS_ERROR() {
        return STORAGE_PROTOCOL_STATUS_ERROR;
    }
    private static final int STORAGE_PROTOCOL_STATUS_INVALID_REQUEST = (int)3L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_PROTOCOL_STATUS_INVALID_REQUEST 3
     * }
     */
    public static int STORAGE_PROTOCOL_STATUS_INVALID_REQUEST() {
        return STORAGE_PROTOCOL_STATUS_INVALID_REQUEST;
    }
    private static final int STORAGE_PROTOCOL_STATUS_NO_DEVICE = (int)4L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_PROTOCOL_STATUS_NO_DEVICE 4
     * }
     */
    public static int STORAGE_PROTOCOL_STATUS_NO_DEVICE() {
        return STORAGE_PROTOCOL_STATUS_NO_DEVICE;
    }
    private static final int STORAGE_PROTOCOL_STATUS_BUSY = (int)5L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_PROTOCOL_STATUS_BUSY 5
     * }
     */
    public static int STORAGE_PROTOCOL_STATUS_BUSY() {
        return STORAGE_PROTOCOL_STATUS_BUSY;
    }
    private static final int STORAGE_PROTOCOL_STATUS_DATA_OVERRUN = (int)6L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_PROTOCOL_STATUS_DATA_OVERRUN 6
     * }
     */
    public static int STORAGE_PROTOCOL_STATUS_DATA_OVERRUN() {
        return STORAGE_PROTOCOL_STATUS_DATA_OVERRUN;
    }
    private static final int STORAGE_PROTOCOL_STATUS_INSUFFICIENT_RESOURCES = (int)7L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_PROTOCOL_STATUS_INSUFFICIENT_RESOURCES 7
     * }
     */
    public static int STORAGE_PROTOCOL_STATUS_INSUFFICIENT_RESOURCES() {
        return STORAGE_PROTOCOL_STATUS_INSUFFICIENT_RESOURCES;
    }
    private static final int STORAGE_PROTOCOL_STATUS_THROTTLED_REQUEST = (int)8L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_PROTOCOL_STATUS_THROTTLED_REQUEST 8
     * }
     */
    public static int STORAGE_PROTOCOL_STATUS_THROTTLED_REQUEST() {
        return STORAGE_PROTOCOL_STATUS_THROTTLED_REQUEST;
    }
    private static final int STORAGE_PROTOCOL_STATUS_NOT_SUPPORTED = (int)255L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_PROTOCOL_STATUS_NOT_SUPPORTED 255
     * }
     */
    public static int STORAGE_PROTOCOL_STATUS_NOT_SUPPORTED() {
        return STORAGE_PROTOCOL_STATUS_NOT_SUPPORTED;
    }
    private static final int STORAGE_PROTOCOL_COMMAND_LENGTH_NVME = (int)64L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_PROTOCOL_COMMAND_LENGTH_NVME 64
     * }
     */
    public static int STORAGE_PROTOCOL_COMMAND_LENGTH_NVME() {
        return STORAGE_PROTOCOL_COMMAND_LENGTH_NVME;
    }
    private static final int STORAGE_PROTOCOL_SPECIFIC_NVME_ADMIN_COMMAND = (int)1L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_PROTOCOL_SPECIFIC_NVME_ADMIN_COMMAND 1
     * }
     */
    public static int STORAGE_PROTOCOL_SPECIFIC_NVME_ADMIN_COMMAND() {
        return STORAGE_PROTOCOL_SPECIFIC_NVME_ADMIN_COMMAND;
    }
    private static final int STORAGE_PROTOCOL_SPECIFIC_NVME_NVM_COMMAND = (int)2L;
    /**
     * {@snippet lang=c :
     * #define STORAGE_PROTOCOL_SPECIFIC_NVME_NVM_COMMAND 2
     * }
     */
    public static int STORAGE_PROTOCOL_SPECIFIC_NVME_NVM_COMMAND() {
        return STORAGE_PROTOCOL_SPECIFIC_NVME_NVM_COMMAND;
    }
    private static final int STORATTRIBUTE_NONE = (int)0L;
    /**
     * {@snippet lang=c :
     * #define STORATTRIBUTE_NONE 0
     * }
     */
    public static int STORATTRIBUTE_NONE() {
        return STORATTRIBUTE_NONE;
    }
    private static final int STORATTRIBUTE_MANAGEMENT_STATE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define STORATTRIBUTE_MANAGEMENT_STATE 1
     * }
     */
    public static int STORATTRIBUTE_MANAGEMENT_STATE() {
        return STORATTRIBUTE_MANAGEMENT_STATE;
    }
    private static final int IOCTL_SCMBUS_DEVICE_FUNCTION_BASE = (int)0L;
    /**
     * {@snippet lang=c :
     * #define IOCTL_SCMBUS_DEVICE_FUNCTION_BASE 0
     * }
     */
    public static int IOCTL_SCMBUS_DEVICE_FUNCTION_BASE() {
        return IOCTL_SCMBUS_DEVICE_FUNCTION_BASE;
    }
    private static final int IOCTL_SCM_LOGICAL_DEVICE_FUNCTION_BASE = (int)768L;
    /**
     * {@snippet lang=c :
     * #define IOCTL_SCM_LOGICAL_DEVICE_FUNCTION_BASE 768
     * }
     */
    public static int IOCTL_SCM_LOGICAL_DEVICE_FUNCTION_BASE() {
        return IOCTL_SCM_LOGICAL_DEVICE_FUNCTION_BASE;
    }
    private static final int IOCTL_SCM_PHYSICAL_DEVICE_FUNCTION_BASE = (int)1536L;
    /**
     * {@snippet lang=c :
     * #define IOCTL_SCM_PHYSICAL_DEVICE_FUNCTION_BASE 1536
     * }
     */
    public static int IOCTL_SCM_PHYSICAL_DEVICE_FUNCTION_BASE() {
        return IOCTL_SCM_PHYSICAL_DEVICE_FUNCTION_BASE;
    }
    private static final int SCM_MAX_SYMLINK_LEN_IN_CHARS = (int)256L;
    /**
     * {@snippet lang=c :
     * #define SCM_MAX_SYMLINK_LEN_IN_CHARS 256
     * }
     */
    public static int SCM_MAX_SYMLINK_LEN_IN_CHARS() {
        return SCM_MAX_SYMLINK_LEN_IN_CHARS;
    }
    private static final int MAX_INTERFACE_CODES = (int)8L;
    /**
     * {@snippet lang=c :
     * #define MAX_INTERFACE_CODES 8
     * }
     */
    public static int MAX_INTERFACE_CODES() {
        return MAX_INTERFACE_CODES;
    }
    private static final int SCM_PD_FIRMWARE_REVISION_LENGTH_BYTES = (int)32L;
    /**
     * {@snippet lang=c :
     * #define SCM_PD_FIRMWARE_REVISION_LENGTH_BYTES 32
     * }
     */
    public static int SCM_PD_FIRMWARE_REVISION_LENGTH_BYTES() {
        return SCM_PD_FIRMWARE_REVISION_LENGTH_BYTES;
    }
    private static final int SCM_PD_PROPERTY_NAME_LENGTH_IN_CHARS = (int)128L;
    /**
     * {@snippet lang=c :
     * #define SCM_PD_PROPERTY_NAME_LENGTH_IN_CHARS 128
     * }
     */
    public static int SCM_PD_PROPERTY_NAME_LENGTH_IN_CHARS() {
        return SCM_PD_PROPERTY_NAME_LENGTH_IN_CHARS;
    }
    private static final int SCM_PD_MAX_OPERATIONAL_STATUS = (int)16L;
    /**
     * {@snippet lang=c :
     * #define SCM_PD_MAX_OPERATIONAL_STATUS 16
     * }
     */
    public static int SCM_PD_MAX_OPERATIONAL_STATUS() {
        return SCM_PD_MAX_OPERATIONAL_STATUS;
    }
    private static final int SCM_PD_FIRMWARE_LAST_DOWNLOAD = (int)1L;
    /**
     * {@snippet lang=c :
     * #define SCM_PD_FIRMWARE_LAST_DOWNLOAD 1
     * }
     */
    public static int SCM_PD_FIRMWARE_LAST_DOWNLOAD() {
        return SCM_PD_FIRMWARE_LAST_DOWNLOAD;
    }
    private static final int PARTITION_ENTRY_UNUSED = (int)0L;
    /**
     * {@snippet lang=c :
     * #define PARTITION_ENTRY_UNUSED 0
     * }
     */
    public static int PARTITION_ENTRY_UNUSED() {
        return PARTITION_ENTRY_UNUSED;
    }
    private static final int PARTITION_FAT_12 = (int)1L;
    /**
     * {@snippet lang=c :
     * #define PARTITION_FAT_12 1
     * }
     */
    public static int PARTITION_FAT_12() {
        return PARTITION_FAT_12;
    }
    private static final int PARTITION_XENIX_1 = (int)2L;
    /**
     * {@snippet lang=c :
     * #define PARTITION_XENIX_1 2
     * }
     */
    public static int PARTITION_XENIX_1() {
        return PARTITION_XENIX_1;
    }
    private static final int PARTITION_XENIX_2 = (int)3L;
    /**
     * {@snippet lang=c :
     * #define PARTITION_XENIX_2 3
     * }
     */
    public static int PARTITION_XENIX_2() {
        return PARTITION_XENIX_2;
    }
    private static final int PARTITION_FAT_16 = (int)4L;
    /**
     * {@snippet lang=c :
     * #define PARTITION_FAT_16 4
     * }
     */
    public static int PARTITION_FAT_16() {
        return PARTITION_FAT_16;
    }
    private static final int PARTITION_EXTENDED = (int)5L;
    /**
     * {@snippet lang=c :
     * #define PARTITION_EXTENDED 5
     * }
     */
    public static int PARTITION_EXTENDED() {
        return PARTITION_EXTENDED;
    }
    private static final int PARTITION_HUGE = (int)6L;
    /**
     * {@snippet lang=c :
     * #define PARTITION_HUGE 6
     * }
     */
    public static int PARTITION_HUGE() {
        return PARTITION_HUGE;
    }
    private static final int PARTITION_IFS = (int)7L;
    /**
     * {@snippet lang=c :
     * #define PARTITION_IFS 7
     * }
     */
    public static int PARTITION_IFS() {
        return PARTITION_IFS;
    }
    private static final int PARTITION_OS2BOOTMGR = (int)10L;
    /**
     * {@snippet lang=c :
     * #define PARTITION_OS2BOOTMGR 10
     * }
     */
    public static int PARTITION_OS2BOOTMGR() {
        return PARTITION_OS2BOOTMGR;
    }
    private static final int PARTITION_FAT32 = (int)11L;
    /**
     * {@snippet lang=c :
     * #define PARTITION_FAT32 11
     * }
     */
    public static int PARTITION_FAT32() {
        return PARTITION_FAT32;
    }
    private static final int PARTITION_FAT32_XINT13 = (int)12L;
    /**
     * {@snippet lang=c :
     * #define PARTITION_FAT32_XINT13 12
     * }
     */
    public static int PARTITION_FAT32_XINT13() {
        return PARTITION_FAT32_XINT13;
    }
    private static final int PARTITION_XINT13 = (int)14L;
    /**
     * {@snippet lang=c :
     * #define PARTITION_XINT13 14
     * }
     */
    public static int PARTITION_XINT13() {
        return PARTITION_XINT13;
    }
    private static final int PARTITION_XINT13_EXTENDED = (int)15L;
    /**
     * {@snippet lang=c :
     * #define PARTITION_XINT13_EXTENDED 15
     * }
     */
    public static int PARTITION_XINT13_EXTENDED() {
        return PARTITION_XINT13_EXTENDED;
    }
    private static final int PARTITION_MSFT_RECOVERY = (int)39L;
    /**
     * {@snippet lang=c :
     * #define PARTITION_MSFT_RECOVERY 39
     * }
     */
    public static int PARTITION_MSFT_RECOVERY() {
        return PARTITION_MSFT_RECOVERY;
    }
    private static final int PARTITION_MAIN_OS = (int)40L;
    /**
     * {@snippet lang=c :
     * #define PARTITION_MAIN_OS 40
     * }
     */
    public static int PARTITION_MAIN_OS() {
        return PARTITION_MAIN_OS;
    }
    private static final int PARTIITON_OS_DATA = (int)41L;
    /**
     * {@snippet lang=c :
     * #define PARTIITON_OS_DATA 41
     * }
     */
    public static int PARTIITON_OS_DATA() {
        return PARTIITON_OS_DATA;
    }
    private static final int PARTITION_PRE_INSTALLED = (int)42L;
    /**
     * {@snippet lang=c :
     * #define PARTITION_PRE_INSTALLED 42
     * }
     */
    public static int PARTITION_PRE_INSTALLED() {
        return PARTITION_PRE_INSTALLED;
    }
    private static final int PARTITION_BSP = (int)43L;
    /**
     * {@snippet lang=c :
     * #define PARTITION_BSP 43
     * }
     */
    public static int PARTITION_BSP() {
        return PARTITION_BSP;
    }
    private static final int PARTITION_DPP = (int)44L;
    /**
     * {@snippet lang=c :
     * #define PARTITION_DPP 44
     * }
     */
    public static int PARTITION_DPP() {
        return PARTITION_DPP;
    }
    private static final int PARTITION_WINDOWS_SYSTEM = (int)45L;
    /**
     * {@snippet lang=c :
     * #define PARTITION_WINDOWS_SYSTEM 45
     * }
     */
    public static int PARTITION_WINDOWS_SYSTEM() {
        return PARTITION_WINDOWS_SYSTEM;
    }
    private static final int PARTITION_PREP = (int)65L;
    /**
     * {@snippet lang=c :
     * #define PARTITION_PREP 65
     * }
     */
    public static int PARTITION_PREP() {
        return PARTITION_PREP;
    }
    private static final int PARTITION_LDM = (int)66L;
    /**
     * {@snippet lang=c :
     * #define PARTITION_LDM 66
     * }
     */
    public static int PARTITION_LDM() {
        return PARTITION_LDM;
    }
    private static final int PARTITION_DM = (int)84L;
    /**
     * {@snippet lang=c :
     * #define PARTITION_DM 84
     * }
     */
    public static int PARTITION_DM() {
        return PARTITION_DM;
    }
    private static final int PARTITION_EZDRIVE = (int)85L;
    /**
     * {@snippet lang=c :
     * #define PARTITION_EZDRIVE 85
     * }
     */
    public static int PARTITION_EZDRIVE() {
        return PARTITION_EZDRIVE;
    }
    private static final int PARTITION_UNIX = (int)99L;
    /**
     * {@snippet lang=c :
     * #define PARTITION_UNIX 99
     * }
     */
    public static int PARTITION_UNIX() {
        return PARTITION_UNIX;
    }
    private static final int PARTITION_SPACES_DATA = (int)215L;
    /**
     * {@snippet lang=c :
     * #define PARTITION_SPACES_DATA 215
     * }
     */
    public static int PARTITION_SPACES_DATA() {
        return PARTITION_SPACES_DATA;
    }
    private static final int PARTITION_SPACES = (int)231L;
    /**
     * {@snippet lang=c :
     * #define PARTITION_SPACES 231
     * }
     */
    public static int PARTITION_SPACES() {
        return PARTITION_SPACES;
    }
    private static final int PARTITION_GPT = (int)238L;
    /**
     * {@snippet lang=c :
     * #define PARTITION_GPT 238
     * }
     */
    public static int PARTITION_GPT() {
        return PARTITION_GPT;
    }
    private static final int PARTITION_SYSTEM = (int)239L;
    /**
     * {@snippet lang=c :
     * #define PARTITION_SYSTEM 239
     * }
     */
    public static int PARTITION_SYSTEM() {
        return PARTITION_SYSTEM;
    }
    private static final int VALID_NTFT = (int)192L;
    /**
     * {@snippet lang=c :
     * #define VALID_NTFT 192
     * }
     */
    public static int VALID_NTFT() {
        return VALID_NTFT;
    }
    private static final int PARTITION_NTFT = (int)128L;
    /**
     * {@snippet lang=c :
     * #define PARTITION_NTFT 128
     * }
     */
    public static int PARTITION_NTFT() {
        return PARTITION_NTFT;
    }
    private static final int HIST_NO_OF_BUCKETS = (int)24L;
    /**
     * {@snippet lang=c :
     * #define HIST_NO_OF_BUCKETS 24
     * }
     */
    public static int HIST_NO_OF_BUCKETS() {
        return HIST_NO_OF_BUCKETS;
    }
    private static final int DISK_LOGGING_START = (int)0L;
    /**
     * {@snippet lang=c :
     * #define DISK_LOGGING_START 0
     * }
     */
    public static int DISK_LOGGING_START() {
        return DISK_LOGGING_START;
    }
    private static final int DISK_LOGGING_STOP = (int)1L;
    /**
     * {@snippet lang=c :
     * #define DISK_LOGGING_STOP 1
     * }
     */
    public static int DISK_LOGGING_STOP() {
        return DISK_LOGGING_STOP;
    }
    private static final int DISK_LOGGING_DUMP = (int)2L;
    /**
     * {@snippet lang=c :
     * #define DISK_LOGGING_DUMP 2
     * }
     */
    public static int DISK_LOGGING_DUMP() {
        return DISK_LOGGING_DUMP;
    }
    private static final int DISK_BINNING = (int)3L;
    /**
     * {@snippet lang=c :
     * #define DISK_BINNING 3
     * }
     */
    public static int DISK_BINNING() {
        return DISK_BINNING;
    }
    private static final int CAP_ATA_ID_CMD = (int)1L;
    /**
     * {@snippet lang=c :
     * #define CAP_ATA_ID_CMD 1
     * }
     */
    public static int CAP_ATA_ID_CMD() {
        return CAP_ATA_ID_CMD;
    }
    private static final int CAP_ATAPI_ID_CMD = (int)2L;
    /**
     * {@snippet lang=c :
     * #define CAP_ATAPI_ID_CMD 2
     * }
     */
    public static int CAP_ATAPI_ID_CMD() {
        return CAP_ATAPI_ID_CMD;
    }
    private static final int CAP_SMART_CMD = (int)4L;
    /**
     * {@snippet lang=c :
     * #define CAP_SMART_CMD 4
     * }
     */
    public static int CAP_SMART_CMD() {
        return CAP_SMART_CMD;
    }
    private static final int ATAPI_ID_CMD = (int)161L;
    /**
     * {@snippet lang=c :
     * #define ATAPI_ID_CMD 161
     * }
     */
    public static int ATAPI_ID_CMD() {
        return ATAPI_ID_CMD;
    }
    private static final int ID_CMD = (int)236L;
    /**
     * {@snippet lang=c :
     * #define ID_CMD 236
     * }
     */
    public static int ID_CMD() {
        return ID_CMD;
    }
    private static final int SMART_CMD = (int)176L;
    /**
     * {@snippet lang=c :
     * #define SMART_CMD 176
     * }
     */
    public static int SMART_CMD() {
        return SMART_CMD;
    }
    private static final int SMART_CYL_LOW = (int)79L;
    /**
     * {@snippet lang=c :
     * #define SMART_CYL_LOW 79
     * }
     */
    public static int SMART_CYL_LOW() {
        return SMART_CYL_LOW;
    }
    private static final int SMART_CYL_HI = (int)194L;
    /**
     * {@snippet lang=c :
     * #define SMART_CYL_HI 194
     * }
     */
    public static int SMART_CYL_HI() {
        return SMART_CYL_HI;
    }
    private static final int SMART_NO_ERROR = (int)0L;
    /**
     * {@snippet lang=c :
     * #define SMART_NO_ERROR 0
     * }
     */
    public static int SMART_NO_ERROR() {
        return SMART_NO_ERROR;
    }
    private static final int SMART_IDE_ERROR = (int)1L;
    /**
     * {@snippet lang=c :
     * #define SMART_IDE_ERROR 1
     * }
     */
    public static int SMART_IDE_ERROR() {
        return SMART_IDE_ERROR;
    }
    private static final int SMART_INVALID_FLAG = (int)2L;
    /**
     * {@snippet lang=c :
     * #define SMART_INVALID_FLAG 2
     * }
     */
    public static int SMART_INVALID_FLAG() {
        return SMART_INVALID_FLAG;
    }
    private static final int SMART_INVALID_COMMAND = (int)3L;
    /**
     * {@snippet lang=c :
     * #define SMART_INVALID_COMMAND 3
     * }
     */
    public static int SMART_INVALID_COMMAND() {
        return SMART_INVALID_COMMAND;
    }
    private static final int SMART_INVALID_BUFFER = (int)4L;
    /**
     * {@snippet lang=c :
     * #define SMART_INVALID_BUFFER 4
     * }
     */
    public static int SMART_INVALID_BUFFER() {
        return SMART_INVALID_BUFFER;
    }
    private static final int SMART_INVALID_DRIVE = (int)5L;
    /**
     * {@snippet lang=c :
     * #define SMART_INVALID_DRIVE 5
     * }
     */
    public static int SMART_INVALID_DRIVE() {
        return SMART_INVALID_DRIVE;
    }
    private static final int SMART_INVALID_IOCTL = (int)6L;
    /**
     * {@snippet lang=c :
     * #define SMART_INVALID_IOCTL 6
     * }
     */
    public static int SMART_INVALID_IOCTL() {
        return SMART_INVALID_IOCTL;
    }
    private static final int SMART_ERROR_NO_MEM = (int)7L;
    /**
     * {@snippet lang=c :
     * #define SMART_ERROR_NO_MEM 7
     * }
     */
    public static int SMART_ERROR_NO_MEM() {
        return SMART_ERROR_NO_MEM;
    }
    private static final int SMART_INVALID_REGISTER = (int)8L;
    /**
     * {@snippet lang=c :
     * #define SMART_INVALID_REGISTER 8
     * }
     */
    public static int SMART_INVALID_REGISTER() {
        return SMART_INVALID_REGISTER;
    }
    private static final int SMART_NOT_SUPPORTED = (int)9L;
    /**
     * {@snippet lang=c :
     * #define SMART_NOT_SUPPORTED 9
     * }
     */
    public static int SMART_NOT_SUPPORTED() {
        return SMART_NOT_SUPPORTED;
    }
    private static final int SMART_NO_IDE_DEVICE = (int)10L;
    /**
     * {@snippet lang=c :
     * #define SMART_NO_IDE_DEVICE 10
     * }
     */
    public static int SMART_NO_IDE_DEVICE() {
        return SMART_NO_IDE_DEVICE;
    }
    private static final int SMART_OFFLINE_ROUTINE_OFFLINE = (int)0L;
    /**
     * {@snippet lang=c :
     * #define SMART_OFFLINE_ROUTINE_OFFLINE 0
     * }
     */
    public static int SMART_OFFLINE_ROUTINE_OFFLINE() {
        return SMART_OFFLINE_ROUTINE_OFFLINE;
    }
    private static final int SMART_SHORT_SELFTEST_OFFLINE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define SMART_SHORT_SELFTEST_OFFLINE 1
     * }
     */
    public static int SMART_SHORT_SELFTEST_OFFLINE() {
        return SMART_SHORT_SELFTEST_OFFLINE;
    }
    private static final int SMART_EXTENDED_SELFTEST_OFFLINE = (int)2L;
    /**
     * {@snippet lang=c :
     * #define SMART_EXTENDED_SELFTEST_OFFLINE 2
     * }
     */
    public static int SMART_EXTENDED_SELFTEST_OFFLINE() {
        return SMART_EXTENDED_SELFTEST_OFFLINE;
    }
    private static final int SMART_ABORT_OFFLINE_SELFTEST = (int)127L;
    /**
     * {@snippet lang=c :
     * #define SMART_ABORT_OFFLINE_SELFTEST 127
     * }
     */
    public static int SMART_ABORT_OFFLINE_SELFTEST() {
        return SMART_ABORT_OFFLINE_SELFTEST;
    }
    private static final int SMART_SHORT_SELFTEST_CAPTIVE = (int)129L;
    /**
     * {@snippet lang=c :
     * #define SMART_SHORT_SELFTEST_CAPTIVE 129
     * }
     */
    public static int SMART_SHORT_SELFTEST_CAPTIVE() {
        return SMART_SHORT_SELFTEST_CAPTIVE;
    }
    private static final int SMART_EXTENDED_SELFTEST_CAPTIVE = (int)130L;
    /**
     * {@snippet lang=c :
     * #define SMART_EXTENDED_SELFTEST_CAPTIVE 130
     * }
     */
    public static int SMART_EXTENDED_SELFTEST_CAPTIVE() {
        return SMART_EXTENDED_SELFTEST_CAPTIVE;
    }
    private static final int READ_ATTRIBUTE_BUFFER_SIZE = (int)512L;
    /**
     * {@snippet lang=c :
     * #define READ_ATTRIBUTE_BUFFER_SIZE 512
     * }
     */
    public static int READ_ATTRIBUTE_BUFFER_SIZE() {
        return READ_ATTRIBUTE_BUFFER_SIZE;
    }
    private static final int IDENTIFY_BUFFER_SIZE = (int)512L;
    /**
     * {@snippet lang=c :
     * #define IDENTIFY_BUFFER_SIZE 512
     * }
     */
    public static int IDENTIFY_BUFFER_SIZE() {
        return IDENTIFY_BUFFER_SIZE;
    }
    private static final int READ_THRESHOLD_BUFFER_SIZE = (int)512L;
    /**
     * {@snippet lang=c :
     * #define READ_THRESHOLD_BUFFER_SIZE 512
     * }
     */
    public static int READ_THRESHOLD_BUFFER_SIZE() {
        return READ_THRESHOLD_BUFFER_SIZE;
    }
    private static final int SMART_LOG_SECTOR_SIZE = (int)512L;
    /**
     * {@snippet lang=c :
     * #define SMART_LOG_SECTOR_SIZE 512
     * }
     */
    public static int SMART_LOG_SECTOR_SIZE() {
        return SMART_LOG_SECTOR_SIZE;
    }
    private static final int READ_ATTRIBUTES = (int)208L;
    /**
     * {@snippet lang=c :
     * #define READ_ATTRIBUTES 208
     * }
     */
    public static int READ_ATTRIBUTES() {
        return READ_ATTRIBUTES;
    }
    private static final int READ_THRESHOLDS = (int)209L;
    /**
     * {@snippet lang=c :
     * #define READ_THRESHOLDS 209
     * }
     */
    public static int READ_THRESHOLDS() {
        return READ_THRESHOLDS;
    }
    private static final int ENABLE_DISABLE_AUTOSAVE = (int)210L;
    /**
     * {@snippet lang=c :
     * #define ENABLE_DISABLE_AUTOSAVE 210
     * }
     */
    public static int ENABLE_DISABLE_AUTOSAVE() {
        return ENABLE_DISABLE_AUTOSAVE;
    }
    private static final int SAVE_ATTRIBUTE_VALUES = (int)211L;
    /**
     * {@snippet lang=c :
     * #define SAVE_ATTRIBUTE_VALUES 211
     * }
     */
    public static int SAVE_ATTRIBUTE_VALUES() {
        return SAVE_ATTRIBUTE_VALUES;
    }
    private static final int EXECUTE_OFFLINE_DIAGS = (int)212L;
    /**
     * {@snippet lang=c :
     * #define EXECUTE_OFFLINE_DIAGS 212
     * }
     */
    public static int EXECUTE_OFFLINE_DIAGS() {
        return EXECUTE_OFFLINE_DIAGS;
    }
    private static final int SMART_READ_LOG = (int)213L;
    /**
     * {@snippet lang=c :
     * #define SMART_READ_LOG 213
     * }
     */
    public static int SMART_READ_LOG() {
        return SMART_READ_LOG;
    }
    private static final int SMART_WRITE_LOG = (int)214L;
    /**
     * {@snippet lang=c :
     * #define SMART_WRITE_LOG 214
     * }
     */
    public static int SMART_WRITE_LOG() {
        return SMART_WRITE_LOG;
    }
    private static final int ENABLE_SMART = (int)216L;
    /**
     * {@snippet lang=c :
     * #define ENABLE_SMART 216
     * }
     */
    public static int ENABLE_SMART() {
        return ENABLE_SMART;
    }
    private static final int DISABLE_SMART = (int)217L;
    /**
     * {@snippet lang=c :
     * #define DISABLE_SMART 217
     * }
     */
    public static int DISABLE_SMART() {
        return DISABLE_SMART;
    }
    private static final int RETURN_SMART_STATUS = (int)218L;
    /**
     * {@snippet lang=c :
     * #define RETURN_SMART_STATUS 218
     * }
     */
    public static int RETURN_SMART_STATUS() {
        return RETURN_SMART_STATUS;
    }
    private static final int ENABLE_DISABLE_AUTO_OFFLINE = (int)219L;
    /**
     * {@snippet lang=c :
     * #define ENABLE_DISABLE_AUTO_OFFLINE 219
     * }
     */
    public static int ENABLE_DISABLE_AUTO_OFFLINE() {
        return ENABLE_DISABLE_AUTO_OFFLINE;
    }
    private static final int DISK_ATTRIBUTE_OFFLINE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define DISK_ATTRIBUTE_OFFLINE 1
     * }
     */
    public static int DISK_ATTRIBUTE_OFFLINE() {
        return DISK_ATTRIBUTE_OFFLINE;
    }
    private static final int DISK_ATTRIBUTE_READ_ONLY = (int)2L;
    /**
     * {@snippet lang=c :
     * #define DISK_ATTRIBUTE_READ_ONLY 2
     * }
     */
    public static int DISK_ATTRIBUTE_READ_ONLY() {
        return DISK_ATTRIBUTE_READ_ONLY;
    }
    private static final int MAX_VOLUME_ID_SIZE = (int)36L;
    /**
     * {@snippet lang=c :
     * #define MAX_VOLUME_ID_SIZE 36
     * }
     */
    public static int MAX_VOLUME_ID_SIZE() {
        return MAX_VOLUME_ID_SIZE;
    }
    private static final int MAX_VOLUME_TEMPLATE_SIZE = (int)40L;
    /**
     * {@snippet lang=c :
     * #define MAX_VOLUME_TEMPLATE_SIZE 40
     * }
     */
    public static int MAX_VOLUME_TEMPLATE_SIZE() {
        return MAX_VOLUME_TEMPLATE_SIZE;
    }
    private static final int VENDOR_ID_LENGTH = (int)8L;
    /**
     * {@snippet lang=c :
     * #define VENDOR_ID_LENGTH 8
     * }
     */
    public static int VENDOR_ID_LENGTH() {
        return VENDOR_ID_LENGTH;
    }
    private static final int PRODUCT_ID_LENGTH = (int)16L;
    /**
     * {@snippet lang=c :
     * #define PRODUCT_ID_LENGTH 16
     * }
     */
    public static int PRODUCT_ID_LENGTH() {
        return PRODUCT_ID_LENGTH;
    }
    private static final int REVISION_LENGTH = (int)4L;
    /**
     * {@snippet lang=c :
     * #define REVISION_LENGTH 4
     * }
     */
    public static int REVISION_LENGTH() {
        return REVISION_LENGTH;
    }
    private static final int SERIAL_NUMBER_LENGTH = (int)32L;
    /**
     * {@snippet lang=c :
     * #define SERIAL_NUMBER_LENGTH 32
     * }
     */
    public static int SERIAL_NUMBER_LENGTH() {
        return SERIAL_NUMBER_LENGTH;
    }
    private static final int CHANGER_BAR_CODE_SCANNER_INSTALLED = (int)1L;
    /**
     * {@snippet lang=c :
     * #define CHANGER_BAR_CODE_SCANNER_INSTALLED 1
     * }
     */
    public static int CHANGER_BAR_CODE_SCANNER_INSTALLED() {
        return CHANGER_BAR_CODE_SCANNER_INSTALLED;
    }
    private static final int CHANGER_INIT_ELEM_STAT_WITH_RANGE = (int)2L;
    /**
     * {@snippet lang=c :
     * #define CHANGER_INIT_ELEM_STAT_WITH_RANGE 2
     * }
     */
    public static int CHANGER_INIT_ELEM_STAT_WITH_RANGE() {
        return CHANGER_INIT_ELEM_STAT_WITH_RANGE;
    }
    private static final int CHANGER_CLOSE_IEPORT = (int)4L;
    /**
     * {@snippet lang=c :
     * #define CHANGER_CLOSE_IEPORT 4
     * }
     */
    public static int CHANGER_CLOSE_IEPORT() {
        return CHANGER_CLOSE_IEPORT;
    }
    private static final int CHANGER_OPEN_IEPORT = (int)8L;
    /**
     * {@snippet lang=c :
     * #define CHANGER_OPEN_IEPORT 8
     * }
     */
    public static int CHANGER_OPEN_IEPORT() {
        return CHANGER_OPEN_IEPORT;
    }
    private static final int CHANGER_STATUS_NON_VOLATILE = (int)16L;
    /**
     * {@snippet lang=c :
     * #define CHANGER_STATUS_NON_VOLATILE 16
     * }
     */
    public static int CHANGER_STATUS_NON_VOLATILE() {
        return CHANGER_STATUS_NON_VOLATILE;
    }
    private static final int CHANGER_EXCHANGE_MEDIA = (int)32L;
    /**
     * {@snippet lang=c :
     * #define CHANGER_EXCHANGE_MEDIA 32
     * }
     */
    public static int CHANGER_EXCHANGE_MEDIA() {
        return CHANGER_EXCHANGE_MEDIA;
    }
    private static final int CHANGER_CLEANER_SLOT = (int)64L;
    /**
     * {@snippet lang=c :
     * #define CHANGER_CLEANER_SLOT 64
     * }
     */
    public static int CHANGER_CLEANER_SLOT() {
        return CHANGER_CLEANER_SLOT;
    }
    private static final int CHANGER_LOCK_UNLOCK = (int)128L;
    /**
     * {@snippet lang=c :
     * #define CHANGER_LOCK_UNLOCK 128
     * }
     */
    public static int CHANGER_LOCK_UNLOCK() {
        return CHANGER_LOCK_UNLOCK;
    }
    private static final int CHANGER_CARTRIDGE_MAGAZINE = (int)256L;
    /**
     * {@snippet lang=c :
     * #define CHANGER_CARTRIDGE_MAGAZINE 256
     * }
     */
    public static int CHANGER_CARTRIDGE_MAGAZINE() {
        return CHANGER_CARTRIDGE_MAGAZINE;
    }
    private static final int CHANGER_MEDIUM_FLIP = (int)512L;
    /**
     * {@snippet lang=c :
     * #define CHANGER_MEDIUM_FLIP 512
     * }
     */
    public static int CHANGER_MEDIUM_FLIP() {
        return CHANGER_MEDIUM_FLIP;
    }
    private static final int CHANGER_POSITION_TO_ELEMENT = (int)1024L;
    /**
     * {@snippet lang=c :
     * #define CHANGER_POSITION_TO_ELEMENT 1024
     * }
     */
    public static int CHANGER_POSITION_TO_ELEMENT() {
        return CHANGER_POSITION_TO_ELEMENT;
    }
    private static final int CHANGER_REPORT_IEPORT_STATE = (int)2048L;
    /**
     * {@snippet lang=c :
     * #define CHANGER_REPORT_IEPORT_STATE 2048
     * }
     */
    public static int CHANGER_REPORT_IEPORT_STATE() {
        return CHANGER_REPORT_IEPORT_STATE;
    }
    private static final int CHANGER_STORAGE_DRIVE = (int)4096L;
    /**
     * {@snippet lang=c :
     * #define CHANGER_STORAGE_DRIVE 4096
     * }
     */
    public static int CHANGER_STORAGE_DRIVE() {
        return CHANGER_STORAGE_DRIVE;
    }
    private static final int CHANGER_STORAGE_IEPORT = (int)8192L;
    /**
     * {@snippet lang=c :
     * #define CHANGER_STORAGE_IEPORT 8192
     * }
     */
    public static int CHANGER_STORAGE_IEPORT() {
        return CHANGER_STORAGE_IEPORT;
    }
    private static final int CHANGER_STORAGE_SLOT = (int)16384L;
    /**
     * {@snippet lang=c :
     * #define CHANGER_STORAGE_SLOT 16384
     * }
     */
    public static int CHANGER_STORAGE_SLOT() {
        return CHANGER_STORAGE_SLOT;
    }
    private static final int CHANGER_STORAGE_TRANSPORT = (int)32768L;
    /**
     * {@snippet lang=c :
     * #define CHANGER_STORAGE_TRANSPORT 32768
     * }
     */
    public static int CHANGER_STORAGE_TRANSPORT() {
        return CHANGER_STORAGE_TRANSPORT;
    }
    private static final int CHANGER_DRIVE_CLEANING_REQUIRED = (int)65536L;
    /**
     * {@snippet lang=c :
     * #define CHANGER_DRIVE_CLEANING_REQUIRED 65536
     * }
     */
    public static int CHANGER_DRIVE_CLEANING_REQUIRED() {
        return CHANGER_DRIVE_CLEANING_REQUIRED;
    }
    private static final int CHANGER_PREDISMOUNT_EJECT_REQUIRED = (int)131072L;
    /**
     * {@snippet lang=c :
     * #define CHANGER_PREDISMOUNT_EJECT_REQUIRED 131072
     * }
     */
    public static int CHANGER_PREDISMOUNT_EJECT_REQUIRED() {
        return CHANGER_PREDISMOUNT_EJECT_REQUIRED;
    }
    private static final int CHANGER_CLEANER_ACCESS_NOT_VALID = (int)262144L;
    /**
     * {@snippet lang=c :
     * #define CHANGER_CLEANER_ACCESS_NOT_VALID 262144
     * }
     */
    public static int CHANGER_CLEANER_ACCESS_NOT_VALID() {
        return CHANGER_CLEANER_ACCESS_NOT_VALID;
    }
    private static final int CHANGER_PREMOUNT_EJECT_REQUIRED = (int)524288L;
    /**
     * {@snippet lang=c :
     * #define CHANGER_PREMOUNT_EJECT_REQUIRED 524288
     * }
     */
    public static int CHANGER_PREMOUNT_EJECT_REQUIRED() {
        return CHANGER_PREMOUNT_EJECT_REQUIRED;
    }
    private static final int CHANGER_VOLUME_IDENTIFICATION = (int)1048576L;
    /**
     * {@snippet lang=c :
     * #define CHANGER_VOLUME_IDENTIFICATION 1048576
     * }
     */
    public static int CHANGER_VOLUME_IDENTIFICATION() {
        return CHANGER_VOLUME_IDENTIFICATION;
    }
    private static final int CHANGER_VOLUME_SEARCH = (int)2097152L;
    /**
     * {@snippet lang=c :
     * #define CHANGER_VOLUME_SEARCH 2097152
     * }
     */
    public static int CHANGER_VOLUME_SEARCH() {
        return CHANGER_VOLUME_SEARCH;
    }
    private static final int CHANGER_VOLUME_ASSERT = (int)4194304L;
    /**
     * {@snippet lang=c :
     * #define CHANGER_VOLUME_ASSERT 4194304
     * }
     */
    public static int CHANGER_VOLUME_ASSERT() {
        return CHANGER_VOLUME_ASSERT;
    }
    private static final int CHANGER_VOLUME_REPLACE = (int)8388608L;
    /**
     * {@snippet lang=c :
     * #define CHANGER_VOLUME_REPLACE 8388608
     * }
     */
    public static int CHANGER_VOLUME_REPLACE() {
        return CHANGER_VOLUME_REPLACE;
    }
    private static final int CHANGER_VOLUME_UNDEFINE = (int)16777216L;
    /**
     * {@snippet lang=c :
     * #define CHANGER_VOLUME_UNDEFINE 16777216
     * }
     */
    public static int CHANGER_VOLUME_UNDEFINE() {
        return CHANGER_VOLUME_UNDEFINE;
    }
    private static final int CHANGER_SERIAL_NUMBER_VALID = (int)67108864L;
    /**
     * {@snippet lang=c :
     * #define CHANGER_SERIAL_NUMBER_VALID 67108864
     * }
     */
    public static int CHANGER_SERIAL_NUMBER_VALID() {
        return CHANGER_SERIAL_NUMBER_VALID;
    }
    private static final int CHANGER_DEVICE_REINITIALIZE_CAPABLE = (int)134217728L;
    /**
     * {@snippet lang=c :
     * #define CHANGER_DEVICE_REINITIALIZE_CAPABLE 134217728
     * }
     */
    public static int CHANGER_DEVICE_REINITIALIZE_CAPABLE() {
        return CHANGER_DEVICE_REINITIALIZE_CAPABLE;
    }
    private static final int CHANGER_KEYPAD_ENABLE_DISABLE = (int)268435456L;
    /**
     * {@snippet lang=c :
     * #define CHANGER_KEYPAD_ENABLE_DISABLE 268435456
     * }
     */
    public static int CHANGER_KEYPAD_ENABLE_DISABLE() {
        return CHANGER_KEYPAD_ENABLE_DISABLE;
    }
    private static final int CHANGER_DRIVE_EMPTY_ON_DOOR_ACCESS = (int)536870912L;
    /**
     * {@snippet lang=c :
     * #define CHANGER_DRIVE_EMPTY_ON_DOOR_ACCESS 536870912
     * }
     */
    public static int CHANGER_DRIVE_EMPTY_ON_DOOR_ACCESS() {
        return CHANGER_DRIVE_EMPTY_ON_DOOR_ACCESS;
    }
    private static final int CHANGER_TO_TRANSPORT = (int)1L;
    /**
     * {@snippet lang=c :
     * #define CHANGER_TO_TRANSPORT 1
     * }
     */
    public static int CHANGER_TO_TRANSPORT() {
        return CHANGER_TO_TRANSPORT;
    }
    private static final int CHANGER_TO_SLOT = (int)2L;
    /**
     * {@snippet lang=c :
     * #define CHANGER_TO_SLOT 2
     * }
     */
    public static int CHANGER_TO_SLOT() {
        return CHANGER_TO_SLOT;
    }
    private static final int CHANGER_TO_IEPORT = (int)4L;
    /**
     * {@snippet lang=c :
     * #define CHANGER_TO_IEPORT 4
     * }
     */
    public static int CHANGER_TO_IEPORT() {
        return CHANGER_TO_IEPORT;
    }
    private static final int CHANGER_TO_DRIVE = (int)8L;
    /**
     * {@snippet lang=c :
     * #define CHANGER_TO_DRIVE 8
     * }
     */
    public static int CHANGER_TO_DRIVE() {
        return CHANGER_TO_DRIVE;
    }
    private static final int LOCK_UNLOCK_IEPORT = (int)1L;
    /**
     * {@snippet lang=c :
     * #define LOCK_UNLOCK_IEPORT 1
     * }
     */
    public static int LOCK_UNLOCK_IEPORT() {
        return LOCK_UNLOCK_IEPORT;
    }
    private static final int LOCK_UNLOCK_DOOR = (int)2L;
    /**
     * {@snippet lang=c :
     * #define LOCK_UNLOCK_DOOR 2
     * }
     */
    public static int LOCK_UNLOCK_DOOR() {
        return LOCK_UNLOCK_DOOR;
    }
    private static final int LOCK_UNLOCK_KEYPAD = (int)4L;
    /**
     * {@snippet lang=c :
     * #define LOCK_UNLOCK_KEYPAD 4
     * }
     */
    public static int LOCK_UNLOCK_KEYPAD() {
        return LOCK_UNLOCK_KEYPAD;
    }
    private static final int LOCK_ELEMENT = (int)0L;
    /**
     * {@snippet lang=c :
     * #define LOCK_ELEMENT 0
     * }
     */
    public static int LOCK_ELEMENT() {
        return LOCK_ELEMENT;
    }
    private static final int UNLOCK_ELEMENT = (int)1L;
    /**
     * {@snippet lang=c :
     * #define UNLOCK_ELEMENT 1
     * }
     */
    public static int UNLOCK_ELEMENT() {
        return UNLOCK_ELEMENT;
    }
    private static final int EXTEND_IEPORT = (int)2L;
    /**
     * {@snippet lang=c :
     * #define EXTEND_IEPORT 2
     * }
     */
    public static int EXTEND_IEPORT() {
        return EXTEND_IEPORT;
    }
    private static final int RETRACT_IEPORT = (int)3L;
    /**
     * {@snippet lang=c :
     * #define RETRACT_IEPORT 3
     * }
     */
    public static int RETRACT_IEPORT() {
        return RETRACT_IEPORT;
    }
    private static final int ELEMENT_STATUS_FULL = (int)1L;
    /**
     * {@snippet lang=c :
     * #define ELEMENT_STATUS_FULL 1
     * }
     */
    public static int ELEMENT_STATUS_FULL() {
        return ELEMENT_STATUS_FULL;
    }
    private static final int ELEMENT_STATUS_IMPEXP = (int)2L;
    /**
     * {@snippet lang=c :
     * #define ELEMENT_STATUS_IMPEXP 2
     * }
     */
    public static int ELEMENT_STATUS_IMPEXP() {
        return ELEMENT_STATUS_IMPEXP;
    }
    private static final int ELEMENT_STATUS_EXCEPT = (int)4L;
    /**
     * {@snippet lang=c :
     * #define ELEMENT_STATUS_EXCEPT 4
     * }
     */
    public static int ELEMENT_STATUS_EXCEPT() {
        return ELEMENT_STATUS_EXCEPT;
    }
    private static final int ELEMENT_STATUS_ACCESS = (int)8L;
    /**
     * {@snippet lang=c :
     * #define ELEMENT_STATUS_ACCESS 8
     * }
     */
    public static int ELEMENT_STATUS_ACCESS() {
        return ELEMENT_STATUS_ACCESS;
    }
    private static final int ELEMENT_STATUS_EXENAB = (int)16L;
    /**
     * {@snippet lang=c :
     * #define ELEMENT_STATUS_EXENAB 16
     * }
     */
    public static int ELEMENT_STATUS_EXENAB() {
        return ELEMENT_STATUS_EXENAB;
    }
    private static final int ELEMENT_STATUS_INENAB = (int)32L;
    /**
     * {@snippet lang=c :
     * #define ELEMENT_STATUS_INENAB 32
     * }
     */
    public static int ELEMENT_STATUS_INENAB() {
        return ELEMENT_STATUS_INENAB;
    }
    private static final int ELEMENT_STATUS_PRODUCT_DATA = (int)64L;
    /**
     * {@snippet lang=c :
     * #define ELEMENT_STATUS_PRODUCT_DATA 64
     * }
     */
    public static int ELEMENT_STATUS_PRODUCT_DATA() {
        return ELEMENT_STATUS_PRODUCT_DATA;
    }
    private static final int ELEMENT_STATUS_LUN_VALID = (int)4096L;
    /**
     * {@snippet lang=c :
     * #define ELEMENT_STATUS_LUN_VALID 4096
     * }
     */
    public static int ELEMENT_STATUS_LUN_VALID() {
        return ELEMENT_STATUS_LUN_VALID;
    }
    private static final int ELEMENT_STATUS_ID_VALID = (int)8192L;
    /**
     * {@snippet lang=c :
     * #define ELEMENT_STATUS_ID_VALID 8192
     * }
     */
    public static int ELEMENT_STATUS_ID_VALID() {
        return ELEMENT_STATUS_ID_VALID;
    }
    private static final int ELEMENT_STATUS_NOT_BUS = (int)32768L;
    /**
     * {@snippet lang=c :
     * #define ELEMENT_STATUS_NOT_BUS 32768
     * }
     */
    public static int ELEMENT_STATUS_NOT_BUS() {
        return ELEMENT_STATUS_NOT_BUS;
    }
    private static final int ELEMENT_STATUS_INVERT = (int)4194304L;
    /**
     * {@snippet lang=c :
     * #define ELEMENT_STATUS_INVERT 4194304
     * }
     */
    public static int ELEMENT_STATUS_INVERT() {
        return ELEMENT_STATUS_INVERT;
    }
    private static final int ELEMENT_STATUS_SVALID = (int)8388608L;
    /**
     * {@snippet lang=c :
     * #define ELEMENT_STATUS_SVALID 8388608
     * }
     */
    public static int ELEMENT_STATUS_SVALID() {
        return ELEMENT_STATUS_SVALID;
    }
    private static final int ELEMENT_STATUS_PVOLTAG = (int)268435456L;
    /**
     * {@snippet lang=c :
     * #define ELEMENT_STATUS_PVOLTAG 268435456
     * }
     */
    public static int ELEMENT_STATUS_PVOLTAG() {
        return ELEMENT_STATUS_PVOLTAG;
    }
    private static final int ELEMENT_STATUS_AVOLTAG = (int)536870912L;
    /**
     * {@snippet lang=c :
     * #define ELEMENT_STATUS_AVOLTAG 536870912
     * }
     */
    public static int ELEMENT_STATUS_AVOLTAG() {
        return ELEMENT_STATUS_AVOLTAG;
    }
    private static final int ERROR_LABEL_UNREADABLE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LABEL_UNREADABLE 1
     * }
     */
    public static int ERROR_LABEL_UNREADABLE() {
        return ERROR_LABEL_UNREADABLE;
    }
    private static final int ERROR_LABEL_QUESTIONABLE = (int)2L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LABEL_QUESTIONABLE 2
     * }
     */
    public static int ERROR_LABEL_QUESTIONABLE() {
        return ERROR_LABEL_QUESTIONABLE;
    }
    private static final int ERROR_SLOT_NOT_PRESENT = (int)4L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SLOT_NOT_PRESENT 4
     * }
     */
    public static int ERROR_SLOT_NOT_PRESENT() {
        return ERROR_SLOT_NOT_PRESENT;
    }
    private static final int ERROR_DRIVE_NOT_INSTALLED = (int)8L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DRIVE_NOT_INSTALLED 8
     * }
     */
    public static int ERROR_DRIVE_NOT_INSTALLED() {
        return ERROR_DRIVE_NOT_INSTALLED;
    }
    private static final int ERROR_TRAY_MALFUNCTION = (int)16L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TRAY_MALFUNCTION 16
     * }
     */
    public static int ERROR_TRAY_MALFUNCTION() {
        return ERROR_TRAY_MALFUNCTION;
    }
    private static final int ERROR_INIT_STATUS_NEEDED = (int)17L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INIT_STATUS_NEEDED 17
     * }
     */
    public static int ERROR_INIT_STATUS_NEEDED() {
        return ERROR_INIT_STATUS_NEEDED;
    }
    private static final int SEARCH_ALL = (int)0L;
    /**
     * {@snippet lang=c :
     * #define SEARCH_ALL 0
     * }
     */
    public static int SEARCH_ALL() {
        return SEARCH_ALL;
    }
    private static final int SEARCH_PRIMARY = (int)1L;
    /**
     * {@snippet lang=c :
     * #define SEARCH_PRIMARY 1
     * }
     */
    public static int SEARCH_PRIMARY() {
        return SEARCH_PRIMARY;
    }
    private static final int SEARCH_ALTERNATE = (int)2L;
    /**
     * {@snippet lang=c :
     * #define SEARCH_ALTERNATE 2
     * }
     */
    public static int SEARCH_ALTERNATE() {
        return SEARCH_ALTERNATE;
    }
    private static final int SEARCH_ALL_NO_SEQ = (int)4L;
    /**
     * {@snippet lang=c :
     * #define SEARCH_ALL_NO_SEQ 4
     * }
     */
    public static int SEARCH_ALL_NO_SEQ() {
        return SEARCH_ALL_NO_SEQ;
    }
    private static final int SEARCH_PRI_NO_SEQ = (int)5L;
    /**
     * {@snippet lang=c :
     * #define SEARCH_PRI_NO_SEQ 5
     * }
     */
    public static int SEARCH_PRI_NO_SEQ() {
        return SEARCH_PRI_NO_SEQ;
    }
    private static final int SEARCH_ALT_NO_SEQ = (int)6L;
    /**
     * {@snippet lang=c :
     * #define SEARCH_ALT_NO_SEQ 6
     * }
     */
    public static int SEARCH_ALT_NO_SEQ() {
        return SEARCH_ALT_NO_SEQ;
    }
    private static final int ASSERT_PRIMARY = (int)8L;
    /**
     * {@snippet lang=c :
     * #define ASSERT_PRIMARY 8
     * }
     */
    public static int ASSERT_PRIMARY() {
        return ASSERT_PRIMARY;
    }
    private static final int ASSERT_ALTERNATE = (int)9L;
    /**
     * {@snippet lang=c :
     * #define ASSERT_ALTERNATE 9
     * }
     */
    public static int ASSERT_ALTERNATE() {
        return ASSERT_ALTERNATE;
    }
    private static final int REPLACE_PRIMARY = (int)10L;
    /**
     * {@snippet lang=c :
     * #define REPLACE_PRIMARY 10
     * }
     */
    public static int REPLACE_PRIMARY() {
        return REPLACE_PRIMARY;
    }
    private static final int REPLACE_ALTERNATE = (int)11L;
    /**
     * {@snippet lang=c :
     * #define REPLACE_ALTERNATE 11
     * }
     */
    public static int REPLACE_ALTERNATE() {
        return REPLACE_ALTERNATE;
    }
    private static final int UNDEFINE_PRIMARY = (int)12L;
    /**
     * {@snippet lang=c :
     * #define UNDEFINE_PRIMARY 12
     * }
     */
    public static int UNDEFINE_PRIMARY() {
        return UNDEFINE_PRIMARY;
    }
    private static final int UNDEFINE_ALTERNATE = (int)13L;
    /**
     * {@snippet lang=c :
     * #define UNDEFINE_ALTERNATE 13
     * }
     */
    public static int UNDEFINE_ALTERNATE() {
        return UNDEFINE_ALTERNATE;
    }
    private static final int GET_VOLUME_BITMAP_FLAG_MASK_METADATA = (int)1L;
    /**
     * {@snippet lang=c :
     * #define GET_VOLUME_BITMAP_FLAG_MASK_METADATA 1
     * }
     */
    public static int GET_VOLUME_BITMAP_FLAG_MASK_METADATA() {
        return GET_VOLUME_BITMAP_FLAG_MASK_METADATA;
    }
    private static final int FLAG_USN_TRACK_MODIFIED_RANGES_ENABLE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define FLAG_USN_TRACK_MODIFIED_RANGES_ENABLE 1
     * }
     */
    public static int FLAG_USN_TRACK_MODIFIED_RANGES_ENABLE() {
        return FLAG_USN_TRACK_MODIFIED_RANGES_ENABLE;
    }
    private static final int FILE_PREFETCH_TYPE_FOR_CREATE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define FILE_PREFETCH_TYPE_FOR_CREATE 1
     * }
     */
    public static int FILE_PREFETCH_TYPE_FOR_CREATE() {
        return FILE_PREFETCH_TYPE_FOR_CREATE;
    }
    private static final int FILE_PREFETCH_TYPE_FOR_DIRENUM = (int)2L;
    /**
     * {@snippet lang=c :
     * #define FILE_PREFETCH_TYPE_FOR_DIRENUM 2
     * }
     */
    public static int FILE_PREFETCH_TYPE_FOR_DIRENUM() {
        return FILE_PREFETCH_TYPE_FOR_DIRENUM;
    }
    private static final int FILE_PREFETCH_TYPE_FOR_CREATE_EX = (int)3L;
    /**
     * {@snippet lang=c :
     * #define FILE_PREFETCH_TYPE_FOR_CREATE_EX 3
     * }
     */
    public static int FILE_PREFETCH_TYPE_FOR_CREATE_EX() {
        return FILE_PREFETCH_TYPE_FOR_CREATE_EX;
    }
    private static final int FILE_PREFETCH_TYPE_FOR_DIRENUM_EX = (int)4L;
    /**
     * {@snippet lang=c :
     * #define FILE_PREFETCH_TYPE_FOR_DIRENUM_EX 4
     * }
     */
    public static int FILE_PREFETCH_TYPE_FOR_DIRENUM_EX() {
        return FILE_PREFETCH_TYPE_FOR_DIRENUM_EX;
    }
    private static final int FILE_PREFETCH_TYPE_MAX = (int)4L;
    /**
     * {@snippet lang=c :
     * #define FILE_PREFETCH_TYPE_MAX 4
     * }
     */
    public static int FILE_PREFETCH_TYPE_MAX() {
        return FILE_PREFETCH_TYPE_MAX;
    }
    private static final int FILESYSTEM_STATISTICS_TYPE_NTFS = (int)1L;
    /**
     * {@snippet lang=c :
     * #define FILESYSTEM_STATISTICS_TYPE_NTFS 1
     * }
     */
    public static int FILESYSTEM_STATISTICS_TYPE_NTFS() {
        return FILESYSTEM_STATISTICS_TYPE_NTFS;
    }
    private static final int FILESYSTEM_STATISTICS_TYPE_FAT = (int)2L;
    /**
     * {@snippet lang=c :
     * #define FILESYSTEM_STATISTICS_TYPE_FAT 2
     * }
     */
    public static int FILESYSTEM_STATISTICS_TYPE_FAT() {
        return FILESYSTEM_STATISTICS_TYPE_FAT;
    }
    private static final int FILESYSTEM_STATISTICS_TYPE_EXFAT = (int)3L;
    /**
     * {@snippet lang=c :
     * #define FILESYSTEM_STATISTICS_TYPE_EXFAT 3
     * }
     */
    public static int FILESYSTEM_STATISTICS_TYPE_EXFAT() {
        return FILESYSTEM_STATISTICS_TYPE_EXFAT;
    }
    private static final int FILESYSTEM_STATISTICS_TYPE_REFS = (int)4L;
    /**
     * {@snippet lang=c :
     * #define FILESYSTEM_STATISTICS_TYPE_REFS 4
     * }
     */
    public static int FILESYSTEM_STATISTICS_TYPE_REFS() {
        return FILESYSTEM_STATISTICS_TYPE_REFS;
    }
    private static final int FILE_SET_ENCRYPTION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define FILE_SET_ENCRYPTION 1
     * }
     */
    public static int FILE_SET_ENCRYPTION() {
        return FILE_SET_ENCRYPTION;
    }
    private static final int FILE_CLEAR_ENCRYPTION = (int)2L;
    /**
     * {@snippet lang=c :
     * #define FILE_CLEAR_ENCRYPTION 2
     * }
     */
    public static int FILE_CLEAR_ENCRYPTION() {
        return FILE_CLEAR_ENCRYPTION;
    }
    private static final int STREAM_SET_ENCRYPTION = (int)3L;
    /**
     * {@snippet lang=c :
     * #define STREAM_SET_ENCRYPTION 3
     * }
     */
    public static int STREAM_SET_ENCRYPTION() {
        return STREAM_SET_ENCRYPTION;
    }
    private static final int STREAM_CLEAR_ENCRYPTION = (int)4L;
    /**
     * {@snippet lang=c :
     * #define STREAM_CLEAR_ENCRYPTION 4
     * }
     */
    public static int STREAM_CLEAR_ENCRYPTION() {
        return STREAM_CLEAR_ENCRYPTION;
    }
    private static final int MAXIMUM_ENCRYPTION_VALUE = (int)4L;
    /**
     * {@snippet lang=c :
     * #define MAXIMUM_ENCRYPTION_VALUE 4
     * }
     */
    public static int MAXIMUM_ENCRYPTION_VALUE() {
        return MAXIMUM_ENCRYPTION_VALUE;
    }
    private static final int ENCRYPTED_DATA_INFO_SPARSE_FILE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define ENCRYPTED_DATA_INFO_SPARSE_FILE 1
     * }
     */
    public static int ENCRYPTED_DATA_INFO_SPARSE_FILE() {
        return ENCRYPTED_DATA_INFO_SPARSE_FILE;
    }
    private static final int ENCRYPTED_DATA_INFO_SPARSE_DATA = (int)2L;
    /**
     * {@snippet lang=c :
     * #define ENCRYPTED_DATA_INFO_SPARSE_DATA 2
     * }
     */
    public static int ENCRYPTED_DATA_INFO_SPARSE_DATA() {
        return ENCRYPTED_DATA_INFO_SPARSE_DATA;
    }
    private static final int ENCRYPTED_DATA_INFO_4K_SPARSE_UNIT = (int)4L;
    /**
     * {@snippet lang=c :
     * #define ENCRYPTED_DATA_INFO_4K_SPARSE_UNIT 4
     * }
     */
    public static int ENCRYPTED_DATA_INFO_4K_SPARSE_UNIT() {
        return ENCRYPTED_DATA_INFO_4K_SPARSE_UNIT;
    }
    private static final int COPYFILE_SIS_LINK = (int)1L;
    /**
     * {@snippet lang=c :
     * #define COPYFILE_SIS_LINK 1
     * }
     */
    public static int COPYFILE_SIS_LINK() {
        return COPYFILE_SIS_LINK;
    }
    private static final int COPYFILE_SIS_REPLACE = (int)2L;
    /**
     * {@snippet lang=c :
     * #define COPYFILE_SIS_REPLACE 2
     * }
     */
    public static int COPYFILE_SIS_REPLACE() {
        return COPYFILE_SIS_REPLACE;
    }
    private static final int COPYFILE_SIS_FLAGS = (int)3L;
    /**
     * {@snippet lang=c :
     * #define COPYFILE_SIS_FLAGS 3
     * }
     */
    public static int COPYFILE_SIS_FLAGS() {
        return COPYFILE_SIS_FLAGS;
    }
    private static final int TXFS_RM_FLAG_LOGGING_MODE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define TXFS_RM_FLAG_LOGGING_MODE 1
     * }
     */
    public static int TXFS_RM_FLAG_LOGGING_MODE() {
        return TXFS_RM_FLAG_LOGGING_MODE;
    }
    private static final int TXFS_RM_FLAG_RENAME_RM = (int)2L;
    /**
     * {@snippet lang=c :
     * #define TXFS_RM_FLAG_RENAME_RM 2
     * }
     */
    public static int TXFS_RM_FLAG_RENAME_RM() {
        return TXFS_RM_FLAG_RENAME_RM;
    }
    private static final int TXFS_RM_FLAG_LOG_CONTAINER_COUNT_MAX = (int)4L;
    /**
     * {@snippet lang=c :
     * #define TXFS_RM_FLAG_LOG_CONTAINER_COUNT_MAX 4
     * }
     */
    public static int TXFS_RM_FLAG_LOG_CONTAINER_COUNT_MAX() {
        return TXFS_RM_FLAG_LOG_CONTAINER_COUNT_MAX;
    }
    private static final int TXFS_RM_FLAG_LOG_CONTAINER_COUNT_MIN = (int)8L;
    /**
     * {@snippet lang=c :
     * #define TXFS_RM_FLAG_LOG_CONTAINER_COUNT_MIN 8
     * }
     */
    public static int TXFS_RM_FLAG_LOG_CONTAINER_COUNT_MIN() {
        return TXFS_RM_FLAG_LOG_CONTAINER_COUNT_MIN;
    }
    private static final int TXFS_RM_FLAG_LOG_GROWTH_INCREMENT_NUM_CONTAINERS = (int)16L;
    /**
     * {@snippet lang=c :
     * #define TXFS_RM_FLAG_LOG_GROWTH_INCREMENT_NUM_CONTAINERS 16
     * }
     */
    public static int TXFS_RM_FLAG_LOG_GROWTH_INCREMENT_NUM_CONTAINERS() {
        return TXFS_RM_FLAG_LOG_GROWTH_INCREMENT_NUM_CONTAINERS;
    }
    private static final int TXFS_RM_FLAG_LOG_GROWTH_INCREMENT_PERCENT = (int)32L;
    /**
     * {@snippet lang=c :
     * #define TXFS_RM_FLAG_LOG_GROWTH_INCREMENT_PERCENT 32
     * }
     */
    public static int TXFS_RM_FLAG_LOG_GROWTH_INCREMENT_PERCENT() {
        return TXFS_RM_FLAG_LOG_GROWTH_INCREMENT_PERCENT;
    }
    private static final int TXFS_RM_FLAG_LOG_AUTO_SHRINK_PERCENTAGE = (int)64L;
    /**
     * {@snippet lang=c :
     * #define TXFS_RM_FLAG_LOG_AUTO_SHRINK_PERCENTAGE 64
     * }
     */
    public static int TXFS_RM_FLAG_LOG_AUTO_SHRINK_PERCENTAGE() {
        return TXFS_RM_FLAG_LOG_AUTO_SHRINK_PERCENTAGE;
    }
    private static final int TXFS_RM_FLAG_LOG_NO_CONTAINER_COUNT_MAX = (int)128L;
    /**
     * {@snippet lang=c :
     * #define TXFS_RM_FLAG_LOG_NO_CONTAINER_COUNT_MAX 128
     * }
     */
    public static int TXFS_RM_FLAG_LOG_NO_CONTAINER_COUNT_MAX() {
        return TXFS_RM_FLAG_LOG_NO_CONTAINER_COUNT_MAX;
    }
    private static final int TXFS_RM_FLAG_LOG_NO_CONTAINER_COUNT_MIN = (int)256L;
    /**
     * {@snippet lang=c :
     * #define TXFS_RM_FLAG_LOG_NO_CONTAINER_COUNT_MIN 256
     * }
     */
    public static int TXFS_RM_FLAG_LOG_NO_CONTAINER_COUNT_MIN() {
        return TXFS_RM_FLAG_LOG_NO_CONTAINER_COUNT_MIN;
    }
    private static final int TXFS_RM_FLAG_GROW_LOG = (int)1024L;
    /**
     * {@snippet lang=c :
     * #define TXFS_RM_FLAG_GROW_LOG 1024
     * }
     */
    public static int TXFS_RM_FLAG_GROW_LOG() {
        return TXFS_RM_FLAG_GROW_LOG;
    }
    private static final int TXFS_RM_FLAG_SHRINK_LOG = (int)2048L;
    /**
     * {@snippet lang=c :
     * #define TXFS_RM_FLAG_SHRINK_LOG 2048
     * }
     */
    public static int TXFS_RM_FLAG_SHRINK_LOG() {
        return TXFS_RM_FLAG_SHRINK_LOG;
    }
    private static final int TXFS_RM_FLAG_ENFORCE_MINIMUM_SIZE = (int)4096L;
    /**
     * {@snippet lang=c :
     * #define TXFS_RM_FLAG_ENFORCE_MINIMUM_SIZE 4096
     * }
     */
    public static int TXFS_RM_FLAG_ENFORCE_MINIMUM_SIZE() {
        return TXFS_RM_FLAG_ENFORCE_MINIMUM_SIZE;
    }
    private static final int TXFS_RM_FLAG_PRESERVE_CHANGES = (int)8192L;
    /**
     * {@snippet lang=c :
     * #define TXFS_RM_FLAG_PRESERVE_CHANGES 8192
     * }
     */
    public static int TXFS_RM_FLAG_PRESERVE_CHANGES() {
        return TXFS_RM_FLAG_PRESERVE_CHANGES;
    }
    private static final int TXFS_RM_FLAG_RESET_RM_AT_NEXT_START = (int)16384L;
    /**
     * {@snippet lang=c :
     * #define TXFS_RM_FLAG_RESET_RM_AT_NEXT_START 16384
     * }
     */
    public static int TXFS_RM_FLAG_RESET_RM_AT_NEXT_START() {
        return TXFS_RM_FLAG_RESET_RM_AT_NEXT_START;
    }
    private static final int TXFS_RM_FLAG_DO_NOT_RESET_RM_AT_NEXT_START = (int)32768L;
    /**
     * {@snippet lang=c :
     * #define TXFS_RM_FLAG_DO_NOT_RESET_RM_AT_NEXT_START 32768
     * }
     */
    public static int TXFS_RM_FLAG_DO_NOT_RESET_RM_AT_NEXT_START() {
        return TXFS_RM_FLAG_DO_NOT_RESET_RM_AT_NEXT_START;
    }
    private static final int TXFS_RM_FLAG_PREFER_CONSISTENCY = (int)65536L;
    /**
     * {@snippet lang=c :
     * #define TXFS_RM_FLAG_PREFER_CONSISTENCY 65536
     * }
     */
    public static int TXFS_RM_FLAG_PREFER_CONSISTENCY() {
        return TXFS_RM_FLAG_PREFER_CONSISTENCY;
    }
    private static final int TXFS_RM_FLAG_PREFER_AVAILABILITY = (int)131072L;
    /**
     * {@snippet lang=c :
     * #define TXFS_RM_FLAG_PREFER_AVAILABILITY 131072
     * }
     */
    public static int TXFS_RM_FLAG_PREFER_AVAILABILITY() {
        return TXFS_RM_FLAG_PREFER_AVAILABILITY;
    }
    private static final int TXFS_TRANSACTION_STATE_NONE = (int)0L;
    /**
     * {@snippet lang=c :
     * #define TXFS_TRANSACTION_STATE_NONE 0
     * }
     */
    public static int TXFS_TRANSACTION_STATE_NONE() {
        return TXFS_TRANSACTION_STATE_NONE;
    }
    private static final int TXFS_TRANSACTION_STATE_ACTIVE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define TXFS_TRANSACTION_STATE_ACTIVE 1
     * }
     */
    public static int TXFS_TRANSACTION_STATE_ACTIVE() {
        return TXFS_TRANSACTION_STATE_ACTIVE;
    }
    private static final int TXFS_TRANSACTION_STATE_PREPARED = (int)2L;
    /**
     * {@snippet lang=c :
     * #define TXFS_TRANSACTION_STATE_PREPARED 2
     * }
     */
    public static int TXFS_TRANSACTION_STATE_PREPARED() {
        return TXFS_TRANSACTION_STATE_PREPARED;
    }
    private static final int TXFS_TRANSACTION_STATE_NOTACTIVE = (int)3L;
    /**
     * {@snippet lang=c :
     * #define TXFS_TRANSACTION_STATE_NOTACTIVE 3
     * }
     */
    public static int TXFS_TRANSACTION_STATE_NOTACTIVE() {
        return TXFS_TRANSACTION_STATE_NOTACTIVE;
    }
    private static final int TXFS_RM_STATE_NOT_STARTED = (int)0L;
    /**
     * {@snippet lang=c :
     * #define TXFS_RM_STATE_NOT_STARTED 0
     * }
     */
    public static int TXFS_RM_STATE_NOT_STARTED() {
        return TXFS_RM_STATE_NOT_STARTED;
    }
    private static final int TXFS_RM_STATE_STARTING = (int)1L;
    /**
     * {@snippet lang=c :
     * #define TXFS_RM_STATE_STARTING 1
     * }
     */
    public static int TXFS_RM_STATE_STARTING() {
        return TXFS_RM_STATE_STARTING;
    }
    private static final int TXFS_RM_STATE_ACTIVE = (int)2L;
    /**
     * {@snippet lang=c :
     * #define TXFS_RM_STATE_ACTIVE 2
     * }
     */
    public static int TXFS_RM_STATE_ACTIVE() {
        return TXFS_RM_STATE_ACTIVE;
    }
    private static final int TXFS_RM_STATE_SHUTTING_DOWN = (int)3L;
    /**
     * {@snippet lang=c :
     * #define TXFS_RM_STATE_SHUTTING_DOWN 3
     * }
     */
    public static int TXFS_RM_STATE_SHUTTING_DOWN() {
        return TXFS_RM_STATE_SHUTTING_DOWN;
    }
    private static final int TXFS_ROLLFORWARD_REDO_FLAG_USE_LAST_REDO_LSN = (int)1L;
    /**
     * {@snippet lang=c :
     * #define TXFS_ROLLFORWARD_REDO_FLAG_USE_LAST_REDO_LSN 1
     * }
     */
    public static int TXFS_ROLLFORWARD_REDO_FLAG_USE_LAST_REDO_LSN() {
        return TXFS_ROLLFORWARD_REDO_FLAG_USE_LAST_REDO_LSN;
    }
    private static final int TXFS_ROLLFORWARD_REDO_FLAG_USE_LAST_VIRTUAL_CLOCK = (int)2L;
    /**
     * {@snippet lang=c :
     * #define TXFS_ROLLFORWARD_REDO_FLAG_USE_LAST_VIRTUAL_CLOCK 2
     * }
     */
    public static int TXFS_ROLLFORWARD_REDO_FLAG_USE_LAST_VIRTUAL_CLOCK() {
        return TXFS_ROLLFORWARD_REDO_FLAG_USE_LAST_VIRTUAL_CLOCK;
    }
    private static final int TXFS_START_RM_FLAG_LOG_CONTAINER_COUNT_MAX = (int)1L;
    /**
     * {@snippet lang=c :
     * #define TXFS_START_RM_FLAG_LOG_CONTAINER_COUNT_MAX 1
     * }
     */
    public static int TXFS_START_RM_FLAG_LOG_CONTAINER_COUNT_MAX() {
        return TXFS_START_RM_FLAG_LOG_CONTAINER_COUNT_MAX;
    }
    private static final int TXFS_START_RM_FLAG_LOG_CONTAINER_COUNT_MIN = (int)2L;
    /**
     * {@snippet lang=c :
     * #define TXFS_START_RM_FLAG_LOG_CONTAINER_COUNT_MIN 2
     * }
     */
    public static int TXFS_START_RM_FLAG_LOG_CONTAINER_COUNT_MIN() {
        return TXFS_START_RM_FLAG_LOG_CONTAINER_COUNT_MIN;
    }
    private static final int TXFS_START_RM_FLAG_LOG_CONTAINER_SIZE = (int)4L;
    /**
     * {@snippet lang=c :
     * #define TXFS_START_RM_FLAG_LOG_CONTAINER_SIZE 4
     * }
     */
    public static int TXFS_START_RM_FLAG_LOG_CONTAINER_SIZE() {
        return TXFS_START_RM_FLAG_LOG_CONTAINER_SIZE;
    }
    private static final int TXFS_START_RM_FLAG_LOG_GROWTH_INCREMENT_NUM_CONTAINERS = (int)8L;
    /**
     * {@snippet lang=c :
     * #define TXFS_START_RM_FLAG_LOG_GROWTH_INCREMENT_NUM_CONTAINERS 8
     * }
     */
    public static int TXFS_START_RM_FLAG_LOG_GROWTH_INCREMENT_NUM_CONTAINERS() {
        return TXFS_START_RM_FLAG_LOG_GROWTH_INCREMENT_NUM_CONTAINERS;
    }
    private static final int TXFS_START_RM_FLAG_LOG_GROWTH_INCREMENT_PERCENT = (int)16L;
    /**
     * {@snippet lang=c :
     * #define TXFS_START_RM_FLAG_LOG_GROWTH_INCREMENT_PERCENT 16
     * }
     */
    public static int TXFS_START_RM_FLAG_LOG_GROWTH_INCREMENT_PERCENT() {
        return TXFS_START_RM_FLAG_LOG_GROWTH_INCREMENT_PERCENT;
    }
    private static final int TXFS_START_RM_FLAG_LOG_AUTO_SHRINK_PERCENTAGE = (int)32L;
    /**
     * {@snippet lang=c :
     * #define TXFS_START_RM_FLAG_LOG_AUTO_SHRINK_PERCENTAGE 32
     * }
     */
    public static int TXFS_START_RM_FLAG_LOG_AUTO_SHRINK_PERCENTAGE() {
        return TXFS_START_RM_FLAG_LOG_AUTO_SHRINK_PERCENTAGE;
    }
    private static final int TXFS_START_RM_FLAG_LOG_NO_CONTAINER_COUNT_MAX = (int)64L;
    /**
     * {@snippet lang=c :
     * #define TXFS_START_RM_FLAG_LOG_NO_CONTAINER_COUNT_MAX 64
     * }
     */
    public static int TXFS_START_RM_FLAG_LOG_NO_CONTAINER_COUNT_MAX() {
        return TXFS_START_RM_FLAG_LOG_NO_CONTAINER_COUNT_MAX;
    }
    private static final int TXFS_START_RM_FLAG_LOG_NO_CONTAINER_COUNT_MIN = (int)128L;
    /**
     * {@snippet lang=c :
     * #define TXFS_START_RM_FLAG_LOG_NO_CONTAINER_COUNT_MIN 128
     * }
     */
    public static int TXFS_START_RM_FLAG_LOG_NO_CONTAINER_COUNT_MIN() {
        return TXFS_START_RM_FLAG_LOG_NO_CONTAINER_COUNT_MIN;
    }
    private static final int TXFS_START_RM_FLAG_RECOVER_BEST_EFFORT = (int)512L;
    /**
     * {@snippet lang=c :
     * #define TXFS_START_RM_FLAG_RECOVER_BEST_EFFORT 512
     * }
     */
    public static int TXFS_START_RM_FLAG_RECOVER_BEST_EFFORT() {
        return TXFS_START_RM_FLAG_RECOVER_BEST_EFFORT;
    }
    private static final int TXFS_START_RM_FLAG_LOGGING_MODE = (int)1024L;
    /**
     * {@snippet lang=c :
     * #define TXFS_START_RM_FLAG_LOGGING_MODE 1024
     * }
     */
    public static int TXFS_START_RM_FLAG_LOGGING_MODE() {
        return TXFS_START_RM_FLAG_LOGGING_MODE;
    }
    private static final int TXFS_START_RM_FLAG_PRESERVE_CHANGES = (int)2048L;
    /**
     * {@snippet lang=c :
     * #define TXFS_START_RM_FLAG_PRESERVE_CHANGES 2048
     * }
     */
    public static int TXFS_START_RM_FLAG_PRESERVE_CHANGES() {
        return TXFS_START_RM_FLAG_PRESERVE_CHANGES;
    }
    private static final int TXFS_START_RM_FLAG_PREFER_CONSISTENCY = (int)4096L;
    /**
     * {@snippet lang=c :
     * #define TXFS_START_RM_FLAG_PREFER_CONSISTENCY 4096
     * }
     */
    public static int TXFS_START_RM_FLAG_PREFER_CONSISTENCY() {
        return TXFS_START_RM_FLAG_PREFER_CONSISTENCY;
    }
    private static final int TXFS_START_RM_FLAG_PREFER_AVAILABILITY = (int)8192L;
    /**
     * {@snippet lang=c :
     * #define TXFS_START_RM_FLAG_PREFER_AVAILABILITY 8192
     * }
     */
    public static int TXFS_START_RM_FLAG_PREFER_AVAILABILITY() {
        return TXFS_START_RM_FLAG_PREFER_AVAILABILITY;
    }
    private static final int TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY_FLAG_CREATED = (int)1L;
    /**
     * {@snippet lang=c :
     * #define TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY_FLAG_CREATED 1
     * }
     */
    public static int TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY_FLAG_CREATED() {
        return TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY_FLAG_CREATED;
    }
    private static final int TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY_FLAG_DELETED = (int)2L;
    /**
     * {@snippet lang=c :
     * #define TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY_FLAG_DELETED 2
     * }
     */
    public static int TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY_FLAG_DELETED() {
        return TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY_FLAG_DELETED;
    }
    private static final int TXFS_SAVEPOINT_SET = (int)1L;
    /**
     * {@snippet lang=c :
     * #define TXFS_SAVEPOINT_SET 1
     * }
     */
    public static int TXFS_SAVEPOINT_SET() {
        return TXFS_SAVEPOINT_SET;
    }
    private static final int TXFS_SAVEPOINT_ROLLBACK = (int)2L;
    /**
     * {@snippet lang=c :
     * #define TXFS_SAVEPOINT_ROLLBACK 2
     * }
     */
    public static int TXFS_SAVEPOINT_ROLLBACK() {
        return TXFS_SAVEPOINT_ROLLBACK;
    }
    private static final int TXFS_SAVEPOINT_CLEAR = (int)4L;
    /**
     * {@snippet lang=c :
     * #define TXFS_SAVEPOINT_CLEAR 4
     * }
     */
    public static int TXFS_SAVEPOINT_CLEAR() {
        return TXFS_SAVEPOINT_CLEAR;
    }
    private static final int TXFS_SAVEPOINT_CLEAR_ALL = (int)16L;
    /**
     * {@snippet lang=c :
     * #define TXFS_SAVEPOINT_CLEAR_ALL 16
     * }
     */
    public static int TXFS_SAVEPOINT_CLEAR_ALL() {
        return TXFS_SAVEPOINT_CLEAR_ALL;
    }
    private static final int REQUEST_OPLOCK_CURRENT_VERSION = (int)1L;
    /**
     * {@snippet lang=c :
     * #define REQUEST_OPLOCK_CURRENT_VERSION 1
     * }
     */
    public static int REQUEST_OPLOCK_CURRENT_VERSION() {
        return REQUEST_OPLOCK_CURRENT_VERSION;
    }
    private static final int QUERY_DEPENDENT_VOLUME_REQUEST_FLAG_HOST_VOLUMES = (int)1L;
    /**
     * {@snippet lang=c :
     * #define QUERY_DEPENDENT_VOLUME_REQUEST_FLAG_HOST_VOLUMES 1
     * }
     */
    public static int QUERY_DEPENDENT_VOLUME_REQUEST_FLAG_HOST_VOLUMES() {
        return QUERY_DEPENDENT_VOLUME_REQUEST_FLAG_HOST_VOLUMES;
    }
    private static final int QUERY_DEPENDENT_VOLUME_REQUEST_FLAG_GUEST_VOLUMES = (int)2L;
    /**
     * {@snippet lang=c :
     * #define QUERY_DEPENDENT_VOLUME_REQUEST_FLAG_GUEST_VOLUMES 2
     * }
     */
    public static int QUERY_DEPENDENT_VOLUME_REQUEST_FLAG_GUEST_VOLUMES() {
        return QUERY_DEPENDENT_VOLUME_REQUEST_FLAG_GUEST_VOLUMES;
    }
    private static final int SD_GLOBAL_CHANGE_TYPE_MACHINE_SID = (int)1L;
    /**
     * {@snippet lang=c :
     * #define SD_GLOBAL_CHANGE_TYPE_MACHINE_SID 1
     * }
     */
    public static int SD_GLOBAL_CHANGE_TYPE_MACHINE_SID() {
        return SD_GLOBAL_CHANGE_TYPE_MACHINE_SID;
    }
    private static final int LOOKUP_STREAM_FROM_CLUSTER_ENTRY_FLAG_PAGE_FILE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define LOOKUP_STREAM_FROM_CLUSTER_ENTRY_FLAG_PAGE_FILE 1
     * }
     */
    public static int LOOKUP_STREAM_FROM_CLUSTER_ENTRY_FLAG_PAGE_FILE() {
        return LOOKUP_STREAM_FROM_CLUSTER_ENTRY_FLAG_PAGE_FILE;
    }
    private static final int LOOKUP_STREAM_FROM_CLUSTER_ENTRY_FLAG_DENY_DEFRAG_SET = (int)2L;
    /**
     * {@snippet lang=c :
     * #define LOOKUP_STREAM_FROM_CLUSTER_ENTRY_FLAG_DENY_DEFRAG_SET 2
     * }
     */
    public static int LOOKUP_STREAM_FROM_CLUSTER_ENTRY_FLAG_DENY_DEFRAG_SET() {
        return LOOKUP_STREAM_FROM_CLUSTER_ENTRY_FLAG_DENY_DEFRAG_SET;
    }
    private static final int LOOKUP_STREAM_FROM_CLUSTER_ENTRY_FLAG_FS_SYSTEM_FILE = (int)4L;
    /**
     * {@snippet lang=c :
     * #define LOOKUP_STREAM_FROM_CLUSTER_ENTRY_FLAG_FS_SYSTEM_FILE 4
     * }
     */
    public static int LOOKUP_STREAM_FROM_CLUSTER_ENTRY_FLAG_FS_SYSTEM_FILE() {
        return LOOKUP_STREAM_FROM_CLUSTER_ENTRY_FLAG_FS_SYSTEM_FILE;
    }
    private static final int LOOKUP_STREAM_FROM_CLUSTER_ENTRY_FLAG_TXF_SYSTEM_FILE = (int)8L;
    /**
     * {@snippet lang=c :
     * #define LOOKUP_STREAM_FROM_CLUSTER_ENTRY_FLAG_TXF_SYSTEM_FILE 8
     * }
     */
    public static int LOOKUP_STREAM_FROM_CLUSTER_ENTRY_FLAG_TXF_SYSTEM_FILE() {
        return LOOKUP_STREAM_FROM_CLUSTER_ENTRY_FLAG_TXF_SYSTEM_FILE;
    }
    private static final int LOOKUP_STREAM_FROM_CLUSTER_ENTRY_ATTRIBUTE_DATA = (int)16777216L;
    /**
     * {@snippet lang=c :
     * #define LOOKUP_STREAM_FROM_CLUSTER_ENTRY_ATTRIBUTE_DATA 16777216
     * }
     */
    public static int LOOKUP_STREAM_FROM_CLUSTER_ENTRY_ATTRIBUTE_DATA() {
        return LOOKUP_STREAM_FROM_CLUSTER_ENTRY_ATTRIBUTE_DATA;
    }
    private static final int LOOKUP_STREAM_FROM_CLUSTER_ENTRY_ATTRIBUTE_INDEX = (int)33554432L;
    /**
     * {@snippet lang=c :
     * #define LOOKUP_STREAM_FROM_CLUSTER_ENTRY_ATTRIBUTE_INDEX 33554432
     * }
     */
    public static int LOOKUP_STREAM_FROM_CLUSTER_ENTRY_ATTRIBUTE_INDEX() {
        return LOOKUP_STREAM_FROM_CLUSTER_ENTRY_ATTRIBUTE_INDEX;
    }
    private static final int LOOKUP_STREAM_FROM_CLUSTER_ENTRY_ATTRIBUTE_SYSTEM = (int)50331648L;
    /**
     * {@snippet lang=c :
     * #define LOOKUP_STREAM_FROM_CLUSTER_ENTRY_ATTRIBUTE_SYSTEM 50331648
     * }
     */
    public static int LOOKUP_STREAM_FROM_CLUSTER_ENTRY_ATTRIBUTE_SYSTEM() {
        return LOOKUP_STREAM_FROM_CLUSTER_ENTRY_ATTRIBUTE_SYSTEM;
    }
    private static final int FILE_TYPE_NOTIFICATION_FLAG_USAGE_BEGIN = (int)1L;
    /**
     * {@snippet lang=c :
     * #define FILE_TYPE_NOTIFICATION_FLAG_USAGE_BEGIN 1
     * }
     */
    public static int FILE_TYPE_NOTIFICATION_FLAG_USAGE_BEGIN() {
        return FILE_TYPE_NOTIFICATION_FLAG_USAGE_BEGIN;
    }
    private static final int FILE_TYPE_NOTIFICATION_FLAG_USAGE_END = (int)2L;
    /**
     * {@snippet lang=c :
     * #define FILE_TYPE_NOTIFICATION_FLAG_USAGE_END 2
     * }
     */
    public static int FILE_TYPE_NOTIFICATION_FLAG_USAGE_END() {
        return FILE_TYPE_NOTIFICATION_FLAG_USAGE_END;
    }
    private static final int CSV_MGMTLOCK_CHECK_VOLUME_REDIRECTED = (int)1L;
    /**
     * {@snippet lang=c :
     * #define CSV_MGMTLOCK_CHECK_VOLUME_REDIRECTED 1
     * }
     */
    public static int CSV_MGMTLOCK_CHECK_VOLUME_REDIRECTED() {
        return CSV_MGMTLOCK_CHECK_VOLUME_REDIRECTED;
    }
    private static final int CSV_QUERY_MDS_PATH_V2_VERSION_1 = (int)1L;
    /**
     * {@snippet lang=c :
     * #define CSV_QUERY_MDS_PATH_V2_VERSION_1 1
     * }
     */
    public static int CSV_QUERY_MDS_PATH_V2_VERSION_1() {
        return CSV_QUERY_MDS_PATH_V2_VERSION_1;
    }
    private static final int CSV_QUERY_MDS_PATH_FLAG_STORAGE_ON_THIS_NODE_IS_CONNECTED = (int)1L;
    /**
     * {@snippet lang=c :
     * #define CSV_QUERY_MDS_PATH_FLAG_STORAGE_ON_THIS_NODE_IS_CONNECTED 1
     * }
     */
    public static int CSV_QUERY_MDS_PATH_FLAG_STORAGE_ON_THIS_NODE_IS_CONNECTED() {
        return CSV_QUERY_MDS_PATH_FLAG_STORAGE_ON_THIS_NODE_IS_CONNECTED;
    }
    private static final int CSV_QUERY_MDS_PATH_FLAG_CSV_DIRECT_IO_ENABLED = (int)2L;
    /**
     * {@snippet lang=c :
     * #define CSV_QUERY_MDS_PATH_FLAG_CSV_DIRECT_IO_ENABLED 2
     * }
     */
    public static int CSV_QUERY_MDS_PATH_FLAG_CSV_DIRECT_IO_ENABLED() {
        return CSV_QUERY_MDS_PATH_FLAG_CSV_DIRECT_IO_ENABLED;
    }
    private static final int CSV_QUERY_MDS_PATH_FLAG_SMB_BYPASS_CSV_ENABLED = (int)4L;
    /**
     * {@snippet lang=c :
     * #define CSV_QUERY_MDS_PATH_FLAG_SMB_BYPASS_CSV_ENABLED 4
     * }
     */
    public static int CSV_QUERY_MDS_PATH_FLAG_SMB_BYPASS_CSV_ENABLED() {
        return CSV_QUERY_MDS_PATH_FLAG_SMB_BYPASS_CSV_ENABLED;
    }
    private static final int SET_PURGE_FAILURE_MODE_ENABLED = (int)1L;
    /**
     * {@snippet lang=c :
     * #define SET_PURGE_FAILURE_MODE_ENABLED 1
     * }
     */
    public static int SET_PURGE_FAILURE_MODE_ENABLED() {
        return SET_PURGE_FAILURE_MODE_ENABLED;
    }
    private static final int SET_PURGE_FAILURE_MODE_DISABLED = (int)2L;
    /**
     * {@snippet lang=c :
     * #define SET_PURGE_FAILURE_MODE_DISABLED 2
     * }
     */
    public static int SET_PURGE_FAILURE_MODE_DISABLED() {
        return SET_PURGE_FAILURE_MODE_DISABLED;
    }
    private static final int FILE_REGION_USAGE_VALID_CACHED_DATA = (int)1L;
    /**
     * {@snippet lang=c :
     * #define FILE_REGION_USAGE_VALID_CACHED_DATA 1
     * }
     */
    public static int FILE_REGION_USAGE_VALID_CACHED_DATA() {
        return FILE_REGION_USAGE_VALID_CACHED_DATA;
    }
    private static final int FILE_REGION_USAGE_VALID_NONCACHED_DATA = (int)2L;
    /**
     * {@snippet lang=c :
     * #define FILE_REGION_USAGE_VALID_NONCACHED_DATA 2
     * }
     */
    public static int FILE_REGION_USAGE_VALID_NONCACHED_DATA() {
        return FILE_REGION_USAGE_VALID_NONCACHED_DATA;
    }
    private static final int FILE_REGION_USAGE_OTHER_PAGE_ALIGNMENT = (int)4L;
    /**
     * {@snippet lang=c :
     * #define FILE_REGION_USAGE_OTHER_PAGE_ALIGNMENT 4
     * }
     */
    public static int FILE_REGION_USAGE_OTHER_PAGE_ALIGNMENT() {
        return FILE_REGION_USAGE_OTHER_PAGE_ALIGNMENT;
    }
    private static final int FILE_REGION_USAGE_LARGE_PAGE_ALIGNMENT = (int)8L;
    /**
     * {@snippet lang=c :
     * #define FILE_REGION_USAGE_LARGE_PAGE_ALIGNMENT 8
     * }
     */
    public static int FILE_REGION_USAGE_LARGE_PAGE_ALIGNMENT() {
        return FILE_REGION_USAGE_LARGE_PAGE_ALIGNMENT;
    }
    private static final int FILE_REGION_USAGE_HUGE_PAGE_ALIGNMENT = (int)16L;
    /**
     * {@snippet lang=c :
     * #define FILE_REGION_USAGE_HUGE_PAGE_ALIGNMENT 16
     * }
     */
    public static int FILE_REGION_USAGE_HUGE_PAGE_ALIGNMENT() {
        return FILE_REGION_USAGE_HUGE_PAGE_ALIGNMENT;
    }
    private static final int QUERY_STORAGE_CLASSES_FLAGS_MEASURE_READ = (int)1073741824L;
    /**
     * {@snippet lang=c :
     * #define QUERY_STORAGE_CLASSES_FLAGS_MEASURE_READ 1073741824
     * }
     */
    public static int QUERY_STORAGE_CLASSES_FLAGS_MEASURE_READ() {
        return QUERY_STORAGE_CLASSES_FLAGS_MEASURE_READ;
    }
    private static final int QUERY_STORAGE_CLASSES_FLAGS_NO_DEFRAG_VOLUME = (int)536870912L;
    /**
     * {@snippet lang=c :
     * #define QUERY_STORAGE_CLASSES_FLAGS_NO_DEFRAG_VOLUME 536870912
     * }
     */
    public static int QUERY_STORAGE_CLASSES_FLAGS_NO_DEFRAG_VOLUME() {
        return QUERY_STORAGE_CLASSES_FLAGS_NO_DEFRAG_VOLUME;
    }
    private static final int DUPLICATE_EXTENTS_DATA_EX_SOURCE_ATOMIC = (int)1L;
    /**
     * {@snippet lang=c :
     * #define DUPLICATE_EXTENTS_DATA_EX_SOURCE_ATOMIC 1
     * }
     */
    public static int DUPLICATE_EXTENTS_DATA_EX_SOURCE_ATOMIC() {
        return DUPLICATE_EXTENTS_DATA_EX_SOURCE_ATOMIC;
    }
    private static final int DUPLICATE_EXTENTS_DATA_EX_ASYNC = (int)2L;
    /**
     * {@snippet lang=c :
     * #define DUPLICATE_EXTENTS_DATA_EX_ASYNC 2
     * }
     */
    public static int DUPLICATE_EXTENTS_DATA_EX_ASYNC() {
        return DUPLICATE_EXTENTS_DATA_EX_ASYNC;
    }
    private static final int REFS_SMR_VOLUME_INFO_OUTPUT_VERSION_V0 = (int)0L;
    /**
     * {@snippet lang=c :
     * #define REFS_SMR_VOLUME_INFO_OUTPUT_VERSION_V0 0
     * }
     */
    public static int REFS_SMR_VOLUME_INFO_OUTPUT_VERSION_V0() {
        return REFS_SMR_VOLUME_INFO_OUTPUT_VERSION_V0;
    }
    private static final int REFS_SMR_VOLUME_INFO_OUTPUT_VERSION_V1 = (int)1L;
    /**
     * {@snippet lang=c :
     * #define REFS_SMR_VOLUME_INFO_OUTPUT_VERSION_V1 1
     * }
     */
    public static int REFS_SMR_VOLUME_INFO_OUTPUT_VERSION_V1() {
        return REFS_SMR_VOLUME_INFO_OUTPUT_VERSION_V1;
    }
    private static final int REFS_SMR_VOLUME_GC_PARAMETERS_VERSION_V1 = (int)1L;
    /**
     * {@snippet lang=c :
     * #define REFS_SMR_VOLUME_GC_PARAMETERS_VERSION_V1 1
     * }
     */
    public static int REFS_SMR_VOLUME_GC_PARAMETERS_VERSION_V1() {
        return REFS_SMR_VOLUME_GC_PARAMETERS_VERSION_V1;
    }
    private static final int WIM_PROVIDER_HASH_SIZE = (int)20L;
    /**
     * {@snippet lang=c :
     * #define WIM_PROVIDER_HASH_SIZE 20
     * }
     */
    public static int WIM_PROVIDER_HASH_SIZE() {
        return WIM_PROVIDER_HASH_SIZE;
    }
    private static final int PROJFS_PROTOCOL_VERSION = (int)3L;
    /**
     * {@snippet lang=c :
     * #define PROJFS_PROTOCOL_VERSION 3
     * }
     */
    public static int PROJFS_PROTOCOL_VERSION() {
        return PROJFS_PROTOCOL_VERSION;
    }
    private static final int IOCTL_VOLUME_BASE = (int)86L;
    /**
     * {@snippet lang=c :
     * #define IOCTL_VOLUME_BASE 86
     * }
     */
    public static int IOCTL_VOLUME_BASE() {
        return IOCTL_VOLUME_BASE;
    }
    private static final int EFS_TRACKED_OFFSET_HEADER_FLAG = (int)1L;
    /**
     * {@snippet lang=c :
     * #define EFS_TRACKED_OFFSET_HEADER_FLAG 1
     * }
     */
    public static int EFS_TRACKED_OFFSET_HEADER_FLAG() {
        return EFS_TRACKED_OFFSET_HEADER_FLAG;
    }
    private static final int SPACES_TRACKED_OFFSET_HEADER_FLAG = (int)2L;
    /**
     * {@snippet lang=c :
     * #define SPACES_TRACKED_OFFSET_HEADER_FLAG 2
     * }
     */
    public static int SPACES_TRACKED_OFFSET_HEADER_FLAG() {
        return SPACES_TRACKED_OFFSET_HEADER_FLAG;
    }
    private static final int SCARD_ATR_LENGTH = (int)33L;
    /**
     * {@snippet lang=c :
     * #define SCARD_ATR_LENGTH 33
     * }
     */
    public static int SCARD_ATR_LENGTH() {
        return SCARD_ATR_LENGTH;
    }
    private static final int SCARD_PROTOCOL_UNDEFINED = (int)0L;
    /**
     * {@snippet lang=c :
     * #define SCARD_PROTOCOL_UNDEFINED 0
     * }
     */
    public static int SCARD_PROTOCOL_UNDEFINED() {
        return SCARD_PROTOCOL_UNDEFINED;
    }
    private static final int SCARD_PROTOCOL_T0 = (int)1L;
    /**
     * {@snippet lang=c :
     * #define SCARD_PROTOCOL_T0 1
     * }
     */
    public static int SCARD_PROTOCOL_T0() {
        return SCARD_PROTOCOL_T0;
    }
    private static final int SCARD_PROTOCOL_T1 = (int)2L;
    /**
     * {@snippet lang=c :
     * #define SCARD_PROTOCOL_T1 2
     * }
     */
    public static int SCARD_PROTOCOL_T1() {
        return SCARD_PROTOCOL_T1;
    }
    private static final int SCARD_PROTOCOL_RAW = (int)65536L;
    /**
     * {@snippet lang=c :
     * #define SCARD_PROTOCOL_RAW 65536
     * }
     */
    public static int SCARD_PROTOCOL_RAW() {
        return SCARD_PROTOCOL_RAW;
    }
    private static final int SCARD_PROTOCOL_OPTIMAL = (int)0L;
    /**
     * {@snippet lang=c :
     * #define SCARD_PROTOCOL_OPTIMAL 0
     * }
     */
    public static int SCARD_PROTOCOL_OPTIMAL() {
        return SCARD_PROTOCOL_OPTIMAL;
    }
    private static final int SCARD_POWER_DOWN = (int)0L;
    /**
     * {@snippet lang=c :
     * #define SCARD_POWER_DOWN 0
     * }
     */
    public static int SCARD_POWER_DOWN() {
        return SCARD_POWER_DOWN;
    }
    private static final int SCARD_COLD_RESET = (int)1L;
    /**
     * {@snippet lang=c :
     * #define SCARD_COLD_RESET 1
     * }
     */
    public static int SCARD_COLD_RESET() {
        return SCARD_COLD_RESET;
    }
    private static final int SCARD_WARM_RESET = (int)2L;
    /**
     * {@snippet lang=c :
     * #define SCARD_WARM_RESET 2
     * }
     */
    public static int SCARD_WARM_RESET() {
        return SCARD_WARM_RESET;
    }
    private static final int MAXIMUM_ATTR_STRING_LENGTH = (int)32L;
    /**
     * {@snippet lang=c :
     * #define MAXIMUM_ATTR_STRING_LENGTH 32
     * }
     */
    public static int MAXIMUM_ATTR_STRING_LENGTH() {
        return MAXIMUM_ATTR_STRING_LENGTH;
    }
    private static final int MAXIMUM_SMARTCARD_READERS = (int)10L;
    /**
     * {@snippet lang=c :
     * #define MAXIMUM_SMARTCARD_READERS 10
     * }
     */
    public static int MAXIMUM_SMARTCARD_READERS() {
        return MAXIMUM_SMARTCARD_READERS;
    }
    private static final int SCARD_CLASS_VENDOR_INFO = (int)1L;
    /**
     * {@snippet lang=c :
     * #define SCARD_CLASS_VENDOR_INFO 1
     * }
     */
    public static int SCARD_CLASS_VENDOR_INFO() {
        return SCARD_CLASS_VENDOR_INFO;
    }
    private static final int SCARD_CLASS_COMMUNICATIONS = (int)2L;
    /**
     * {@snippet lang=c :
     * #define SCARD_CLASS_COMMUNICATIONS 2
     * }
     */
    public static int SCARD_CLASS_COMMUNICATIONS() {
        return SCARD_CLASS_COMMUNICATIONS;
    }
    private static final int SCARD_CLASS_PROTOCOL = (int)3L;
    /**
     * {@snippet lang=c :
     * #define SCARD_CLASS_PROTOCOL 3
     * }
     */
    public static int SCARD_CLASS_PROTOCOL() {
        return SCARD_CLASS_PROTOCOL;
    }
    private static final int SCARD_CLASS_POWER_MGMT = (int)4L;
    /**
     * {@snippet lang=c :
     * #define SCARD_CLASS_POWER_MGMT 4
     * }
     */
    public static int SCARD_CLASS_POWER_MGMT() {
        return SCARD_CLASS_POWER_MGMT;
    }
    private static final int SCARD_CLASS_SECURITY = (int)5L;
    /**
     * {@snippet lang=c :
     * #define SCARD_CLASS_SECURITY 5
     * }
     */
    public static int SCARD_CLASS_SECURITY() {
        return SCARD_CLASS_SECURITY;
    }
    private static final int SCARD_CLASS_MECHANICAL = (int)6L;
    /**
     * {@snippet lang=c :
     * #define SCARD_CLASS_MECHANICAL 6
     * }
     */
    public static int SCARD_CLASS_MECHANICAL() {
        return SCARD_CLASS_MECHANICAL;
    }
    private static final int SCARD_CLASS_VENDOR_DEFINED = (int)7L;
    /**
     * {@snippet lang=c :
     * #define SCARD_CLASS_VENDOR_DEFINED 7
     * }
     */
    public static int SCARD_CLASS_VENDOR_DEFINED() {
        return SCARD_CLASS_VENDOR_DEFINED;
    }
    private static final int SCARD_CLASS_IFD_PROTOCOL = (int)8L;
    /**
     * {@snippet lang=c :
     * #define SCARD_CLASS_IFD_PROTOCOL 8
     * }
     */
    public static int SCARD_CLASS_IFD_PROTOCOL() {
        return SCARD_CLASS_IFD_PROTOCOL;
    }
    private static final int SCARD_CLASS_ICC_STATE = (int)9L;
    /**
     * {@snippet lang=c :
     * #define SCARD_CLASS_ICC_STATE 9
     * }
     */
    public static int SCARD_CLASS_ICC_STATE() {
        return SCARD_CLASS_ICC_STATE;
    }
    private static final int SCARD_CLASS_PERF = (int)32766L;
    /**
     * {@snippet lang=c :
     * #define SCARD_CLASS_PERF 32766
     * }
     */
    public static int SCARD_CLASS_PERF() {
        return SCARD_CLASS_PERF;
    }
    private static final int SCARD_CLASS_SYSTEM = (int)32767L;
    /**
     * {@snippet lang=c :
     * #define SCARD_CLASS_SYSTEM 32767
     * }
     */
    public static int SCARD_CLASS_SYSTEM() {
        return SCARD_CLASS_SYSTEM;
    }
    private static final int SCARD_T0_HEADER_LENGTH = (int)7L;
    /**
     * {@snippet lang=c :
     * #define SCARD_T0_HEADER_LENGTH 7
     * }
     */
    public static int SCARD_T0_HEADER_LENGTH() {
        return SCARD_T0_HEADER_LENGTH;
    }
    private static final int SCARD_T0_CMD_LENGTH = (int)5L;
    /**
     * {@snippet lang=c :
     * #define SCARD_T0_CMD_LENGTH 5
     * }
     */
    public static int SCARD_T0_CMD_LENGTH() {
        return SCARD_T0_CMD_LENGTH;
    }
    private static final int SCARD_T1_PROLOGUE_LENGTH = (int)3L;
    /**
     * {@snippet lang=c :
     * #define SCARD_T1_PROLOGUE_LENGTH 3
     * }
     */
    public static int SCARD_T1_PROLOGUE_LENGTH() {
        return SCARD_T1_PROLOGUE_LENGTH;
    }
    private static final int SCARD_T1_EPILOGUE_LENGTH = (int)2L;
    /**
     * {@snippet lang=c :
     * #define SCARD_T1_EPILOGUE_LENGTH 2
     * }
     */
    public static int SCARD_T1_EPILOGUE_LENGTH() {
        return SCARD_T1_EPILOGUE_LENGTH;
    }
    private static final int SCARD_T1_EPILOGUE_LENGTH_LRC = (int)1L;
    /**
     * {@snippet lang=c :
     * #define SCARD_T1_EPILOGUE_LENGTH_LRC 1
     * }
     */
    public static int SCARD_T1_EPILOGUE_LENGTH_LRC() {
        return SCARD_T1_EPILOGUE_LENGTH_LRC;
    }
    private static final int SCARD_T1_MAX_IFS = (int)254L;
    /**
     * {@snippet lang=c :
     * #define SCARD_T1_MAX_IFS 254
     * }
     */
    public static int SCARD_T1_MAX_IFS() {
        return SCARD_T1_MAX_IFS;
    }
    private static final int SCARD_UNKNOWN = (int)0L;
    /**
     * {@snippet lang=c :
     * #define SCARD_UNKNOWN 0
     * }
     */
    public static int SCARD_UNKNOWN() {
        return SCARD_UNKNOWN;
    }
    private static final int SCARD_ABSENT = (int)1L;
    /**
     * {@snippet lang=c :
     * #define SCARD_ABSENT 1
     * }
     */
    public static int SCARD_ABSENT() {
        return SCARD_ABSENT;
    }
    private static final int SCARD_PRESENT = (int)2L;
    /**
     * {@snippet lang=c :
     * #define SCARD_PRESENT 2
     * }
     */
    public static int SCARD_PRESENT() {
        return SCARD_PRESENT;
    }
    private static final int SCARD_SWALLOWED = (int)3L;
    /**
     * {@snippet lang=c :
     * #define SCARD_SWALLOWED 3
     * }
     */
    public static int SCARD_SWALLOWED() {
        return SCARD_SWALLOWED;
    }
    private static final int SCARD_POWERED = (int)4L;
    /**
     * {@snippet lang=c :
     * #define SCARD_POWERED 4
     * }
     */
    public static int SCARD_POWERED() {
        return SCARD_POWERED;
    }
    private static final int SCARD_NEGOTIABLE = (int)5L;
    /**
     * {@snippet lang=c :
     * #define SCARD_NEGOTIABLE 5
     * }
     */
    public static int SCARD_NEGOTIABLE() {
        return SCARD_NEGOTIABLE;
    }
    private static final int SCARD_SPECIFIC = (int)6L;
    /**
     * {@snippet lang=c :
     * #define SCARD_SPECIFIC 6
     * }
     */
    public static int SCARD_SPECIFIC() {
        return SCARD_SPECIFIC;
    }
    private static final int SCARD_READER_SWALLOWS = (int)1L;
    /**
     * {@snippet lang=c :
     * #define SCARD_READER_SWALLOWS 1
     * }
     */
    public static int SCARD_READER_SWALLOWS() {
        return SCARD_READER_SWALLOWS;
    }
    private static final int SCARD_READER_EJECTS = (int)2L;
    /**
     * {@snippet lang=c :
     * #define SCARD_READER_EJECTS 2
     * }
     */
    public static int SCARD_READER_EJECTS() {
        return SCARD_READER_EJECTS;
    }
    private static final int SCARD_READER_CONFISCATES = (int)4L;
    /**
     * {@snippet lang=c :
     * #define SCARD_READER_CONFISCATES 4
     * }
     */
    public static int SCARD_READER_CONFISCATES() {
        return SCARD_READER_CONFISCATES;
    }
    private static final int SCARD_READER_CONTACTLESS = (int)8L;
    /**
     * {@snippet lang=c :
     * #define SCARD_READER_CONTACTLESS 8
     * }
     */
    public static int SCARD_READER_CONTACTLESS() {
        return SCARD_READER_CONTACTLESS;
    }
    private static final int SCARD_READER_TYPE_SERIAL = (int)1L;
    /**
     * {@snippet lang=c :
     * #define SCARD_READER_TYPE_SERIAL 1
     * }
     */
    public static int SCARD_READER_TYPE_SERIAL() {
        return SCARD_READER_TYPE_SERIAL;
    }
    private static final int SCARD_READER_TYPE_PARALELL = (int)2L;
    /**
     * {@snippet lang=c :
     * #define SCARD_READER_TYPE_PARALELL 2
     * }
     */
    public static int SCARD_READER_TYPE_PARALELL() {
        return SCARD_READER_TYPE_PARALELL;
    }
    private static final int SCARD_READER_TYPE_KEYBOARD = (int)4L;
    /**
     * {@snippet lang=c :
     * #define SCARD_READER_TYPE_KEYBOARD 4
     * }
     */
    public static int SCARD_READER_TYPE_KEYBOARD() {
        return SCARD_READER_TYPE_KEYBOARD;
    }
    private static final int SCARD_READER_TYPE_SCSI = (int)8L;
    /**
     * {@snippet lang=c :
     * #define SCARD_READER_TYPE_SCSI 8
     * }
     */
    public static int SCARD_READER_TYPE_SCSI() {
        return SCARD_READER_TYPE_SCSI;
    }
    private static final int SCARD_READER_TYPE_IDE = (int)16L;
    /**
     * {@snippet lang=c :
     * #define SCARD_READER_TYPE_IDE 16
     * }
     */
    public static int SCARD_READER_TYPE_IDE() {
        return SCARD_READER_TYPE_IDE;
    }
    private static final int SCARD_READER_TYPE_USB = (int)32L;
    /**
     * {@snippet lang=c :
     * #define SCARD_READER_TYPE_USB 32
     * }
     */
    public static int SCARD_READER_TYPE_USB() {
        return SCARD_READER_TYPE_USB;
    }
    private static final int SCARD_READER_TYPE_PCMCIA = (int)64L;
    /**
     * {@snippet lang=c :
     * #define SCARD_READER_TYPE_PCMCIA 64
     * }
     */
    public static int SCARD_READER_TYPE_PCMCIA() {
        return SCARD_READER_TYPE_PCMCIA;
    }
    private static final int SCARD_READER_TYPE_TPM = (int)128L;
    /**
     * {@snippet lang=c :
     * #define SCARD_READER_TYPE_TPM 128
     * }
     */
    public static int SCARD_READER_TYPE_TPM() {
        return SCARD_READER_TYPE_TPM;
    }
    private static final int SCARD_READER_TYPE_NFC = (int)256L;
    /**
     * {@snippet lang=c :
     * #define SCARD_READER_TYPE_NFC 256
     * }
     */
    public static int SCARD_READER_TYPE_NFC() {
        return SCARD_READER_TYPE_NFC;
    }
    private static final int SCARD_READER_TYPE_UICC = (int)512L;
    /**
     * {@snippet lang=c :
     * #define SCARD_READER_TYPE_UICC 512
     * }
     */
    public static int SCARD_READER_TYPE_UICC() {
        return SCARD_READER_TYPE_UICC;
    }
    private static final int SCARD_READER_TYPE_NGC = (int)1024L;
    /**
     * {@snippet lang=c :
     * #define SCARD_READER_TYPE_NGC 1024
     * }
     */
    public static int SCARD_READER_TYPE_NGC() {
        return SCARD_READER_TYPE_NGC;
    }
    private static final int SCARD_READER_TYPE_EMBEDDEDSE = (int)2048L;
    /**
     * {@snippet lang=c :
     * #define SCARD_READER_TYPE_EMBEDDEDSE 2048
     * }
     */
    public static int SCARD_READER_TYPE_EMBEDDEDSE() {
        return SCARD_READER_TYPE_EMBEDDEDSE;
    }
    private static final int SCARD_READER_TYPE_VENDOR = (int)240L;
    /**
     * {@snippet lang=c :
     * #define SCARD_READER_TYPE_VENDOR 240
     * }
     */
    public static int SCARD_READER_TYPE_VENDOR() {
        return SCARD_READER_TYPE_VENDOR;
    }
    private static final int SCARD_SCOPE_USER = (int)0L;
    /**
     * {@snippet lang=c :
     * #define SCARD_SCOPE_USER 0
     * }
     */
    public static int SCARD_SCOPE_USER() {
        return SCARD_SCOPE_USER;
    }
    private static final int SCARD_SCOPE_TERMINAL = (int)1L;
    /**
     * {@snippet lang=c :
     * #define SCARD_SCOPE_TERMINAL 1
     * }
     */
    public static int SCARD_SCOPE_TERMINAL() {
        return SCARD_SCOPE_TERMINAL;
    }
    private static final int SCARD_SCOPE_SYSTEM = (int)2L;
    /**
     * {@snippet lang=c :
     * #define SCARD_SCOPE_SYSTEM 2
     * }
     */
    public static int SCARD_SCOPE_SYSTEM() {
        return SCARD_SCOPE_SYSTEM;
    }
    private static final int SCARD_PROVIDER_PRIMARY = (int)1L;
    /**
     * {@snippet lang=c :
     * #define SCARD_PROVIDER_PRIMARY 1
     * }
     */
    public static int SCARD_PROVIDER_PRIMARY() {
        return SCARD_PROVIDER_PRIMARY;
    }
    private static final int SCARD_PROVIDER_CSP = (int)2L;
    /**
     * {@snippet lang=c :
     * #define SCARD_PROVIDER_CSP 2
     * }
     */
    public static int SCARD_PROVIDER_CSP() {
        return SCARD_PROVIDER_CSP;
    }
    private static final int SCARD_PROVIDER_KSP = (int)3L;
    /**
     * {@snippet lang=c :
     * #define SCARD_PROVIDER_KSP 3
     * }
     */
    public static int SCARD_PROVIDER_KSP() {
        return SCARD_PROVIDER_KSP;
    }
    private static final int SCARD_STATE_UNAWARE = (int)0L;
    /**
     * {@snippet lang=c :
     * #define SCARD_STATE_UNAWARE 0
     * }
     */
    public static int SCARD_STATE_UNAWARE() {
        return SCARD_STATE_UNAWARE;
    }
    private static final int SCARD_STATE_IGNORE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define SCARD_STATE_IGNORE 1
     * }
     */
    public static int SCARD_STATE_IGNORE() {
        return SCARD_STATE_IGNORE;
    }
    private static final int SCARD_STATE_CHANGED = (int)2L;
    /**
     * {@snippet lang=c :
     * #define SCARD_STATE_CHANGED 2
     * }
     */
    public static int SCARD_STATE_CHANGED() {
        return SCARD_STATE_CHANGED;
    }
    private static final int SCARD_STATE_UNKNOWN = (int)4L;
    /**
     * {@snippet lang=c :
     * #define SCARD_STATE_UNKNOWN 4
     * }
     */
    public static int SCARD_STATE_UNKNOWN() {
        return SCARD_STATE_UNKNOWN;
    }
    private static final int SCARD_STATE_UNAVAILABLE = (int)8L;
    /**
     * {@snippet lang=c :
     * #define SCARD_STATE_UNAVAILABLE 8
     * }
     */
    public static int SCARD_STATE_UNAVAILABLE() {
        return SCARD_STATE_UNAVAILABLE;
    }
    private static final int SCARD_STATE_EMPTY = (int)16L;
    /**
     * {@snippet lang=c :
     * #define SCARD_STATE_EMPTY 16
     * }
     */
    public static int SCARD_STATE_EMPTY() {
        return SCARD_STATE_EMPTY;
    }
    private static final int SCARD_STATE_PRESENT = (int)32L;
    /**
     * {@snippet lang=c :
     * #define SCARD_STATE_PRESENT 32
     * }
     */
    public static int SCARD_STATE_PRESENT() {
        return SCARD_STATE_PRESENT;
    }
    private static final int SCARD_STATE_ATRMATCH = (int)64L;
    /**
     * {@snippet lang=c :
     * #define SCARD_STATE_ATRMATCH 64
     * }
     */
    public static int SCARD_STATE_ATRMATCH() {
        return SCARD_STATE_ATRMATCH;
    }
    private static final int SCARD_STATE_EXCLUSIVE = (int)128L;
    /**
     * {@snippet lang=c :
     * #define SCARD_STATE_EXCLUSIVE 128
     * }
     */
    public static int SCARD_STATE_EXCLUSIVE() {
        return SCARD_STATE_EXCLUSIVE;
    }
    private static final int SCARD_STATE_INUSE = (int)256L;
    /**
     * {@snippet lang=c :
     * #define SCARD_STATE_INUSE 256
     * }
     */
    public static int SCARD_STATE_INUSE() {
        return SCARD_STATE_INUSE;
    }
    private static final int SCARD_STATE_MUTE = (int)512L;
    /**
     * {@snippet lang=c :
     * #define SCARD_STATE_MUTE 512
     * }
     */
    public static int SCARD_STATE_MUTE() {
        return SCARD_STATE_MUTE;
    }
    private static final int SCARD_STATE_UNPOWERED = (int)1024L;
    /**
     * {@snippet lang=c :
     * #define SCARD_STATE_UNPOWERED 1024
     * }
     */
    public static int SCARD_STATE_UNPOWERED() {
        return SCARD_STATE_UNPOWERED;
    }
    private static final int SCARD_SHARE_EXCLUSIVE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define SCARD_SHARE_EXCLUSIVE 1
     * }
     */
    public static int SCARD_SHARE_EXCLUSIVE() {
        return SCARD_SHARE_EXCLUSIVE;
    }
    private static final int SCARD_SHARE_SHARED = (int)2L;
    /**
     * {@snippet lang=c :
     * #define SCARD_SHARE_SHARED 2
     * }
     */
    public static int SCARD_SHARE_SHARED() {
        return SCARD_SHARE_SHARED;
    }
    private static final int SCARD_SHARE_DIRECT = (int)3L;
    /**
     * {@snippet lang=c :
     * #define SCARD_SHARE_DIRECT 3
     * }
     */
    public static int SCARD_SHARE_DIRECT() {
        return SCARD_SHARE_DIRECT;
    }
    private static final int SCARD_LEAVE_CARD = (int)0L;
    /**
     * {@snippet lang=c :
     * #define SCARD_LEAVE_CARD 0
     * }
     */
    public static int SCARD_LEAVE_CARD() {
        return SCARD_LEAVE_CARD;
    }
    private static final int SCARD_RESET_CARD = (int)1L;
    /**
     * {@snippet lang=c :
     * #define SCARD_RESET_CARD 1
     * }
     */
    public static int SCARD_RESET_CARD() {
        return SCARD_RESET_CARD;
    }
    private static final int SCARD_UNPOWER_CARD = (int)2L;
    /**
     * {@snippet lang=c :
     * #define SCARD_UNPOWER_CARD 2
     * }
     */
    public static int SCARD_UNPOWER_CARD() {
        return SCARD_UNPOWER_CARD;
    }
    private static final int SCARD_EJECT_CARD = (int)3L;
    /**
     * {@snippet lang=c :
     * #define SCARD_EJECT_CARD 3
     * }
     */
    public static int SCARD_EJECT_CARD() {
        return SCARD_EJECT_CARD;
    }
}

