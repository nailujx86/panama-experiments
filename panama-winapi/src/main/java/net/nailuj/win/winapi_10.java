// Generated by jextract

package net.nailuj.win;

import java.lang.invoke.*;
import java.lang.foreign.*;
import java.nio.ByteOrder;
import java.util.*;
import java.util.function.*;
import java.util.stream.*;

import static java.lang.foreign.ValueLayout.*;
import static java.lang.foreign.MemoryLayout.PathElement.*;

public class winapi_10 extends winapi_11 {

    winapi_10() {
        // Should not be called directly
    }
    private static final int ERROR_PROFILE_NOT_FOUND = (int)2016L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PROFILE_NOT_FOUND 2016
     * }
     */
    public static int ERROR_PROFILE_NOT_FOUND() {
        return ERROR_PROFILE_NOT_FOUND;
    }
    private static final int ERROR_INVALID_COLORSPACE = (int)2017L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_COLORSPACE 2017
     * }
     */
    public static int ERROR_INVALID_COLORSPACE() {
        return ERROR_INVALID_COLORSPACE;
    }
    private static final int ERROR_ICM_NOT_ENABLED = (int)2018L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ICM_NOT_ENABLED 2018
     * }
     */
    public static int ERROR_ICM_NOT_ENABLED() {
        return ERROR_ICM_NOT_ENABLED;
    }
    private static final int ERROR_DELETING_ICM_XFORM = (int)2019L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DELETING_ICM_XFORM 2019
     * }
     */
    public static int ERROR_DELETING_ICM_XFORM() {
        return ERROR_DELETING_ICM_XFORM;
    }
    private static final int ERROR_INVALID_TRANSFORM = (int)2020L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_TRANSFORM 2020
     * }
     */
    public static int ERROR_INVALID_TRANSFORM() {
        return ERROR_INVALID_TRANSFORM;
    }
    private static final int ERROR_COLORSPACE_MISMATCH = (int)2021L;
    /**
     * {@snippet lang=c :
     * #define ERROR_COLORSPACE_MISMATCH 2021
     * }
     */
    public static int ERROR_COLORSPACE_MISMATCH() {
        return ERROR_COLORSPACE_MISMATCH;
    }
    private static final int ERROR_INVALID_COLORINDEX = (int)2022L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_COLORINDEX 2022
     * }
     */
    public static int ERROR_INVALID_COLORINDEX() {
        return ERROR_INVALID_COLORINDEX;
    }
    private static final int ERROR_PROFILE_DOES_NOT_MATCH_DEVICE = (int)2023L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PROFILE_DOES_NOT_MATCH_DEVICE 2023
     * }
     */
    public static int ERROR_PROFILE_DOES_NOT_MATCH_DEVICE() {
        return ERROR_PROFILE_DOES_NOT_MATCH_DEVICE;
    }
    private static final int ERROR_CONNECTED_OTHER_PASSWORD = (int)2108L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CONNECTED_OTHER_PASSWORD 2108
     * }
     */
    public static int ERROR_CONNECTED_OTHER_PASSWORD() {
        return ERROR_CONNECTED_OTHER_PASSWORD;
    }
    private static final int ERROR_CONNECTED_OTHER_PASSWORD_DEFAULT = (int)2109L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CONNECTED_OTHER_PASSWORD_DEFAULT 2109
     * }
     */
    public static int ERROR_CONNECTED_OTHER_PASSWORD_DEFAULT() {
        return ERROR_CONNECTED_OTHER_PASSWORD_DEFAULT;
    }
    private static final int ERROR_BAD_USERNAME = (int)2202L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BAD_USERNAME 2202
     * }
     */
    public static int ERROR_BAD_USERNAME() {
        return ERROR_BAD_USERNAME;
    }
    private static final int ERROR_NOT_CONNECTED = (int)2250L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_CONNECTED 2250
     * }
     */
    public static int ERROR_NOT_CONNECTED() {
        return ERROR_NOT_CONNECTED;
    }
    private static final int ERROR_OPEN_FILES = (int)2401L;
    /**
     * {@snippet lang=c :
     * #define ERROR_OPEN_FILES 2401
     * }
     */
    public static int ERROR_OPEN_FILES() {
        return ERROR_OPEN_FILES;
    }
    private static final int ERROR_ACTIVE_CONNECTIONS = (int)2402L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ACTIVE_CONNECTIONS 2402
     * }
     */
    public static int ERROR_ACTIVE_CONNECTIONS() {
        return ERROR_ACTIVE_CONNECTIONS;
    }
    private static final int ERROR_DEVICE_IN_USE = (int)2404L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DEVICE_IN_USE 2404
     * }
     */
    public static int ERROR_DEVICE_IN_USE() {
        return ERROR_DEVICE_IN_USE;
    }
    private static final int ERROR_UNKNOWN_PRINT_MONITOR = (int)3000L;
    /**
     * {@snippet lang=c :
     * #define ERROR_UNKNOWN_PRINT_MONITOR 3000
     * }
     */
    public static int ERROR_UNKNOWN_PRINT_MONITOR() {
        return ERROR_UNKNOWN_PRINT_MONITOR;
    }
    private static final int ERROR_PRINTER_DRIVER_IN_USE = (int)3001L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PRINTER_DRIVER_IN_USE 3001
     * }
     */
    public static int ERROR_PRINTER_DRIVER_IN_USE() {
        return ERROR_PRINTER_DRIVER_IN_USE;
    }
    private static final int ERROR_SPOOL_FILE_NOT_FOUND = (int)3002L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SPOOL_FILE_NOT_FOUND 3002
     * }
     */
    public static int ERROR_SPOOL_FILE_NOT_FOUND() {
        return ERROR_SPOOL_FILE_NOT_FOUND;
    }
    private static final int ERROR_SPL_NO_STARTDOC = (int)3003L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SPL_NO_STARTDOC 3003
     * }
     */
    public static int ERROR_SPL_NO_STARTDOC() {
        return ERROR_SPL_NO_STARTDOC;
    }
    private static final int ERROR_SPL_NO_ADDJOB = (int)3004L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SPL_NO_ADDJOB 3004
     * }
     */
    public static int ERROR_SPL_NO_ADDJOB() {
        return ERROR_SPL_NO_ADDJOB;
    }
    private static final int ERROR_PRINT_PROCESSOR_ALREADY_INSTALLED = (int)3005L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PRINT_PROCESSOR_ALREADY_INSTALLED 3005
     * }
     */
    public static int ERROR_PRINT_PROCESSOR_ALREADY_INSTALLED() {
        return ERROR_PRINT_PROCESSOR_ALREADY_INSTALLED;
    }
    private static final int ERROR_PRINT_MONITOR_ALREADY_INSTALLED = (int)3006L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PRINT_MONITOR_ALREADY_INSTALLED 3006
     * }
     */
    public static int ERROR_PRINT_MONITOR_ALREADY_INSTALLED() {
        return ERROR_PRINT_MONITOR_ALREADY_INSTALLED;
    }
    private static final int ERROR_INVALID_PRINT_MONITOR = (int)3007L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_PRINT_MONITOR 3007
     * }
     */
    public static int ERROR_INVALID_PRINT_MONITOR() {
        return ERROR_INVALID_PRINT_MONITOR;
    }
    private static final int ERROR_PRINT_MONITOR_IN_USE = (int)3008L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PRINT_MONITOR_IN_USE 3008
     * }
     */
    public static int ERROR_PRINT_MONITOR_IN_USE() {
        return ERROR_PRINT_MONITOR_IN_USE;
    }
    private static final int ERROR_PRINTER_HAS_JOBS_QUEUED = (int)3009L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PRINTER_HAS_JOBS_QUEUED 3009
     * }
     */
    public static int ERROR_PRINTER_HAS_JOBS_QUEUED() {
        return ERROR_PRINTER_HAS_JOBS_QUEUED;
    }
    private static final int ERROR_SUCCESS_REBOOT_REQUIRED = (int)3010L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SUCCESS_REBOOT_REQUIRED 3010
     * }
     */
    public static int ERROR_SUCCESS_REBOOT_REQUIRED() {
        return ERROR_SUCCESS_REBOOT_REQUIRED;
    }
    private static final int ERROR_SUCCESS_RESTART_REQUIRED = (int)3011L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SUCCESS_RESTART_REQUIRED 3011
     * }
     */
    public static int ERROR_SUCCESS_RESTART_REQUIRED() {
        return ERROR_SUCCESS_RESTART_REQUIRED;
    }
    private static final int ERROR_PRINTER_NOT_FOUND = (int)3012L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PRINTER_NOT_FOUND 3012
     * }
     */
    public static int ERROR_PRINTER_NOT_FOUND() {
        return ERROR_PRINTER_NOT_FOUND;
    }
    private static final int ERROR_PRINTER_DRIVER_WARNED = (int)3013L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PRINTER_DRIVER_WARNED 3013
     * }
     */
    public static int ERROR_PRINTER_DRIVER_WARNED() {
        return ERROR_PRINTER_DRIVER_WARNED;
    }
    private static final int ERROR_PRINTER_DRIVER_BLOCKED = (int)3014L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PRINTER_DRIVER_BLOCKED 3014
     * }
     */
    public static int ERROR_PRINTER_DRIVER_BLOCKED() {
        return ERROR_PRINTER_DRIVER_BLOCKED;
    }
    private static final int ERROR_PRINTER_DRIVER_PACKAGE_IN_USE = (int)3015L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PRINTER_DRIVER_PACKAGE_IN_USE 3015
     * }
     */
    public static int ERROR_PRINTER_DRIVER_PACKAGE_IN_USE() {
        return ERROR_PRINTER_DRIVER_PACKAGE_IN_USE;
    }
    private static final int ERROR_CORE_DRIVER_PACKAGE_NOT_FOUND = (int)3016L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CORE_DRIVER_PACKAGE_NOT_FOUND 3016
     * }
     */
    public static int ERROR_CORE_DRIVER_PACKAGE_NOT_FOUND() {
        return ERROR_CORE_DRIVER_PACKAGE_NOT_FOUND;
    }
    private static final int ERROR_FAIL_REBOOT_REQUIRED = (int)3017L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FAIL_REBOOT_REQUIRED 3017
     * }
     */
    public static int ERROR_FAIL_REBOOT_REQUIRED() {
        return ERROR_FAIL_REBOOT_REQUIRED;
    }
    private static final int ERROR_FAIL_REBOOT_INITIATED = (int)3018L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FAIL_REBOOT_INITIATED 3018
     * }
     */
    public static int ERROR_FAIL_REBOOT_INITIATED() {
        return ERROR_FAIL_REBOOT_INITIATED;
    }
    private static final int ERROR_PRINTER_DRIVER_DOWNLOAD_NEEDED = (int)3019L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PRINTER_DRIVER_DOWNLOAD_NEEDED 3019
     * }
     */
    public static int ERROR_PRINTER_DRIVER_DOWNLOAD_NEEDED() {
        return ERROR_PRINTER_DRIVER_DOWNLOAD_NEEDED;
    }
    private static final int ERROR_PRINT_JOB_RESTART_REQUIRED = (int)3020L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PRINT_JOB_RESTART_REQUIRED 3020
     * }
     */
    public static int ERROR_PRINT_JOB_RESTART_REQUIRED() {
        return ERROR_PRINT_JOB_RESTART_REQUIRED;
    }
    private static final int ERROR_INVALID_PRINTER_DRIVER_MANIFEST = (int)3021L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_PRINTER_DRIVER_MANIFEST 3021
     * }
     */
    public static int ERROR_INVALID_PRINTER_DRIVER_MANIFEST() {
        return ERROR_INVALID_PRINTER_DRIVER_MANIFEST;
    }
    private static final int ERROR_PRINTER_NOT_SHAREABLE = (int)3022L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PRINTER_NOT_SHAREABLE 3022
     * }
     */
    public static int ERROR_PRINTER_NOT_SHAREABLE() {
        return ERROR_PRINTER_NOT_SHAREABLE;
    }
    private static final int ERROR_SERVER_SERVICE_CALL_REQUIRES_SMB1 = (int)3023L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SERVER_SERVICE_CALL_REQUIRES_SMB1 3023
     * }
     */
    public static int ERROR_SERVER_SERVICE_CALL_REQUIRES_SMB1() {
        return ERROR_SERVER_SERVICE_CALL_REQUIRES_SMB1;
    }
    private static final int ERROR_NETWORK_AUTHENTICATION_PROMPT_CANCELED = (int)3024L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NETWORK_AUTHENTICATION_PROMPT_CANCELED 3024
     * }
     */
    public static int ERROR_NETWORK_AUTHENTICATION_PROMPT_CANCELED() {
        return ERROR_NETWORK_AUTHENTICATION_PROMPT_CANCELED;
    }
    private static final int ERROR_REMOTE_MAILSLOTS_DEPRECATED = (int)3025L;
    /**
     * {@snippet lang=c :
     * #define ERROR_REMOTE_MAILSLOTS_DEPRECATED 3025
     * }
     */
    public static int ERROR_REMOTE_MAILSLOTS_DEPRECATED() {
        return ERROR_REMOTE_MAILSLOTS_DEPRECATED;
    }
    private static final int ERROR_REQUEST_PAUSED = (int)3050L;
    /**
     * {@snippet lang=c :
     * #define ERROR_REQUEST_PAUSED 3050
     * }
     */
    public static int ERROR_REQUEST_PAUSED() {
        return ERROR_REQUEST_PAUSED;
    }
    private static final int ERROR_APPEXEC_CONDITION_NOT_SATISFIED = (int)3060L;
    /**
     * {@snippet lang=c :
     * #define ERROR_APPEXEC_CONDITION_NOT_SATISFIED 3060
     * }
     */
    public static int ERROR_APPEXEC_CONDITION_NOT_SATISFIED() {
        return ERROR_APPEXEC_CONDITION_NOT_SATISFIED;
    }
    private static final int ERROR_APPEXEC_HANDLE_INVALIDATED = (int)3061L;
    /**
     * {@snippet lang=c :
     * #define ERROR_APPEXEC_HANDLE_INVALIDATED 3061
     * }
     */
    public static int ERROR_APPEXEC_HANDLE_INVALIDATED() {
        return ERROR_APPEXEC_HANDLE_INVALIDATED;
    }
    private static final int ERROR_APPEXEC_INVALID_HOST_GENERATION = (int)3062L;
    /**
     * {@snippet lang=c :
     * #define ERROR_APPEXEC_INVALID_HOST_GENERATION 3062
     * }
     */
    public static int ERROR_APPEXEC_INVALID_HOST_GENERATION() {
        return ERROR_APPEXEC_INVALID_HOST_GENERATION;
    }
    private static final int ERROR_APPEXEC_UNEXPECTED_PROCESS_REGISTRATION = (int)3063L;
    /**
     * {@snippet lang=c :
     * #define ERROR_APPEXEC_UNEXPECTED_PROCESS_REGISTRATION 3063
     * }
     */
    public static int ERROR_APPEXEC_UNEXPECTED_PROCESS_REGISTRATION() {
        return ERROR_APPEXEC_UNEXPECTED_PROCESS_REGISTRATION;
    }
    private static final int ERROR_APPEXEC_INVALID_HOST_STATE = (int)3064L;
    /**
     * {@snippet lang=c :
     * #define ERROR_APPEXEC_INVALID_HOST_STATE 3064
     * }
     */
    public static int ERROR_APPEXEC_INVALID_HOST_STATE() {
        return ERROR_APPEXEC_INVALID_HOST_STATE;
    }
    private static final int ERROR_APPEXEC_NO_DONOR = (int)3065L;
    /**
     * {@snippet lang=c :
     * #define ERROR_APPEXEC_NO_DONOR 3065
     * }
     */
    public static int ERROR_APPEXEC_NO_DONOR() {
        return ERROR_APPEXEC_NO_DONOR;
    }
    private static final int ERROR_APPEXEC_HOST_ID_MISMATCH = (int)3066L;
    /**
     * {@snippet lang=c :
     * #define ERROR_APPEXEC_HOST_ID_MISMATCH 3066
     * }
     */
    public static int ERROR_APPEXEC_HOST_ID_MISMATCH() {
        return ERROR_APPEXEC_HOST_ID_MISMATCH;
    }
    private static final int ERROR_APPEXEC_UNKNOWN_USER = (int)3067L;
    /**
     * {@snippet lang=c :
     * #define ERROR_APPEXEC_UNKNOWN_USER 3067
     * }
     */
    public static int ERROR_APPEXEC_UNKNOWN_USER() {
        return ERROR_APPEXEC_UNKNOWN_USER;
    }
    private static final int ERROR_APPEXEC_APP_COMPAT_BLOCK = (int)3068L;
    /**
     * {@snippet lang=c :
     * #define ERROR_APPEXEC_APP_COMPAT_BLOCK 3068
     * }
     */
    public static int ERROR_APPEXEC_APP_COMPAT_BLOCK() {
        return ERROR_APPEXEC_APP_COMPAT_BLOCK;
    }
    private static final int ERROR_APPEXEC_CALLER_WAIT_TIMEOUT = (int)3069L;
    /**
     * {@snippet lang=c :
     * #define ERROR_APPEXEC_CALLER_WAIT_TIMEOUT 3069
     * }
     */
    public static int ERROR_APPEXEC_CALLER_WAIT_TIMEOUT() {
        return ERROR_APPEXEC_CALLER_WAIT_TIMEOUT;
    }
    private static final int ERROR_APPEXEC_CALLER_WAIT_TIMEOUT_TERMINATION = (int)3070L;
    /**
     * {@snippet lang=c :
     * #define ERROR_APPEXEC_CALLER_WAIT_TIMEOUT_TERMINATION 3070
     * }
     */
    public static int ERROR_APPEXEC_CALLER_WAIT_TIMEOUT_TERMINATION() {
        return ERROR_APPEXEC_CALLER_WAIT_TIMEOUT_TERMINATION;
    }
    private static final int ERROR_APPEXEC_CALLER_WAIT_TIMEOUT_LICENSING = (int)3071L;
    /**
     * {@snippet lang=c :
     * #define ERROR_APPEXEC_CALLER_WAIT_TIMEOUT_LICENSING 3071
     * }
     */
    public static int ERROR_APPEXEC_CALLER_WAIT_TIMEOUT_LICENSING() {
        return ERROR_APPEXEC_CALLER_WAIT_TIMEOUT_LICENSING;
    }
    private static final int ERROR_APPEXEC_CALLER_WAIT_TIMEOUT_RESOURCES = (int)3072L;
    /**
     * {@snippet lang=c :
     * #define ERROR_APPEXEC_CALLER_WAIT_TIMEOUT_RESOURCES 3072
     * }
     */
    public static int ERROR_APPEXEC_CALLER_WAIT_TIMEOUT_RESOURCES() {
        return ERROR_APPEXEC_CALLER_WAIT_TIMEOUT_RESOURCES;
    }
    private static final int ERROR_VRF_VOLATILE_CFG_AND_IO_ENABLED = (int)3080L;
    /**
     * {@snippet lang=c :
     * #define ERROR_VRF_VOLATILE_CFG_AND_IO_ENABLED 3080
     * }
     */
    public static int ERROR_VRF_VOLATILE_CFG_AND_IO_ENABLED() {
        return ERROR_VRF_VOLATILE_CFG_AND_IO_ENABLED;
    }
    private static final int ERROR_VRF_VOLATILE_NOT_STOPPABLE = (int)3081L;
    /**
     * {@snippet lang=c :
     * #define ERROR_VRF_VOLATILE_NOT_STOPPABLE 3081
     * }
     */
    public static int ERROR_VRF_VOLATILE_NOT_STOPPABLE() {
        return ERROR_VRF_VOLATILE_NOT_STOPPABLE;
    }
    private static final int ERROR_VRF_VOLATILE_SAFE_MODE = (int)3082L;
    /**
     * {@snippet lang=c :
     * #define ERROR_VRF_VOLATILE_SAFE_MODE 3082
     * }
     */
    public static int ERROR_VRF_VOLATILE_SAFE_MODE() {
        return ERROR_VRF_VOLATILE_SAFE_MODE;
    }
    private static final int ERROR_VRF_VOLATILE_NOT_RUNNABLE_SYSTEM = (int)3083L;
    /**
     * {@snippet lang=c :
     * #define ERROR_VRF_VOLATILE_NOT_RUNNABLE_SYSTEM 3083
     * }
     */
    public static int ERROR_VRF_VOLATILE_NOT_RUNNABLE_SYSTEM() {
        return ERROR_VRF_VOLATILE_NOT_RUNNABLE_SYSTEM;
    }
    private static final int ERROR_VRF_VOLATILE_NOT_SUPPORTED_RULECLASS = (int)3084L;
    /**
     * {@snippet lang=c :
     * #define ERROR_VRF_VOLATILE_NOT_SUPPORTED_RULECLASS 3084
     * }
     */
    public static int ERROR_VRF_VOLATILE_NOT_SUPPORTED_RULECLASS() {
        return ERROR_VRF_VOLATILE_NOT_SUPPORTED_RULECLASS;
    }
    private static final int ERROR_VRF_VOLATILE_PROTECTED_DRIVER = (int)3085L;
    /**
     * {@snippet lang=c :
     * #define ERROR_VRF_VOLATILE_PROTECTED_DRIVER 3085
     * }
     */
    public static int ERROR_VRF_VOLATILE_PROTECTED_DRIVER() {
        return ERROR_VRF_VOLATILE_PROTECTED_DRIVER;
    }
    private static final int ERROR_VRF_VOLATILE_NMI_REGISTERED = (int)3086L;
    /**
     * {@snippet lang=c :
     * #define ERROR_VRF_VOLATILE_NMI_REGISTERED 3086
     * }
     */
    public static int ERROR_VRF_VOLATILE_NMI_REGISTERED() {
        return ERROR_VRF_VOLATILE_NMI_REGISTERED;
    }
    private static final int ERROR_VRF_VOLATILE_SETTINGS_CONFLICT = (int)3087L;
    /**
     * {@snippet lang=c :
     * #define ERROR_VRF_VOLATILE_SETTINGS_CONFLICT 3087
     * }
     */
    public static int ERROR_VRF_VOLATILE_SETTINGS_CONFLICT() {
        return ERROR_VRF_VOLATILE_SETTINGS_CONFLICT;
    }
    private static final int ERROR_CAR_LKD_IN_PROGRESS = (int)3088L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CAR_LKD_IN_PROGRESS 3088
     * }
     */
    public static int ERROR_CAR_LKD_IN_PROGRESS() {
        return ERROR_CAR_LKD_IN_PROGRESS;
    }
    private static final int ERROR_DIF_ZERO_SIZE_INFORMATION = (int)3187L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DIF_ZERO_SIZE_INFORMATION 3187
     * }
     */
    public static int ERROR_DIF_ZERO_SIZE_INFORMATION() {
        return ERROR_DIF_ZERO_SIZE_INFORMATION;
    }
    private static final int ERROR_DIF_DRIVER_PLUGIN_MISMATCH = (int)3188L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DIF_DRIVER_PLUGIN_MISMATCH 3188
     * }
     */
    public static int ERROR_DIF_DRIVER_PLUGIN_MISMATCH() {
        return ERROR_DIF_DRIVER_PLUGIN_MISMATCH;
    }
    private static final int ERROR_DIF_DRIVER_THUNKS_NOT_ALLOWED = (int)3189L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DIF_DRIVER_THUNKS_NOT_ALLOWED 3189
     * }
     */
    public static int ERROR_DIF_DRIVER_THUNKS_NOT_ALLOWED() {
        return ERROR_DIF_DRIVER_THUNKS_NOT_ALLOWED;
    }
    private static final int ERROR_DIF_IOCALLBACK_NOT_REPLACED = (int)3190L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DIF_IOCALLBACK_NOT_REPLACED 3190
     * }
     */
    public static int ERROR_DIF_IOCALLBACK_NOT_REPLACED() {
        return ERROR_DIF_IOCALLBACK_NOT_REPLACED;
    }
    private static final int ERROR_DIF_LIVEDUMP_LIMIT_EXCEEDED = (int)3191L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DIF_LIVEDUMP_LIMIT_EXCEEDED 3191
     * }
     */
    public static int ERROR_DIF_LIVEDUMP_LIMIT_EXCEEDED() {
        return ERROR_DIF_LIVEDUMP_LIMIT_EXCEEDED;
    }
    private static final int ERROR_DIF_VOLATILE_SECTION_NOT_LOCKED = (int)3192L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DIF_VOLATILE_SECTION_NOT_LOCKED 3192
     * }
     */
    public static int ERROR_DIF_VOLATILE_SECTION_NOT_LOCKED() {
        return ERROR_DIF_VOLATILE_SECTION_NOT_LOCKED;
    }
    private static final int ERROR_DIF_VOLATILE_DRIVER_HOTPATCHED = (int)3193L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DIF_VOLATILE_DRIVER_HOTPATCHED 3193
     * }
     */
    public static int ERROR_DIF_VOLATILE_DRIVER_HOTPATCHED() {
        return ERROR_DIF_VOLATILE_DRIVER_HOTPATCHED;
    }
    private static final int ERROR_DIF_VOLATILE_INVALID_INFO = (int)3194L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DIF_VOLATILE_INVALID_INFO 3194
     * }
     */
    public static int ERROR_DIF_VOLATILE_INVALID_INFO() {
        return ERROR_DIF_VOLATILE_INVALID_INFO;
    }
    private static final int ERROR_DIF_VOLATILE_DRIVER_IS_NOT_RUNNING = (int)3195L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DIF_VOLATILE_DRIVER_IS_NOT_RUNNING 3195
     * }
     */
    public static int ERROR_DIF_VOLATILE_DRIVER_IS_NOT_RUNNING() {
        return ERROR_DIF_VOLATILE_DRIVER_IS_NOT_RUNNING;
    }
    private static final int ERROR_DIF_VOLATILE_PLUGIN_IS_NOT_RUNNING = (int)3196L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DIF_VOLATILE_PLUGIN_IS_NOT_RUNNING 3196
     * }
     */
    public static int ERROR_DIF_VOLATILE_PLUGIN_IS_NOT_RUNNING() {
        return ERROR_DIF_VOLATILE_PLUGIN_IS_NOT_RUNNING;
    }
    private static final int ERROR_DIF_VOLATILE_PLUGIN_CHANGE_NOT_ALLOWED = (int)3197L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DIF_VOLATILE_PLUGIN_CHANGE_NOT_ALLOWED 3197
     * }
     */
    public static int ERROR_DIF_VOLATILE_PLUGIN_CHANGE_NOT_ALLOWED() {
        return ERROR_DIF_VOLATILE_PLUGIN_CHANGE_NOT_ALLOWED;
    }
    private static final int ERROR_DIF_VOLATILE_NOT_ALLOWED = (int)3198L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DIF_VOLATILE_NOT_ALLOWED 3198
     * }
     */
    public static int ERROR_DIF_VOLATILE_NOT_ALLOWED() {
        return ERROR_DIF_VOLATILE_NOT_ALLOWED;
    }
    private static final int ERROR_DIF_BINDING_API_NOT_FOUND = (int)3199L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DIF_BINDING_API_NOT_FOUND 3199
     * }
     */
    public static int ERROR_DIF_BINDING_API_NOT_FOUND() {
        return ERROR_DIF_BINDING_API_NOT_FOUND;
    }
    private static final int ERROR_IO_REISSUE_AS_CACHED = (int)3950L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IO_REISSUE_AS_CACHED 3950
     * }
     */
    public static int ERROR_IO_REISSUE_AS_CACHED() {
        return ERROR_IO_REISSUE_AS_CACHED;
    }
    private static final int ERROR_WINS_INTERNAL = (int)4000L;
    /**
     * {@snippet lang=c :
     * #define ERROR_WINS_INTERNAL 4000
     * }
     */
    public static int ERROR_WINS_INTERNAL() {
        return ERROR_WINS_INTERNAL;
    }
    private static final int ERROR_CAN_NOT_DEL_LOCAL_WINS = (int)4001L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CAN_NOT_DEL_LOCAL_WINS 4001
     * }
     */
    public static int ERROR_CAN_NOT_DEL_LOCAL_WINS() {
        return ERROR_CAN_NOT_DEL_LOCAL_WINS;
    }
    private static final int ERROR_STATIC_INIT = (int)4002L;
    /**
     * {@snippet lang=c :
     * #define ERROR_STATIC_INIT 4002
     * }
     */
    public static int ERROR_STATIC_INIT() {
        return ERROR_STATIC_INIT;
    }
    private static final int ERROR_INC_BACKUP = (int)4003L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INC_BACKUP 4003
     * }
     */
    public static int ERROR_INC_BACKUP() {
        return ERROR_INC_BACKUP;
    }
    private static final int ERROR_FULL_BACKUP = (int)4004L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FULL_BACKUP 4004
     * }
     */
    public static int ERROR_FULL_BACKUP() {
        return ERROR_FULL_BACKUP;
    }
    private static final int ERROR_REC_NON_EXISTENT = (int)4005L;
    /**
     * {@snippet lang=c :
     * #define ERROR_REC_NON_EXISTENT 4005
     * }
     */
    public static int ERROR_REC_NON_EXISTENT() {
        return ERROR_REC_NON_EXISTENT;
    }
    private static final int ERROR_RPL_NOT_ALLOWED = (int)4006L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RPL_NOT_ALLOWED 4006
     * }
     */
    public static int ERROR_RPL_NOT_ALLOWED() {
        return ERROR_RPL_NOT_ALLOWED;
    }
    private static final int PEERDIST_ERROR_CONTENTINFO_VERSION_UNSUPPORTED = (int)4050L;
    /**
     * {@snippet lang=c :
     * #define PEERDIST_ERROR_CONTENTINFO_VERSION_UNSUPPORTED 4050
     * }
     */
    public static int PEERDIST_ERROR_CONTENTINFO_VERSION_UNSUPPORTED() {
        return PEERDIST_ERROR_CONTENTINFO_VERSION_UNSUPPORTED;
    }
    private static final int PEERDIST_ERROR_CANNOT_PARSE_CONTENTINFO = (int)4051L;
    /**
     * {@snippet lang=c :
     * #define PEERDIST_ERROR_CANNOT_PARSE_CONTENTINFO 4051
     * }
     */
    public static int PEERDIST_ERROR_CANNOT_PARSE_CONTENTINFO() {
        return PEERDIST_ERROR_CANNOT_PARSE_CONTENTINFO;
    }
    private static final int PEERDIST_ERROR_MISSING_DATA = (int)4052L;
    /**
     * {@snippet lang=c :
     * #define PEERDIST_ERROR_MISSING_DATA 4052
     * }
     */
    public static int PEERDIST_ERROR_MISSING_DATA() {
        return PEERDIST_ERROR_MISSING_DATA;
    }
    private static final int PEERDIST_ERROR_NO_MORE = (int)4053L;
    /**
     * {@snippet lang=c :
     * #define PEERDIST_ERROR_NO_MORE 4053
     * }
     */
    public static int PEERDIST_ERROR_NO_MORE() {
        return PEERDIST_ERROR_NO_MORE;
    }
    private static final int PEERDIST_ERROR_NOT_INITIALIZED = (int)4054L;
    /**
     * {@snippet lang=c :
     * #define PEERDIST_ERROR_NOT_INITIALIZED 4054
     * }
     */
    public static int PEERDIST_ERROR_NOT_INITIALIZED() {
        return PEERDIST_ERROR_NOT_INITIALIZED;
    }
    private static final int PEERDIST_ERROR_ALREADY_INITIALIZED = (int)4055L;
    /**
     * {@snippet lang=c :
     * #define PEERDIST_ERROR_ALREADY_INITIALIZED 4055
     * }
     */
    public static int PEERDIST_ERROR_ALREADY_INITIALIZED() {
        return PEERDIST_ERROR_ALREADY_INITIALIZED;
    }
    private static final int PEERDIST_ERROR_SHUTDOWN_IN_PROGRESS = (int)4056L;
    /**
     * {@snippet lang=c :
     * #define PEERDIST_ERROR_SHUTDOWN_IN_PROGRESS 4056
     * }
     */
    public static int PEERDIST_ERROR_SHUTDOWN_IN_PROGRESS() {
        return PEERDIST_ERROR_SHUTDOWN_IN_PROGRESS;
    }
    private static final int PEERDIST_ERROR_INVALIDATED = (int)4057L;
    /**
     * {@snippet lang=c :
     * #define PEERDIST_ERROR_INVALIDATED 4057
     * }
     */
    public static int PEERDIST_ERROR_INVALIDATED() {
        return PEERDIST_ERROR_INVALIDATED;
    }
    private static final int PEERDIST_ERROR_ALREADY_EXISTS = (int)4058L;
    /**
     * {@snippet lang=c :
     * #define PEERDIST_ERROR_ALREADY_EXISTS 4058
     * }
     */
    public static int PEERDIST_ERROR_ALREADY_EXISTS() {
        return PEERDIST_ERROR_ALREADY_EXISTS;
    }
    private static final int PEERDIST_ERROR_OPERATION_NOTFOUND = (int)4059L;
    /**
     * {@snippet lang=c :
     * #define PEERDIST_ERROR_OPERATION_NOTFOUND 4059
     * }
     */
    public static int PEERDIST_ERROR_OPERATION_NOTFOUND() {
        return PEERDIST_ERROR_OPERATION_NOTFOUND;
    }
    private static final int PEERDIST_ERROR_ALREADY_COMPLETED = (int)4060L;
    /**
     * {@snippet lang=c :
     * #define PEERDIST_ERROR_ALREADY_COMPLETED 4060
     * }
     */
    public static int PEERDIST_ERROR_ALREADY_COMPLETED() {
        return PEERDIST_ERROR_ALREADY_COMPLETED;
    }
    private static final int PEERDIST_ERROR_OUT_OF_BOUNDS = (int)4061L;
    /**
     * {@snippet lang=c :
     * #define PEERDIST_ERROR_OUT_OF_BOUNDS 4061
     * }
     */
    public static int PEERDIST_ERROR_OUT_OF_BOUNDS() {
        return PEERDIST_ERROR_OUT_OF_BOUNDS;
    }
    private static final int PEERDIST_ERROR_VERSION_UNSUPPORTED = (int)4062L;
    /**
     * {@snippet lang=c :
     * #define PEERDIST_ERROR_VERSION_UNSUPPORTED 4062
     * }
     */
    public static int PEERDIST_ERROR_VERSION_UNSUPPORTED() {
        return PEERDIST_ERROR_VERSION_UNSUPPORTED;
    }
    private static final int PEERDIST_ERROR_INVALID_CONFIGURATION = (int)4063L;
    /**
     * {@snippet lang=c :
     * #define PEERDIST_ERROR_INVALID_CONFIGURATION 4063
     * }
     */
    public static int PEERDIST_ERROR_INVALID_CONFIGURATION() {
        return PEERDIST_ERROR_INVALID_CONFIGURATION;
    }
    private static final int PEERDIST_ERROR_NOT_LICENSED = (int)4064L;
    /**
     * {@snippet lang=c :
     * #define PEERDIST_ERROR_NOT_LICENSED 4064
     * }
     */
    public static int PEERDIST_ERROR_NOT_LICENSED() {
        return PEERDIST_ERROR_NOT_LICENSED;
    }
    private static final int PEERDIST_ERROR_SERVICE_UNAVAILABLE = (int)4065L;
    /**
     * {@snippet lang=c :
     * #define PEERDIST_ERROR_SERVICE_UNAVAILABLE 4065
     * }
     */
    public static int PEERDIST_ERROR_SERVICE_UNAVAILABLE() {
        return PEERDIST_ERROR_SERVICE_UNAVAILABLE;
    }
    private static final int PEERDIST_ERROR_TRUST_FAILURE = (int)4066L;
    /**
     * {@snippet lang=c :
     * #define PEERDIST_ERROR_TRUST_FAILURE 4066
     * }
     */
    public static int PEERDIST_ERROR_TRUST_FAILURE() {
        return PEERDIST_ERROR_TRUST_FAILURE;
    }
    private static final int ERROR_DHCP_ADDRESS_CONFLICT = (int)4100L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DHCP_ADDRESS_CONFLICT 4100
     * }
     */
    public static int ERROR_DHCP_ADDRESS_CONFLICT() {
        return ERROR_DHCP_ADDRESS_CONFLICT;
    }
    private static final int ERROR_WMI_GUID_NOT_FOUND = (int)4200L;
    /**
     * {@snippet lang=c :
     * #define ERROR_WMI_GUID_NOT_FOUND 4200
     * }
     */
    public static int ERROR_WMI_GUID_NOT_FOUND() {
        return ERROR_WMI_GUID_NOT_FOUND;
    }
    private static final int ERROR_WMI_INSTANCE_NOT_FOUND = (int)4201L;
    /**
     * {@snippet lang=c :
     * #define ERROR_WMI_INSTANCE_NOT_FOUND 4201
     * }
     */
    public static int ERROR_WMI_INSTANCE_NOT_FOUND() {
        return ERROR_WMI_INSTANCE_NOT_FOUND;
    }
    private static final int ERROR_WMI_ITEMID_NOT_FOUND = (int)4202L;
    /**
     * {@snippet lang=c :
     * #define ERROR_WMI_ITEMID_NOT_FOUND 4202
     * }
     */
    public static int ERROR_WMI_ITEMID_NOT_FOUND() {
        return ERROR_WMI_ITEMID_NOT_FOUND;
    }
    private static final int ERROR_WMI_TRY_AGAIN = (int)4203L;
    /**
     * {@snippet lang=c :
     * #define ERROR_WMI_TRY_AGAIN 4203
     * }
     */
    public static int ERROR_WMI_TRY_AGAIN() {
        return ERROR_WMI_TRY_AGAIN;
    }
    private static final int ERROR_WMI_DP_NOT_FOUND = (int)4204L;
    /**
     * {@snippet lang=c :
     * #define ERROR_WMI_DP_NOT_FOUND 4204
     * }
     */
    public static int ERROR_WMI_DP_NOT_FOUND() {
        return ERROR_WMI_DP_NOT_FOUND;
    }
    private static final int ERROR_WMI_UNRESOLVED_INSTANCE_REF = (int)4205L;
    /**
     * {@snippet lang=c :
     * #define ERROR_WMI_UNRESOLVED_INSTANCE_REF 4205
     * }
     */
    public static int ERROR_WMI_UNRESOLVED_INSTANCE_REF() {
        return ERROR_WMI_UNRESOLVED_INSTANCE_REF;
    }
    private static final int ERROR_WMI_ALREADY_ENABLED = (int)4206L;
    /**
     * {@snippet lang=c :
     * #define ERROR_WMI_ALREADY_ENABLED 4206
     * }
     */
    public static int ERROR_WMI_ALREADY_ENABLED() {
        return ERROR_WMI_ALREADY_ENABLED;
    }
    private static final int ERROR_WMI_GUID_DISCONNECTED = (int)4207L;
    /**
     * {@snippet lang=c :
     * #define ERROR_WMI_GUID_DISCONNECTED 4207
     * }
     */
    public static int ERROR_WMI_GUID_DISCONNECTED() {
        return ERROR_WMI_GUID_DISCONNECTED;
    }
    private static final int ERROR_WMI_SERVER_UNAVAILABLE = (int)4208L;
    /**
     * {@snippet lang=c :
     * #define ERROR_WMI_SERVER_UNAVAILABLE 4208
     * }
     */
    public static int ERROR_WMI_SERVER_UNAVAILABLE() {
        return ERROR_WMI_SERVER_UNAVAILABLE;
    }
    private static final int ERROR_WMI_DP_FAILED = (int)4209L;
    /**
     * {@snippet lang=c :
     * #define ERROR_WMI_DP_FAILED 4209
     * }
     */
    public static int ERROR_WMI_DP_FAILED() {
        return ERROR_WMI_DP_FAILED;
    }
    private static final int ERROR_WMI_INVALID_MOF = (int)4210L;
    /**
     * {@snippet lang=c :
     * #define ERROR_WMI_INVALID_MOF 4210
     * }
     */
    public static int ERROR_WMI_INVALID_MOF() {
        return ERROR_WMI_INVALID_MOF;
    }
    private static final int ERROR_WMI_INVALID_REGINFO = (int)4211L;
    /**
     * {@snippet lang=c :
     * #define ERROR_WMI_INVALID_REGINFO 4211
     * }
     */
    public static int ERROR_WMI_INVALID_REGINFO() {
        return ERROR_WMI_INVALID_REGINFO;
    }
    private static final int ERROR_WMI_ALREADY_DISABLED = (int)4212L;
    /**
     * {@snippet lang=c :
     * #define ERROR_WMI_ALREADY_DISABLED 4212
     * }
     */
    public static int ERROR_WMI_ALREADY_DISABLED() {
        return ERROR_WMI_ALREADY_DISABLED;
    }
    private static final int ERROR_WMI_READ_ONLY = (int)4213L;
    /**
     * {@snippet lang=c :
     * #define ERROR_WMI_READ_ONLY 4213
     * }
     */
    public static int ERROR_WMI_READ_ONLY() {
        return ERROR_WMI_READ_ONLY;
    }
    private static final int ERROR_WMI_SET_FAILURE = (int)4214L;
    /**
     * {@snippet lang=c :
     * #define ERROR_WMI_SET_FAILURE 4214
     * }
     */
    public static int ERROR_WMI_SET_FAILURE() {
        return ERROR_WMI_SET_FAILURE;
    }
    private static final int ERROR_NOT_APPCONTAINER = (int)4250L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_APPCONTAINER 4250
     * }
     */
    public static int ERROR_NOT_APPCONTAINER() {
        return ERROR_NOT_APPCONTAINER;
    }
    private static final int ERROR_APPCONTAINER_REQUIRED = (int)4251L;
    /**
     * {@snippet lang=c :
     * #define ERROR_APPCONTAINER_REQUIRED 4251
     * }
     */
    public static int ERROR_APPCONTAINER_REQUIRED() {
        return ERROR_APPCONTAINER_REQUIRED;
    }
    private static final int ERROR_NOT_SUPPORTED_IN_APPCONTAINER = (int)4252L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_SUPPORTED_IN_APPCONTAINER 4252
     * }
     */
    public static int ERROR_NOT_SUPPORTED_IN_APPCONTAINER() {
        return ERROR_NOT_SUPPORTED_IN_APPCONTAINER;
    }
    private static final int ERROR_INVALID_PACKAGE_SID_LENGTH = (int)4253L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_PACKAGE_SID_LENGTH 4253
     * }
     */
    public static int ERROR_INVALID_PACKAGE_SID_LENGTH() {
        return ERROR_INVALID_PACKAGE_SID_LENGTH;
    }
    private static final int ERROR_INVALID_MEDIA = (int)4300L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_MEDIA 4300
     * }
     */
    public static int ERROR_INVALID_MEDIA() {
        return ERROR_INVALID_MEDIA;
    }
    private static final int ERROR_INVALID_LIBRARY = (int)4301L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_LIBRARY 4301
     * }
     */
    public static int ERROR_INVALID_LIBRARY() {
        return ERROR_INVALID_LIBRARY;
    }
    private static final int ERROR_INVALID_MEDIA_POOL = (int)4302L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_MEDIA_POOL 4302
     * }
     */
    public static int ERROR_INVALID_MEDIA_POOL() {
        return ERROR_INVALID_MEDIA_POOL;
    }
    private static final int ERROR_DRIVE_MEDIA_MISMATCH = (int)4303L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DRIVE_MEDIA_MISMATCH 4303
     * }
     */
    public static int ERROR_DRIVE_MEDIA_MISMATCH() {
        return ERROR_DRIVE_MEDIA_MISMATCH;
    }
    private static final int ERROR_MEDIA_OFFLINE = (int)4304L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MEDIA_OFFLINE 4304
     * }
     */
    public static int ERROR_MEDIA_OFFLINE() {
        return ERROR_MEDIA_OFFLINE;
    }
    private static final int ERROR_LIBRARY_OFFLINE = (int)4305L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LIBRARY_OFFLINE 4305
     * }
     */
    public static int ERROR_LIBRARY_OFFLINE() {
        return ERROR_LIBRARY_OFFLINE;
    }
    private static final int ERROR_EMPTY = (int)4306L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EMPTY 4306
     * }
     */
    public static int ERROR_EMPTY() {
        return ERROR_EMPTY;
    }
    private static final int ERROR_NOT_EMPTY = (int)4307L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_EMPTY 4307
     * }
     */
    public static int ERROR_NOT_EMPTY() {
        return ERROR_NOT_EMPTY;
    }
    private static final int ERROR_MEDIA_UNAVAILABLE = (int)4308L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MEDIA_UNAVAILABLE 4308
     * }
     */
    public static int ERROR_MEDIA_UNAVAILABLE() {
        return ERROR_MEDIA_UNAVAILABLE;
    }
    private static final int ERROR_RESOURCE_DISABLED = (int)4309L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RESOURCE_DISABLED 4309
     * }
     */
    public static int ERROR_RESOURCE_DISABLED() {
        return ERROR_RESOURCE_DISABLED;
    }
    private static final int ERROR_INVALID_CLEANER = (int)4310L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_CLEANER 4310
     * }
     */
    public static int ERROR_INVALID_CLEANER() {
        return ERROR_INVALID_CLEANER;
    }
    private static final int ERROR_UNABLE_TO_CLEAN = (int)4311L;
    /**
     * {@snippet lang=c :
     * #define ERROR_UNABLE_TO_CLEAN 4311
     * }
     */
    public static int ERROR_UNABLE_TO_CLEAN() {
        return ERROR_UNABLE_TO_CLEAN;
    }
    private static final int ERROR_OBJECT_NOT_FOUND = (int)4312L;
    /**
     * {@snippet lang=c :
     * #define ERROR_OBJECT_NOT_FOUND 4312
     * }
     */
    public static int ERROR_OBJECT_NOT_FOUND() {
        return ERROR_OBJECT_NOT_FOUND;
    }
    private static final int ERROR_DATABASE_FAILURE = (int)4313L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DATABASE_FAILURE 4313
     * }
     */
    public static int ERROR_DATABASE_FAILURE() {
        return ERROR_DATABASE_FAILURE;
    }
    private static final int ERROR_DATABASE_FULL = (int)4314L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DATABASE_FULL 4314
     * }
     */
    public static int ERROR_DATABASE_FULL() {
        return ERROR_DATABASE_FULL;
    }
    private static final int ERROR_MEDIA_INCOMPATIBLE = (int)4315L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MEDIA_INCOMPATIBLE 4315
     * }
     */
    public static int ERROR_MEDIA_INCOMPATIBLE() {
        return ERROR_MEDIA_INCOMPATIBLE;
    }
    private static final int ERROR_RESOURCE_NOT_PRESENT = (int)4316L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RESOURCE_NOT_PRESENT 4316
     * }
     */
    public static int ERROR_RESOURCE_NOT_PRESENT() {
        return ERROR_RESOURCE_NOT_PRESENT;
    }
    private static final int ERROR_INVALID_OPERATION = (int)4317L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_OPERATION 4317
     * }
     */
    public static int ERROR_INVALID_OPERATION() {
        return ERROR_INVALID_OPERATION;
    }
    private static final int ERROR_MEDIA_NOT_AVAILABLE = (int)4318L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MEDIA_NOT_AVAILABLE 4318
     * }
     */
    public static int ERROR_MEDIA_NOT_AVAILABLE() {
        return ERROR_MEDIA_NOT_AVAILABLE;
    }
    private static final int ERROR_DEVICE_NOT_AVAILABLE = (int)4319L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DEVICE_NOT_AVAILABLE 4319
     * }
     */
    public static int ERROR_DEVICE_NOT_AVAILABLE() {
        return ERROR_DEVICE_NOT_AVAILABLE;
    }
    private static final int ERROR_REQUEST_REFUSED = (int)4320L;
    /**
     * {@snippet lang=c :
     * #define ERROR_REQUEST_REFUSED 4320
     * }
     */
    public static int ERROR_REQUEST_REFUSED() {
        return ERROR_REQUEST_REFUSED;
    }
    private static final int ERROR_INVALID_DRIVE_OBJECT = (int)4321L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_DRIVE_OBJECT 4321
     * }
     */
    public static int ERROR_INVALID_DRIVE_OBJECT() {
        return ERROR_INVALID_DRIVE_OBJECT;
    }
    private static final int ERROR_LIBRARY_FULL = (int)4322L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LIBRARY_FULL 4322
     * }
     */
    public static int ERROR_LIBRARY_FULL() {
        return ERROR_LIBRARY_FULL;
    }
    private static final int ERROR_MEDIUM_NOT_ACCESSIBLE = (int)4323L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MEDIUM_NOT_ACCESSIBLE 4323
     * }
     */
    public static int ERROR_MEDIUM_NOT_ACCESSIBLE() {
        return ERROR_MEDIUM_NOT_ACCESSIBLE;
    }
    private static final int ERROR_UNABLE_TO_LOAD_MEDIUM = (int)4324L;
    /**
     * {@snippet lang=c :
     * #define ERROR_UNABLE_TO_LOAD_MEDIUM 4324
     * }
     */
    public static int ERROR_UNABLE_TO_LOAD_MEDIUM() {
        return ERROR_UNABLE_TO_LOAD_MEDIUM;
    }
    private static final int ERROR_UNABLE_TO_INVENTORY_DRIVE = (int)4325L;
    /**
     * {@snippet lang=c :
     * #define ERROR_UNABLE_TO_INVENTORY_DRIVE 4325
     * }
     */
    public static int ERROR_UNABLE_TO_INVENTORY_DRIVE() {
        return ERROR_UNABLE_TO_INVENTORY_DRIVE;
    }
    private static final int ERROR_UNABLE_TO_INVENTORY_SLOT = (int)4326L;
    /**
     * {@snippet lang=c :
     * #define ERROR_UNABLE_TO_INVENTORY_SLOT 4326
     * }
     */
    public static int ERROR_UNABLE_TO_INVENTORY_SLOT() {
        return ERROR_UNABLE_TO_INVENTORY_SLOT;
    }
    private static final int ERROR_UNABLE_TO_INVENTORY_TRANSPORT = (int)4327L;
    /**
     * {@snippet lang=c :
     * #define ERROR_UNABLE_TO_INVENTORY_TRANSPORT 4327
     * }
     */
    public static int ERROR_UNABLE_TO_INVENTORY_TRANSPORT() {
        return ERROR_UNABLE_TO_INVENTORY_TRANSPORT;
    }
    private static final int ERROR_TRANSPORT_FULL = (int)4328L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TRANSPORT_FULL 4328
     * }
     */
    public static int ERROR_TRANSPORT_FULL() {
        return ERROR_TRANSPORT_FULL;
    }
    private static final int ERROR_CONTROLLING_IEPORT = (int)4329L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CONTROLLING_IEPORT 4329
     * }
     */
    public static int ERROR_CONTROLLING_IEPORT() {
        return ERROR_CONTROLLING_IEPORT;
    }
    private static final int ERROR_UNABLE_TO_EJECT_MOUNTED_MEDIA = (int)4330L;
    /**
     * {@snippet lang=c :
     * #define ERROR_UNABLE_TO_EJECT_MOUNTED_MEDIA 4330
     * }
     */
    public static int ERROR_UNABLE_TO_EJECT_MOUNTED_MEDIA() {
        return ERROR_UNABLE_TO_EJECT_MOUNTED_MEDIA;
    }
    private static final int ERROR_CLEANER_SLOT_SET = (int)4331L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLEANER_SLOT_SET 4331
     * }
     */
    public static int ERROR_CLEANER_SLOT_SET() {
        return ERROR_CLEANER_SLOT_SET;
    }
    private static final int ERROR_CLEANER_SLOT_NOT_SET = (int)4332L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLEANER_SLOT_NOT_SET 4332
     * }
     */
    public static int ERROR_CLEANER_SLOT_NOT_SET() {
        return ERROR_CLEANER_SLOT_NOT_SET;
    }
    private static final int ERROR_CLEANER_CARTRIDGE_SPENT = (int)4333L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLEANER_CARTRIDGE_SPENT 4333
     * }
     */
    public static int ERROR_CLEANER_CARTRIDGE_SPENT() {
        return ERROR_CLEANER_CARTRIDGE_SPENT;
    }
    private static final int ERROR_UNEXPECTED_OMID = (int)4334L;
    /**
     * {@snippet lang=c :
     * #define ERROR_UNEXPECTED_OMID 4334
     * }
     */
    public static int ERROR_UNEXPECTED_OMID() {
        return ERROR_UNEXPECTED_OMID;
    }
    private static final int ERROR_CANT_DELETE_LAST_ITEM = (int)4335L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CANT_DELETE_LAST_ITEM 4335
     * }
     */
    public static int ERROR_CANT_DELETE_LAST_ITEM() {
        return ERROR_CANT_DELETE_LAST_ITEM;
    }
    private static final int ERROR_MESSAGE_EXCEEDS_MAX_SIZE = (int)4336L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MESSAGE_EXCEEDS_MAX_SIZE 4336
     * }
     */
    public static int ERROR_MESSAGE_EXCEEDS_MAX_SIZE() {
        return ERROR_MESSAGE_EXCEEDS_MAX_SIZE;
    }
    private static final int ERROR_VOLUME_CONTAINS_SYS_FILES = (int)4337L;
    /**
     * {@snippet lang=c :
     * #define ERROR_VOLUME_CONTAINS_SYS_FILES 4337
     * }
     */
    public static int ERROR_VOLUME_CONTAINS_SYS_FILES() {
        return ERROR_VOLUME_CONTAINS_SYS_FILES;
    }
    private static final int ERROR_INDIGENOUS_TYPE = (int)4338L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INDIGENOUS_TYPE 4338
     * }
     */
    public static int ERROR_INDIGENOUS_TYPE() {
        return ERROR_INDIGENOUS_TYPE;
    }
    private static final int ERROR_NO_SUPPORTING_DRIVES = (int)4339L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_SUPPORTING_DRIVES 4339
     * }
     */
    public static int ERROR_NO_SUPPORTING_DRIVES() {
        return ERROR_NO_SUPPORTING_DRIVES;
    }
    private static final int ERROR_CLEANER_CARTRIDGE_INSTALLED = (int)4340L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLEANER_CARTRIDGE_INSTALLED 4340
     * }
     */
    public static int ERROR_CLEANER_CARTRIDGE_INSTALLED() {
        return ERROR_CLEANER_CARTRIDGE_INSTALLED;
    }
    private static final int ERROR_IEPORT_FULL = (int)4341L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IEPORT_FULL 4341
     * }
     */
    public static int ERROR_IEPORT_FULL() {
        return ERROR_IEPORT_FULL;
    }
    private static final int ERROR_FILE_OFFLINE = (int)4350L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FILE_OFFLINE 4350
     * }
     */
    public static int ERROR_FILE_OFFLINE() {
        return ERROR_FILE_OFFLINE;
    }
    private static final int ERROR_REMOTE_STORAGE_NOT_ACTIVE = (int)4351L;
    /**
     * {@snippet lang=c :
     * #define ERROR_REMOTE_STORAGE_NOT_ACTIVE 4351
     * }
     */
    public static int ERROR_REMOTE_STORAGE_NOT_ACTIVE() {
        return ERROR_REMOTE_STORAGE_NOT_ACTIVE;
    }
    private static final int ERROR_REMOTE_STORAGE_MEDIA_ERROR = (int)4352L;
    /**
     * {@snippet lang=c :
     * #define ERROR_REMOTE_STORAGE_MEDIA_ERROR 4352
     * }
     */
    public static int ERROR_REMOTE_STORAGE_MEDIA_ERROR() {
        return ERROR_REMOTE_STORAGE_MEDIA_ERROR;
    }
    private static final int ERROR_NOT_A_REPARSE_POINT = (int)4390L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_A_REPARSE_POINT 4390
     * }
     */
    public static int ERROR_NOT_A_REPARSE_POINT() {
        return ERROR_NOT_A_REPARSE_POINT;
    }
    private static final int ERROR_REPARSE_ATTRIBUTE_CONFLICT = (int)4391L;
    /**
     * {@snippet lang=c :
     * #define ERROR_REPARSE_ATTRIBUTE_CONFLICT 4391
     * }
     */
    public static int ERROR_REPARSE_ATTRIBUTE_CONFLICT() {
        return ERROR_REPARSE_ATTRIBUTE_CONFLICT;
    }
    private static final int ERROR_INVALID_REPARSE_DATA = (int)4392L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_REPARSE_DATA 4392
     * }
     */
    public static int ERROR_INVALID_REPARSE_DATA() {
        return ERROR_INVALID_REPARSE_DATA;
    }
    private static final int ERROR_REPARSE_TAG_INVALID = (int)4393L;
    /**
     * {@snippet lang=c :
     * #define ERROR_REPARSE_TAG_INVALID 4393
     * }
     */
    public static int ERROR_REPARSE_TAG_INVALID() {
        return ERROR_REPARSE_TAG_INVALID;
    }
    private static final int ERROR_REPARSE_TAG_MISMATCH = (int)4394L;
    /**
     * {@snippet lang=c :
     * #define ERROR_REPARSE_TAG_MISMATCH 4394
     * }
     */
    public static int ERROR_REPARSE_TAG_MISMATCH() {
        return ERROR_REPARSE_TAG_MISMATCH;
    }
    private static final int ERROR_REPARSE_POINT_ENCOUNTERED = (int)4395L;
    /**
     * {@snippet lang=c :
     * #define ERROR_REPARSE_POINT_ENCOUNTERED 4395
     * }
     */
    public static int ERROR_REPARSE_POINT_ENCOUNTERED() {
        return ERROR_REPARSE_POINT_ENCOUNTERED;
    }
    private static final int ERROR_APP_DATA_NOT_FOUND = (int)4400L;
    /**
     * {@snippet lang=c :
     * #define ERROR_APP_DATA_NOT_FOUND 4400
     * }
     */
    public static int ERROR_APP_DATA_NOT_FOUND() {
        return ERROR_APP_DATA_NOT_FOUND;
    }
    private static final int ERROR_APP_DATA_EXPIRED = (int)4401L;
    /**
     * {@snippet lang=c :
     * #define ERROR_APP_DATA_EXPIRED 4401
     * }
     */
    public static int ERROR_APP_DATA_EXPIRED() {
        return ERROR_APP_DATA_EXPIRED;
    }
    private static final int ERROR_APP_DATA_CORRUPT = (int)4402L;
    /**
     * {@snippet lang=c :
     * #define ERROR_APP_DATA_CORRUPT 4402
     * }
     */
    public static int ERROR_APP_DATA_CORRUPT() {
        return ERROR_APP_DATA_CORRUPT;
    }
    private static final int ERROR_APP_DATA_LIMIT_EXCEEDED = (int)4403L;
    /**
     * {@snippet lang=c :
     * #define ERROR_APP_DATA_LIMIT_EXCEEDED 4403
     * }
     */
    public static int ERROR_APP_DATA_LIMIT_EXCEEDED() {
        return ERROR_APP_DATA_LIMIT_EXCEEDED;
    }
    private static final int ERROR_APP_DATA_REBOOT_REQUIRED = (int)4404L;
    /**
     * {@snippet lang=c :
     * #define ERROR_APP_DATA_REBOOT_REQUIRED 4404
     * }
     */
    public static int ERROR_APP_DATA_REBOOT_REQUIRED() {
        return ERROR_APP_DATA_REBOOT_REQUIRED;
    }
    private static final int ERROR_SECUREBOOT_ROLLBACK_DETECTED = (int)4420L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SECUREBOOT_ROLLBACK_DETECTED 4420
     * }
     */
    public static int ERROR_SECUREBOOT_ROLLBACK_DETECTED() {
        return ERROR_SECUREBOOT_ROLLBACK_DETECTED;
    }
    private static final int ERROR_SECUREBOOT_POLICY_VIOLATION = (int)4421L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SECUREBOOT_POLICY_VIOLATION 4421
     * }
     */
    public static int ERROR_SECUREBOOT_POLICY_VIOLATION() {
        return ERROR_SECUREBOOT_POLICY_VIOLATION;
    }
    private static final int ERROR_SECUREBOOT_INVALID_POLICY = (int)4422L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SECUREBOOT_INVALID_POLICY 4422
     * }
     */
    public static int ERROR_SECUREBOOT_INVALID_POLICY() {
        return ERROR_SECUREBOOT_INVALID_POLICY;
    }
    private static final int ERROR_SECUREBOOT_POLICY_PUBLISHER_NOT_FOUND = (int)4423L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SECUREBOOT_POLICY_PUBLISHER_NOT_FOUND 4423
     * }
     */
    public static int ERROR_SECUREBOOT_POLICY_PUBLISHER_NOT_FOUND() {
        return ERROR_SECUREBOOT_POLICY_PUBLISHER_NOT_FOUND;
    }
    private static final int ERROR_SECUREBOOT_POLICY_NOT_SIGNED = (int)4424L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SECUREBOOT_POLICY_NOT_SIGNED 4424
     * }
     */
    public static int ERROR_SECUREBOOT_POLICY_NOT_SIGNED() {
        return ERROR_SECUREBOOT_POLICY_NOT_SIGNED;
    }
    private static final int ERROR_SECUREBOOT_NOT_ENABLED = (int)4425L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SECUREBOOT_NOT_ENABLED 4425
     * }
     */
    public static int ERROR_SECUREBOOT_NOT_ENABLED() {
        return ERROR_SECUREBOOT_NOT_ENABLED;
    }
    private static final int ERROR_SECUREBOOT_FILE_REPLACED = (int)4426L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SECUREBOOT_FILE_REPLACED 4426
     * }
     */
    public static int ERROR_SECUREBOOT_FILE_REPLACED() {
        return ERROR_SECUREBOOT_FILE_REPLACED;
    }
    private static final int ERROR_SECUREBOOT_POLICY_NOT_AUTHORIZED = (int)4427L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SECUREBOOT_POLICY_NOT_AUTHORIZED 4427
     * }
     */
    public static int ERROR_SECUREBOOT_POLICY_NOT_AUTHORIZED() {
        return ERROR_SECUREBOOT_POLICY_NOT_AUTHORIZED;
    }
    private static final int ERROR_SECUREBOOT_POLICY_UNKNOWN = (int)4428L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SECUREBOOT_POLICY_UNKNOWN 4428
     * }
     */
    public static int ERROR_SECUREBOOT_POLICY_UNKNOWN() {
        return ERROR_SECUREBOOT_POLICY_UNKNOWN;
    }
    private static final int ERROR_SECUREBOOT_POLICY_MISSING_ANTIROLLBACKVERSION = (int)4429L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SECUREBOOT_POLICY_MISSING_ANTIROLLBACKVERSION 4429
     * }
     */
    public static int ERROR_SECUREBOOT_POLICY_MISSING_ANTIROLLBACKVERSION() {
        return ERROR_SECUREBOOT_POLICY_MISSING_ANTIROLLBACKVERSION;
    }
    private static final int ERROR_SECUREBOOT_PLATFORM_ID_MISMATCH = (int)4430L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SECUREBOOT_PLATFORM_ID_MISMATCH 4430
     * }
     */
    public static int ERROR_SECUREBOOT_PLATFORM_ID_MISMATCH() {
        return ERROR_SECUREBOOT_PLATFORM_ID_MISMATCH;
    }
    private static final int ERROR_SECUREBOOT_POLICY_ROLLBACK_DETECTED = (int)4431L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SECUREBOOT_POLICY_ROLLBACK_DETECTED 4431
     * }
     */
    public static int ERROR_SECUREBOOT_POLICY_ROLLBACK_DETECTED() {
        return ERROR_SECUREBOOT_POLICY_ROLLBACK_DETECTED;
    }
    private static final int ERROR_SECUREBOOT_POLICY_UPGRADE_MISMATCH = (int)4432L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SECUREBOOT_POLICY_UPGRADE_MISMATCH 4432
     * }
     */
    public static int ERROR_SECUREBOOT_POLICY_UPGRADE_MISMATCH() {
        return ERROR_SECUREBOOT_POLICY_UPGRADE_MISMATCH;
    }
    private static final int ERROR_SECUREBOOT_REQUIRED_POLICY_FILE_MISSING = (int)4433L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SECUREBOOT_REQUIRED_POLICY_FILE_MISSING 4433
     * }
     */
    public static int ERROR_SECUREBOOT_REQUIRED_POLICY_FILE_MISSING() {
        return ERROR_SECUREBOOT_REQUIRED_POLICY_FILE_MISSING;
    }
    private static final int ERROR_SECUREBOOT_NOT_BASE_POLICY = (int)4434L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SECUREBOOT_NOT_BASE_POLICY 4434
     * }
     */
    public static int ERROR_SECUREBOOT_NOT_BASE_POLICY() {
        return ERROR_SECUREBOOT_NOT_BASE_POLICY;
    }
    private static final int ERROR_SECUREBOOT_NOT_SUPPLEMENTAL_POLICY = (int)4435L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SECUREBOOT_NOT_SUPPLEMENTAL_POLICY 4435
     * }
     */
    public static int ERROR_SECUREBOOT_NOT_SUPPLEMENTAL_POLICY() {
        return ERROR_SECUREBOOT_NOT_SUPPLEMENTAL_POLICY;
    }
    private static final int ERROR_OFFLOAD_READ_FLT_NOT_SUPPORTED = (int)4440L;
    /**
     * {@snippet lang=c :
     * #define ERROR_OFFLOAD_READ_FLT_NOT_SUPPORTED 4440
     * }
     */
    public static int ERROR_OFFLOAD_READ_FLT_NOT_SUPPORTED() {
        return ERROR_OFFLOAD_READ_FLT_NOT_SUPPORTED;
    }
    private static final int ERROR_OFFLOAD_WRITE_FLT_NOT_SUPPORTED = (int)4441L;
    /**
     * {@snippet lang=c :
     * #define ERROR_OFFLOAD_WRITE_FLT_NOT_SUPPORTED 4441
     * }
     */
    public static int ERROR_OFFLOAD_WRITE_FLT_NOT_SUPPORTED() {
        return ERROR_OFFLOAD_WRITE_FLT_NOT_SUPPORTED;
    }
    private static final int ERROR_OFFLOAD_READ_FILE_NOT_SUPPORTED = (int)4442L;
    /**
     * {@snippet lang=c :
     * #define ERROR_OFFLOAD_READ_FILE_NOT_SUPPORTED 4442
     * }
     */
    public static int ERROR_OFFLOAD_READ_FILE_NOT_SUPPORTED() {
        return ERROR_OFFLOAD_READ_FILE_NOT_SUPPORTED;
    }
    private static final int ERROR_OFFLOAD_WRITE_FILE_NOT_SUPPORTED = (int)4443L;
    /**
     * {@snippet lang=c :
     * #define ERROR_OFFLOAD_WRITE_FILE_NOT_SUPPORTED 4443
     * }
     */
    public static int ERROR_OFFLOAD_WRITE_FILE_NOT_SUPPORTED() {
        return ERROR_OFFLOAD_WRITE_FILE_NOT_SUPPORTED;
    }
    private static final int ERROR_ALREADY_HAS_STREAM_ID = (int)4444L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ALREADY_HAS_STREAM_ID 4444
     * }
     */
    public static int ERROR_ALREADY_HAS_STREAM_ID() {
        return ERROR_ALREADY_HAS_STREAM_ID;
    }
    private static final int ERROR_SMR_GARBAGE_COLLECTION_REQUIRED = (int)4445L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SMR_GARBAGE_COLLECTION_REQUIRED 4445
     * }
     */
    public static int ERROR_SMR_GARBAGE_COLLECTION_REQUIRED() {
        return ERROR_SMR_GARBAGE_COLLECTION_REQUIRED;
    }
    private static final int ERROR_WOF_WIM_HEADER_CORRUPT = (int)4446L;
    /**
     * {@snippet lang=c :
     * #define ERROR_WOF_WIM_HEADER_CORRUPT 4446
     * }
     */
    public static int ERROR_WOF_WIM_HEADER_CORRUPT() {
        return ERROR_WOF_WIM_HEADER_CORRUPT;
    }
    private static final int ERROR_WOF_WIM_RESOURCE_TABLE_CORRUPT = (int)4447L;
    /**
     * {@snippet lang=c :
     * #define ERROR_WOF_WIM_RESOURCE_TABLE_CORRUPT 4447
     * }
     */
    public static int ERROR_WOF_WIM_RESOURCE_TABLE_CORRUPT() {
        return ERROR_WOF_WIM_RESOURCE_TABLE_CORRUPT;
    }
    private static final int ERROR_WOF_FILE_RESOURCE_TABLE_CORRUPT = (int)4448L;
    /**
     * {@snippet lang=c :
     * #define ERROR_WOF_FILE_RESOURCE_TABLE_CORRUPT 4448
     * }
     */
    public static int ERROR_WOF_FILE_RESOURCE_TABLE_CORRUPT() {
        return ERROR_WOF_FILE_RESOURCE_TABLE_CORRUPT;
    }
    private static final int ERROR_OBJECT_IS_IMMUTABLE = (int)4449L;
    /**
     * {@snippet lang=c :
     * #define ERROR_OBJECT_IS_IMMUTABLE 4449
     * }
     */
    public static int ERROR_OBJECT_IS_IMMUTABLE() {
        return ERROR_OBJECT_IS_IMMUTABLE;
    }
    private static final int ERROR_VOLUME_NOT_SIS_ENABLED = (int)4500L;
    /**
     * {@snippet lang=c :
     * #define ERROR_VOLUME_NOT_SIS_ENABLED 4500
     * }
     */
    public static int ERROR_VOLUME_NOT_SIS_ENABLED() {
        return ERROR_VOLUME_NOT_SIS_ENABLED;
    }
    private static final int ERROR_SYSTEM_INTEGRITY_ROLLBACK_DETECTED = (int)4550L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SYSTEM_INTEGRITY_ROLLBACK_DETECTED 4550
     * }
     */
    public static int ERROR_SYSTEM_INTEGRITY_ROLLBACK_DETECTED() {
        return ERROR_SYSTEM_INTEGRITY_ROLLBACK_DETECTED;
    }
    private static final int ERROR_SYSTEM_INTEGRITY_POLICY_VIOLATION = (int)4551L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SYSTEM_INTEGRITY_POLICY_VIOLATION 4551
     * }
     */
    public static int ERROR_SYSTEM_INTEGRITY_POLICY_VIOLATION() {
        return ERROR_SYSTEM_INTEGRITY_POLICY_VIOLATION;
    }
    private static final int ERROR_SYSTEM_INTEGRITY_INVALID_POLICY = (int)4552L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SYSTEM_INTEGRITY_INVALID_POLICY 4552
     * }
     */
    public static int ERROR_SYSTEM_INTEGRITY_INVALID_POLICY() {
        return ERROR_SYSTEM_INTEGRITY_INVALID_POLICY;
    }
    private static final int ERROR_SYSTEM_INTEGRITY_POLICY_NOT_SIGNED = (int)4553L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SYSTEM_INTEGRITY_POLICY_NOT_SIGNED 4553
     * }
     */
    public static int ERROR_SYSTEM_INTEGRITY_POLICY_NOT_SIGNED() {
        return ERROR_SYSTEM_INTEGRITY_POLICY_NOT_SIGNED;
    }
    private static final int ERROR_SYSTEM_INTEGRITY_TOO_MANY_POLICIES = (int)4554L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SYSTEM_INTEGRITY_TOO_MANY_POLICIES 4554
     * }
     */
    public static int ERROR_SYSTEM_INTEGRITY_TOO_MANY_POLICIES() {
        return ERROR_SYSTEM_INTEGRITY_TOO_MANY_POLICIES;
    }
    private static final int ERROR_SYSTEM_INTEGRITY_SUPPLEMENTAL_POLICY_NOT_AUTHORIZED = (int)4555L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SYSTEM_INTEGRITY_SUPPLEMENTAL_POLICY_NOT_AUTHORIZED 4555
     * }
     */
    public static int ERROR_SYSTEM_INTEGRITY_SUPPLEMENTAL_POLICY_NOT_AUTHORIZED() {
        return ERROR_SYSTEM_INTEGRITY_SUPPLEMENTAL_POLICY_NOT_AUTHORIZED;
    }
    private static final int ERROR_SYSTEM_INTEGRITY_REPUTATION_MALICIOUS = (int)4556L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SYSTEM_INTEGRITY_REPUTATION_MALICIOUS 4556
     * }
     */
    public static int ERROR_SYSTEM_INTEGRITY_REPUTATION_MALICIOUS() {
        return ERROR_SYSTEM_INTEGRITY_REPUTATION_MALICIOUS;
    }
    private static final int ERROR_SYSTEM_INTEGRITY_REPUTATION_PUA = (int)4557L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SYSTEM_INTEGRITY_REPUTATION_PUA 4557
     * }
     */
    public static int ERROR_SYSTEM_INTEGRITY_REPUTATION_PUA() {
        return ERROR_SYSTEM_INTEGRITY_REPUTATION_PUA;
    }
    private static final int ERROR_SYSTEM_INTEGRITY_REPUTATION_DANGEROUS_EXT = (int)4558L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SYSTEM_INTEGRITY_REPUTATION_DANGEROUS_EXT 4558
     * }
     */
    public static int ERROR_SYSTEM_INTEGRITY_REPUTATION_DANGEROUS_EXT() {
        return ERROR_SYSTEM_INTEGRITY_REPUTATION_DANGEROUS_EXT;
    }
    private static final int ERROR_SYSTEM_INTEGRITY_REPUTATION_OFFLINE = (int)4559L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SYSTEM_INTEGRITY_REPUTATION_OFFLINE 4559
     * }
     */
    public static int ERROR_SYSTEM_INTEGRITY_REPUTATION_OFFLINE() {
        return ERROR_SYSTEM_INTEGRITY_REPUTATION_OFFLINE;
    }
    private static final int ERROR_VSM_NOT_INITIALIZED = (int)4560L;
    /**
     * {@snippet lang=c :
     * #define ERROR_VSM_NOT_INITIALIZED 4560
     * }
     */
    public static int ERROR_VSM_NOT_INITIALIZED() {
        return ERROR_VSM_NOT_INITIALIZED;
    }
    private static final int ERROR_VSM_DMA_PROTECTION_NOT_IN_USE = (int)4561L;
    /**
     * {@snippet lang=c :
     * #define ERROR_VSM_DMA_PROTECTION_NOT_IN_USE 4561
     * }
     */
    public static int ERROR_VSM_DMA_PROTECTION_NOT_IN_USE() {
        return ERROR_VSM_DMA_PROTECTION_NOT_IN_USE;
    }
    private static final int ERROR_VSM_KEY_CI_POLICY_ROLLBACK_DETECTED = (int)4562L;
    /**
     * {@snippet lang=c :
     * #define ERROR_VSM_KEY_CI_POLICY_ROLLBACK_DETECTED 4562
     * }
     */
    public static int ERROR_VSM_KEY_CI_POLICY_ROLLBACK_DETECTED() {
        return ERROR_VSM_KEY_CI_POLICY_ROLLBACK_DETECTED;
    }
    private static final int ERROR_PLATFORM_MANIFEST_NOT_AUTHORIZED = (int)4570L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PLATFORM_MANIFEST_NOT_AUTHORIZED 4570
     * }
     */
    public static int ERROR_PLATFORM_MANIFEST_NOT_AUTHORIZED() {
        return ERROR_PLATFORM_MANIFEST_NOT_AUTHORIZED;
    }
    private static final int ERROR_PLATFORM_MANIFEST_INVALID = (int)4571L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PLATFORM_MANIFEST_INVALID 4571
     * }
     */
    public static int ERROR_PLATFORM_MANIFEST_INVALID() {
        return ERROR_PLATFORM_MANIFEST_INVALID;
    }
    private static final int ERROR_PLATFORM_MANIFEST_FILE_NOT_AUTHORIZED = (int)4572L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PLATFORM_MANIFEST_FILE_NOT_AUTHORIZED 4572
     * }
     */
    public static int ERROR_PLATFORM_MANIFEST_FILE_NOT_AUTHORIZED() {
        return ERROR_PLATFORM_MANIFEST_FILE_NOT_AUTHORIZED;
    }
    private static final int ERROR_PLATFORM_MANIFEST_CATALOG_NOT_AUTHORIZED = (int)4573L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PLATFORM_MANIFEST_CATALOG_NOT_AUTHORIZED 4573
     * }
     */
    public static int ERROR_PLATFORM_MANIFEST_CATALOG_NOT_AUTHORIZED() {
        return ERROR_PLATFORM_MANIFEST_CATALOG_NOT_AUTHORIZED;
    }
    private static final int ERROR_PLATFORM_MANIFEST_BINARY_ID_NOT_FOUND = (int)4574L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PLATFORM_MANIFEST_BINARY_ID_NOT_FOUND 4574
     * }
     */
    public static int ERROR_PLATFORM_MANIFEST_BINARY_ID_NOT_FOUND() {
        return ERROR_PLATFORM_MANIFEST_BINARY_ID_NOT_FOUND;
    }
    private static final int ERROR_PLATFORM_MANIFEST_NOT_ACTIVE = (int)4575L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PLATFORM_MANIFEST_NOT_ACTIVE 4575
     * }
     */
    public static int ERROR_PLATFORM_MANIFEST_NOT_ACTIVE() {
        return ERROR_PLATFORM_MANIFEST_NOT_ACTIVE;
    }
    private static final int ERROR_PLATFORM_MANIFEST_NOT_SIGNED = (int)4576L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PLATFORM_MANIFEST_NOT_SIGNED 4576
     * }
     */
    public static int ERROR_PLATFORM_MANIFEST_NOT_SIGNED() {
        return ERROR_PLATFORM_MANIFEST_NOT_SIGNED;
    }
    private static final int ERROR_SYSTEM_INTEGRITY_REPUTATION_UNFRIENDLY_FILE = (int)4580L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SYSTEM_INTEGRITY_REPUTATION_UNFRIENDLY_FILE 4580
     * }
     */
    public static int ERROR_SYSTEM_INTEGRITY_REPUTATION_UNFRIENDLY_FILE() {
        return ERROR_SYSTEM_INTEGRITY_REPUTATION_UNFRIENDLY_FILE;
    }
    private static final int ERROR_SYSTEM_INTEGRITY_REPUTATION_UNATTAINABLE = (int)4581L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SYSTEM_INTEGRITY_REPUTATION_UNATTAINABLE 4581
     * }
     */
    public static int ERROR_SYSTEM_INTEGRITY_REPUTATION_UNATTAINABLE() {
        return ERROR_SYSTEM_INTEGRITY_REPUTATION_UNATTAINABLE;
    }
    private static final int ERROR_SYSTEM_INTEGRITY_REPUTATION_EXPLICIT_DENY_FILE = (int)4582L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SYSTEM_INTEGRITY_REPUTATION_EXPLICIT_DENY_FILE 4582
     * }
     */
    public static int ERROR_SYSTEM_INTEGRITY_REPUTATION_EXPLICIT_DENY_FILE() {
        return ERROR_SYSTEM_INTEGRITY_REPUTATION_EXPLICIT_DENY_FILE;
    }
    private static final int ERROR_SYSTEM_INTEGRITY_WHQL_NOT_SATISFIED = (int)4583L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SYSTEM_INTEGRITY_WHQL_NOT_SATISFIED 4583
     * }
     */
    public static int ERROR_SYSTEM_INTEGRITY_WHQL_NOT_SATISFIED() {
        return ERROR_SYSTEM_INTEGRITY_WHQL_NOT_SATISFIED;
    }
    private static final int ERROR_DEPENDENT_RESOURCE_EXISTS = (int)5001L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DEPENDENT_RESOURCE_EXISTS 5001
     * }
     */
    public static int ERROR_DEPENDENT_RESOURCE_EXISTS() {
        return ERROR_DEPENDENT_RESOURCE_EXISTS;
    }
    private static final int ERROR_DEPENDENCY_NOT_FOUND = (int)5002L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DEPENDENCY_NOT_FOUND 5002
     * }
     */
    public static int ERROR_DEPENDENCY_NOT_FOUND() {
        return ERROR_DEPENDENCY_NOT_FOUND;
    }
    private static final int ERROR_DEPENDENCY_ALREADY_EXISTS = (int)5003L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DEPENDENCY_ALREADY_EXISTS 5003
     * }
     */
    public static int ERROR_DEPENDENCY_ALREADY_EXISTS() {
        return ERROR_DEPENDENCY_ALREADY_EXISTS;
    }
    private static final int ERROR_RESOURCE_NOT_ONLINE = (int)5004L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RESOURCE_NOT_ONLINE 5004
     * }
     */
    public static int ERROR_RESOURCE_NOT_ONLINE() {
        return ERROR_RESOURCE_NOT_ONLINE;
    }
    private static final int ERROR_HOST_NODE_NOT_AVAILABLE = (int)5005L;
    /**
     * {@snippet lang=c :
     * #define ERROR_HOST_NODE_NOT_AVAILABLE 5005
     * }
     */
    public static int ERROR_HOST_NODE_NOT_AVAILABLE() {
        return ERROR_HOST_NODE_NOT_AVAILABLE;
    }
    private static final int ERROR_RESOURCE_NOT_AVAILABLE = (int)5006L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RESOURCE_NOT_AVAILABLE 5006
     * }
     */
    public static int ERROR_RESOURCE_NOT_AVAILABLE() {
        return ERROR_RESOURCE_NOT_AVAILABLE;
    }
    private static final int ERROR_RESOURCE_NOT_FOUND = (int)5007L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RESOURCE_NOT_FOUND 5007
     * }
     */
    public static int ERROR_RESOURCE_NOT_FOUND() {
        return ERROR_RESOURCE_NOT_FOUND;
    }
    private static final int ERROR_SHUTDOWN_CLUSTER = (int)5008L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SHUTDOWN_CLUSTER 5008
     * }
     */
    public static int ERROR_SHUTDOWN_CLUSTER() {
        return ERROR_SHUTDOWN_CLUSTER;
    }
    private static final int ERROR_CANT_EVICT_ACTIVE_NODE = (int)5009L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CANT_EVICT_ACTIVE_NODE 5009
     * }
     */
    public static int ERROR_CANT_EVICT_ACTIVE_NODE() {
        return ERROR_CANT_EVICT_ACTIVE_NODE;
    }
    private static final int ERROR_OBJECT_ALREADY_EXISTS = (int)5010L;
    /**
     * {@snippet lang=c :
     * #define ERROR_OBJECT_ALREADY_EXISTS 5010
     * }
     */
    public static int ERROR_OBJECT_ALREADY_EXISTS() {
        return ERROR_OBJECT_ALREADY_EXISTS;
    }
    private static final int ERROR_OBJECT_IN_LIST = (int)5011L;
    /**
     * {@snippet lang=c :
     * #define ERROR_OBJECT_IN_LIST 5011
     * }
     */
    public static int ERROR_OBJECT_IN_LIST() {
        return ERROR_OBJECT_IN_LIST;
    }
    private static final int ERROR_GROUP_NOT_AVAILABLE = (int)5012L;
    /**
     * {@snippet lang=c :
     * #define ERROR_GROUP_NOT_AVAILABLE 5012
     * }
     */
    public static int ERROR_GROUP_NOT_AVAILABLE() {
        return ERROR_GROUP_NOT_AVAILABLE;
    }
    private static final int ERROR_GROUP_NOT_FOUND = (int)5013L;
    /**
     * {@snippet lang=c :
     * #define ERROR_GROUP_NOT_FOUND 5013
     * }
     */
    public static int ERROR_GROUP_NOT_FOUND() {
        return ERROR_GROUP_NOT_FOUND;
    }
    private static final int ERROR_GROUP_NOT_ONLINE = (int)5014L;
    /**
     * {@snippet lang=c :
     * #define ERROR_GROUP_NOT_ONLINE 5014
     * }
     */
    public static int ERROR_GROUP_NOT_ONLINE() {
        return ERROR_GROUP_NOT_ONLINE;
    }
    private static final int ERROR_HOST_NODE_NOT_RESOURCE_OWNER = (int)5015L;
    /**
     * {@snippet lang=c :
     * #define ERROR_HOST_NODE_NOT_RESOURCE_OWNER 5015
     * }
     */
    public static int ERROR_HOST_NODE_NOT_RESOURCE_OWNER() {
        return ERROR_HOST_NODE_NOT_RESOURCE_OWNER;
    }
    private static final int ERROR_HOST_NODE_NOT_GROUP_OWNER = (int)5016L;
    /**
     * {@snippet lang=c :
     * #define ERROR_HOST_NODE_NOT_GROUP_OWNER 5016
     * }
     */
    public static int ERROR_HOST_NODE_NOT_GROUP_OWNER() {
        return ERROR_HOST_NODE_NOT_GROUP_OWNER;
    }
    private static final int ERROR_RESMON_CREATE_FAILED = (int)5017L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RESMON_CREATE_FAILED 5017
     * }
     */
    public static int ERROR_RESMON_CREATE_FAILED() {
        return ERROR_RESMON_CREATE_FAILED;
    }
    private static final int ERROR_RESMON_ONLINE_FAILED = (int)5018L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RESMON_ONLINE_FAILED 5018
     * }
     */
    public static int ERROR_RESMON_ONLINE_FAILED() {
        return ERROR_RESMON_ONLINE_FAILED;
    }
    private static final int ERROR_RESOURCE_ONLINE = (int)5019L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RESOURCE_ONLINE 5019
     * }
     */
    public static int ERROR_RESOURCE_ONLINE() {
        return ERROR_RESOURCE_ONLINE;
    }
    private static final int ERROR_QUORUM_RESOURCE = (int)5020L;
    /**
     * {@snippet lang=c :
     * #define ERROR_QUORUM_RESOURCE 5020
     * }
     */
    public static int ERROR_QUORUM_RESOURCE() {
        return ERROR_QUORUM_RESOURCE;
    }
    private static final int ERROR_NOT_QUORUM_CAPABLE = (int)5021L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_QUORUM_CAPABLE 5021
     * }
     */
    public static int ERROR_NOT_QUORUM_CAPABLE() {
        return ERROR_NOT_QUORUM_CAPABLE;
    }
    private static final int ERROR_CLUSTER_SHUTTING_DOWN = (int)5022L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_SHUTTING_DOWN 5022
     * }
     */
    public static int ERROR_CLUSTER_SHUTTING_DOWN() {
        return ERROR_CLUSTER_SHUTTING_DOWN;
    }
    private static final int ERROR_INVALID_STATE = (int)5023L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_STATE 5023
     * }
     */
    public static int ERROR_INVALID_STATE() {
        return ERROR_INVALID_STATE;
    }
    private static final int ERROR_RESOURCE_PROPERTIES_STORED = (int)5024L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RESOURCE_PROPERTIES_STORED 5024
     * }
     */
    public static int ERROR_RESOURCE_PROPERTIES_STORED() {
        return ERROR_RESOURCE_PROPERTIES_STORED;
    }
    private static final int ERROR_NOT_QUORUM_CLASS = (int)5025L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_QUORUM_CLASS 5025
     * }
     */
    public static int ERROR_NOT_QUORUM_CLASS() {
        return ERROR_NOT_QUORUM_CLASS;
    }
    private static final int ERROR_CORE_RESOURCE = (int)5026L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CORE_RESOURCE 5026
     * }
     */
    public static int ERROR_CORE_RESOURCE() {
        return ERROR_CORE_RESOURCE;
    }
    private static final int ERROR_QUORUM_RESOURCE_ONLINE_FAILED = (int)5027L;
    /**
     * {@snippet lang=c :
     * #define ERROR_QUORUM_RESOURCE_ONLINE_FAILED 5027
     * }
     */
    public static int ERROR_QUORUM_RESOURCE_ONLINE_FAILED() {
        return ERROR_QUORUM_RESOURCE_ONLINE_FAILED;
    }
    private static final int ERROR_QUORUMLOG_OPEN_FAILED = (int)5028L;
    /**
     * {@snippet lang=c :
     * #define ERROR_QUORUMLOG_OPEN_FAILED 5028
     * }
     */
    public static int ERROR_QUORUMLOG_OPEN_FAILED() {
        return ERROR_QUORUMLOG_OPEN_FAILED;
    }
    private static final int ERROR_CLUSTERLOG_CORRUPT = (int)5029L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTERLOG_CORRUPT 5029
     * }
     */
    public static int ERROR_CLUSTERLOG_CORRUPT() {
        return ERROR_CLUSTERLOG_CORRUPT;
    }
    private static final int ERROR_CLUSTERLOG_RECORD_EXCEEDS_MAXSIZE = (int)5030L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTERLOG_RECORD_EXCEEDS_MAXSIZE 5030
     * }
     */
    public static int ERROR_CLUSTERLOG_RECORD_EXCEEDS_MAXSIZE() {
        return ERROR_CLUSTERLOG_RECORD_EXCEEDS_MAXSIZE;
    }
    private static final int ERROR_CLUSTERLOG_EXCEEDS_MAXSIZE = (int)5031L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTERLOG_EXCEEDS_MAXSIZE 5031
     * }
     */
    public static int ERROR_CLUSTERLOG_EXCEEDS_MAXSIZE() {
        return ERROR_CLUSTERLOG_EXCEEDS_MAXSIZE;
    }
    private static final int ERROR_CLUSTERLOG_CHKPOINT_NOT_FOUND = (int)5032L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTERLOG_CHKPOINT_NOT_FOUND 5032
     * }
     */
    public static int ERROR_CLUSTERLOG_CHKPOINT_NOT_FOUND() {
        return ERROR_CLUSTERLOG_CHKPOINT_NOT_FOUND;
    }
    private static final int ERROR_CLUSTERLOG_NOT_ENOUGH_SPACE = (int)5033L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTERLOG_NOT_ENOUGH_SPACE 5033
     * }
     */
    public static int ERROR_CLUSTERLOG_NOT_ENOUGH_SPACE() {
        return ERROR_CLUSTERLOG_NOT_ENOUGH_SPACE;
    }
    private static final int ERROR_QUORUM_OWNER_ALIVE = (int)5034L;
    /**
     * {@snippet lang=c :
     * #define ERROR_QUORUM_OWNER_ALIVE 5034
     * }
     */
    public static int ERROR_QUORUM_OWNER_ALIVE() {
        return ERROR_QUORUM_OWNER_ALIVE;
    }
    private static final int ERROR_NETWORK_NOT_AVAILABLE = (int)5035L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NETWORK_NOT_AVAILABLE 5035
     * }
     */
    public static int ERROR_NETWORK_NOT_AVAILABLE() {
        return ERROR_NETWORK_NOT_AVAILABLE;
    }
    private static final int ERROR_NODE_NOT_AVAILABLE = (int)5036L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NODE_NOT_AVAILABLE 5036
     * }
     */
    public static int ERROR_NODE_NOT_AVAILABLE() {
        return ERROR_NODE_NOT_AVAILABLE;
    }
    private static final int ERROR_ALL_NODES_NOT_AVAILABLE = (int)5037L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ALL_NODES_NOT_AVAILABLE 5037
     * }
     */
    public static int ERROR_ALL_NODES_NOT_AVAILABLE() {
        return ERROR_ALL_NODES_NOT_AVAILABLE;
    }
    private static final int ERROR_RESOURCE_FAILED = (int)5038L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RESOURCE_FAILED 5038
     * }
     */
    public static int ERROR_RESOURCE_FAILED() {
        return ERROR_RESOURCE_FAILED;
    }
    private static final int ERROR_CLUSTER_INVALID_NODE = (int)5039L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_INVALID_NODE 5039
     * }
     */
    public static int ERROR_CLUSTER_INVALID_NODE() {
        return ERROR_CLUSTER_INVALID_NODE;
    }
    private static final int ERROR_CLUSTER_NODE_EXISTS = (int)5040L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_NODE_EXISTS 5040
     * }
     */
    public static int ERROR_CLUSTER_NODE_EXISTS() {
        return ERROR_CLUSTER_NODE_EXISTS;
    }
    private static final int ERROR_CLUSTER_JOIN_IN_PROGRESS = (int)5041L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_JOIN_IN_PROGRESS 5041
     * }
     */
    public static int ERROR_CLUSTER_JOIN_IN_PROGRESS() {
        return ERROR_CLUSTER_JOIN_IN_PROGRESS;
    }
    private static final int ERROR_CLUSTER_NODE_NOT_FOUND = (int)5042L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_NODE_NOT_FOUND 5042
     * }
     */
    public static int ERROR_CLUSTER_NODE_NOT_FOUND() {
        return ERROR_CLUSTER_NODE_NOT_FOUND;
    }
    private static final int ERROR_CLUSTER_LOCAL_NODE_NOT_FOUND = (int)5043L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_LOCAL_NODE_NOT_FOUND 5043
     * }
     */
    public static int ERROR_CLUSTER_LOCAL_NODE_NOT_FOUND() {
        return ERROR_CLUSTER_LOCAL_NODE_NOT_FOUND;
    }
    private static final int ERROR_CLUSTER_NETWORK_EXISTS = (int)5044L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_NETWORK_EXISTS 5044
     * }
     */
    public static int ERROR_CLUSTER_NETWORK_EXISTS() {
        return ERROR_CLUSTER_NETWORK_EXISTS;
    }
    private static final int ERROR_CLUSTER_NETWORK_NOT_FOUND = (int)5045L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_NETWORK_NOT_FOUND 5045
     * }
     */
    public static int ERROR_CLUSTER_NETWORK_NOT_FOUND() {
        return ERROR_CLUSTER_NETWORK_NOT_FOUND;
    }
    private static final int ERROR_CLUSTER_NETINTERFACE_EXISTS = (int)5046L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_NETINTERFACE_EXISTS 5046
     * }
     */
    public static int ERROR_CLUSTER_NETINTERFACE_EXISTS() {
        return ERROR_CLUSTER_NETINTERFACE_EXISTS;
    }
    private static final int ERROR_CLUSTER_NETINTERFACE_NOT_FOUND = (int)5047L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_NETINTERFACE_NOT_FOUND 5047
     * }
     */
    public static int ERROR_CLUSTER_NETINTERFACE_NOT_FOUND() {
        return ERROR_CLUSTER_NETINTERFACE_NOT_FOUND;
    }
    private static final int ERROR_CLUSTER_INVALID_REQUEST = (int)5048L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_INVALID_REQUEST 5048
     * }
     */
    public static int ERROR_CLUSTER_INVALID_REQUEST() {
        return ERROR_CLUSTER_INVALID_REQUEST;
    }
    private static final int ERROR_CLUSTER_INVALID_NETWORK_PROVIDER = (int)5049L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_INVALID_NETWORK_PROVIDER 5049
     * }
     */
    public static int ERROR_CLUSTER_INVALID_NETWORK_PROVIDER() {
        return ERROR_CLUSTER_INVALID_NETWORK_PROVIDER;
    }
    private static final int ERROR_CLUSTER_NODE_DOWN = (int)5050L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_NODE_DOWN 5050
     * }
     */
    public static int ERROR_CLUSTER_NODE_DOWN() {
        return ERROR_CLUSTER_NODE_DOWN;
    }
    private static final int ERROR_CLUSTER_NODE_UNREACHABLE = (int)5051L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_NODE_UNREACHABLE 5051
     * }
     */
    public static int ERROR_CLUSTER_NODE_UNREACHABLE() {
        return ERROR_CLUSTER_NODE_UNREACHABLE;
    }
    private static final int ERROR_CLUSTER_NODE_NOT_MEMBER = (int)5052L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_NODE_NOT_MEMBER 5052
     * }
     */
    public static int ERROR_CLUSTER_NODE_NOT_MEMBER() {
        return ERROR_CLUSTER_NODE_NOT_MEMBER;
    }
    private static final int ERROR_CLUSTER_JOIN_NOT_IN_PROGRESS = (int)5053L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_JOIN_NOT_IN_PROGRESS 5053
     * }
     */
    public static int ERROR_CLUSTER_JOIN_NOT_IN_PROGRESS() {
        return ERROR_CLUSTER_JOIN_NOT_IN_PROGRESS;
    }
    private static final int ERROR_CLUSTER_INVALID_NETWORK = (int)5054L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_INVALID_NETWORK 5054
     * }
     */
    public static int ERROR_CLUSTER_INVALID_NETWORK() {
        return ERROR_CLUSTER_INVALID_NETWORK;
    }
    private static final int ERROR_CLUSTER_NODE_UP = (int)5056L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_NODE_UP 5056
     * }
     */
    public static int ERROR_CLUSTER_NODE_UP() {
        return ERROR_CLUSTER_NODE_UP;
    }
    private static final int ERROR_CLUSTER_IPADDR_IN_USE = (int)5057L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_IPADDR_IN_USE 5057
     * }
     */
    public static int ERROR_CLUSTER_IPADDR_IN_USE() {
        return ERROR_CLUSTER_IPADDR_IN_USE;
    }
    private static final int ERROR_CLUSTER_NODE_NOT_PAUSED = (int)5058L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_NODE_NOT_PAUSED 5058
     * }
     */
    public static int ERROR_CLUSTER_NODE_NOT_PAUSED() {
        return ERROR_CLUSTER_NODE_NOT_PAUSED;
    }
    private static final int ERROR_CLUSTER_NO_SECURITY_CONTEXT = (int)5059L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_NO_SECURITY_CONTEXT 5059
     * }
     */
    public static int ERROR_CLUSTER_NO_SECURITY_CONTEXT() {
        return ERROR_CLUSTER_NO_SECURITY_CONTEXT;
    }
    private static final int ERROR_CLUSTER_NETWORK_NOT_INTERNAL = (int)5060L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_NETWORK_NOT_INTERNAL 5060
     * }
     */
    public static int ERROR_CLUSTER_NETWORK_NOT_INTERNAL() {
        return ERROR_CLUSTER_NETWORK_NOT_INTERNAL;
    }
    private static final int ERROR_CLUSTER_NODE_ALREADY_UP = (int)5061L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_NODE_ALREADY_UP 5061
     * }
     */
    public static int ERROR_CLUSTER_NODE_ALREADY_UP() {
        return ERROR_CLUSTER_NODE_ALREADY_UP;
    }
    private static final int ERROR_CLUSTER_NODE_ALREADY_DOWN = (int)5062L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_NODE_ALREADY_DOWN 5062
     * }
     */
    public static int ERROR_CLUSTER_NODE_ALREADY_DOWN() {
        return ERROR_CLUSTER_NODE_ALREADY_DOWN;
    }
    private static final int ERROR_CLUSTER_NETWORK_ALREADY_ONLINE = (int)5063L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_NETWORK_ALREADY_ONLINE 5063
     * }
     */
    public static int ERROR_CLUSTER_NETWORK_ALREADY_ONLINE() {
        return ERROR_CLUSTER_NETWORK_ALREADY_ONLINE;
    }
    private static final int ERROR_CLUSTER_NETWORK_ALREADY_OFFLINE = (int)5064L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_NETWORK_ALREADY_OFFLINE 5064
     * }
     */
    public static int ERROR_CLUSTER_NETWORK_ALREADY_OFFLINE() {
        return ERROR_CLUSTER_NETWORK_ALREADY_OFFLINE;
    }
    private static final int ERROR_CLUSTER_NODE_ALREADY_MEMBER = (int)5065L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_NODE_ALREADY_MEMBER 5065
     * }
     */
    public static int ERROR_CLUSTER_NODE_ALREADY_MEMBER() {
        return ERROR_CLUSTER_NODE_ALREADY_MEMBER;
    }
    private static final int ERROR_CLUSTER_LAST_INTERNAL_NETWORK = (int)5066L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_LAST_INTERNAL_NETWORK 5066
     * }
     */
    public static int ERROR_CLUSTER_LAST_INTERNAL_NETWORK() {
        return ERROR_CLUSTER_LAST_INTERNAL_NETWORK;
    }
    private static final int ERROR_CLUSTER_NETWORK_HAS_DEPENDENTS = (int)5067L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_NETWORK_HAS_DEPENDENTS 5067
     * }
     */
    public static int ERROR_CLUSTER_NETWORK_HAS_DEPENDENTS() {
        return ERROR_CLUSTER_NETWORK_HAS_DEPENDENTS;
    }
    private static final int ERROR_INVALID_OPERATION_ON_QUORUM = (int)5068L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_OPERATION_ON_QUORUM 5068
     * }
     */
    public static int ERROR_INVALID_OPERATION_ON_QUORUM() {
        return ERROR_INVALID_OPERATION_ON_QUORUM;
    }
    private static final int ERROR_DEPENDENCY_NOT_ALLOWED = (int)5069L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DEPENDENCY_NOT_ALLOWED 5069
     * }
     */
    public static int ERROR_DEPENDENCY_NOT_ALLOWED() {
        return ERROR_DEPENDENCY_NOT_ALLOWED;
    }
    private static final int ERROR_CLUSTER_NODE_PAUSED = (int)5070L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_NODE_PAUSED 5070
     * }
     */
    public static int ERROR_CLUSTER_NODE_PAUSED() {
        return ERROR_CLUSTER_NODE_PAUSED;
    }
    private static final int ERROR_NODE_CANT_HOST_RESOURCE = (int)5071L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NODE_CANT_HOST_RESOURCE 5071
     * }
     */
    public static int ERROR_NODE_CANT_HOST_RESOURCE() {
        return ERROR_NODE_CANT_HOST_RESOURCE;
    }
    private static final int ERROR_CLUSTER_NODE_NOT_READY = (int)5072L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_NODE_NOT_READY 5072
     * }
     */
    public static int ERROR_CLUSTER_NODE_NOT_READY() {
        return ERROR_CLUSTER_NODE_NOT_READY;
    }
    private static final int ERROR_CLUSTER_NODE_SHUTTING_DOWN = (int)5073L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_NODE_SHUTTING_DOWN 5073
     * }
     */
    public static int ERROR_CLUSTER_NODE_SHUTTING_DOWN() {
        return ERROR_CLUSTER_NODE_SHUTTING_DOWN;
    }
    private static final int ERROR_CLUSTER_JOIN_ABORTED = (int)5074L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_JOIN_ABORTED 5074
     * }
     */
    public static int ERROR_CLUSTER_JOIN_ABORTED() {
        return ERROR_CLUSTER_JOIN_ABORTED;
    }
    private static final int ERROR_CLUSTER_INCOMPATIBLE_VERSIONS = (int)5075L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_INCOMPATIBLE_VERSIONS 5075
     * }
     */
    public static int ERROR_CLUSTER_INCOMPATIBLE_VERSIONS() {
        return ERROR_CLUSTER_INCOMPATIBLE_VERSIONS;
    }
    private static final int ERROR_CLUSTER_MAXNUM_OF_RESOURCES_EXCEEDED = (int)5076L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_MAXNUM_OF_RESOURCES_EXCEEDED 5076
     * }
     */
    public static int ERROR_CLUSTER_MAXNUM_OF_RESOURCES_EXCEEDED() {
        return ERROR_CLUSTER_MAXNUM_OF_RESOURCES_EXCEEDED;
    }
    private static final int ERROR_CLUSTER_SYSTEM_CONFIG_CHANGED = (int)5077L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_SYSTEM_CONFIG_CHANGED 5077
     * }
     */
    public static int ERROR_CLUSTER_SYSTEM_CONFIG_CHANGED() {
        return ERROR_CLUSTER_SYSTEM_CONFIG_CHANGED;
    }
    private static final int ERROR_CLUSTER_RESOURCE_TYPE_NOT_FOUND = (int)5078L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_RESOURCE_TYPE_NOT_FOUND 5078
     * }
     */
    public static int ERROR_CLUSTER_RESOURCE_TYPE_NOT_FOUND() {
        return ERROR_CLUSTER_RESOURCE_TYPE_NOT_FOUND;
    }
    private static final int ERROR_CLUSTER_RESTYPE_NOT_SUPPORTED = (int)5079L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_RESTYPE_NOT_SUPPORTED 5079
     * }
     */
    public static int ERROR_CLUSTER_RESTYPE_NOT_SUPPORTED() {
        return ERROR_CLUSTER_RESTYPE_NOT_SUPPORTED;
    }
    private static final int ERROR_CLUSTER_RESNAME_NOT_FOUND = (int)5080L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_RESNAME_NOT_FOUND 5080
     * }
     */
    public static int ERROR_CLUSTER_RESNAME_NOT_FOUND() {
        return ERROR_CLUSTER_RESNAME_NOT_FOUND;
    }
    private static final int ERROR_CLUSTER_NO_RPC_PACKAGES_REGISTERED = (int)5081L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_NO_RPC_PACKAGES_REGISTERED 5081
     * }
     */
    public static int ERROR_CLUSTER_NO_RPC_PACKAGES_REGISTERED() {
        return ERROR_CLUSTER_NO_RPC_PACKAGES_REGISTERED;
    }
    private static final int ERROR_CLUSTER_OWNER_NOT_IN_PREFLIST = (int)5082L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_OWNER_NOT_IN_PREFLIST 5082
     * }
     */
    public static int ERROR_CLUSTER_OWNER_NOT_IN_PREFLIST() {
        return ERROR_CLUSTER_OWNER_NOT_IN_PREFLIST;
    }
    private static final int ERROR_CLUSTER_DATABASE_SEQMISMATCH = (int)5083L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_DATABASE_SEQMISMATCH 5083
     * }
     */
    public static int ERROR_CLUSTER_DATABASE_SEQMISMATCH() {
        return ERROR_CLUSTER_DATABASE_SEQMISMATCH;
    }
    private static final int ERROR_RESMON_INVALID_STATE = (int)5084L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RESMON_INVALID_STATE 5084
     * }
     */
    public static int ERROR_RESMON_INVALID_STATE() {
        return ERROR_RESMON_INVALID_STATE;
    }
    private static final int ERROR_CLUSTER_GUM_NOT_LOCKER = (int)5085L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_GUM_NOT_LOCKER 5085
     * }
     */
    public static int ERROR_CLUSTER_GUM_NOT_LOCKER() {
        return ERROR_CLUSTER_GUM_NOT_LOCKER;
    }
    private static final int ERROR_QUORUM_DISK_NOT_FOUND = (int)5086L;
    /**
     * {@snippet lang=c :
     * #define ERROR_QUORUM_DISK_NOT_FOUND 5086
     * }
     */
    public static int ERROR_QUORUM_DISK_NOT_FOUND() {
        return ERROR_QUORUM_DISK_NOT_FOUND;
    }
    private static final int ERROR_DATABASE_BACKUP_CORRUPT = (int)5087L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DATABASE_BACKUP_CORRUPT 5087
     * }
     */
    public static int ERROR_DATABASE_BACKUP_CORRUPT() {
        return ERROR_DATABASE_BACKUP_CORRUPT;
    }
    private static final int ERROR_CLUSTER_NODE_ALREADY_HAS_DFS_ROOT = (int)5088L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_NODE_ALREADY_HAS_DFS_ROOT 5088
     * }
     */
    public static int ERROR_CLUSTER_NODE_ALREADY_HAS_DFS_ROOT() {
        return ERROR_CLUSTER_NODE_ALREADY_HAS_DFS_ROOT;
    }
    private static final int ERROR_RESOURCE_PROPERTY_UNCHANGEABLE = (int)5089L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RESOURCE_PROPERTY_UNCHANGEABLE 5089
     * }
     */
    public static int ERROR_RESOURCE_PROPERTY_UNCHANGEABLE() {
        return ERROR_RESOURCE_PROPERTY_UNCHANGEABLE;
    }
    private static final int ERROR_NO_ADMIN_ACCESS_POINT = (int)5090L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_ADMIN_ACCESS_POINT 5090
     * }
     */
    public static int ERROR_NO_ADMIN_ACCESS_POINT() {
        return ERROR_NO_ADMIN_ACCESS_POINT;
    }
    private static final int ERROR_CLUSTER_MEMBERSHIP_INVALID_STATE = (int)5890L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_MEMBERSHIP_INVALID_STATE 5890
     * }
     */
    public static int ERROR_CLUSTER_MEMBERSHIP_INVALID_STATE() {
        return ERROR_CLUSTER_MEMBERSHIP_INVALID_STATE;
    }
    private static final int ERROR_CLUSTER_QUORUMLOG_NOT_FOUND = (int)5891L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_QUORUMLOG_NOT_FOUND 5891
     * }
     */
    public static int ERROR_CLUSTER_QUORUMLOG_NOT_FOUND() {
        return ERROR_CLUSTER_QUORUMLOG_NOT_FOUND;
    }
    private static final int ERROR_CLUSTER_MEMBERSHIP_HALT = (int)5892L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_MEMBERSHIP_HALT 5892
     * }
     */
    public static int ERROR_CLUSTER_MEMBERSHIP_HALT() {
        return ERROR_CLUSTER_MEMBERSHIP_HALT;
    }
    private static final int ERROR_CLUSTER_INSTANCE_ID_MISMATCH = (int)5893L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_INSTANCE_ID_MISMATCH 5893
     * }
     */
    public static int ERROR_CLUSTER_INSTANCE_ID_MISMATCH() {
        return ERROR_CLUSTER_INSTANCE_ID_MISMATCH;
    }
    private static final int ERROR_CLUSTER_NETWORK_NOT_FOUND_FOR_IP = (int)5894L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_NETWORK_NOT_FOUND_FOR_IP 5894
     * }
     */
    public static int ERROR_CLUSTER_NETWORK_NOT_FOUND_FOR_IP() {
        return ERROR_CLUSTER_NETWORK_NOT_FOUND_FOR_IP;
    }
    private static final int ERROR_CLUSTER_PROPERTY_DATA_TYPE_MISMATCH = (int)5895L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_PROPERTY_DATA_TYPE_MISMATCH 5895
     * }
     */
    public static int ERROR_CLUSTER_PROPERTY_DATA_TYPE_MISMATCH() {
        return ERROR_CLUSTER_PROPERTY_DATA_TYPE_MISMATCH;
    }
    private static final int ERROR_CLUSTER_EVICT_WITHOUT_CLEANUP = (int)5896L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_EVICT_WITHOUT_CLEANUP 5896
     * }
     */
    public static int ERROR_CLUSTER_EVICT_WITHOUT_CLEANUP() {
        return ERROR_CLUSTER_EVICT_WITHOUT_CLEANUP;
    }
    private static final int ERROR_CLUSTER_PARAMETER_MISMATCH = (int)5897L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_PARAMETER_MISMATCH 5897
     * }
     */
    public static int ERROR_CLUSTER_PARAMETER_MISMATCH() {
        return ERROR_CLUSTER_PARAMETER_MISMATCH;
    }
    private static final int ERROR_NODE_CANNOT_BE_CLUSTERED = (int)5898L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NODE_CANNOT_BE_CLUSTERED 5898
     * }
     */
    public static int ERROR_NODE_CANNOT_BE_CLUSTERED() {
        return ERROR_NODE_CANNOT_BE_CLUSTERED;
    }
    private static final int ERROR_CLUSTER_WRONG_OS_VERSION = (int)5899L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_WRONG_OS_VERSION 5899
     * }
     */
    public static int ERROR_CLUSTER_WRONG_OS_VERSION() {
        return ERROR_CLUSTER_WRONG_OS_VERSION;
    }
    private static final int ERROR_CLUSTER_CANT_CREATE_DUP_CLUSTER_NAME = (int)5900L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_CANT_CREATE_DUP_CLUSTER_NAME 5900
     * }
     */
    public static int ERROR_CLUSTER_CANT_CREATE_DUP_CLUSTER_NAME() {
        return ERROR_CLUSTER_CANT_CREATE_DUP_CLUSTER_NAME;
    }
    private static final int ERROR_CLUSCFG_ALREADY_COMMITTED = (int)5901L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSCFG_ALREADY_COMMITTED 5901
     * }
     */
    public static int ERROR_CLUSCFG_ALREADY_COMMITTED() {
        return ERROR_CLUSCFG_ALREADY_COMMITTED;
    }
    private static final int ERROR_CLUSCFG_ROLLBACK_FAILED = (int)5902L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSCFG_ROLLBACK_FAILED 5902
     * }
     */
    public static int ERROR_CLUSCFG_ROLLBACK_FAILED() {
        return ERROR_CLUSCFG_ROLLBACK_FAILED;
    }
    private static final int ERROR_CLUSCFG_SYSTEM_DISK_DRIVE_LETTER_CONFLICT = (int)5903L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSCFG_SYSTEM_DISK_DRIVE_LETTER_CONFLICT 5903
     * }
     */
    public static int ERROR_CLUSCFG_SYSTEM_DISK_DRIVE_LETTER_CONFLICT() {
        return ERROR_CLUSCFG_SYSTEM_DISK_DRIVE_LETTER_CONFLICT;
    }
    private static final int ERROR_CLUSTER_OLD_VERSION = (int)5904L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_OLD_VERSION 5904
     * }
     */
    public static int ERROR_CLUSTER_OLD_VERSION() {
        return ERROR_CLUSTER_OLD_VERSION;
    }
    private static final int ERROR_CLUSTER_MISMATCHED_COMPUTER_ACCT_NAME = (int)5905L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_MISMATCHED_COMPUTER_ACCT_NAME 5905
     * }
     */
    public static int ERROR_CLUSTER_MISMATCHED_COMPUTER_ACCT_NAME() {
        return ERROR_CLUSTER_MISMATCHED_COMPUTER_ACCT_NAME;
    }
    private static final int ERROR_CLUSTER_NO_NET_ADAPTERS = (int)5906L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_NO_NET_ADAPTERS 5906
     * }
     */
    public static int ERROR_CLUSTER_NO_NET_ADAPTERS() {
        return ERROR_CLUSTER_NO_NET_ADAPTERS;
    }
    private static final int ERROR_CLUSTER_POISONED = (int)5907L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_POISONED 5907
     * }
     */
    public static int ERROR_CLUSTER_POISONED() {
        return ERROR_CLUSTER_POISONED;
    }
    private static final int ERROR_CLUSTER_GROUP_MOVING = (int)5908L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_GROUP_MOVING 5908
     * }
     */
    public static int ERROR_CLUSTER_GROUP_MOVING() {
        return ERROR_CLUSTER_GROUP_MOVING;
    }
    private static final int ERROR_CLUSTER_RESOURCE_TYPE_BUSY = (int)5909L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_RESOURCE_TYPE_BUSY 5909
     * }
     */
    public static int ERROR_CLUSTER_RESOURCE_TYPE_BUSY() {
        return ERROR_CLUSTER_RESOURCE_TYPE_BUSY;
    }
    private static final int ERROR_RESOURCE_CALL_TIMED_OUT = (int)5910L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RESOURCE_CALL_TIMED_OUT 5910
     * }
     */
    public static int ERROR_RESOURCE_CALL_TIMED_OUT() {
        return ERROR_RESOURCE_CALL_TIMED_OUT;
    }
    private static final int ERROR_INVALID_CLUSTER_IPV6_ADDRESS = (int)5911L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_CLUSTER_IPV6_ADDRESS 5911
     * }
     */
    public static int ERROR_INVALID_CLUSTER_IPV6_ADDRESS() {
        return ERROR_INVALID_CLUSTER_IPV6_ADDRESS;
    }
    private static final int ERROR_CLUSTER_INTERNAL_INVALID_FUNCTION = (int)5912L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_INTERNAL_INVALID_FUNCTION 5912
     * }
     */
    public static int ERROR_CLUSTER_INTERNAL_INVALID_FUNCTION() {
        return ERROR_CLUSTER_INTERNAL_INVALID_FUNCTION;
    }
    private static final int ERROR_CLUSTER_PARAMETER_OUT_OF_BOUNDS = (int)5913L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_PARAMETER_OUT_OF_BOUNDS 5913
     * }
     */
    public static int ERROR_CLUSTER_PARAMETER_OUT_OF_BOUNDS() {
        return ERROR_CLUSTER_PARAMETER_OUT_OF_BOUNDS;
    }
    private static final int ERROR_CLUSTER_PARTIAL_SEND = (int)5914L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_PARTIAL_SEND 5914
     * }
     */
    public static int ERROR_CLUSTER_PARTIAL_SEND() {
        return ERROR_CLUSTER_PARTIAL_SEND;
    }
    private static final int ERROR_CLUSTER_REGISTRY_INVALID_FUNCTION = (int)5915L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_REGISTRY_INVALID_FUNCTION 5915
     * }
     */
    public static int ERROR_CLUSTER_REGISTRY_INVALID_FUNCTION() {
        return ERROR_CLUSTER_REGISTRY_INVALID_FUNCTION;
    }
    private static final int ERROR_CLUSTER_INVALID_STRING_TERMINATION = (int)5916L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_INVALID_STRING_TERMINATION 5916
     * }
     */
    public static int ERROR_CLUSTER_INVALID_STRING_TERMINATION() {
        return ERROR_CLUSTER_INVALID_STRING_TERMINATION;
    }
    private static final int ERROR_CLUSTER_INVALID_STRING_FORMAT = (int)5917L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_INVALID_STRING_FORMAT 5917
     * }
     */
    public static int ERROR_CLUSTER_INVALID_STRING_FORMAT() {
        return ERROR_CLUSTER_INVALID_STRING_FORMAT;
    }
    private static final int ERROR_CLUSTER_DATABASE_TRANSACTION_IN_PROGRESS = (int)5918L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_DATABASE_TRANSACTION_IN_PROGRESS 5918
     * }
     */
    public static int ERROR_CLUSTER_DATABASE_TRANSACTION_IN_PROGRESS() {
        return ERROR_CLUSTER_DATABASE_TRANSACTION_IN_PROGRESS;
    }
    private static final int ERROR_CLUSTER_DATABASE_TRANSACTION_NOT_IN_PROGRESS = (int)5919L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_DATABASE_TRANSACTION_NOT_IN_PROGRESS 5919
     * }
     */
    public static int ERROR_CLUSTER_DATABASE_TRANSACTION_NOT_IN_PROGRESS() {
        return ERROR_CLUSTER_DATABASE_TRANSACTION_NOT_IN_PROGRESS;
    }
    private static final int ERROR_CLUSTER_NULL_DATA = (int)5920L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_NULL_DATA 5920
     * }
     */
    public static int ERROR_CLUSTER_NULL_DATA() {
        return ERROR_CLUSTER_NULL_DATA;
    }
    private static final int ERROR_CLUSTER_PARTIAL_READ = (int)5921L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_PARTIAL_READ 5921
     * }
     */
    public static int ERROR_CLUSTER_PARTIAL_READ() {
        return ERROR_CLUSTER_PARTIAL_READ;
    }
    private static final int ERROR_CLUSTER_PARTIAL_WRITE = (int)5922L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_PARTIAL_WRITE 5922
     * }
     */
    public static int ERROR_CLUSTER_PARTIAL_WRITE() {
        return ERROR_CLUSTER_PARTIAL_WRITE;
    }
    private static final int ERROR_CLUSTER_CANT_DESERIALIZE_DATA = (int)5923L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_CANT_DESERIALIZE_DATA 5923
     * }
     */
    public static int ERROR_CLUSTER_CANT_DESERIALIZE_DATA() {
        return ERROR_CLUSTER_CANT_DESERIALIZE_DATA;
    }
    private static final int ERROR_DEPENDENT_RESOURCE_PROPERTY_CONFLICT = (int)5924L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DEPENDENT_RESOURCE_PROPERTY_CONFLICT 5924
     * }
     */
    public static int ERROR_DEPENDENT_RESOURCE_PROPERTY_CONFLICT() {
        return ERROR_DEPENDENT_RESOURCE_PROPERTY_CONFLICT;
    }
    private static final int ERROR_CLUSTER_NO_QUORUM = (int)5925L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_NO_QUORUM 5925
     * }
     */
    public static int ERROR_CLUSTER_NO_QUORUM() {
        return ERROR_CLUSTER_NO_QUORUM;
    }
    private static final int ERROR_CLUSTER_INVALID_IPV6_NETWORK = (int)5926L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_INVALID_IPV6_NETWORK 5926
     * }
     */
    public static int ERROR_CLUSTER_INVALID_IPV6_NETWORK() {
        return ERROR_CLUSTER_INVALID_IPV6_NETWORK;
    }
    private static final int ERROR_CLUSTER_INVALID_IPV6_TUNNEL_NETWORK = (int)5927L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_INVALID_IPV6_TUNNEL_NETWORK 5927
     * }
     */
    public static int ERROR_CLUSTER_INVALID_IPV6_TUNNEL_NETWORK() {
        return ERROR_CLUSTER_INVALID_IPV6_TUNNEL_NETWORK;
    }
    private static final int ERROR_QUORUM_NOT_ALLOWED_IN_THIS_GROUP = (int)5928L;
    /**
     * {@snippet lang=c :
     * #define ERROR_QUORUM_NOT_ALLOWED_IN_THIS_GROUP 5928
     * }
     */
    public static int ERROR_QUORUM_NOT_ALLOWED_IN_THIS_GROUP() {
        return ERROR_QUORUM_NOT_ALLOWED_IN_THIS_GROUP;
    }
    private static final int ERROR_DEPENDENCY_TREE_TOO_COMPLEX = (int)5929L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DEPENDENCY_TREE_TOO_COMPLEX 5929
     * }
     */
    public static int ERROR_DEPENDENCY_TREE_TOO_COMPLEX() {
        return ERROR_DEPENDENCY_TREE_TOO_COMPLEX;
    }
    private static final int ERROR_EXCEPTION_IN_RESOURCE_CALL = (int)5930L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EXCEPTION_IN_RESOURCE_CALL 5930
     * }
     */
    public static int ERROR_EXCEPTION_IN_RESOURCE_CALL() {
        return ERROR_EXCEPTION_IN_RESOURCE_CALL;
    }
    private static final int ERROR_CLUSTER_RHS_FAILED_INITIALIZATION = (int)5931L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_RHS_FAILED_INITIALIZATION 5931
     * }
     */
    public static int ERROR_CLUSTER_RHS_FAILED_INITIALIZATION() {
        return ERROR_CLUSTER_RHS_FAILED_INITIALIZATION;
    }
    private static final int ERROR_CLUSTER_NOT_INSTALLED = (int)5932L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_NOT_INSTALLED 5932
     * }
     */
    public static int ERROR_CLUSTER_NOT_INSTALLED() {
        return ERROR_CLUSTER_NOT_INSTALLED;
    }
    private static final int ERROR_CLUSTER_RESOURCES_MUST_BE_ONLINE_ON_THE_SAME_NODE = (int)5933L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_RESOURCES_MUST_BE_ONLINE_ON_THE_SAME_NODE 5933
     * }
     */
    public static int ERROR_CLUSTER_RESOURCES_MUST_BE_ONLINE_ON_THE_SAME_NODE() {
        return ERROR_CLUSTER_RESOURCES_MUST_BE_ONLINE_ON_THE_SAME_NODE;
    }
    private static final int ERROR_CLUSTER_MAX_NODES_IN_CLUSTER = (int)5934L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_MAX_NODES_IN_CLUSTER 5934
     * }
     */
    public static int ERROR_CLUSTER_MAX_NODES_IN_CLUSTER() {
        return ERROR_CLUSTER_MAX_NODES_IN_CLUSTER;
    }
    private static final int ERROR_CLUSTER_TOO_MANY_NODES = (int)5935L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_TOO_MANY_NODES 5935
     * }
     */
    public static int ERROR_CLUSTER_TOO_MANY_NODES() {
        return ERROR_CLUSTER_TOO_MANY_NODES;
    }
    private static final int ERROR_CLUSTER_OBJECT_ALREADY_USED = (int)5936L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_OBJECT_ALREADY_USED 5936
     * }
     */
    public static int ERROR_CLUSTER_OBJECT_ALREADY_USED() {
        return ERROR_CLUSTER_OBJECT_ALREADY_USED;
    }
    private static final int ERROR_NONCORE_GROUPS_FOUND = (int)5937L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NONCORE_GROUPS_FOUND 5937
     * }
     */
    public static int ERROR_NONCORE_GROUPS_FOUND() {
        return ERROR_NONCORE_GROUPS_FOUND;
    }
    private static final int ERROR_FILE_SHARE_RESOURCE_CONFLICT = (int)5938L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FILE_SHARE_RESOURCE_CONFLICT 5938
     * }
     */
    public static int ERROR_FILE_SHARE_RESOURCE_CONFLICT() {
        return ERROR_FILE_SHARE_RESOURCE_CONFLICT;
    }
    private static final int ERROR_CLUSTER_EVICT_INVALID_REQUEST = (int)5939L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_EVICT_INVALID_REQUEST 5939
     * }
     */
    public static int ERROR_CLUSTER_EVICT_INVALID_REQUEST() {
        return ERROR_CLUSTER_EVICT_INVALID_REQUEST;
    }
    private static final int ERROR_CLUSTER_SINGLETON_RESOURCE = (int)5940L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_SINGLETON_RESOURCE 5940
     * }
     */
    public static int ERROR_CLUSTER_SINGLETON_RESOURCE() {
        return ERROR_CLUSTER_SINGLETON_RESOURCE;
    }
    private static final int ERROR_CLUSTER_GROUP_SINGLETON_RESOURCE = (int)5941L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_GROUP_SINGLETON_RESOURCE 5941
     * }
     */
    public static int ERROR_CLUSTER_GROUP_SINGLETON_RESOURCE() {
        return ERROR_CLUSTER_GROUP_SINGLETON_RESOURCE;
    }
    private static final int ERROR_CLUSTER_RESOURCE_PROVIDER_FAILED = (int)5942L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_RESOURCE_PROVIDER_FAILED 5942
     * }
     */
    public static int ERROR_CLUSTER_RESOURCE_PROVIDER_FAILED() {
        return ERROR_CLUSTER_RESOURCE_PROVIDER_FAILED;
    }
    private static final int ERROR_CLUSTER_RESOURCE_CONFIGURATION_ERROR = (int)5943L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_RESOURCE_CONFIGURATION_ERROR 5943
     * }
     */
    public static int ERROR_CLUSTER_RESOURCE_CONFIGURATION_ERROR() {
        return ERROR_CLUSTER_RESOURCE_CONFIGURATION_ERROR;
    }
    private static final int ERROR_CLUSTER_GROUP_BUSY = (int)5944L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_GROUP_BUSY 5944
     * }
     */
    public static int ERROR_CLUSTER_GROUP_BUSY() {
        return ERROR_CLUSTER_GROUP_BUSY;
    }
    private static final int ERROR_CLUSTER_NOT_SHARED_VOLUME = (int)5945L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_NOT_SHARED_VOLUME 5945
     * }
     */
    public static int ERROR_CLUSTER_NOT_SHARED_VOLUME() {
        return ERROR_CLUSTER_NOT_SHARED_VOLUME;
    }
    private static final int ERROR_CLUSTER_INVALID_SECURITY_DESCRIPTOR = (int)5946L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_INVALID_SECURITY_DESCRIPTOR 5946
     * }
     */
    public static int ERROR_CLUSTER_INVALID_SECURITY_DESCRIPTOR() {
        return ERROR_CLUSTER_INVALID_SECURITY_DESCRIPTOR;
    }
    private static final int ERROR_CLUSTER_SHARED_VOLUMES_IN_USE = (int)5947L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_SHARED_VOLUMES_IN_USE 5947
     * }
     */
    public static int ERROR_CLUSTER_SHARED_VOLUMES_IN_USE() {
        return ERROR_CLUSTER_SHARED_VOLUMES_IN_USE;
    }
    private static final int ERROR_CLUSTER_USE_SHARED_VOLUMES_API = (int)5948L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_USE_SHARED_VOLUMES_API 5948
     * }
     */
    public static int ERROR_CLUSTER_USE_SHARED_VOLUMES_API() {
        return ERROR_CLUSTER_USE_SHARED_VOLUMES_API;
    }
    private static final int ERROR_CLUSTER_BACKUP_IN_PROGRESS = (int)5949L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_BACKUP_IN_PROGRESS 5949
     * }
     */
    public static int ERROR_CLUSTER_BACKUP_IN_PROGRESS() {
        return ERROR_CLUSTER_BACKUP_IN_PROGRESS;
    }
    private static final int ERROR_NON_CSV_PATH = (int)5950L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NON_CSV_PATH 5950
     * }
     */
    public static int ERROR_NON_CSV_PATH() {
        return ERROR_NON_CSV_PATH;
    }
    private static final int ERROR_CSV_VOLUME_NOT_LOCAL = (int)5951L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CSV_VOLUME_NOT_LOCAL 5951
     * }
     */
    public static int ERROR_CSV_VOLUME_NOT_LOCAL() {
        return ERROR_CSV_VOLUME_NOT_LOCAL;
    }
    private static final int ERROR_CLUSTER_WATCHDOG_TERMINATING = (int)5952L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_WATCHDOG_TERMINATING 5952
     * }
     */
    public static int ERROR_CLUSTER_WATCHDOG_TERMINATING() {
        return ERROR_CLUSTER_WATCHDOG_TERMINATING;
    }
    private static final int ERROR_CLUSTER_RESOURCE_VETOED_MOVE_INCOMPATIBLE_NODES = (int)5953L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_RESOURCE_VETOED_MOVE_INCOMPATIBLE_NODES 5953
     * }
     */
    public static int ERROR_CLUSTER_RESOURCE_VETOED_MOVE_INCOMPATIBLE_NODES() {
        return ERROR_CLUSTER_RESOURCE_VETOED_MOVE_INCOMPATIBLE_NODES;
    }
    private static final int ERROR_CLUSTER_INVALID_NODE_WEIGHT = (int)5954L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_INVALID_NODE_WEIGHT 5954
     * }
     */
    public static int ERROR_CLUSTER_INVALID_NODE_WEIGHT() {
        return ERROR_CLUSTER_INVALID_NODE_WEIGHT;
    }
    private static final int ERROR_CLUSTER_RESOURCE_VETOED_CALL = (int)5955L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_RESOURCE_VETOED_CALL 5955
     * }
     */
    public static int ERROR_CLUSTER_RESOURCE_VETOED_CALL() {
        return ERROR_CLUSTER_RESOURCE_VETOED_CALL;
    }
    private static final int ERROR_RESMON_SYSTEM_RESOURCES_LACKING = (int)5956L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RESMON_SYSTEM_RESOURCES_LACKING 5956
     * }
     */
    public static int ERROR_RESMON_SYSTEM_RESOURCES_LACKING() {
        return ERROR_RESMON_SYSTEM_RESOURCES_LACKING;
    }
    private static final int ERROR_CLUSTER_RESOURCE_VETOED_MOVE_NOT_ENOUGH_RESOURCES_ON_DESTINATION = (int)5957L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_RESOURCE_VETOED_MOVE_NOT_ENOUGH_RESOURCES_ON_DESTINATION 5957
     * }
     */
    public static int ERROR_CLUSTER_RESOURCE_VETOED_MOVE_NOT_ENOUGH_RESOURCES_ON_DESTINATION() {
        return ERROR_CLUSTER_RESOURCE_VETOED_MOVE_NOT_ENOUGH_RESOURCES_ON_DESTINATION;
    }
    private static final int ERROR_CLUSTER_RESOURCE_VETOED_MOVE_NOT_ENOUGH_RESOURCES_ON_SOURCE = (int)5958L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_RESOURCE_VETOED_MOVE_NOT_ENOUGH_RESOURCES_ON_SOURCE 5958
     * }
     */
    public static int ERROR_CLUSTER_RESOURCE_VETOED_MOVE_NOT_ENOUGH_RESOURCES_ON_SOURCE() {
        return ERROR_CLUSTER_RESOURCE_VETOED_MOVE_NOT_ENOUGH_RESOURCES_ON_SOURCE;
    }
    private static final int ERROR_CLUSTER_GROUP_QUEUED = (int)5959L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_GROUP_QUEUED 5959
     * }
     */
    public static int ERROR_CLUSTER_GROUP_QUEUED() {
        return ERROR_CLUSTER_GROUP_QUEUED;
    }
    private static final int ERROR_CLUSTER_RESOURCE_LOCKED_STATUS = (int)5960L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_RESOURCE_LOCKED_STATUS 5960
     * }
     */
    public static int ERROR_CLUSTER_RESOURCE_LOCKED_STATUS() {
        return ERROR_CLUSTER_RESOURCE_LOCKED_STATUS;
    }
    private static final int ERROR_CLUSTER_SHARED_VOLUME_FAILOVER_NOT_ALLOWED = (int)5961L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_SHARED_VOLUME_FAILOVER_NOT_ALLOWED 5961
     * }
     */
    public static int ERROR_CLUSTER_SHARED_VOLUME_FAILOVER_NOT_ALLOWED() {
        return ERROR_CLUSTER_SHARED_VOLUME_FAILOVER_NOT_ALLOWED;
    }
    private static final int ERROR_CLUSTER_NODE_DRAIN_IN_PROGRESS = (int)5962L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_NODE_DRAIN_IN_PROGRESS 5962
     * }
     */
    public static int ERROR_CLUSTER_NODE_DRAIN_IN_PROGRESS() {
        return ERROR_CLUSTER_NODE_DRAIN_IN_PROGRESS;
    }
    private static final int ERROR_CLUSTER_DISK_NOT_CONNECTED = (int)5963L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_DISK_NOT_CONNECTED 5963
     * }
     */
    public static int ERROR_CLUSTER_DISK_NOT_CONNECTED() {
        return ERROR_CLUSTER_DISK_NOT_CONNECTED;
    }
    private static final int ERROR_DISK_NOT_CSV_CAPABLE = (int)5964L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DISK_NOT_CSV_CAPABLE 5964
     * }
     */
    public static int ERROR_DISK_NOT_CSV_CAPABLE() {
        return ERROR_DISK_NOT_CSV_CAPABLE;
    }
    private static final int ERROR_RESOURCE_NOT_IN_AVAILABLE_STORAGE = (int)5965L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RESOURCE_NOT_IN_AVAILABLE_STORAGE 5965
     * }
     */
    public static int ERROR_RESOURCE_NOT_IN_AVAILABLE_STORAGE() {
        return ERROR_RESOURCE_NOT_IN_AVAILABLE_STORAGE;
    }
    private static final int ERROR_CLUSTER_SHARED_VOLUME_REDIRECTED = (int)5966L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_SHARED_VOLUME_REDIRECTED 5966
     * }
     */
    public static int ERROR_CLUSTER_SHARED_VOLUME_REDIRECTED() {
        return ERROR_CLUSTER_SHARED_VOLUME_REDIRECTED;
    }
    private static final int ERROR_CLUSTER_SHARED_VOLUME_NOT_REDIRECTED = (int)5967L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_SHARED_VOLUME_NOT_REDIRECTED 5967
     * }
     */
    public static int ERROR_CLUSTER_SHARED_VOLUME_NOT_REDIRECTED() {
        return ERROR_CLUSTER_SHARED_VOLUME_NOT_REDIRECTED;
    }
    private static final int ERROR_CLUSTER_CANNOT_RETURN_PROPERTIES = (int)5968L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_CANNOT_RETURN_PROPERTIES 5968
     * }
     */
    public static int ERROR_CLUSTER_CANNOT_RETURN_PROPERTIES() {
        return ERROR_CLUSTER_CANNOT_RETURN_PROPERTIES;
    }
    private static final int ERROR_CLUSTER_RESOURCE_CONTAINS_UNSUPPORTED_DIFF_AREA_FOR_SHARED_VOLUMES = (int)5969L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_RESOURCE_CONTAINS_UNSUPPORTED_DIFF_AREA_FOR_SHARED_VOLUMES 5969
     * }
     */
    public static int ERROR_CLUSTER_RESOURCE_CONTAINS_UNSUPPORTED_DIFF_AREA_FOR_SHARED_VOLUMES() {
        return ERROR_CLUSTER_RESOURCE_CONTAINS_UNSUPPORTED_DIFF_AREA_FOR_SHARED_VOLUMES;
    }
    private static final int ERROR_CLUSTER_RESOURCE_IS_IN_MAINTENANCE_MODE = (int)5970L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_RESOURCE_IS_IN_MAINTENANCE_MODE 5970
     * }
     */
    public static int ERROR_CLUSTER_RESOURCE_IS_IN_MAINTENANCE_MODE() {
        return ERROR_CLUSTER_RESOURCE_IS_IN_MAINTENANCE_MODE;
    }
    private static final int ERROR_CLUSTER_AFFINITY_CONFLICT = (int)5971L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_AFFINITY_CONFLICT 5971
     * }
     */
    public static int ERROR_CLUSTER_AFFINITY_CONFLICT() {
        return ERROR_CLUSTER_AFFINITY_CONFLICT;
    }
    private static final int ERROR_CLUSTER_RESOURCE_IS_REPLICA_VIRTUAL_MACHINE = (int)5972L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_RESOURCE_IS_REPLICA_VIRTUAL_MACHINE 5972
     * }
     */
    public static int ERROR_CLUSTER_RESOURCE_IS_REPLICA_VIRTUAL_MACHINE() {
        return ERROR_CLUSTER_RESOURCE_IS_REPLICA_VIRTUAL_MACHINE;
    }
    private static final int ERROR_CLUSTER_UPGRADE_INCOMPATIBLE_VERSIONS = (int)5973L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_UPGRADE_INCOMPATIBLE_VERSIONS 5973
     * }
     */
    public static int ERROR_CLUSTER_UPGRADE_INCOMPATIBLE_VERSIONS() {
        return ERROR_CLUSTER_UPGRADE_INCOMPATIBLE_VERSIONS;
    }
    private static final int ERROR_CLUSTER_UPGRADE_FIX_QUORUM_NOT_SUPPORTED = (int)5974L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_UPGRADE_FIX_QUORUM_NOT_SUPPORTED 5974
     * }
     */
    public static int ERROR_CLUSTER_UPGRADE_FIX_QUORUM_NOT_SUPPORTED() {
        return ERROR_CLUSTER_UPGRADE_FIX_QUORUM_NOT_SUPPORTED;
    }
    private static final int ERROR_CLUSTER_UPGRADE_RESTART_REQUIRED = (int)5975L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_UPGRADE_RESTART_REQUIRED 5975
     * }
     */
    public static int ERROR_CLUSTER_UPGRADE_RESTART_REQUIRED() {
        return ERROR_CLUSTER_UPGRADE_RESTART_REQUIRED;
    }
    private static final int ERROR_CLUSTER_UPGRADE_IN_PROGRESS = (int)5976L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_UPGRADE_IN_PROGRESS 5976
     * }
     */
    public static int ERROR_CLUSTER_UPGRADE_IN_PROGRESS() {
        return ERROR_CLUSTER_UPGRADE_IN_PROGRESS;
    }
    private static final int ERROR_CLUSTER_UPGRADE_INCOMPLETE = (int)5977L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_UPGRADE_INCOMPLETE 5977
     * }
     */
    public static int ERROR_CLUSTER_UPGRADE_INCOMPLETE() {
        return ERROR_CLUSTER_UPGRADE_INCOMPLETE;
    }
    private static final int ERROR_CLUSTER_NODE_IN_GRACE_PERIOD = (int)5978L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_NODE_IN_GRACE_PERIOD 5978
     * }
     */
    public static int ERROR_CLUSTER_NODE_IN_GRACE_PERIOD() {
        return ERROR_CLUSTER_NODE_IN_GRACE_PERIOD;
    }
    private static final int ERROR_CLUSTER_CSV_IO_PAUSE_TIMEOUT = (int)5979L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_CSV_IO_PAUSE_TIMEOUT 5979
     * }
     */
    public static int ERROR_CLUSTER_CSV_IO_PAUSE_TIMEOUT() {
        return ERROR_CLUSTER_CSV_IO_PAUSE_TIMEOUT;
    }
    private static final int ERROR_NODE_NOT_ACTIVE_CLUSTER_MEMBER = (int)5980L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NODE_NOT_ACTIVE_CLUSTER_MEMBER 5980
     * }
     */
    public static int ERROR_NODE_NOT_ACTIVE_CLUSTER_MEMBER() {
        return ERROR_NODE_NOT_ACTIVE_CLUSTER_MEMBER;
    }
    private static final int ERROR_CLUSTER_RESOURCE_NOT_MONITORED = (int)5981L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_RESOURCE_NOT_MONITORED 5981
     * }
     */
    public static int ERROR_CLUSTER_RESOURCE_NOT_MONITORED() {
        return ERROR_CLUSTER_RESOURCE_NOT_MONITORED;
    }
    private static final int ERROR_CLUSTER_RESOURCE_DOES_NOT_SUPPORT_UNMONITORED = (int)5982L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_RESOURCE_DOES_NOT_SUPPORT_UNMONITORED 5982
     * }
     */
    public static int ERROR_CLUSTER_RESOURCE_DOES_NOT_SUPPORT_UNMONITORED() {
        return ERROR_CLUSTER_RESOURCE_DOES_NOT_SUPPORT_UNMONITORED;
    }
    private static final int ERROR_CLUSTER_RESOURCE_IS_REPLICATED = (int)5983L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_RESOURCE_IS_REPLICATED 5983
     * }
     */
    public static int ERROR_CLUSTER_RESOURCE_IS_REPLICATED() {
        return ERROR_CLUSTER_RESOURCE_IS_REPLICATED;
    }
    private static final int ERROR_CLUSTER_NODE_ISOLATED = (int)5984L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_NODE_ISOLATED 5984
     * }
     */
    public static int ERROR_CLUSTER_NODE_ISOLATED() {
        return ERROR_CLUSTER_NODE_ISOLATED;
    }
    private static final int ERROR_CLUSTER_NODE_QUARANTINED = (int)5985L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_NODE_QUARANTINED 5985
     * }
     */
    public static int ERROR_CLUSTER_NODE_QUARANTINED() {
        return ERROR_CLUSTER_NODE_QUARANTINED;
    }
    private static final int ERROR_CLUSTER_DATABASE_UPDATE_CONDITION_FAILED = (int)5986L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_DATABASE_UPDATE_CONDITION_FAILED 5986
     * }
     */
    public static int ERROR_CLUSTER_DATABASE_UPDATE_CONDITION_FAILED() {
        return ERROR_CLUSTER_DATABASE_UPDATE_CONDITION_FAILED;
    }
    private static final int ERROR_CLUSTER_SPACE_DEGRADED = (int)5987L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_SPACE_DEGRADED 5987
     * }
     */
    public static int ERROR_CLUSTER_SPACE_DEGRADED() {
        return ERROR_CLUSTER_SPACE_DEGRADED;
    }
    private static final int ERROR_CLUSTER_TOKEN_DELEGATION_NOT_SUPPORTED = (int)5988L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_TOKEN_DELEGATION_NOT_SUPPORTED 5988
     * }
     */
    public static int ERROR_CLUSTER_TOKEN_DELEGATION_NOT_SUPPORTED() {
        return ERROR_CLUSTER_TOKEN_DELEGATION_NOT_SUPPORTED;
    }
    private static final int ERROR_CLUSTER_CSV_INVALID_HANDLE = (int)5989L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_CSV_INVALID_HANDLE 5989
     * }
     */
    public static int ERROR_CLUSTER_CSV_INVALID_HANDLE() {
        return ERROR_CLUSTER_CSV_INVALID_HANDLE;
    }
    private static final int ERROR_CLUSTER_CSV_SUPPORTED_ONLY_ON_COORDINATOR = (int)5990L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_CSV_SUPPORTED_ONLY_ON_COORDINATOR 5990
     * }
     */
    public static int ERROR_CLUSTER_CSV_SUPPORTED_ONLY_ON_COORDINATOR() {
        return ERROR_CLUSTER_CSV_SUPPORTED_ONLY_ON_COORDINATOR;
    }
    private static final int ERROR_GROUPSET_NOT_AVAILABLE = (int)5991L;
    /**
     * {@snippet lang=c :
     * #define ERROR_GROUPSET_NOT_AVAILABLE 5991
     * }
     */
    public static int ERROR_GROUPSET_NOT_AVAILABLE() {
        return ERROR_GROUPSET_NOT_AVAILABLE;
    }
    private static final int ERROR_GROUPSET_NOT_FOUND = (int)5992L;
    /**
     * {@snippet lang=c :
     * #define ERROR_GROUPSET_NOT_FOUND 5992
     * }
     */
    public static int ERROR_GROUPSET_NOT_FOUND() {
        return ERROR_GROUPSET_NOT_FOUND;
    }
    private static final int ERROR_GROUPSET_CANT_PROVIDE = (int)5993L;
    /**
     * {@snippet lang=c :
     * #define ERROR_GROUPSET_CANT_PROVIDE 5993
     * }
     */
    public static int ERROR_GROUPSET_CANT_PROVIDE() {
        return ERROR_GROUPSET_CANT_PROVIDE;
    }
    private static final int ERROR_CLUSTER_FAULT_DOMAIN_PARENT_NOT_FOUND = (int)5994L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_FAULT_DOMAIN_PARENT_NOT_FOUND 5994
     * }
     */
    public static int ERROR_CLUSTER_FAULT_DOMAIN_PARENT_NOT_FOUND() {
        return ERROR_CLUSTER_FAULT_DOMAIN_PARENT_NOT_FOUND;
    }
    private static final int ERROR_CLUSTER_FAULT_DOMAIN_INVALID_HIERARCHY = (int)5995L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_FAULT_DOMAIN_INVALID_HIERARCHY 5995
     * }
     */
    public static int ERROR_CLUSTER_FAULT_DOMAIN_INVALID_HIERARCHY() {
        return ERROR_CLUSTER_FAULT_DOMAIN_INVALID_HIERARCHY;
    }
    private static final int ERROR_CLUSTER_FAULT_DOMAIN_FAILED_S2D_VALIDATION = (int)5996L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_FAULT_DOMAIN_FAILED_S2D_VALIDATION 5996
     * }
     */
    public static int ERROR_CLUSTER_FAULT_DOMAIN_FAILED_S2D_VALIDATION() {
        return ERROR_CLUSTER_FAULT_DOMAIN_FAILED_S2D_VALIDATION;
    }
    private static final int ERROR_CLUSTER_FAULT_DOMAIN_S2D_CONNECTIVITY_LOSS = (int)5997L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_FAULT_DOMAIN_S2D_CONNECTIVITY_LOSS 5997
     * }
     */
    public static int ERROR_CLUSTER_FAULT_DOMAIN_S2D_CONNECTIVITY_LOSS() {
        return ERROR_CLUSTER_FAULT_DOMAIN_S2D_CONNECTIVITY_LOSS;
    }
    private static final int ERROR_CLUSTER_INVALID_INFRASTRUCTURE_FILESERVER_NAME = (int)5998L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_INVALID_INFRASTRUCTURE_FILESERVER_NAME 5998
     * }
     */
    public static int ERROR_CLUSTER_INVALID_INFRASTRUCTURE_FILESERVER_NAME() {
        return ERROR_CLUSTER_INVALID_INFRASTRUCTURE_FILESERVER_NAME;
    }
    private static final int ERROR_CLUSTERSET_MANAGEMENT_CLUSTER_UNREACHABLE = (int)5999L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTERSET_MANAGEMENT_CLUSTER_UNREACHABLE 5999
     * }
     */
    public static int ERROR_CLUSTERSET_MANAGEMENT_CLUSTER_UNREACHABLE() {
        return ERROR_CLUSTERSET_MANAGEMENT_CLUSTER_UNREACHABLE;
    }
    private static final int ERROR_ENCRYPTION_FAILED = (int)6000L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ENCRYPTION_FAILED 6000
     * }
     */
    public static int ERROR_ENCRYPTION_FAILED() {
        return ERROR_ENCRYPTION_FAILED;
    }
    private static final int ERROR_DECRYPTION_FAILED = (int)6001L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DECRYPTION_FAILED 6001
     * }
     */
    public static int ERROR_DECRYPTION_FAILED() {
        return ERROR_DECRYPTION_FAILED;
    }
    private static final int ERROR_FILE_ENCRYPTED = (int)6002L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FILE_ENCRYPTED 6002
     * }
     */
    public static int ERROR_FILE_ENCRYPTED() {
        return ERROR_FILE_ENCRYPTED;
    }
    private static final int ERROR_NO_RECOVERY_POLICY = (int)6003L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_RECOVERY_POLICY 6003
     * }
     */
    public static int ERROR_NO_RECOVERY_POLICY() {
        return ERROR_NO_RECOVERY_POLICY;
    }
    private static final int ERROR_NO_EFS = (int)6004L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_EFS 6004
     * }
     */
    public static int ERROR_NO_EFS() {
        return ERROR_NO_EFS;
    }
    private static final int ERROR_WRONG_EFS = (int)6005L;
    /**
     * {@snippet lang=c :
     * #define ERROR_WRONG_EFS 6005
     * }
     */
    public static int ERROR_WRONG_EFS() {
        return ERROR_WRONG_EFS;
    }
    private static final int ERROR_NO_USER_KEYS = (int)6006L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_USER_KEYS 6006
     * }
     */
    public static int ERROR_NO_USER_KEYS() {
        return ERROR_NO_USER_KEYS;
    }
    private static final int ERROR_FILE_NOT_ENCRYPTED = (int)6007L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FILE_NOT_ENCRYPTED 6007
     * }
     */
    public static int ERROR_FILE_NOT_ENCRYPTED() {
        return ERROR_FILE_NOT_ENCRYPTED;
    }
    private static final int ERROR_NOT_EXPORT_FORMAT = (int)6008L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_EXPORT_FORMAT 6008
     * }
     */
    public static int ERROR_NOT_EXPORT_FORMAT() {
        return ERROR_NOT_EXPORT_FORMAT;
    }
    private static final int ERROR_FILE_READ_ONLY = (int)6009L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FILE_READ_ONLY 6009
     * }
     */
    public static int ERROR_FILE_READ_ONLY() {
        return ERROR_FILE_READ_ONLY;
    }
    private static final int ERROR_DIR_EFS_DISALLOWED = (int)6010L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DIR_EFS_DISALLOWED 6010
     * }
     */
    public static int ERROR_DIR_EFS_DISALLOWED() {
        return ERROR_DIR_EFS_DISALLOWED;
    }
    private static final int ERROR_EFS_SERVER_NOT_TRUSTED = (int)6011L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EFS_SERVER_NOT_TRUSTED 6011
     * }
     */
    public static int ERROR_EFS_SERVER_NOT_TRUSTED() {
        return ERROR_EFS_SERVER_NOT_TRUSTED;
    }
    private static final int ERROR_BAD_RECOVERY_POLICY = (int)6012L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BAD_RECOVERY_POLICY 6012
     * }
     */
    public static int ERROR_BAD_RECOVERY_POLICY() {
        return ERROR_BAD_RECOVERY_POLICY;
    }
    private static final int ERROR_EFS_ALG_BLOB_TOO_BIG = (int)6013L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EFS_ALG_BLOB_TOO_BIG 6013
     * }
     */
    public static int ERROR_EFS_ALG_BLOB_TOO_BIG() {
        return ERROR_EFS_ALG_BLOB_TOO_BIG;
    }
    private static final int ERROR_VOLUME_NOT_SUPPORT_EFS = (int)6014L;
    /**
     * {@snippet lang=c :
     * #define ERROR_VOLUME_NOT_SUPPORT_EFS 6014
     * }
     */
    public static int ERROR_VOLUME_NOT_SUPPORT_EFS() {
        return ERROR_VOLUME_NOT_SUPPORT_EFS;
    }
    private static final int ERROR_EFS_DISABLED = (int)6015L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EFS_DISABLED 6015
     * }
     */
    public static int ERROR_EFS_DISABLED() {
        return ERROR_EFS_DISABLED;
    }
    private static final int ERROR_EFS_VERSION_NOT_SUPPORT = (int)6016L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EFS_VERSION_NOT_SUPPORT 6016
     * }
     */
    public static int ERROR_EFS_VERSION_NOT_SUPPORT() {
        return ERROR_EFS_VERSION_NOT_SUPPORT;
    }
    private static final int ERROR_CS_ENCRYPTION_INVALID_SERVER_RESPONSE = (int)6017L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CS_ENCRYPTION_INVALID_SERVER_RESPONSE 6017
     * }
     */
    public static int ERROR_CS_ENCRYPTION_INVALID_SERVER_RESPONSE() {
        return ERROR_CS_ENCRYPTION_INVALID_SERVER_RESPONSE;
    }
    private static final int ERROR_CS_ENCRYPTION_UNSUPPORTED_SERVER = (int)6018L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CS_ENCRYPTION_UNSUPPORTED_SERVER 6018
     * }
     */
    public static int ERROR_CS_ENCRYPTION_UNSUPPORTED_SERVER() {
        return ERROR_CS_ENCRYPTION_UNSUPPORTED_SERVER;
    }
    private static final int ERROR_CS_ENCRYPTION_EXISTING_ENCRYPTED_FILE = (int)6019L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CS_ENCRYPTION_EXISTING_ENCRYPTED_FILE 6019
     * }
     */
    public static int ERROR_CS_ENCRYPTION_EXISTING_ENCRYPTED_FILE() {
        return ERROR_CS_ENCRYPTION_EXISTING_ENCRYPTED_FILE;
    }
    private static final int ERROR_CS_ENCRYPTION_NEW_ENCRYPTED_FILE = (int)6020L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CS_ENCRYPTION_NEW_ENCRYPTED_FILE 6020
     * }
     */
    public static int ERROR_CS_ENCRYPTION_NEW_ENCRYPTED_FILE() {
        return ERROR_CS_ENCRYPTION_NEW_ENCRYPTED_FILE;
    }
    private static final int ERROR_CS_ENCRYPTION_FILE_NOT_CSE = (int)6021L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CS_ENCRYPTION_FILE_NOT_CSE 6021
     * }
     */
    public static int ERROR_CS_ENCRYPTION_FILE_NOT_CSE() {
        return ERROR_CS_ENCRYPTION_FILE_NOT_CSE;
    }
    private static final int ERROR_ENCRYPTION_POLICY_DENIES_OPERATION = (int)6022L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ENCRYPTION_POLICY_DENIES_OPERATION 6022
     * }
     */
    public static int ERROR_ENCRYPTION_POLICY_DENIES_OPERATION() {
        return ERROR_ENCRYPTION_POLICY_DENIES_OPERATION;
    }
    private static final int ERROR_WIP_ENCRYPTION_FAILED = (int)6023L;
    /**
     * {@snippet lang=c :
     * #define ERROR_WIP_ENCRYPTION_FAILED 6023
     * }
     */
    public static int ERROR_WIP_ENCRYPTION_FAILED() {
        return ERROR_WIP_ENCRYPTION_FAILED;
    }
    private static final int ERROR_PDE_ENCRYPTION_UNAVAILABLE_FAILURE = (int)6024L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PDE_ENCRYPTION_UNAVAILABLE_FAILURE 6024
     * }
     */
    public static int ERROR_PDE_ENCRYPTION_UNAVAILABLE_FAILURE() {
        return ERROR_PDE_ENCRYPTION_UNAVAILABLE_FAILURE;
    }
    private static final int ERROR_PDE_DECRYPTION_UNAVAILABLE_FAILURE = (int)6025L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PDE_DECRYPTION_UNAVAILABLE_FAILURE 6025
     * }
     */
    public static int ERROR_PDE_DECRYPTION_UNAVAILABLE_FAILURE() {
        return ERROR_PDE_DECRYPTION_UNAVAILABLE_FAILURE;
    }
    private static final int ERROR_PDE_DECRYPTION_UNAVAILABLE = (int)6026L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PDE_DECRYPTION_UNAVAILABLE 6026
     * }
     */
    public static int ERROR_PDE_DECRYPTION_UNAVAILABLE() {
        return ERROR_PDE_DECRYPTION_UNAVAILABLE;
    }
    private static final int ERROR_NO_BROWSER_SERVERS_FOUND = (int)6118L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_BROWSER_SERVERS_FOUND 6118
     * }
     */
    public static int ERROR_NO_BROWSER_SERVERS_FOUND() {
        return ERROR_NO_BROWSER_SERVERS_FOUND;
    }
    private static final int SCHED_E_SERVICE_NOT_LOCALSYSTEM = (int)6200L;
    /**
     * {@snippet lang=c :
     * #define SCHED_E_SERVICE_NOT_LOCALSYSTEM 6200
     * }
     */
    public static int SCHED_E_SERVICE_NOT_LOCALSYSTEM() {
        return SCHED_E_SERVICE_NOT_LOCALSYSTEM;
    }
    private static final int ERROR_CLUSTER_OBJECT_IS_CLUSTER_SET_VM = (int)6250L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLUSTER_OBJECT_IS_CLUSTER_SET_VM 6250
     * }
     */
    public static int ERROR_CLUSTER_OBJECT_IS_CLUSTER_SET_VM() {
        return ERROR_CLUSTER_OBJECT_IS_CLUSTER_SET_VM;
    }
    private static final int ERROR_CNU_TEMPLATE_ALREADY_EXISTS = (int)6251L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CNU_TEMPLATE_ALREADY_EXISTS 6251
     * }
     */
    public static int ERROR_CNU_TEMPLATE_ALREADY_EXISTS() {
        return ERROR_CNU_TEMPLATE_ALREADY_EXISTS;
    }
    private static final int ERROR_CNU_TEMPLATE_NAME_NOT_FOUND = (int)6252L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CNU_TEMPLATE_NAME_NOT_FOUND 6252
     * }
     */
    public static int ERROR_CNU_TEMPLATE_NAME_NOT_FOUND() {
        return ERROR_CNU_TEMPLATE_NAME_NOT_FOUND;
    }
    private static final int ERROR_CNU_RUN_NAME_NOT_FOUND = (int)6253L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CNU_RUN_NAME_NOT_FOUND 6253
     * }
     */
    public static int ERROR_CNU_RUN_NAME_NOT_FOUND() {
        return ERROR_CNU_RUN_NAME_NOT_FOUND;
    }
    private static final int ERROR_CNU_RUN_ALREADY_IN_PROGRESS = (int)6254L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CNU_RUN_ALREADY_IN_PROGRESS 6254
     * }
     */
    public static int ERROR_CNU_RUN_ALREADY_IN_PROGRESS() {
        return ERROR_CNU_RUN_ALREADY_IN_PROGRESS;
    }
    private static final int ERROR_CNU_RUN_NOT_IN_PROGRESS = (int)6255L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CNU_RUN_NOT_IN_PROGRESS 6255
     * }
     */
    public static int ERROR_CNU_RUN_NOT_IN_PROGRESS() {
        return ERROR_CNU_RUN_NOT_IN_PROGRESS;
    }
    private static final int ERROR_CNU_NOT_READY = (int)6256L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CNU_NOT_READY 6256
     * }
     */
    public static int ERROR_CNU_NOT_READY() {
        return ERROR_CNU_NOT_READY;
    }
    private static final int ERROR_LOG_SECTOR_INVALID = (int)6600L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_SECTOR_INVALID 6600
     * }
     */
    public static int ERROR_LOG_SECTOR_INVALID() {
        return ERROR_LOG_SECTOR_INVALID;
    }
    private static final int ERROR_LOG_SECTOR_PARITY_INVALID = (int)6601L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_SECTOR_PARITY_INVALID 6601
     * }
     */
    public static int ERROR_LOG_SECTOR_PARITY_INVALID() {
        return ERROR_LOG_SECTOR_PARITY_INVALID;
    }
    private static final int ERROR_LOG_SECTOR_REMAPPED = (int)6602L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_SECTOR_REMAPPED 6602
     * }
     */
    public static int ERROR_LOG_SECTOR_REMAPPED() {
        return ERROR_LOG_SECTOR_REMAPPED;
    }
    private static final int ERROR_LOG_BLOCK_INCOMPLETE = (int)6603L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_BLOCK_INCOMPLETE 6603
     * }
     */
    public static int ERROR_LOG_BLOCK_INCOMPLETE() {
        return ERROR_LOG_BLOCK_INCOMPLETE;
    }
    private static final int ERROR_LOG_INVALID_RANGE = (int)6604L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_INVALID_RANGE 6604
     * }
     */
    public static int ERROR_LOG_INVALID_RANGE() {
        return ERROR_LOG_INVALID_RANGE;
    }
    private static final int ERROR_LOG_BLOCKS_EXHAUSTED = (int)6605L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_BLOCKS_EXHAUSTED 6605
     * }
     */
    public static int ERROR_LOG_BLOCKS_EXHAUSTED() {
        return ERROR_LOG_BLOCKS_EXHAUSTED;
    }
    private static final int ERROR_LOG_READ_CONTEXT_INVALID = (int)6606L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_READ_CONTEXT_INVALID 6606
     * }
     */
    public static int ERROR_LOG_READ_CONTEXT_INVALID() {
        return ERROR_LOG_READ_CONTEXT_INVALID;
    }
    private static final int ERROR_LOG_RESTART_INVALID = (int)6607L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_RESTART_INVALID 6607
     * }
     */
    public static int ERROR_LOG_RESTART_INVALID() {
        return ERROR_LOG_RESTART_INVALID;
    }
    private static final int ERROR_LOG_BLOCK_VERSION = (int)6608L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_BLOCK_VERSION 6608
     * }
     */
    public static int ERROR_LOG_BLOCK_VERSION() {
        return ERROR_LOG_BLOCK_VERSION;
    }
    private static final int ERROR_LOG_BLOCK_INVALID = (int)6609L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_BLOCK_INVALID 6609
     * }
     */
    public static int ERROR_LOG_BLOCK_INVALID() {
        return ERROR_LOG_BLOCK_INVALID;
    }
    private static final int ERROR_LOG_READ_MODE_INVALID = (int)6610L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_READ_MODE_INVALID 6610
     * }
     */
    public static int ERROR_LOG_READ_MODE_INVALID() {
        return ERROR_LOG_READ_MODE_INVALID;
    }
    private static final int ERROR_LOG_NO_RESTART = (int)6611L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_NO_RESTART 6611
     * }
     */
    public static int ERROR_LOG_NO_RESTART() {
        return ERROR_LOG_NO_RESTART;
    }
    private static final int ERROR_LOG_METADATA_CORRUPT = (int)6612L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_METADATA_CORRUPT 6612
     * }
     */
    public static int ERROR_LOG_METADATA_CORRUPT() {
        return ERROR_LOG_METADATA_CORRUPT;
    }
    private static final int ERROR_LOG_METADATA_INVALID = (int)6613L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_METADATA_INVALID 6613
     * }
     */
    public static int ERROR_LOG_METADATA_INVALID() {
        return ERROR_LOG_METADATA_INVALID;
    }
    private static final int ERROR_LOG_METADATA_INCONSISTENT = (int)6614L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_METADATA_INCONSISTENT 6614
     * }
     */
    public static int ERROR_LOG_METADATA_INCONSISTENT() {
        return ERROR_LOG_METADATA_INCONSISTENT;
    }
    private static final int ERROR_LOG_RESERVATION_INVALID = (int)6615L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_RESERVATION_INVALID 6615
     * }
     */
    public static int ERROR_LOG_RESERVATION_INVALID() {
        return ERROR_LOG_RESERVATION_INVALID;
    }
    private static final int ERROR_LOG_CANT_DELETE = (int)6616L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_CANT_DELETE 6616
     * }
     */
    public static int ERROR_LOG_CANT_DELETE() {
        return ERROR_LOG_CANT_DELETE;
    }
    private static final int ERROR_LOG_CONTAINER_LIMIT_EXCEEDED = (int)6617L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_CONTAINER_LIMIT_EXCEEDED 6617
     * }
     */
    public static int ERROR_LOG_CONTAINER_LIMIT_EXCEEDED() {
        return ERROR_LOG_CONTAINER_LIMIT_EXCEEDED;
    }
    private static final int ERROR_LOG_START_OF_LOG = (int)6618L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_START_OF_LOG 6618
     * }
     */
    public static int ERROR_LOG_START_OF_LOG() {
        return ERROR_LOG_START_OF_LOG;
    }
    private static final int ERROR_LOG_POLICY_ALREADY_INSTALLED = (int)6619L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_POLICY_ALREADY_INSTALLED 6619
     * }
     */
    public static int ERROR_LOG_POLICY_ALREADY_INSTALLED() {
        return ERROR_LOG_POLICY_ALREADY_INSTALLED;
    }
    private static final int ERROR_LOG_POLICY_NOT_INSTALLED = (int)6620L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_POLICY_NOT_INSTALLED 6620
     * }
     */
    public static int ERROR_LOG_POLICY_NOT_INSTALLED() {
        return ERROR_LOG_POLICY_NOT_INSTALLED;
    }
    private static final int ERROR_LOG_POLICY_INVALID = (int)6621L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_POLICY_INVALID 6621
     * }
     */
    public static int ERROR_LOG_POLICY_INVALID() {
        return ERROR_LOG_POLICY_INVALID;
    }
    private static final int ERROR_LOG_POLICY_CONFLICT = (int)6622L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_POLICY_CONFLICT 6622
     * }
     */
    public static int ERROR_LOG_POLICY_CONFLICT() {
        return ERROR_LOG_POLICY_CONFLICT;
    }
    private static final int ERROR_LOG_PINNED_ARCHIVE_TAIL = (int)6623L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_PINNED_ARCHIVE_TAIL 6623
     * }
     */
    public static int ERROR_LOG_PINNED_ARCHIVE_TAIL() {
        return ERROR_LOG_PINNED_ARCHIVE_TAIL;
    }
    private static final int ERROR_LOG_RECORD_NONEXISTENT = (int)6624L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_RECORD_NONEXISTENT 6624
     * }
     */
    public static int ERROR_LOG_RECORD_NONEXISTENT() {
        return ERROR_LOG_RECORD_NONEXISTENT;
    }
    private static final int ERROR_LOG_RECORDS_RESERVED_INVALID = (int)6625L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_RECORDS_RESERVED_INVALID 6625
     * }
     */
    public static int ERROR_LOG_RECORDS_RESERVED_INVALID() {
        return ERROR_LOG_RECORDS_RESERVED_INVALID;
    }
    private static final int ERROR_LOG_SPACE_RESERVED_INVALID = (int)6626L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_SPACE_RESERVED_INVALID 6626
     * }
     */
    public static int ERROR_LOG_SPACE_RESERVED_INVALID() {
        return ERROR_LOG_SPACE_RESERVED_INVALID;
    }
    private static final int ERROR_LOG_TAIL_INVALID = (int)6627L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_TAIL_INVALID 6627
     * }
     */
    public static int ERROR_LOG_TAIL_INVALID() {
        return ERROR_LOG_TAIL_INVALID;
    }
    private static final int ERROR_LOG_FULL = (int)6628L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_FULL 6628
     * }
     */
    public static int ERROR_LOG_FULL() {
        return ERROR_LOG_FULL;
    }
    private static final int ERROR_COULD_NOT_RESIZE_LOG = (int)6629L;
    /**
     * {@snippet lang=c :
     * #define ERROR_COULD_NOT_RESIZE_LOG 6629
     * }
     */
    public static int ERROR_COULD_NOT_RESIZE_LOG() {
        return ERROR_COULD_NOT_RESIZE_LOG;
    }
    private static final int ERROR_LOG_MULTIPLEXED = (int)6630L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_MULTIPLEXED 6630
     * }
     */
    public static int ERROR_LOG_MULTIPLEXED() {
        return ERROR_LOG_MULTIPLEXED;
    }
    private static final int ERROR_LOG_DEDICATED = (int)6631L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_DEDICATED 6631
     * }
     */
    public static int ERROR_LOG_DEDICATED() {
        return ERROR_LOG_DEDICATED;
    }
    private static final int ERROR_LOG_ARCHIVE_NOT_IN_PROGRESS = (int)6632L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_ARCHIVE_NOT_IN_PROGRESS 6632
     * }
     */
    public static int ERROR_LOG_ARCHIVE_NOT_IN_PROGRESS() {
        return ERROR_LOG_ARCHIVE_NOT_IN_PROGRESS;
    }
    private static final int ERROR_LOG_ARCHIVE_IN_PROGRESS = (int)6633L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_ARCHIVE_IN_PROGRESS 6633
     * }
     */
    public static int ERROR_LOG_ARCHIVE_IN_PROGRESS() {
        return ERROR_LOG_ARCHIVE_IN_PROGRESS;
    }
    private static final int ERROR_LOG_EPHEMERAL = (int)6634L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_EPHEMERAL 6634
     * }
     */
    public static int ERROR_LOG_EPHEMERAL() {
        return ERROR_LOG_EPHEMERAL;
    }
    private static final int ERROR_LOG_NOT_ENOUGH_CONTAINERS = (int)6635L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_NOT_ENOUGH_CONTAINERS 6635
     * }
     */
    public static int ERROR_LOG_NOT_ENOUGH_CONTAINERS() {
        return ERROR_LOG_NOT_ENOUGH_CONTAINERS;
    }
    private static final int ERROR_LOG_CLIENT_ALREADY_REGISTERED = (int)6636L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_CLIENT_ALREADY_REGISTERED 6636
     * }
     */
    public static int ERROR_LOG_CLIENT_ALREADY_REGISTERED() {
        return ERROR_LOG_CLIENT_ALREADY_REGISTERED;
    }
    private static final int ERROR_LOG_CLIENT_NOT_REGISTERED = (int)6637L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_CLIENT_NOT_REGISTERED 6637
     * }
     */
    public static int ERROR_LOG_CLIENT_NOT_REGISTERED() {
        return ERROR_LOG_CLIENT_NOT_REGISTERED;
    }
    private static final int ERROR_LOG_FULL_HANDLER_IN_PROGRESS = (int)6638L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_FULL_HANDLER_IN_PROGRESS 6638
     * }
     */
    public static int ERROR_LOG_FULL_HANDLER_IN_PROGRESS() {
        return ERROR_LOG_FULL_HANDLER_IN_PROGRESS;
    }
    private static final int ERROR_LOG_CONTAINER_READ_FAILED = (int)6639L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_CONTAINER_READ_FAILED 6639
     * }
     */
    public static int ERROR_LOG_CONTAINER_READ_FAILED() {
        return ERROR_LOG_CONTAINER_READ_FAILED;
    }
    private static final int ERROR_LOG_CONTAINER_WRITE_FAILED = (int)6640L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_CONTAINER_WRITE_FAILED 6640
     * }
     */
    public static int ERROR_LOG_CONTAINER_WRITE_FAILED() {
        return ERROR_LOG_CONTAINER_WRITE_FAILED;
    }
    private static final int ERROR_LOG_CONTAINER_OPEN_FAILED = (int)6641L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_CONTAINER_OPEN_FAILED 6641
     * }
     */
    public static int ERROR_LOG_CONTAINER_OPEN_FAILED() {
        return ERROR_LOG_CONTAINER_OPEN_FAILED;
    }
    private static final int ERROR_LOG_CONTAINER_STATE_INVALID = (int)6642L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_CONTAINER_STATE_INVALID 6642
     * }
     */
    public static int ERROR_LOG_CONTAINER_STATE_INVALID() {
        return ERROR_LOG_CONTAINER_STATE_INVALID;
    }
    private static final int ERROR_LOG_STATE_INVALID = (int)6643L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_STATE_INVALID 6643
     * }
     */
    public static int ERROR_LOG_STATE_INVALID() {
        return ERROR_LOG_STATE_INVALID;
    }
    private static final int ERROR_LOG_PINNED = (int)6644L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_PINNED 6644
     * }
     */
    public static int ERROR_LOG_PINNED() {
        return ERROR_LOG_PINNED;
    }
    private static final int ERROR_LOG_METADATA_FLUSH_FAILED = (int)6645L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_METADATA_FLUSH_FAILED 6645
     * }
     */
    public static int ERROR_LOG_METADATA_FLUSH_FAILED() {
        return ERROR_LOG_METADATA_FLUSH_FAILED;
    }
    private static final int ERROR_LOG_INCONSISTENT_SECURITY = (int)6646L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_INCONSISTENT_SECURITY 6646
     * }
     */
    public static int ERROR_LOG_INCONSISTENT_SECURITY() {
        return ERROR_LOG_INCONSISTENT_SECURITY;
    }
    private static final int ERROR_LOG_APPENDED_FLUSH_FAILED = (int)6647L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_APPENDED_FLUSH_FAILED 6647
     * }
     */
    public static int ERROR_LOG_APPENDED_FLUSH_FAILED() {
        return ERROR_LOG_APPENDED_FLUSH_FAILED;
    }
    private static final int ERROR_LOG_PINNED_RESERVATION = (int)6648L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_PINNED_RESERVATION 6648
     * }
     */
    public static int ERROR_LOG_PINNED_RESERVATION() {
        return ERROR_LOG_PINNED_RESERVATION;
    }
    private static final int ERROR_INVALID_TRANSACTION = (int)6700L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_TRANSACTION 6700
     * }
     */
    public static int ERROR_INVALID_TRANSACTION() {
        return ERROR_INVALID_TRANSACTION;
    }
    private static final int ERROR_TRANSACTION_NOT_ACTIVE = (int)6701L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TRANSACTION_NOT_ACTIVE 6701
     * }
     */
    public static int ERROR_TRANSACTION_NOT_ACTIVE() {
        return ERROR_TRANSACTION_NOT_ACTIVE;
    }
    private static final int ERROR_TRANSACTION_REQUEST_NOT_VALID = (int)6702L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TRANSACTION_REQUEST_NOT_VALID 6702
     * }
     */
    public static int ERROR_TRANSACTION_REQUEST_NOT_VALID() {
        return ERROR_TRANSACTION_REQUEST_NOT_VALID;
    }
    private static final int ERROR_TRANSACTION_NOT_REQUESTED = (int)6703L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TRANSACTION_NOT_REQUESTED 6703
     * }
     */
    public static int ERROR_TRANSACTION_NOT_REQUESTED() {
        return ERROR_TRANSACTION_NOT_REQUESTED;
    }
    private static final int ERROR_TRANSACTION_ALREADY_ABORTED = (int)6704L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TRANSACTION_ALREADY_ABORTED 6704
     * }
     */
    public static int ERROR_TRANSACTION_ALREADY_ABORTED() {
        return ERROR_TRANSACTION_ALREADY_ABORTED;
    }
    private static final int ERROR_TRANSACTION_ALREADY_COMMITTED = (int)6705L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TRANSACTION_ALREADY_COMMITTED 6705
     * }
     */
    public static int ERROR_TRANSACTION_ALREADY_COMMITTED() {
        return ERROR_TRANSACTION_ALREADY_COMMITTED;
    }
    private static final int ERROR_TM_INITIALIZATION_FAILED = (int)6706L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TM_INITIALIZATION_FAILED 6706
     * }
     */
    public static int ERROR_TM_INITIALIZATION_FAILED() {
        return ERROR_TM_INITIALIZATION_FAILED;
    }
    private static final int ERROR_RESOURCEMANAGER_READ_ONLY = (int)6707L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RESOURCEMANAGER_READ_ONLY 6707
     * }
     */
    public static int ERROR_RESOURCEMANAGER_READ_ONLY() {
        return ERROR_RESOURCEMANAGER_READ_ONLY;
    }
    private static final int ERROR_TRANSACTION_NOT_JOINED = (int)6708L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TRANSACTION_NOT_JOINED 6708
     * }
     */
    public static int ERROR_TRANSACTION_NOT_JOINED() {
        return ERROR_TRANSACTION_NOT_JOINED;
    }
    private static final int ERROR_TRANSACTION_SUPERIOR_EXISTS = (int)6709L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TRANSACTION_SUPERIOR_EXISTS 6709
     * }
     */
    public static int ERROR_TRANSACTION_SUPERIOR_EXISTS() {
        return ERROR_TRANSACTION_SUPERIOR_EXISTS;
    }
    private static final int ERROR_CRM_PROTOCOL_ALREADY_EXISTS = (int)6710L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CRM_PROTOCOL_ALREADY_EXISTS 6710
     * }
     */
    public static int ERROR_CRM_PROTOCOL_ALREADY_EXISTS() {
        return ERROR_CRM_PROTOCOL_ALREADY_EXISTS;
    }
    private static final int ERROR_TRANSACTION_PROPAGATION_FAILED = (int)6711L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TRANSACTION_PROPAGATION_FAILED 6711
     * }
     */
    public static int ERROR_TRANSACTION_PROPAGATION_FAILED() {
        return ERROR_TRANSACTION_PROPAGATION_FAILED;
    }
    private static final int ERROR_CRM_PROTOCOL_NOT_FOUND = (int)6712L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CRM_PROTOCOL_NOT_FOUND 6712
     * }
     */
    public static int ERROR_CRM_PROTOCOL_NOT_FOUND() {
        return ERROR_CRM_PROTOCOL_NOT_FOUND;
    }
    private static final int ERROR_TRANSACTION_INVALID_MARSHALL_BUFFER = (int)6713L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TRANSACTION_INVALID_MARSHALL_BUFFER 6713
     * }
     */
    public static int ERROR_TRANSACTION_INVALID_MARSHALL_BUFFER() {
        return ERROR_TRANSACTION_INVALID_MARSHALL_BUFFER;
    }
    private static final int ERROR_CURRENT_TRANSACTION_NOT_VALID = (int)6714L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CURRENT_TRANSACTION_NOT_VALID 6714
     * }
     */
    public static int ERROR_CURRENT_TRANSACTION_NOT_VALID() {
        return ERROR_CURRENT_TRANSACTION_NOT_VALID;
    }
    private static final int ERROR_TRANSACTION_NOT_FOUND = (int)6715L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TRANSACTION_NOT_FOUND 6715
     * }
     */
    public static int ERROR_TRANSACTION_NOT_FOUND() {
        return ERROR_TRANSACTION_NOT_FOUND;
    }
    private static final int ERROR_RESOURCEMANAGER_NOT_FOUND = (int)6716L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RESOURCEMANAGER_NOT_FOUND 6716
     * }
     */
    public static int ERROR_RESOURCEMANAGER_NOT_FOUND() {
        return ERROR_RESOURCEMANAGER_NOT_FOUND;
    }
    private static final int ERROR_ENLISTMENT_NOT_FOUND = (int)6717L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ENLISTMENT_NOT_FOUND 6717
     * }
     */
    public static int ERROR_ENLISTMENT_NOT_FOUND() {
        return ERROR_ENLISTMENT_NOT_FOUND;
    }
    private static final int ERROR_TRANSACTIONMANAGER_NOT_FOUND = (int)6718L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TRANSACTIONMANAGER_NOT_FOUND 6718
     * }
     */
    public static int ERROR_TRANSACTIONMANAGER_NOT_FOUND() {
        return ERROR_TRANSACTIONMANAGER_NOT_FOUND;
    }
    private static final int ERROR_TRANSACTIONMANAGER_NOT_ONLINE = (int)6719L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TRANSACTIONMANAGER_NOT_ONLINE 6719
     * }
     */
    public static int ERROR_TRANSACTIONMANAGER_NOT_ONLINE() {
        return ERROR_TRANSACTIONMANAGER_NOT_ONLINE;
    }
    private static final int ERROR_TRANSACTIONMANAGER_RECOVERY_NAME_COLLISION = (int)6720L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TRANSACTIONMANAGER_RECOVERY_NAME_COLLISION 6720
     * }
     */
    public static int ERROR_TRANSACTIONMANAGER_RECOVERY_NAME_COLLISION() {
        return ERROR_TRANSACTIONMANAGER_RECOVERY_NAME_COLLISION;
    }
    private static final int ERROR_TRANSACTION_NOT_ROOT = (int)6721L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TRANSACTION_NOT_ROOT 6721
     * }
     */
    public static int ERROR_TRANSACTION_NOT_ROOT() {
        return ERROR_TRANSACTION_NOT_ROOT;
    }
    private static final int ERROR_TRANSACTION_OBJECT_EXPIRED = (int)6722L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TRANSACTION_OBJECT_EXPIRED 6722
     * }
     */
    public static int ERROR_TRANSACTION_OBJECT_EXPIRED() {
        return ERROR_TRANSACTION_OBJECT_EXPIRED;
    }
    private static final int ERROR_TRANSACTION_RESPONSE_NOT_ENLISTED = (int)6723L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TRANSACTION_RESPONSE_NOT_ENLISTED 6723
     * }
     */
    public static int ERROR_TRANSACTION_RESPONSE_NOT_ENLISTED() {
        return ERROR_TRANSACTION_RESPONSE_NOT_ENLISTED;
    }
    private static final int ERROR_TRANSACTION_RECORD_TOO_LONG = (int)6724L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TRANSACTION_RECORD_TOO_LONG 6724
     * }
     */
    public static int ERROR_TRANSACTION_RECORD_TOO_LONG() {
        return ERROR_TRANSACTION_RECORD_TOO_LONG;
    }
    private static final int ERROR_IMPLICIT_TRANSACTION_NOT_SUPPORTED = (int)6725L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IMPLICIT_TRANSACTION_NOT_SUPPORTED 6725
     * }
     */
    public static int ERROR_IMPLICIT_TRANSACTION_NOT_SUPPORTED() {
        return ERROR_IMPLICIT_TRANSACTION_NOT_SUPPORTED;
    }
    private static final int ERROR_TRANSACTION_INTEGRITY_VIOLATED = (int)6726L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TRANSACTION_INTEGRITY_VIOLATED 6726
     * }
     */
    public static int ERROR_TRANSACTION_INTEGRITY_VIOLATED() {
        return ERROR_TRANSACTION_INTEGRITY_VIOLATED;
    }
    private static final int ERROR_TRANSACTIONMANAGER_IDENTITY_MISMATCH = (int)6727L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TRANSACTIONMANAGER_IDENTITY_MISMATCH 6727
     * }
     */
    public static int ERROR_TRANSACTIONMANAGER_IDENTITY_MISMATCH() {
        return ERROR_TRANSACTIONMANAGER_IDENTITY_MISMATCH;
    }
    private static final int ERROR_RM_CANNOT_BE_FROZEN_FOR_SNAPSHOT = (int)6728L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RM_CANNOT_BE_FROZEN_FOR_SNAPSHOT 6728
     * }
     */
    public static int ERROR_RM_CANNOT_BE_FROZEN_FOR_SNAPSHOT() {
        return ERROR_RM_CANNOT_BE_FROZEN_FOR_SNAPSHOT;
    }
    private static final int ERROR_TRANSACTION_MUST_WRITETHROUGH = (int)6729L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TRANSACTION_MUST_WRITETHROUGH 6729
     * }
     */
    public static int ERROR_TRANSACTION_MUST_WRITETHROUGH() {
        return ERROR_TRANSACTION_MUST_WRITETHROUGH;
    }
    private static final int ERROR_TRANSACTION_NO_SUPERIOR = (int)6730L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TRANSACTION_NO_SUPERIOR 6730
     * }
     */
    public static int ERROR_TRANSACTION_NO_SUPERIOR() {
        return ERROR_TRANSACTION_NO_SUPERIOR;
    }
    private static final int ERROR_HEURISTIC_DAMAGE_POSSIBLE = (int)6731L;
    /**
     * {@snippet lang=c :
     * #define ERROR_HEURISTIC_DAMAGE_POSSIBLE 6731
     * }
     */
    public static int ERROR_HEURISTIC_DAMAGE_POSSIBLE() {
        return ERROR_HEURISTIC_DAMAGE_POSSIBLE;
    }
    private static final int ERROR_TRANSACTIONAL_CONFLICT = (int)6800L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TRANSACTIONAL_CONFLICT 6800
     * }
     */
    public static int ERROR_TRANSACTIONAL_CONFLICT() {
        return ERROR_TRANSACTIONAL_CONFLICT;
    }
    private static final int ERROR_RM_NOT_ACTIVE = (int)6801L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RM_NOT_ACTIVE 6801
     * }
     */
    public static int ERROR_RM_NOT_ACTIVE() {
        return ERROR_RM_NOT_ACTIVE;
    }
    private static final int ERROR_RM_METADATA_CORRUPT = (int)6802L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RM_METADATA_CORRUPT 6802
     * }
     */
    public static int ERROR_RM_METADATA_CORRUPT() {
        return ERROR_RM_METADATA_CORRUPT;
    }
    private static final int ERROR_DIRECTORY_NOT_RM = (int)6803L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DIRECTORY_NOT_RM 6803
     * }
     */
    public static int ERROR_DIRECTORY_NOT_RM() {
        return ERROR_DIRECTORY_NOT_RM;
    }
    private static final int ERROR_TRANSACTIONS_UNSUPPORTED_REMOTE = (int)6805L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TRANSACTIONS_UNSUPPORTED_REMOTE 6805
     * }
     */
    public static int ERROR_TRANSACTIONS_UNSUPPORTED_REMOTE() {
        return ERROR_TRANSACTIONS_UNSUPPORTED_REMOTE;
    }
    private static final int ERROR_LOG_RESIZE_INVALID_SIZE = (int)6806L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_RESIZE_INVALID_SIZE 6806
     * }
     */
    public static int ERROR_LOG_RESIZE_INVALID_SIZE() {
        return ERROR_LOG_RESIZE_INVALID_SIZE;
    }
    private static final int ERROR_OBJECT_NO_LONGER_EXISTS = (int)6807L;
    /**
     * {@snippet lang=c :
     * #define ERROR_OBJECT_NO_LONGER_EXISTS 6807
     * }
     */
    public static int ERROR_OBJECT_NO_LONGER_EXISTS() {
        return ERROR_OBJECT_NO_LONGER_EXISTS;
    }
    private static final int ERROR_STREAM_MINIVERSION_NOT_FOUND = (int)6808L;
    /**
     * {@snippet lang=c :
     * #define ERROR_STREAM_MINIVERSION_NOT_FOUND 6808
     * }
     */
    public static int ERROR_STREAM_MINIVERSION_NOT_FOUND() {
        return ERROR_STREAM_MINIVERSION_NOT_FOUND;
    }
    private static final int ERROR_STREAM_MINIVERSION_NOT_VALID = (int)6809L;
    /**
     * {@snippet lang=c :
     * #define ERROR_STREAM_MINIVERSION_NOT_VALID 6809
     * }
     */
    public static int ERROR_STREAM_MINIVERSION_NOT_VALID() {
        return ERROR_STREAM_MINIVERSION_NOT_VALID;
    }
    private static final int ERROR_MINIVERSION_INACCESSIBLE_FROM_SPECIFIED_TRANSACTION = (int)6810L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MINIVERSION_INACCESSIBLE_FROM_SPECIFIED_TRANSACTION 6810
     * }
     */
    public static int ERROR_MINIVERSION_INACCESSIBLE_FROM_SPECIFIED_TRANSACTION() {
        return ERROR_MINIVERSION_INACCESSIBLE_FROM_SPECIFIED_TRANSACTION;
    }
    private static final int ERROR_CANT_OPEN_MINIVERSION_WITH_MODIFY_INTENT = (int)6811L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CANT_OPEN_MINIVERSION_WITH_MODIFY_INTENT 6811
     * }
     */
    public static int ERROR_CANT_OPEN_MINIVERSION_WITH_MODIFY_INTENT() {
        return ERROR_CANT_OPEN_MINIVERSION_WITH_MODIFY_INTENT;
    }
    private static final int ERROR_CANT_CREATE_MORE_STREAM_MINIVERSIONS = (int)6812L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CANT_CREATE_MORE_STREAM_MINIVERSIONS 6812
     * }
     */
    public static int ERROR_CANT_CREATE_MORE_STREAM_MINIVERSIONS() {
        return ERROR_CANT_CREATE_MORE_STREAM_MINIVERSIONS;
    }
    private static final int ERROR_REMOTE_FILE_VERSION_MISMATCH = (int)6814L;
    /**
     * {@snippet lang=c :
     * #define ERROR_REMOTE_FILE_VERSION_MISMATCH 6814
     * }
     */
    public static int ERROR_REMOTE_FILE_VERSION_MISMATCH() {
        return ERROR_REMOTE_FILE_VERSION_MISMATCH;
    }
    private static final int ERROR_HANDLE_NO_LONGER_VALID = (int)6815L;
    /**
     * {@snippet lang=c :
     * #define ERROR_HANDLE_NO_LONGER_VALID 6815
     * }
     */
    public static int ERROR_HANDLE_NO_LONGER_VALID() {
        return ERROR_HANDLE_NO_LONGER_VALID;
    }
    private static final int ERROR_NO_TXF_METADATA = (int)6816L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_TXF_METADATA 6816
     * }
     */
    public static int ERROR_NO_TXF_METADATA() {
        return ERROR_NO_TXF_METADATA;
    }
    private static final int ERROR_LOG_CORRUPTION_DETECTED = (int)6817L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_CORRUPTION_DETECTED 6817
     * }
     */
    public static int ERROR_LOG_CORRUPTION_DETECTED() {
        return ERROR_LOG_CORRUPTION_DETECTED;
    }
    private static final int ERROR_CANT_RECOVER_WITH_HANDLE_OPEN = (int)6818L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CANT_RECOVER_WITH_HANDLE_OPEN 6818
     * }
     */
    public static int ERROR_CANT_RECOVER_WITH_HANDLE_OPEN() {
        return ERROR_CANT_RECOVER_WITH_HANDLE_OPEN;
    }
    private static final int ERROR_RM_DISCONNECTED = (int)6819L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RM_DISCONNECTED 6819
     * }
     */
    public static int ERROR_RM_DISCONNECTED() {
        return ERROR_RM_DISCONNECTED;
    }
    private static final int ERROR_ENLISTMENT_NOT_SUPERIOR = (int)6820L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ENLISTMENT_NOT_SUPERIOR 6820
     * }
     */
    public static int ERROR_ENLISTMENT_NOT_SUPERIOR() {
        return ERROR_ENLISTMENT_NOT_SUPERIOR;
    }
    private static final int ERROR_RECOVERY_NOT_NEEDED = (int)6821L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RECOVERY_NOT_NEEDED 6821
     * }
     */
    public static int ERROR_RECOVERY_NOT_NEEDED() {
        return ERROR_RECOVERY_NOT_NEEDED;
    }
    private static final int ERROR_RM_ALREADY_STARTED = (int)6822L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RM_ALREADY_STARTED 6822
     * }
     */
    public static int ERROR_RM_ALREADY_STARTED() {
        return ERROR_RM_ALREADY_STARTED;
    }
    private static final int ERROR_FILE_IDENTITY_NOT_PERSISTENT = (int)6823L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FILE_IDENTITY_NOT_PERSISTENT 6823
     * }
     */
    public static int ERROR_FILE_IDENTITY_NOT_PERSISTENT() {
        return ERROR_FILE_IDENTITY_NOT_PERSISTENT;
    }
    private static final int ERROR_CANT_BREAK_TRANSACTIONAL_DEPENDENCY = (int)6824L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CANT_BREAK_TRANSACTIONAL_DEPENDENCY 6824
     * }
     */
    public static int ERROR_CANT_BREAK_TRANSACTIONAL_DEPENDENCY() {
        return ERROR_CANT_BREAK_TRANSACTIONAL_DEPENDENCY;
    }
    private static final int ERROR_CANT_CROSS_RM_BOUNDARY = (int)6825L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CANT_CROSS_RM_BOUNDARY 6825
     * }
     */
    public static int ERROR_CANT_CROSS_RM_BOUNDARY() {
        return ERROR_CANT_CROSS_RM_BOUNDARY;
    }
    private static final int ERROR_TXF_DIR_NOT_EMPTY = (int)6826L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TXF_DIR_NOT_EMPTY 6826
     * }
     */
    public static int ERROR_TXF_DIR_NOT_EMPTY() {
        return ERROR_TXF_DIR_NOT_EMPTY;
    }
    private static final int ERROR_INDOUBT_TRANSACTIONS_EXIST = (int)6827L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INDOUBT_TRANSACTIONS_EXIST 6827
     * }
     */
    public static int ERROR_INDOUBT_TRANSACTIONS_EXIST() {
        return ERROR_INDOUBT_TRANSACTIONS_EXIST;
    }
    private static final int ERROR_TM_VOLATILE = (int)6828L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TM_VOLATILE 6828
     * }
     */
    public static int ERROR_TM_VOLATILE() {
        return ERROR_TM_VOLATILE;
    }
    private static final int ERROR_ROLLBACK_TIMER_EXPIRED = (int)6829L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ROLLBACK_TIMER_EXPIRED 6829
     * }
     */
    public static int ERROR_ROLLBACK_TIMER_EXPIRED() {
        return ERROR_ROLLBACK_TIMER_EXPIRED;
    }
    private static final int ERROR_TXF_ATTRIBUTE_CORRUPT = (int)6830L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TXF_ATTRIBUTE_CORRUPT 6830
     * }
     */
    public static int ERROR_TXF_ATTRIBUTE_CORRUPT() {
        return ERROR_TXF_ATTRIBUTE_CORRUPT;
    }
    private static final int ERROR_EFS_NOT_ALLOWED_IN_TRANSACTION = (int)6831L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EFS_NOT_ALLOWED_IN_TRANSACTION 6831
     * }
     */
    public static int ERROR_EFS_NOT_ALLOWED_IN_TRANSACTION() {
        return ERROR_EFS_NOT_ALLOWED_IN_TRANSACTION;
    }
    private static final int ERROR_TRANSACTIONAL_OPEN_NOT_ALLOWED = (int)6832L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TRANSACTIONAL_OPEN_NOT_ALLOWED 6832
     * }
     */
    public static int ERROR_TRANSACTIONAL_OPEN_NOT_ALLOWED() {
        return ERROR_TRANSACTIONAL_OPEN_NOT_ALLOWED;
    }
    private static final int ERROR_LOG_GROWTH_FAILED = (int)6833L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_GROWTH_FAILED 6833
     * }
     */
    public static int ERROR_LOG_GROWTH_FAILED() {
        return ERROR_LOG_GROWTH_FAILED;
    }
    private static final int ERROR_TRANSACTED_MAPPING_UNSUPPORTED_REMOTE = (int)6834L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TRANSACTED_MAPPING_UNSUPPORTED_REMOTE 6834
     * }
     */
    public static int ERROR_TRANSACTED_MAPPING_UNSUPPORTED_REMOTE() {
        return ERROR_TRANSACTED_MAPPING_UNSUPPORTED_REMOTE;
    }
    private static final int ERROR_TXF_METADATA_ALREADY_PRESENT = (int)6835L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TXF_METADATA_ALREADY_PRESENT 6835
     * }
     */
    public static int ERROR_TXF_METADATA_ALREADY_PRESENT() {
        return ERROR_TXF_METADATA_ALREADY_PRESENT;
    }
    private static final int ERROR_TRANSACTION_SCOPE_CALLBACKS_NOT_SET = (int)6836L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TRANSACTION_SCOPE_CALLBACKS_NOT_SET 6836
     * }
     */
    public static int ERROR_TRANSACTION_SCOPE_CALLBACKS_NOT_SET() {
        return ERROR_TRANSACTION_SCOPE_CALLBACKS_NOT_SET;
    }
    private static final int ERROR_TRANSACTION_REQUIRED_PROMOTION = (int)6837L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TRANSACTION_REQUIRED_PROMOTION 6837
     * }
     */
    public static int ERROR_TRANSACTION_REQUIRED_PROMOTION() {
        return ERROR_TRANSACTION_REQUIRED_PROMOTION;
    }
    private static final int ERROR_CANNOT_EXECUTE_FILE_IN_TRANSACTION = (int)6838L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CANNOT_EXECUTE_FILE_IN_TRANSACTION 6838
     * }
     */
    public static int ERROR_CANNOT_EXECUTE_FILE_IN_TRANSACTION() {
        return ERROR_CANNOT_EXECUTE_FILE_IN_TRANSACTION;
    }
    private static final int ERROR_TRANSACTIONS_NOT_FROZEN = (int)6839L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TRANSACTIONS_NOT_FROZEN 6839
     * }
     */
    public static int ERROR_TRANSACTIONS_NOT_FROZEN() {
        return ERROR_TRANSACTIONS_NOT_FROZEN;
    }
    private static final int ERROR_TRANSACTION_FREEZE_IN_PROGRESS = (int)6840L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TRANSACTION_FREEZE_IN_PROGRESS 6840
     * }
     */
    public static int ERROR_TRANSACTION_FREEZE_IN_PROGRESS() {
        return ERROR_TRANSACTION_FREEZE_IN_PROGRESS;
    }
    private static final int ERROR_NOT_SNAPSHOT_VOLUME = (int)6841L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_SNAPSHOT_VOLUME 6841
     * }
     */
    public static int ERROR_NOT_SNAPSHOT_VOLUME() {
        return ERROR_NOT_SNAPSHOT_VOLUME;
    }
    private static final int ERROR_NO_SAVEPOINT_WITH_OPEN_FILES = (int)6842L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_SAVEPOINT_WITH_OPEN_FILES 6842
     * }
     */
    public static int ERROR_NO_SAVEPOINT_WITH_OPEN_FILES() {
        return ERROR_NO_SAVEPOINT_WITH_OPEN_FILES;
    }
    private static final int ERROR_DATA_LOST_REPAIR = (int)6843L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DATA_LOST_REPAIR 6843
     * }
     */
    public static int ERROR_DATA_LOST_REPAIR() {
        return ERROR_DATA_LOST_REPAIR;
    }
    private static final int ERROR_SPARSE_NOT_ALLOWED_IN_TRANSACTION = (int)6844L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SPARSE_NOT_ALLOWED_IN_TRANSACTION 6844
     * }
     */
    public static int ERROR_SPARSE_NOT_ALLOWED_IN_TRANSACTION() {
        return ERROR_SPARSE_NOT_ALLOWED_IN_TRANSACTION;
    }
    private static final int ERROR_TM_IDENTITY_MISMATCH = (int)6845L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TM_IDENTITY_MISMATCH 6845
     * }
     */
    public static int ERROR_TM_IDENTITY_MISMATCH() {
        return ERROR_TM_IDENTITY_MISMATCH;
    }
    private static final int ERROR_FLOATED_SECTION = (int)6846L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FLOATED_SECTION 6846
     * }
     */
    public static int ERROR_FLOATED_SECTION() {
        return ERROR_FLOATED_SECTION;
    }
    private static final int ERROR_CANNOT_ACCEPT_TRANSACTED_WORK = (int)6847L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CANNOT_ACCEPT_TRANSACTED_WORK 6847
     * }
     */
    public static int ERROR_CANNOT_ACCEPT_TRANSACTED_WORK() {
        return ERROR_CANNOT_ACCEPT_TRANSACTED_WORK;
    }
    private static final int ERROR_CANNOT_ABORT_TRANSACTIONS = (int)6848L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CANNOT_ABORT_TRANSACTIONS 6848
     * }
     */
    public static int ERROR_CANNOT_ABORT_TRANSACTIONS() {
        return ERROR_CANNOT_ABORT_TRANSACTIONS;
    }
    private static final int ERROR_BAD_CLUSTERS = (int)6849L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BAD_CLUSTERS 6849
     * }
     */
    public static int ERROR_BAD_CLUSTERS() {
        return ERROR_BAD_CLUSTERS;
    }
    private static final int ERROR_COMPRESSION_NOT_ALLOWED_IN_TRANSACTION = (int)6850L;
    /**
     * {@snippet lang=c :
     * #define ERROR_COMPRESSION_NOT_ALLOWED_IN_TRANSACTION 6850
     * }
     */
    public static int ERROR_COMPRESSION_NOT_ALLOWED_IN_TRANSACTION() {
        return ERROR_COMPRESSION_NOT_ALLOWED_IN_TRANSACTION;
    }
    private static final int ERROR_VOLUME_DIRTY = (int)6851L;
    /**
     * {@snippet lang=c :
     * #define ERROR_VOLUME_DIRTY 6851
     * }
     */
    public static int ERROR_VOLUME_DIRTY() {
        return ERROR_VOLUME_DIRTY;
    }
    private static final int ERROR_NO_LINK_TRACKING_IN_TRANSACTION = (int)6852L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_LINK_TRACKING_IN_TRANSACTION 6852
     * }
     */
    public static int ERROR_NO_LINK_TRACKING_IN_TRANSACTION() {
        return ERROR_NO_LINK_TRACKING_IN_TRANSACTION;
    }
    private static final int ERROR_OPERATION_NOT_SUPPORTED_IN_TRANSACTION = (int)6853L;
    /**
     * {@snippet lang=c :
     * #define ERROR_OPERATION_NOT_SUPPORTED_IN_TRANSACTION 6853
     * }
     */
    public static int ERROR_OPERATION_NOT_SUPPORTED_IN_TRANSACTION() {
        return ERROR_OPERATION_NOT_SUPPORTED_IN_TRANSACTION;
    }
    private static final int ERROR_EXPIRED_HANDLE = (int)6854L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EXPIRED_HANDLE 6854
     * }
     */
    public static int ERROR_EXPIRED_HANDLE() {
        return ERROR_EXPIRED_HANDLE;
    }
    private static final int ERROR_TRANSACTION_NOT_ENLISTED = (int)6855L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TRANSACTION_NOT_ENLISTED 6855
     * }
     */
    public static int ERROR_TRANSACTION_NOT_ENLISTED() {
        return ERROR_TRANSACTION_NOT_ENLISTED;
    }
    private static final int ERROR_ENLISTMENT_NOT_INITIALIZED = (int)6856L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ENLISTMENT_NOT_INITIALIZED 6856
     * }
     */
    public static int ERROR_ENLISTMENT_NOT_INITIALIZED() {
        return ERROR_ENLISTMENT_NOT_INITIALIZED;
    }
    private static final int ERROR_CTX_WINSTATION_NAME_INVALID = (int)7001L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CTX_WINSTATION_NAME_INVALID 7001
     * }
     */
    public static int ERROR_CTX_WINSTATION_NAME_INVALID() {
        return ERROR_CTX_WINSTATION_NAME_INVALID;
    }
    private static final int ERROR_CTX_INVALID_PD = (int)7002L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CTX_INVALID_PD 7002
     * }
     */
    public static int ERROR_CTX_INVALID_PD() {
        return ERROR_CTX_INVALID_PD;
    }
    private static final int ERROR_CTX_PD_NOT_FOUND = (int)7003L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CTX_PD_NOT_FOUND 7003
     * }
     */
    public static int ERROR_CTX_PD_NOT_FOUND() {
        return ERROR_CTX_PD_NOT_FOUND;
    }
    private static final int ERROR_CTX_WD_NOT_FOUND = (int)7004L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CTX_WD_NOT_FOUND 7004
     * }
     */
    public static int ERROR_CTX_WD_NOT_FOUND() {
        return ERROR_CTX_WD_NOT_FOUND;
    }
    private static final int ERROR_CTX_CANNOT_MAKE_EVENTLOG_ENTRY = (int)7005L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CTX_CANNOT_MAKE_EVENTLOG_ENTRY 7005
     * }
     */
    public static int ERROR_CTX_CANNOT_MAKE_EVENTLOG_ENTRY() {
        return ERROR_CTX_CANNOT_MAKE_EVENTLOG_ENTRY;
    }
    private static final int ERROR_CTX_SERVICE_NAME_COLLISION = (int)7006L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CTX_SERVICE_NAME_COLLISION 7006
     * }
     */
    public static int ERROR_CTX_SERVICE_NAME_COLLISION() {
        return ERROR_CTX_SERVICE_NAME_COLLISION;
    }
    private static final int ERROR_CTX_CLOSE_PENDING = (int)7007L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CTX_CLOSE_PENDING 7007
     * }
     */
    public static int ERROR_CTX_CLOSE_PENDING() {
        return ERROR_CTX_CLOSE_PENDING;
    }
    private static final int ERROR_CTX_NO_OUTBUF = (int)7008L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CTX_NO_OUTBUF 7008
     * }
     */
    public static int ERROR_CTX_NO_OUTBUF() {
        return ERROR_CTX_NO_OUTBUF;
    }
    private static final int ERROR_CTX_MODEM_INF_NOT_FOUND = (int)7009L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CTX_MODEM_INF_NOT_FOUND 7009
     * }
     */
    public static int ERROR_CTX_MODEM_INF_NOT_FOUND() {
        return ERROR_CTX_MODEM_INF_NOT_FOUND;
    }
    private static final int ERROR_CTX_INVALID_MODEMNAME = (int)7010L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CTX_INVALID_MODEMNAME 7010
     * }
     */
    public static int ERROR_CTX_INVALID_MODEMNAME() {
        return ERROR_CTX_INVALID_MODEMNAME;
    }
    private static final int ERROR_CTX_MODEM_RESPONSE_ERROR = (int)7011L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CTX_MODEM_RESPONSE_ERROR 7011
     * }
     */
    public static int ERROR_CTX_MODEM_RESPONSE_ERROR() {
        return ERROR_CTX_MODEM_RESPONSE_ERROR;
    }
    private static final int ERROR_CTX_MODEM_RESPONSE_TIMEOUT = (int)7012L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CTX_MODEM_RESPONSE_TIMEOUT 7012
     * }
     */
    public static int ERROR_CTX_MODEM_RESPONSE_TIMEOUT() {
        return ERROR_CTX_MODEM_RESPONSE_TIMEOUT;
    }
    private static final int ERROR_CTX_MODEM_RESPONSE_NO_CARRIER = (int)7013L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CTX_MODEM_RESPONSE_NO_CARRIER 7013
     * }
     */
    public static int ERROR_CTX_MODEM_RESPONSE_NO_CARRIER() {
        return ERROR_CTX_MODEM_RESPONSE_NO_CARRIER;
    }
    private static final int ERROR_CTX_MODEM_RESPONSE_NO_DIALTONE = (int)7014L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CTX_MODEM_RESPONSE_NO_DIALTONE 7014
     * }
     */
    public static int ERROR_CTX_MODEM_RESPONSE_NO_DIALTONE() {
        return ERROR_CTX_MODEM_RESPONSE_NO_DIALTONE;
    }
    private static final int ERROR_CTX_MODEM_RESPONSE_BUSY = (int)7015L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CTX_MODEM_RESPONSE_BUSY 7015
     * }
     */
    public static int ERROR_CTX_MODEM_RESPONSE_BUSY() {
        return ERROR_CTX_MODEM_RESPONSE_BUSY;
    }
    private static final int ERROR_CTX_MODEM_RESPONSE_VOICE = (int)7016L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CTX_MODEM_RESPONSE_VOICE 7016
     * }
     */
    public static int ERROR_CTX_MODEM_RESPONSE_VOICE() {
        return ERROR_CTX_MODEM_RESPONSE_VOICE;
    }
    private static final int ERROR_CTX_TD_ERROR = (int)7017L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CTX_TD_ERROR 7017
     * }
     */
    public static int ERROR_CTX_TD_ERROR() {
        return ERROR_CTX_TD_ERROR;
    }
    private static final int ERROR_CTX_WINSTATION_NOT_FOUND = (int)7022L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CTX_WINSTATION_NOT_FOUND 7022
     * }
     */
    public static int ERROR_CTX_WINSTATION_NOT_FOUND() {
        return ERROR_CTX_WINSTATION_NOT_FOUND;
    }
    private static final int ERROR_CTX_WINSTATION_ALREADY_EXISTS = (int)7023L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CTX_WINSTATION_ALREADY_EXISTS 7023
     * }
     */
    public static int ERROR_CTX_WINSTATION_ALREADY_EXISTS() {
        return ERROR_CTX_WINSTATION_ALREADY_EXISTS;
    }
    private static final int ERROR_CTX_WINSTATION_BUSY = (int)7024L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CTX_WINSTATION_BUSY 7024
     * }
     */
    public static int ERROR_CTX_WINSTATION_BUSY() {
        return ERROR_CTX_WINSTATION_BUSY;
    }
    private static final int ERROR_CTX_BAD_VIDEO_MODE = (int)7025L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CTX_BAD_VIDEO_MODE 7025
     * }
     */
    public static int ERROR_CTX_BAD_VIDEO_MODE() {
        return ERROR_CTX_BAD_VIDEO_MODE;
    }
    private static final int ERROR_CTX_GRAPHICS_INVALID = (int)7035L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CTX_GRAPHICS_INVALID 7035
     * }
     */
    public static int ERROR_CTX_GRAPHICS_INVALID() {
        return ERROR_CTX_GRAPHICS_INVALID;
    }
    private static final int ERROR_CTX_LOGON_DISABLED = (int)7037L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CTX_LOGON_DISABLED 7037
     * }
     */
    public static int ERROR_CTX_LOGON_DISABLED() {
        return ERROR_CTX_LOGON_DISABLED;
    }
    private static final int ERROR_CTX_NOT_CONSOLE = (int)7038L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CTX_NOT_CONSOLE 7038
     * }
     */
    public static int ERROR_CTX_NOT_CONSOLE() {
        return ERROR_CTX_NOT_CONSOLE;
    }
    private static final int ERROR_CTX_CLIENT_QUERY_TIMEOUT = (int)7040L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CTX_CLIENT_QUERY_TIMEOUT 7040
     * }
     */
    public static int ERROR_CTX_CLIENT_QUERY_TIMEOUT() {
        return ERROR_CTX_CLIENT_QUERY_TIMEOUT;
    }
    private static final int ERROR_CTX_CONSOLE_DISCONNECT = (int)7041L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CTX_CONSOLE_DISCONNECT 7041
     * }
     */
    public static int ERROR_CTX_CONSOLE_DISCONNECT() {
        return ERROR_CTX_CONSOLE_DISCONNECT;
    }
    private static final int ERROR_CTX_CONSOLE_CONNECT = (int)7042L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CTX_CONSOLE_CONNECT 7042
     * }
     */
    public static int ERROR_CTX_CONSOLE_CONNECT() {
        return ERROR_CTX_CONSOLE_CONNECT;
    }
    private static final int ERROR_CTX_SHADOW_DENIED = (int)7044L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CTX_SHADOW_DENIED 7044
     * }
     */
    public static int ERROR_CTX_SHADOW_DENIED() {
        return ERROR_CTX_SHADOW_DENIED;
    }
    private static final int ERROR_CTX_WINSTATION_ACCESS_DENIED = (int)7045L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CTX_WINSTATION_ACCESS_DENIED 7045
     * }
     */
    public static int ERROR_CTX_WINSTATION_ACCESS_DENIED() {
        return ERROR_CTX_WINSTATION_ACCESS_DENIED;
    }
    private static final int ERROR_CTX_INVALID_WD = (int)7049L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CTX_INVALID_WD 7049
     * }
     */
    public static int ERROR_CTX_INVALID_WD() {
        return ERROR_CTX_INVALID_WD;
    }
    private static final int ERROR_CTX_SHADOW_INVALID = (int)7050L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CTX_SHADOW_INVALID 7050
     * }
     */
    public static int ERROR_CTX_SHADOW_INVALID() {
        return ERROR_CTX_SHADOW_INVALID;
    }
    private static final int ERROR_CTX_SHADOW_DISABLED = (int)7051L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CTX_SHADOW_DISABLED 7051
     * }
     */
    public static int ERROR_CTX_SHADOW_DISABLED() {
        return ERROR_CTX_SHADOW_DISABLED;
    }
    private static final int ERROR_CTX_CLIENT_LICENSE_IN_USE = (int)7052L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CTX_CLIENT_LICENSE_IN_USE 7052
     * }
     */
    public static int ERROR_CTX_CLIENT_LICENSE_IN_USE() {
        return ERROR_CTX_CLIENT_LICENSE_IN_USE;
    }
    private static final int ERROR_CTX_CLIENT_LICENSE_NOT_SET = (int)7053L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CTX_CLIENT_LICENSE_NOT_SET 7053
     * }
     */
    public static int ERROR_CTX_CLIENT_LICENSE_NOT_SET() {
        return ERROR_CTX_CLIENT_LICENSE_NOT_SET;
    }
    private static final int ERROR_CTX_LICENSE_NOT_AVAILABLE = (int)7054L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CTX_LICENSE_NOT_AVAILABLE 7054
     * }
     */
    public static int ERROR_CTX_LICENSE_NOT_AVAILABLE() {
        return ERROR_CTX_LICENSE_NOT_AVAILABLE;
    }
    private static final int ERROR_CTX_LICENSE_CLIENT_INVALID = (int)7055L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CTX_LICENSE_CLIENT_INVALID 7055
     * }
     */
    public static int ERROR_CTX_LICENSE_CLIENT_INVALID() {
        return ERROR_CTX_LICENSE_CLIENT_INVALID;
    }
    private static final int ERROR_CTX_LICENSE_EXPIRED = (int)7056L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CTX_LICENSE_EXPIRED 7056
     * }
     */
    public static int ERROR_CTX_LICENSE_EXPIRED() {
        return ERROR_CTX_LICENSE_EXPIRED;
    }
    private static final int ERROR_CTX_SHADOW_NOT_RUNNING = (int)7057L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CTX_SHADOW_NOT_RUNNING 7057
     * }
     */
    public static int ERROR_CTX_SHADOW_NOT_RUNNING() {
        return ERROR_CTX_SHADOW_NOT_RUNNING;
    }
    private static final int ERROR_CTX_SHADOW_ENDED_BY_MODE_CHANGE = (int)7058L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CTX_SHADOW_ENDED_BY_MODE_CHANGE 7058
     * }
     */
    public static int ERROR_CTX_SHADOW_ENDED_BY_MODE_CHANGE() {
        return ERROR_CTX_SHADOW_ENDED_BY_MODE_CHANGE;
    }
    private static final int ERROR_ACTIVATION_COUNT_EXCEEDED = (int)7059L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ACTIVATION_COUNT_EXCEEDED 7059
     * }
     */
    public static int ERROR_ACTIVATION_COUNT_EXCEEDED() {
        return ERROR_ACTIVATION_COUNT_EXCEEDED;
    }
    private static final int ERROR_CTX_WINSTATIONS_DISABLED = (int)7060L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CTX_WINSTATIONS_DISABLED 7060
     * }
     */
    public static int ERROR_CTX_WINSTATIONS_DISABLED() {
        return ERROR_CTX_WINSTATIONS_DISABLED;
    }
    private static final int ERROR_CTX_ENCRYPTION_LEVEL_REQUIRED = (int)7061L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CTX_ENCRYPTION_LEVEL_REQUIRED 7061
     * }
     */
    public static int ERROR_CTX_ENCRYPTION_LEVEL_REQUIRED() {
        return ERROR_CTX_ENCRYPTION_LEVEL_REQUIRED;
    }
    private static final int ERROR_CTX_SESSION_IN_USE = (int)7062L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CTX_SESSION_IN_USE 7062
     * }
     */
    public static int ERROR_CTX_SESSION_IN_USE() {
        return ERROR_CTX_SESSION_IN_USE;
    }
    private static final int ERROR_CTX_NO_FORCE_LOGOFF = (int)7063L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CTX_NO_FORCE_LOGOFF 7063
     * }
     */
    public static int ERROR_CTX_NO_FORCE_LOGOFF() {
        return ERROR_CTX_NO_FORCE_LOGOFF;
    }
    private static final int ERROR_CTX_ACCOUNT_RESTRICTION = (int)7064L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CTX_ACCOUNT_RESTRICTION 7064
     * }
     */
    public static int ERROR_CTX_ACCOUNT_RESTRICTION() {
        return ERROR_CTX_ACCOUNT_RESTRICTION;
    }
    private static final int ERROR_RDP_PROTOCOL_ERROR = (int)7065L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RDP_PROTOCOL_ERROR 7065
     * }
     */
    public static int ERROR_RDP_PROTOCOL_ERROR() {
        return ERROR_RDP_PROTOCOL_ERROR;
    }
    private static final int ERROR_CTX_CDM_CONNECT = (int)7066L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CTX_CDM_CONNECT 7066
     * }
     */
    public static int ERROR_CTX_CDM_CONNECT() {
        return ERROR_CTX_CDM_CONNECT;
    }
    private static final int ERROR_CTX_CDM_DISCONNECT = (int)7067L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CTX_CDM_DISCONNECT 7067
     * }
     */
    public static int ERROR_CTX_CDM_DISCONNECT() {
        return ERROR_CTX_CDM_DISCONNECT;
    }
    private static final int ERROR_CTX_SECURITY_LAYER_ERROR = (int)7068L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CTX_SECURITY_LAYER_ERROR 7068
     * }
     */
    public static int ERROR_CTX_SECURITY_LAYER_ERROR() {
        return ERROR_CTX_SECURITY_LAYER_ERROR;
    }
    private static final int ERROR_TS_INCOMPATIBLE_SESSIONS = (int)7069L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TS_INCOMPATIBLE_SESSIONS 7069
     * }
     */
    public static int ERROR_TS_INCOMPATIBLE_SESSIONS() {
        return ERROR_TS_INCOMPATIBLE_SESSIONS;
    }
    private static final int ERROR_TS_VIDEO_SUBSYSTEM_ERROR = (int)7070L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TS_VIDEO_SUBSYSTEM_ERROR 7070
     * }
     */
    public static int ERROR_TS_VIDEO_SUBSYSTEM_ERROR() {
        return ERROR_TS_VIDEO_SUBSYSTEM_ERROR;
    }
    private static final int FRS_ERR_INVALID_API_SEQUENCE = (int)8001L;
    /**
     * {@snippet lang=c :
     * #define FRS_ERR_INVALID_API_SEQUENCE 8001
     * }
     */
    public static int FRS_ERR_INVALID_API_SEQUENCE() {
        return FRS_ERR_INVALID_API_SEQUENCE;
    }
    private static final int FRS_ERR_STARTING_SERVICE = (int)8002L;
    /**
     * {@snippet lang=c :
     * #define FRS_ERR_STARTING_SERVICE 8002
     * }
     */
    public static int FRS_ERR_STARTING_SERVICE() {
        return FRS_ERR_STARTING_SERVICE;
    }
    private static final int FRS_ERR_STOPPING_SERVICE = (int)8003L;
    /**
     * {@snippet lang=c :
     * #define FRS_ERR_STOPPING_SERVICE 8003
     * }
     */
    public static int FRS_ERR_STOPPING_SERVICE() {
        return FRS_ERR_STOPPING_SERVICE;
    }
    private static final int FRS_ERR_INTERNAL_API = (int)8004L;
    /**
     * {@snippet lang=c :
     * #define FRS_ERR_INTERNAL_API 8004
     * }
     */
    public static int FRS_ERR_INTERNAL_API() {
        return FRS_ERR_INTERNAL_API;
    }
    private static final int FRS_ERR_INTERNAL = (int)8005L;
    /**
     * {@snippet lang=c :
     * #define FRS_ERR_INTERNAL 8005
     * }
     */
    public static int FRS_ERR_INTERNAL() {
        return FRS_ERR_INTERNAL;
    }
    private static final int FRS_ERR_SERVICE_COMM = (int)8006L;
    /**
     * {@snippet lang=c :
     * #define FRS_ERR_SERVICE_COMM 8006
     * }
     */
    public static int FRS_ERR_SERVICE_COMM() {
        return FRS_ERR_SERVICE_COMM;
    }
    private static final int FRS_ERR_INSUFFICIENT_PRIV = (int)8007L;
    /**
     * {@snippet lang=c :
     * #define FRS_ERR_INSUFFICIENT_PRIV 8007
     * }
     */
    public static int FRS_ERR_INSUFFICIENT_PRIV() {
        return FRS_ERR_INSUFFICIENT_PRIV;
    }
    private static final int FRS_ERR_AUTHENTICATION = (int)8008L;
    /**
     * {@snippet lang=c :
     * #define FRS_ERR_AUTHENTICATION 8008
     * }
     */
    public static int FRS_ERR_AUTHENTICATION() {
        return FRS_ERR_AUTHENTICATION;
    }
    private static final int FRS_ERR_PARENT_INSUFFICIENT_PRIV = (int)8009L;
    /**
     * {@snippet lang=c :
     * #define FRS_ERR_PARENT_INSUFFICIENT_PRIV 8009
     * }
     */
    public static int FRS_ERR_PARENT_INSUFFICIENT_PRIV() {
        return FRS_ERR_PARENT_INSUFFICIENT_PRIV;
    }
    private static final int FRS_ERR_PARENT_AUTHENTICATION = (int)8010L;
    /**
     * {@snippet lang=c :
     * #define FRS_ERR_PARENT_AUTHENTICATION 8010
     * }
     */
    public static int FRS_ERR_PARENT_AUTHENTICATION() {
        return FRS_ERR_PARENT_AUTHENTICATION;
    }
    private static final int FRS_ERR_CHILD_TO_PARENT_COMM = (int)8011L;
    /**
     * {@snippet lang=c :
     * #define FRS_ERR_CHILD_TO_PARENT_COMM 8011
     * }
     */
    public static int FRS_ERR_CHILD_TO_PARENT_COMM() {
        return FRS_ERR_CHILD_TO_PARENT_COMM;
    }
    private static final int FRS_ERR_PARENT_TO_CHILD_COMM = (int)8012L;
    /**
     * {@snippet lang=c :
     * #define FRS_ERR_PARENT_TO_CHILD_COMM 8012
     * }
     */
    public static int FRS_ERR_PARENT_TO_CHILD_COMM() {
        return FRS_ERR_PARENT_TO_CHILD_COMM;
    }
    private static final int FRS_ERR_SYSVOL_POPULATE = (int)8013L;
    /**
     * {@snippet lang=c :
     * #define FRS_ERR_SYSVOL_POPULATE 8013
     * }
     */
    public static int FRS_ERR_SYSVOL_POPULATE() {
        return FRS_ERR_SYSVOL_POPULATE;
    }
    private static final int FRS_ERR_SYSVOL_POPULATE_TIMEOUT = (int)8014L;
    /**
     * {@snippet lang=c :
     * #define FRS_ERR_SYSVOL_POPULATE_TIMEOUT 8014
     * }
     */
    public static int FRS_ERR_SYSVOL_POPULATE_TIMEOUT() {
        return FRS_ERR_SYSVOL_POPULATE_TIMEOUT;
    }
    private static final int FRS_ERR_SYSVOL_IS_BUSY = (int)8015L;
    /**
     * {@snippet lang=c :
     * #define FRS_ERR_SYSVOL_IS_BUSY 8015
     * }
     */
    public static int FRS_ERR_SYSVOL_IS_BUSY() {
        return FRS_ERR_SYSVOL_IS_BUSY;
    }
    private static final int FRS_ERR_SYSVOL_DEMOTE = (int)8016L;
    /**
     * {@snippet lang=c :
     * #define FRS_ERR_SYSVOL_DEMOTE 8016
     * }
     */
    public static int FRS_ERR_SYSVOL_DEMOTE() {
        return FRS_ERR_SYSVOL_DEMOTE;
    }
    private static final int FRS_ERR_INVALID_SERVICE_PARAMETER = (int)8017L;
    /**
     * {@snippet lang=c :
     * #define FRS_ERR_INVALID_SERVICE_PARAMETER 8017
     * }
     */
    public static int FRS_ERR_INVALID_SERVICE_PARAMETER() {
        return FRS_ERR_INVALID_SERVICE_PARAMETER;
    }
    private static final int DS_S_SUCCESS = (int)0L;
    /**
     * {@snippet lang=c :
     * #define DS_S_SUCCESS 0
     * }
     */
    public static int DS_S_SUCCESS() {
        return DS_S_SUCCESS;
    }
    private static final int ERROR_DS_NOT_INSTALLED = (int)8200L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NOT_INSTALLED 8200
     * }
     */
    public static int ERROR_DS_NOT_INSTALLED() {
        return ERROR_DS_NOT_INSTALLED;
    }
    private static final int ERROR_DS_MEMBERSHIP_EVALUATED_LOCALLY = (int)8201L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_MEMBERSHIP_EVALUATED_LOCALLY 8201
     * }
     */
    public static int ERROR_DS_MEMBERSHIP_EVALUATED_LOCALLY() {
        return ERROR_DS_MEMBERSHIP_EVALUATED_LOCALLY;
    }
    private static final int ERROR_DS_NO_ATTRIBUTE_OR_VALUE = (int)8202L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NO_ATTRIBUTE_OR_VALUE 8202
     * }
     */
    public static int ERROR_DS_NO_ATTRIBUTE_OR_VALUE() {
        return ERROR_DS_NO_ATTRIBUTE_OR_VALUE;
    }
    private static final int ERROR_DS_INVALID_ATTRIBUTE_SYNTAX = (int)8203L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_INVALID_ATTRIBUTE_SYNTAX 8203
     * }
     */
    public static int ERROR_DS_INVALID_ATTRIBUTE_SYNTAX() {
        return ERROR_DS_INVALID_ATTRIBUTE_SYNTAX;
    }
    private static final int ERROR_DS_ATTRIBUTE_TYPE_UNDEFINED = (int)8204L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_ATTRIBUTE_TYPE_UNDEFINED 8204
     * }
     */
    public static int ERROR_DS_ATTRIBUTE_TYPE_UNDEFINED() {
        return ERROR_DS_ATTRIBUTE_TYPE_UNDEFINED;
    }
    private static final int ERROR_DS_ATTRIBUTE_OR_VALUE_EXISTS = (int)8205L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_ATTRIBUTE_OR_VALUE_EXISTS 8205
     * }
     */
    public static int ERROR_DS_ATTRIBUTE_OR_VALUE_EXISTS() {
        return ERROR_DS_ATTRIBUTE_OR_VALUE_EXISTS;
    }
    private static final int ERROR_DS_BUSY = (int)8206L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_BUSY 8206
     * }
     */
    public static int ERROR_DS_BUSY() {
        return ERROR_DS_BUSY;
    }
    private static final int ERROR_DS_UNAVAILABLE = (int)8207L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_UNAVAILABLE 8207
     * }
     */
    public static int ERROR_DS_UNAVAILABLE() {
        return ERROR_DS_UNAVAILABLE;
    }
    private static final int ERROR_DS_NO_RIDS_ALLOCATED = (int)8208L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NO_RIDS_ALLOCATED 8208
     * }
     */
    public static int ERROR_DS_NO_RIDS_ALLOCATED() {
        return ERROR_DS_NO_RIDS_ALLOCATED;
    }
    private static final int ERROR_DS_NO_MORE_RIDS = (int)8209L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NO_MORE_RIDS 8209
     * }
     */
    public static int ERROR_DS_NO_MORE_RIDS() {
        return ERROR_DS_NO_MORE_RIDS;
    }
    private static final int ERROR_DS_INCORRECT_ROLE_OWNER = (int)8210L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_INCORRECT_ROLE_OWNER 8210
     * }
     */
    public static int ERROR_DS_INCORRECT_ROLE_OWNER() {
        return ERROR_DS_INCORRECT_ROLE_OWNER;
    }
    private static final int ERROR_DS_RIDMGR_INIT_ERROR = (int)8211L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_RIDMGR_INIT_ERROR 8211
     * }
     */
    public static int ERROR_DS_RIDMGR_INIT_ERROR() {
        return ERROR_DS_RIDMGR_INIT_ERROR;
    }
    private static final int ERROR_DS_OBJ_CLASS_VIOLATION = (int)8212L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_OBJ_CLASS_VIOLATION 8212
     * }
     */
    public static int ERROR_DS_OBJ_CLASS_VIOLATION() {
        return ERROR_DS_OBJ_CLASS_VIOLATION;
    }
    private static final int ERROR_DS_CANT_ON_NON_LEAF = (int)8213L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CANT_ON_NON_LEAF 8213
     * }
     */
    public static int ERROR_DS_CANT_ON_NON_LEAF() {
        return ERROR_DS_CANT_ON_NON_LEAF;
    }
    private static final int ERROR_DS_CANT_ON_RDN = (int)8214L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CANT_ON_RDN 8214
     * }
     */
    public static int ERROR_DS_CANT_ON_RDN() {
        return ERROR_DS_CANT_ON_RDN;
    }
    private static final int ERROR_DS_CANT_MOD_OBJ_CLASS = (int)8215L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CANT_MOD_OBJ_CLASS 8215
     * }
     */
    public static int ERROR_DS_CANT_MOD_OBJ_CLASS() {
        return ERROR_DS_CANT_MOD_OBJ_CLASS;
    }
    private static final int ERROR_DS_CROSS_DOM_MOVE_ERROR = (int)8216L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CROSS_DOM_MOVE_ERROR 8216
     * }
     */
    public static int ERROR_DS_CROSS_DOM_MOVE_ERROR() {
        return ERROR_DS_CROSS_DOM_MOVE_ERROR;
    }
    private static final int ERROR_DS_GC_NOT_AVAILABLE = (int)8217L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_GC_NOT_AVAILABLE 8217
     * }
     */
    public static int ERROR_DS_GC_NOT_AVAILABLE() {
        return ERROR_DS_GC_NOT_AVAILABLE;
    }
    private static final int ERROR_SHARED_POLICY = (int)8218L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SHARED_POLICY 8218
     * }
     */
    public static int ERROR_SHARED_POLICY() {
        return ERROR_SHARED_POLICY;
    }
    private static final int ERROR_POLICY_OBJECT_NOT_FOUND = (int)8219L;
    /**
     * {@snippet lang=c :
     * #define ERROR_POLICY_OBJECT_NOT_FOUND 8219
     * }
     */
    public static int ERROR_POLICY_OBJECT_NOT_FOUND() {
        return ERROR_POLICY_OBJECT_NOT_FOUND;
    }
    private static final int ERROR_POLICY_ONLY_IN_DS = (int)8220L;
    /**
     * {@snippet lang=c :
     * #define ERROR_POLICY_ONLY_IN_DS 8220
     * }
     */
    public static int ERROR_POLICY_ONLY_IN_DS() {
        return ERROR_POLICY_ONLY_IN_DS;
    }
    private static final int ERROR_PROMOTION_ACTIVE = (int)8221L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PROMOTION_ACTIVE 8221
     * }
     */
    public static int ERROR_PROMOTION_ACTIVE() {
        return ERROR_PROMOTION_ACTIVE;
    }
    private static final int ERROR_NO_PROMOTION_ACTIVE = (int)8222L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_PROMOTION_ACTIVE 8222
     * }
     */
    public static int ERROR_NO_PROMOTION_ACTIVE() {
        return ERROR_NO_PROMOTION_ACTIVE;
    }
    private static final int ERROR_DS_OPERATIONS_ERROR = (int)8224L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_OPERATIONS_ERROR 8224
     * }
     */
    public static int ERROR_DS_OPERATIONS_ERROR() {
        return ERROR_DS_OPERATIONS_ERROR;
    }
    private static final int ERROR_DS_PROTOCOL_ERROR = (int)8225L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_PROTOCOL_ERROR 8225
     * }
     */
    public static int ERROR_DS_PROTOCOL_ERROR() {
        return ERROR_DS_PROTOCOL_ERROR;
    }
    private static final int ERROR_DS_TIMELIMIT_EXCEEDED = (int)8226L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_TIMELIMIT_EXCEEDED 8226
     * }
     */
    public static int ERROR_DS_TIMELIMIT_EXCEEDED() {
        return ERROR_DS_TIMELIMIT_EXCEEDED;
    }
    private static final int ERROR_DS_SIZELIMIT_EXCEEDED = (int)8227L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_SIZELIMIT_EXCEEDED 8227
     * }
     */
    public static int ERROR_DS_SIZELIMIT_EXCEEDED() {
        return ERROR_DS_SIZELIMIT_EXCEEDED;
    }
    private static final int ERROR_DS_ADMIN_LIMIT_EXCEEDED = (int)8228L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_ADMIN_LIMIT_EXCEEDED 8228
     * }
     */
    public static int ERROR_DS_ADMIN_LIMIT_EXCEEDED() {
        return ERROR_DS_ADMIN_LIMIT_EXCEEDED;
    }
    private static final int ERROR_DS_COMPARE_FALSE = (int)8229L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_COMPARE_FALSE 8229
     * }
     */
    public static int ERROR_DS_COMPARE_FALSE() {
        return ERROR_DS_COMPARE_FALSE;
    }
    private static final int ERROR_DS_COMPARE_TRUE = (int)8230L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_COMPARE_TRUE 8230
     * }
     */
    public static int ERROR_DS_COMPARE_TRUE() {
        return ERROR_DS_COMPARE_TRUE;
    }
    private static final int ERROR_DS_AUTH_METHOD_NOT_SUPPORTED = (int)8231L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_AUTH_METHOD_NOT_SUPPORTED 8231
     * }
     */
    public static int ERROR_DS_AUTH_METHOD_NOT_SUPPORTED() {
        return ERROR_DS_AUTH_METHOD_NOT_SUPPORTED;
    }
    private static final int ERROR_DS_STRONG_AUTH_REQUIRED = (int)8232L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_STRONG_AUTH_REQUIRED 8232
     * }
     */
    public static int ERROR_DS_STRONG_AUTH_REQUIRED() {
        return ERROR_DS_STRONG_AUTH_REQUIRED;
    }
    private static final int ERROR_DS_INAPPROPRIATE_AUTH = (int)8233L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_INAPPROPRIATE_AUTH 8233
     * }
     */
    public static int ERROR_DS_INAPPROPRIATE_AUTH() {
        return ERROR_DS_INAPPROPRIATE_AUTH;
    }
    private static final int ERROR_DS_AUTH_UNKNOWN = (int)8234L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_AUTH_UNKNOWN 8234
     * }
     */
    public static int ERROR_DS_AUTH_UNKNOWN() {
        return ERROR_DS_AUTH_UNKNOWN;
    }
    private static final int ERROR_DS_REFERRAL = (int)8235L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_REFERRAL 8235
     * }
     */
    public static int ERROR_DS_REFERRAL() {
        return ERROR_DS_REFERRAL;
    }
    private static final int ERROR_DS_UNAVAILABLE_CRIT_EXTENSION = (int)8236L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_UNAVAILABLE_CRIT_EXTENSION 8236
     * }
     */
    public static int ERROR_DS_UNAVAILABLE_CRIT_EXTENSION() {
        return ERROR_DS_UNAVAILABLE_CRIT_EXTENSION;
    }
    private static final int ERROR_DS_CONFIDENTIALITY_REQUIRED = (int)8237L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CONFIDENTIALITY_REQUIRED 8237
     * }
     */
    public static int ERROR_DS_CONFIDENTIALITY_REQUIRED() {
        return ERROR_DS_CONFIDENTIALITY_REQUIRED;
    }
    private static final int ERROR_DS_INAPPROPRIATE_MATCHING = (int)8238L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_INAPPROPRIATE_MATCHING 8238
     * }
     */
    public static int ERROR_DS_INAPPROPRIATE_MATCHING() {
        return ERROR_DS_INAPPROPRIATE_MATCHING;
    }
    private static final int ERROR_DS_CONSTRAINT_VIOLATION = (int)8239L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CONSTRAINT_VIOLATION 8239
     * }
     */
    public static int ERROR_DS_CONSTRAINT_VIOLATION() {
        return ERROR_DS_CONSTRAINT_VIOLATION;
    }
    private static final int ERROR_DS_NO_SUCH_OBJECT = (int)8240L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NO_SUCH_OBJECT 8240
     * }
     */
    public static int ERROR_DS_NO_SUCH_OBJECT() {
        return ERROR_DS_NO_SUCH_OBJECT;
    }
    private static final int ERROR_DS_ALIAS_PROBLEM = (int)8241L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_ALIAS_PROBLEM 8241
     * }
     */
    public static int ERROR_DS_ALIAS_PROBLEM() {
        return ERROR_DS_ALIAS_PROBLEM;
    }
    private static final int ERROR_DS_INVALID_DN_SYNTAX = (int)8242L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_INVALID_DN_SYNTAX 8242
     * }
     */
    public static int ERROR_DS_INVALID_DN_SYNTAX() {
        return ERROR_DS_INVALID_DN_SYNTAX;
    }
    private static final int ERROR_DS_IS_LEAF = (int)8243L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_IS_LEAF 8243
     * }
     */
    public static int ERROR_DS_IS_LEAF() {
        return ERROR_DS_IS_LEAF;
    }
    private static final int ERROR_DS_ALIAS_DEREF_PROBLEM = (int)8244L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_ALIAS_DEREF_PROBLEM 8244
     * }
     */
    public static int ERROR_DS_ALIAS_DEREF_PROBLEM() {
        return ERROR_DS_ALIAS_DEREF_PROBLEM;
    }
    private static final int ERROR_DS_UNWILLING_TO_PERFORM = (int)8245L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_UNWILLING_TO_PERFORM 8245
     * }
     */
    public static int ERROR_DS_UNWILLING_TO_PERFORM() {
        return ERROR_DS_UNWILLING_TO_PERFORM;
    }
    private static final int ERROR_DS_LOOP_DETECT = (int)8246L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_LOOP_DETECT 8246
     * }
     */
    public static int ERROR_DS_LOOP_DETECT() {
        return ERROR_DS_LOOP_DETECT;
    }
    private static final int ERROR_DS_NAMING_VIOLATION = (int)8247L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NAMING_VIOLATION 8247
     * }
     */
    public static int ERROR_DS_NAMING_VIOLATION() {
        return ERROR_DS_NAMING_VIOLATION;
    }
    private static final int ERROR_DS_OBJECT_RESULTS_TOO_LARGE = (int)8248L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_OBJECT_RESULTS_TOO_LARGE 8248
     * }
     */
    public static int ERROR_DS_OBJECT_RESULTS_TOO_LARGE() {
        return ERROR_DS_OBJECT_RESULTS_TOO_LARGE;
    }
    private static final int ERROR_DS_AFFECTS_MULTIPLE_DSAS = (int)8249L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_AFFECTS_MULTIPLE_DSAS 8249
     * }
     */
    public static int ERROR_DS_AFFECTS_MULTIPLE_DSAS() {
        return ERROR_DS_AFFECTS_MULTIPLE_DSAS;
    }
    private static final int ERROR_DS_SERVER_DOWN = (int)8250L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_SERVER_DOWN 8250
     * }
     */
    public static int ERROR_DS_SERVER_DOWN() {
        return ERROR_DS_SERVER_DOWN;
    }
    private static final int ERROR_DS_LOCAL_ERROR = (int)8251L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_LOCAL_ERROR 8251
     * }
     */
    public static int ERROR_DS_LOCAL_ERROR() {
        return ERROR_DS_LOCAL_ERROR;
    }
    private static final int ERROR_DS_ENCODING_ERROR = (int)8252L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_ENCODING_ERROR 8252
     * }
     */
    public static int ERROR_DS_ENCODING_ERROR() {
        return ERROR_DS_ENCODING_ERROR;
    }
    private static final int ERROR_DS_DECODING_ERROR = (int)8253L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DECODING_ERROR 8253
     * }
     */
    public static int ERROR_DS_DECODING_ERROR() {
        return ERROR_DS_DECODING_ERROR;
    }
    private static final int ERROR_DS_FILTER_UNKNOWN = (int)8254L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_FILTER_UNKNOWN 8254
     * }
     */
    public static int ERROR_DS_FILTER_UNKNOWN() {
        return ERROR_DS_FILTER_UNKNOWN;
    }
    private static final int ERROR_DS_PARAM_ERROR = (int)8255L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_PARAM_ERROR 8255
     * }
     */
    public static int ERROR_DS_PARAM_ERROR() {
        return ERROR_DS_PARAM_ERROR;
    }
    private static final int ERROR_DS_NOT_SUPPORTED = (int)8256L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NOT_SUPPORTED 8256
     * }
     */
    public static int ERROR_DS_NOT_SUPPORTED() {
        return ERROR_DS_NOT_SUPPORTED;
    }
    private static final int ERROR_DS_NO_RESULTS_RETURNED = (int)8257L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NO_RESULTS_RETURNED 8257
     * }
     */
    public static int ERROR_DS_NO_RESULTS_RETURNED() {
        return ERROR_DS_NO_RESULTS_RETURNED;
    }
    private static final int ERROR_DS_CONTROL_NOT_FOUND = (int)8258L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CONTROL_NOT_FOUND 8258
     * }
     */
    public static int ERROR_DS_CONTROL_NOT_FOUND() {
        return ERROR_DS_CONTROL_NOT_FOUND;
    }
    private static final int ERROR_DS_CLIENT_LOOP = (int)8259L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CLIENT_LOOP 8259
     * }
     */
    public static int ERROR_DS_CLIENT_LOOP() {
        return ERROR_DS_CLIENT_LOOP;
    }
    private static final int ERROR_DS_REFERRAL_LIMIT_EXCEEDED = (int)8260L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_REFERRAL_LIMIT_EXCEEDED 8260
     * }
     */
    public static int ERROR_DS_REFERRAL_LIMIT_EXCEEDED() {
        return ERROR_DS_REFERRAL_LIMIT_EXCEEDED;
    }
    private static final int ERROR_DS_SORT_CONTROL_MISSING = (int)8261L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_SORT_CONTROL_MISSING 8261
     * }
     */
    public static int ERROR_DS_SORT_CONTROL_MISSING() {
        return ERROR_DS_SORT_CONTROL_MISSING;
    }
    private static final int ERROR_DS_OFFSET_RANGE_ERROR = (int)8262L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_OFFSET_RANGE_ERROR 8262
     * }
     */
    public static int ERROR_DS_OFFSET_RANGE_ERROR() {
        return ERROR_DS_OFFSET_RANGE_ERROR;
    }
    private static final int ERROR_DS_RIDMGR_DISABLED = (int)8263L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_RIDMGR_DISABLED 8263
     * }
     */
    public static int ERROR_DS_RIDMGR_DISABLED() {
        return ERROR_DS_RIDMGR_DISABLED;
    }
    private static final int ERROR_DS_ROOT_MUST_BE_NC = (int)8301L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_ROOT_MUST_BE_NC 8301
     * }
     */
    public static int ERROR_DS_ROOT_MUST_BE_NC() {
        return ERROR_DS_ROOT_MUST_BE_NC;
    }
    private static final int ERROR_DS_ADD_REPLICA_INHIBITED = (int)8302L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_ADD_REPLICA_INHIBITED 8302
     * }
     */
    public static int ERROR_DS_ADD_REPLICA_INHIBITED() {
        return ERROR_DS_ADD_REPLICA_INHIBITED;
    }
    private static final int ERROR_DS_ATT_NOT_DEF_IN_SCHEMA = (int)8303L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_ATT_NOT_DEF_IN_SCHEMA 8303
     * }
     */
    public static int ERROR_DS_ATT_NOT_DEF_IN_SCHEMA() {
        return ERROR_DS_ATT_NOT_DEF_IN_SCHEMA;
    }
    private static final int ERROR_DS_MAX_OBJ_SIZE_EXCEEDED = (int)8304L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_MAX_OBJ_SIZE_EXCEEDED 8304
     * }
     */
    public static int ERROR_DS_MAX_OBJ_SIZE_EXCEEDED() {
        return ERROR_DS_MAX_OBJ_SIZE_EXCEEDED;
    }
    private static final int ERROR_DS_OBJ_STRING_NAME_EXISTS = (int)8305L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_OBJ_STRING_NAME_EXISTS 8305
     * }
     */
    public static int ERROR_DS_OBJ_STRING_NAME_EXISTS() {
        return ERROR_DS_OBJ_STRING_NAME_EXISTS;
    }
    private static final int ERROR_DS_NO_RDN_DEFINED_IN_SCHEMA = (int)8306L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NO_RDN_DEFINED_IN_SCHEMA 8306
     * }
     */
    public static int ERROR_DS_NO_RDN_DEFINED_IN_SCHEMA() {
        return ERROR_DS_NO_RDN_DEFINED_IN_SCHEMA;
    }
    private static final int ERROR_DS_RDN_DOESNT_MATCH_SCHEMA = (int)8307L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_RDN_DOESNT_MATCH_SCHEMA 8307
     * }
     */
    public static int ERROR_DS_RDN_DOESNT_MATCH_SCHEMA() {
        return ERROR_DS_RDN_DOESNT_MATCH_SCHEMA;
    }
    private static final int ERROR_DS_NO_REQUESTED_ATTS_FOUND = (int)8308L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NO_REQUESTED_ATTS_FOUND 8308
     * }
     */
    public static int ERROR_DS_NO_REQUESTED_ATTS_FOUND() {
        return ERROR_DS_NO_REQUESTED_ATTS_FOUND;
    }
    private static final int ERROR_DS_USER_BUFFER_TO_SMALL = (int)8309L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_USER_BUFFER_TO_SMALL 8309
     * }
     */
    public static int ERROR_DS_USER_BUFFER_TO_SMALL() {
        return ERROR_DS_USER_BUFFER_TO_SMALL;
    }
    private static final int ERROR_DS_ATT_IS_NOT_ON_OBJ = (int)8310L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_ATT_IS_NOT_ON_OBJ 8310
     * }
     */
    public static int ERROR_DS_ATT_IS_NOT_ON_OBJ() {
        return ERROR_DS_ATT_IS_NOT_ON_OBJ;
    }
    private static final int ERROR_DS_ILLEGAL_MOD_OPERATION = (int)8311L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_ILLEGAL_MOD_OPERATION 8311
     * }
     */
    public static int ERROR_DS_ILLEGAL_MOD_OPERATION() {
        return ERROR_DS_ILLEGAL_MOD_OPERATION;
    }
    private static final int ERROR_DS_OBJ_TOO_LARGE = (int)8312L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_OBJ_TOO_LARGE 8312
     * }
     */
    public static int ERROR_DS_OBJ_TOO_LARGE() {
        return ERROR_DS_OBJ_TOO_LARGE;
    }
    private static final int ERROR_DS_BAD_INSTANCE_TYPE = (int)8313L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_BAD_INSTANCE_TYPE 8313
     * }
     */
    public static int ERROR_DS_BAD_INSTANCE_TYPE() {
        return ERROR_DS_BAD_INSTANCE_TYPE;
    }
    private static final int ERROR_DS_MASTERDSA_REQUIRED = (int)8314L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_MASTERDSA_REQUIRED 8314
     * }
     */
    public static int ERROR_DS_MASTERDSA_REQUIRED() {
        return ERROR_DS_MASTERDSA_REQUIRED;
    }
    private static final int ERROR_DS_OBJECT_CLASS_REQUIRED = (int)8315L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_OBJECT_CLASS_REQUIRED 8315
     * }
     */
    public static int ERROR_DS_OBJECT_CLASS_REQUIRED() {
        return ERROR_DS_OBJECT_CLASS_REQUIRED;
    }
    private static final int ERROR_DS_MISSING_REQUIRED_ATT = (int)8316L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_MISSING_REQUIRED_ATT 8316
     * }
     */
    public static int ERROR_DS_MISSING_REQUIRED_ATT() {
        return ERROR_DS_MISSING_REQUIRED_ATT;
    }
    private static final int ERROR_DS_ATT_NOT_DEF_FOR_CLASS = (int)8317L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_ATT_NOT_DEF_FOR_CLASS 8317
     * }
     */
    public static int ERROR_DS_ATT_NOT_DEF_FOR_CLASS() {
        return ERROR_DS_ATT_NOT_DEF_FOR_CLASS;
    }
    private static final int ERROR_DS_ATT_ALREADY_EXISTS = (int)8318L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_ATT_ALREADY_EXISTS 8318
     * }
     */
    public static int ERROR_DS_ATT_ALREADY_EXISTS() {
        return ERROR_DS_ATT_ALREADY_EXISTS;
    }
    private static final int ERROR_DS_CANT_ADD_ATT_VALUES = (int)8320L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CANT_ADD_ATT_VALUES 8320
     * }
     */
    public static int ERROR_DS_CANT_ADD_ATT_VALUES() {
        return ERROR_DS_CANT_ADD_ATT_VALUES;
    }
    private static final int ERROR_DS_SINGLE_VALUE_CONSTRAINT = (int)8321L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_SINGLE_VALUE_CONSTRAINT 8321
     * }
     */
    public static int ERROR_DS_SINGLE_VALUE_CONSTRAINT() {
        return ERROR_DS_SINGLE_VALUE_CONSTRAINT;
    }
    private static final int ERROR_DS_RANGE_CONSTRAINT = (int)8322L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_RANGE_CONSTRAINT 8322
     * }
     */
    public static int ERROR_DS_RANGE_CONSTRAINT() {
        return ERROR_DS_RANGE_CONSTRAINT;
    }
    private static final int ERROR_DS_ATT_VAL_ALREADY_EXISTS = (int)8323L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_ATT_VAL_ALREADY_EXISTS 8323
     * }
     */
    public static int ERROR_DS_ATT_VAL_ALREADY_EXISTS() {
        return ERROR_DS_ATT_VAL_ALREADY_EXISTS;
    }
    private static final int ERROR_DS_CANT_REM_MISSING_ATT = (int)8324L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CANT_REM_MISSING_ATT 8324
     * }
     */
    public static int ERROR_DS_CANT_REM_MISSING_ATT() {
        return ERROR_DS_CANT_REM_MISSING_ATT;
    }
    private static final int ERROR_DS_CANT_REM_MISSING_ATT_VAL = (int)8325L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CANT_REM_MISSING_ATT_VAL 8325
     * }
     */
    public static int ERROR_DS_CANT_REM_MISSING_ATT_VAL() {
        return ERROR_DS_CANT_REM_MISSING_ATT_VAL;
    }
    private static final int ERROR_DS_ROOT_CANT_BE_SUBREF = (int)8326L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_ROOT_CANT_BE_SUBREF 8326
     * }
     */
    public static int ERROR_DS_ROOT_CANT_BE_SUBREF() {
        return ERROR_DS_ROOT_CANT_BE_SUBREF;
    }
    private static final int ERROR_DS_NO_CHAINING = (int)8327L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NO_CHAINING 8327
     * }
     */
    public static int ERROR_DS_NO_CHAINING() {
        return ERROR_DS_NO_CHAINING;
    }
    private static final int ERROR_DS_NO_CHAINED_EVAL = (int)8328L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NO_CHAINED_EVAL 8328
     * }
     */
    public static int ERROR_DS_NO_CHAINED_EVAL() {
        return ERROR_DS_NO_CHAINED_EVAL;
    }
    private static final int ERROR_DS_NO_PARENT_OBJECT = (int)8329L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NO_PARENT_OBJECT 8329
     * }
     */
    public static int ERROR_DS_NO_PARENT_OBJECT() {
        return ERROR_DS_NO_PARENT_OBJECT;
    }
    private static final int ERROR_DS_PARENT_IS_AN_ALIAS = (int)8330L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_PARENT_IS_AN_ALIAS 8330
     * }
     */
    public static int ERROR_DS_PARENT_IS_AN_ALIAS() {
        return ERROR_DS_PARENT_IS_AN_ALIAS;
    }
    private static final int ERROR_DS_CANT_MIX_MASTER_AND_REPS = (int)8331L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CANT_MIX_MASTER_AND_REPS 8331
     * }
     */
    public static int ERROR_DS_CANT_MIX_MASTER_AND_REPS() {
        return ERROR_DS_CANT_MIX_MASTER_AND_REPS;
    }
    private static final int ERROR_DS_CHILDREN_EXIST = (int)8332L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CHILDREN_EXIST 8332
     * }
     */
    public static int ERROR_DS_CHILDREN_EXIST() {
        return ERROR_DS_CHILDREN_EXIST;
    }
    private static final int ERROR_DS_OBJ_NOT_FOUND = (int)8333L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_OBJ_NOT_FOUND 8333
     * }
     */
    public static int ERROR_DS_OBJ_NOT_FOUND() {
        return ERROR_DS_OBJ_NOT_FOUND;
    }
    private static final int ERROR_DS_ALIASED_OBJ_MISSING = (int)8334L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_ALIASED_OBJ_MISSING 8334
     * }
     */
    public static int ERROR_DS_ALIASED_OBJ_MISSING() {
        return ERROR_DS_ALIASED_OBJ_MISSING;
    }
    private static final int ERROR_DS_BAD_NAME_SYNTAX = (int)8335L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_BAD_NAME_SYNTAX 8335
     * }
     */
    public static int ERROR_DS_BAD_NAME_SYNTAX() {
        return ERROR_DS_BAD_NAME_SYNTAX;
    }
    private static final int ERROR_DS_ALIAS_POINTS_TO_ALIAS = (int)8336L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_ALIAS_POINTS_TO_ALIAS 8336
     * }
     */
    public static int ERROR_DS_ALIAS_POINTS_TO_ALIAS() {
        return ERROR_DS_ALIAS_POINTS_TO_ALIAS;
    }
    private static final int ERROR_DS_CANT_DEREF_ALIAS = (int)8337L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CANT_DEREF_ALIAS 8337
     * }
     */
    public static int ERROR_DS_CANT_DEREF_ALIAS() {
        return ERROR_DS_CANT_DEREF_ALIAS;
    }
    private static final int ERROR_DS_OUT_OF_SCOPE = (int)8338L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_OUT_OF_SCOPE 8338
     * }
     */
    public static int ERROR_DS_OUT_OF_SCOPE() {
        return ERROR_DS_OUT_OF_SCOPE;
    }
    private static final int ERROR_DS_OBJECT_BEING_REMOVED = (int)8339L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_OBJECT_BEING_REMOVED 8339
     * }
     */
    public static int ERROR_DS_OBJECT_BEING_REMOVED() {
        return ERROR_DS_OBJECT_BEING_REMOVED;
    }
    private static final int ERROR_DS_CANT_DELETE_DSA_OBJ = (int)8340L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CANT_DELETE_DSA_OBJ 8340
     * }
     */
    public static int ERROR_DS_CANT_DELETE_DSA_OBJ() {
        return ERROR_DS_CANT_DELETE_DSA_OBJ;
    }
    private static final int ERROR_DS_GENERIC_ERROR = (int)8341L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_GENERIC_ERROR 8341
     * }
     */
    public static int ERROR_DS_GENERIC_ERROR() {
        return ERROR_DS_GENERIC_ERROR;
    }
    private static final int ERROR_DS_DSA_MUST_BE_INT_MASTER = (int)8342L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DSA_MUST_BE_INT_MASTER 8342
     * }
     */
    public static int ERROR_DS_DSA_MUST_BE_INT_MASTER() {
        return ERROR_DS_DSA_MUST_BE_INT_MASTER;
    }
    private static final int ERROR_DS_CLASS_NOT_DSA = (int)8343L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CLASS_NOT_DSA 8343
     * }
     */
    public static int ERROR_DS_CLASS_NOT_DSA() {
        return ERROR_DS_CLASS_NOT_DSA;
    }
    private static final int ERROR_DS_INSUFF_ACCESS_RIGHTS = (int)8344L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_INSUFF_ACCESS_RIGHTS 8344
     * }
     */
    public static int ERROR_DS_INSUFF_ACCESS_RIGHTS() {
        return ERROR_DS_INSUFF_ACCESS_RIGHTS;
    }
    private static final int ERROR_DS_ILLEGAL_SUPERIOR = (int)8345L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_ILLEGAL_SUPERIOR 8345
     * }
     */
    public static int ERROR_DS_ILLEGAL_SUPERIOR() {
        return ERROR_DS_ILLEGAL_SUPERIOR;
    }
    private static final int ERROR_DS_ATTRIBUTE_OWNED_BY_SAM = (int)8346L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_ATTRIBUTE_OWNED_BY_SAM 8346
     * }
     */
    public static int ERROR_DS_ATTRIBUTE_OWNED_BY_SAM() {
        return ERROR_DS_ATTRIBUTE_OWNED_BY_SAM;
    }
    private static final int ERROR_DS_NAME_TOO_MANY_PARTS = (int)8347L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NAME_TOO_MANY_PARTS 8347
     * }
     */
    public static int ERROR_DS_NAME_TOO_MANY_PARTS() {
        return ERROR_DS_NAME_TOO_MANY_PARTS;
    }
    private static final int ERROR_DS_NAME_TOO_LONG = (int)8348L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NAME_TOO_LONG 8348
     * }
     */
    public static int ERROR_DS_NAME_TOO_LONG() {
        return ERROR_DS_NAME_TOO_LONG;
    }
    private static final int ERROR_DS_NAME_VALUE_TOO_LONG = (int)8349L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NAME_VALUE_TOO_LONG 8349
     * }
     */
    public static int ERROR_DS_NAME_VALUE_TOO_LONG() {
        return ERROR_DS_NAME_VALUE_TOO_LONG;
    }
    private static final int ERROR_DS_NAME_UNPARSEABLE = (int)8350L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NAME_UNPARSEABLE 8350
     * }
     */
    public static int ERROR_DS_NAME_UNPARSEABLE() {
        return ERROR_DS_NAME_UNPARSEABLE;
    }
    private static final int ERROR_DS_NAME_TYPE_UNKNOWN = (int)8351L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NAME_TYPE_UNKNOWN 8351
     * }
     */
    public static int ERROR_DS_NAME_TYPE_UNKNOWN() {
        return ERROR_DS_NAME_TYPE_UNKNOWN;
    }
    private static final int ERROR_DS_NOT_AN_OBJECT = (int)8352L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NOT_AN_OBJECT 8352
     * }
     */
    public static int ERROR_DS_NOT_AN_OBJECT() {
        return ERROR_DS_NOT_AN_OBJECT;
    }
    private static final int ERROR_DS_SEC_DESC_TOO_SHORT = (int)8353L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_SEC_DESC_TOO_SHORT 8353
     * }
     */
    public static int ERROR_DS_SEC_DESC_TOO_SHORT() {
        return ERROR_DS_SEC_DESC_TOO_SHORT;
    }
    private static final int ERROR_DS_SEC_DESC_INVALID = (int)8354L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_SEC_DESC_INVALID 8354
     * }
     */
    public static int ERROR_DS_SEC_DESC_INVALID() {
        return ERROR_DS_SEC_DESC_INVALID;
    }
    private static final int ERROR_DS_NO_DELETED_NAME = (int)8355L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NO_DELETED_NAME 8355
     * }
     */
    public static int ERROR_DS_NO_DELETED_NAME() {
        return ERROR_DS_NO_DELETED_NAME;
    }
    private static final int ERROR_DS_SUBREF_MUST_HAVE_PARENT = (int)8356L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_SUBREF_MUST_HAVE_PARENT 8356
     * }
     */
    public static int ERROR_DS_SUBREF_MUST_HAVE_PARENT() {
        return ERROR_DS_SUBREF_MUST_HAVE_PARENT;
    }
    private static final int ERROR_DS_NCNAME_MUST_BE_NC = (int)8357L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NCNAME_MUST_BE_NC 8357
     * }
     */
    public static int ERROR_DS_NCNAME_MUST_BE_NC() {
        return ERROR_DS_NCNAME_MUST_BE_NC;
    }
    private static final int ERROR_DS_CANT_ADD_SYSTEM_ONLY = (int)8358L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CANT_ADD_SYSTEM_ONLY 8358
     * }
     */
    public static int ERROR_DS_CANT_ADD_SYSTEM_ONLY() {
        return ERROR_DS_CANT_ADD_SYSTEM_ONLY;
    }
    private static final int ERROR_DS_CLASS_MUST_BE_CONCRETE = (int)8359L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CLASS_MUST_BE_CONCRETE 8359
     * }
     */
    public static int ERROR_DS_CLASS_MUST_BE_CONCRETE() {
        return ERROR_DS_CLASS_MUST_BE_CONCRETE;
    }
    private static final int ERROR_DS_INVALID_DMD = (int)8360L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_INVALID_DMD 8360
     * }
     */
    public static int ERROR_DS_INVALID_DMD() {
        return ERROR_DS_INVALID_DMD;
    }
    private static final int ERROR_DS_OBJ_GUID_EXISTS = (int)8361L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_OBJ_GUID_EXISTS 8361
     * }
     */
    public static int ERROR_DS_OBJ_GUID_EXISTS() {
        return ERROR_DS_OBJ_GUID_EXISTS;
    }
    private static final int ERROR_DS_NOT_ON_BACKLINK = (int)8362L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NOT_ON_BACKLINK 8362
     * }
     */
    public static int ERROR_DS_NOT_ON_BACKLINK() {
        return ERROR_DS_NOT_ON_BACKLINK;
    }
    private static final int ERROR_DS_NO_CROSSREF_FOR_NC = (int)8363L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NO_CROSSREF_FOR_NC 8363
     * }
     */
    public static int ERROR_DS_NO_CROSSREF_FOR_NC() {
        return ERROR_DS_NO_CROSSREF_FOR_NC;
    }
    private static final int ERROR_DS_SHUTTING_DOWN = (int)8364L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_SHUTTING_DOWN 8364
     * }
     */
    public static int ERROR_DS_SHUTTING_DOWN() {
        return ERROR_DS_SHUTTING_DOWN;
    }
    private static final int ERROR_DS_UNKNOWN_OPERATION = (int)8365L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_UNKNOWN_OPERATION 8365
     * }
     */
    public static int ERROR_DS_UNKNOWN_OPERATION() {
        return ERROR_DS_UNKNOWN_OPERATION;
    }
    private static final int ERROR_DS_INVALID_ROLE_OWNER = (int)8366L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_INVALID_ROLE_OWNER 8366
     * }
     */
    public static int ERROR_DS_INVALID_ROLE_OWNER() {
        return ERROR_DS_INVALID_ROLE_OWNER;
    }
    private static final int ERROR_DS_COULDNT_CONTACT_FSMO = (int)8367L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_COULDNT_CONTACT_FSMO 8367
     * }
     */
    public static int ERROR_DS_COULDNT_CONTACT_FSMO() {
        return ERROR_DS_COULDNT_CONTACT_FSMO;
    }
    private static final int ERROR_DS_CROSS_NC_DN_RENAME = (int)8368L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CROSS_NC_DN_RENAME 8368
     * }
     */
    public static int ERROR_DS_CROSS_NC_DN_RENAME() {
        return ERROR_DS_CROSS_NC_DN_RENAME;
    }
    private static final int ERROR_DS_CANT_MOD_SYSTEM_ONLY = (int)8369L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CANT_MOD_SYSTEM_ONLY 8369
     * }
     */
    public static int ERROR_DS_CANT_MOD_SYSTEM_ONLY() {
        return ERROR_DS_CANT_MOD_SYSTEM_ONLY;
    }
    private static final int ERROR_DS_REPLICATOR_ONLY = (int)8370L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_REPLICATOR_ONLY 8370
     * }
     */
    public static int ERROR_DS_REPLICATOR_ONLY() {
        return ERROR_DS_REPLICATOR_ONLY;
    }
    private static final int ERROR_DS_OBJ_CLASS_NOT_DEFINED = (int)8371L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_OBJ_CLASS_NOT_DEFINED 8371
     * }
     */
    public static int ERROR_DS_OBJ_CLASS_NOT_DEFINED() {
        return ERROR_DS_OBJ_CLASS_NOT_DEFINED;
    }
    private static final int ERROR_DS_OBJ_CLASS_NOT_SUBCLASS = (int)8372L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_OBJ_CLASS_NOT_SUBCLASS 8372
     * }
     */
    public static int ERROR_DS_OBJ_CLASS_NOT_SUBCLASS() {
        return ERROR_DS_OBJ_CLASS_NOT_SUBCLASS;
    }
    private static final int ERROR_DS_NAME_REFERENCE_INVALID = (int)8373L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NAME_REFERENCE_INVALID 8373
     * }
     */
    public static int ERROR_DS_NAME_REFERENCE_INVALID() {
        return ERROR_DS_NAME_REFERENCE_INVALID;
    }
    private static final int ERROR_DS_CROSS_REF_EXISTS = (int)8374L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CROSS_REF_EXISTS 8374
     * }
     */
    public static int ERROR_DS_CROSS_REF_EXISTS() {
        return ERROR_DS_CROSS_REF_EXISTS;
    }
    private static final int ERROR_DS_CANT_DEL_MASTER_CROSSREF = (int)8375L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CANT_DEL_MASTER_CROSSREF 8375
     * }
     */
    public static int ERROR_DS_CANT_DEL_MASTER_CROSSREF() {
        return ERROR_DS_CANT_DEL_MASTER_CROSSREF;
    }
    private static final int ERROR_DS_SUBTREE_NOTIFY_NOT_NC_HEAD = (int)8376L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_SUBTREE_NOTIFY_NOT_NC_HEAD 8376
     * }
     */
    public static int ERROR_DS_SUBTREE_NOTIFY_NOT_NC_HEAD() {
        return ERROR_DS_SUBTREE_NOTIFY_NOT_NC_HEAD;
    }
    private static final int ERROR_DS_NOTIFY_FILTER_TOO_COMPLEX = (int)8377L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NOTIFY_FILTER_TOO_COMPLEX 8377
     * }
     */
    public static int ERROR_DS_NOTIFY_FILTER_TOO_COMPLEX() {
        return ERROR_DS_NOTIFY_FILTER_TOO_COMPLEX;
    }
    private static final int ERROR_DS_DUP_RDN = (int)8378L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DUP_RDN 8378
     * }
     */
    public static int ERROR_DS_DUP_RDN() {
        return ERROR_DS_DUP_RDN;
    }
    private static final int ERROR_DS_DUP_OID = (int)8379L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DUP_OID 8379
     * }
     */
    public static int ERROR_DS_DUP_OID() {
        return ERROR_DS_DUP_OID;
    }
    private static final int ERROR_DS_DUP_MAPI_ID = (int)8380L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DUP_MAPI_ID 8380
     * }
     */
    public static int ERROR_DS_DUP_MAPI_ID() {
        return ERROR_DS_DUP_MAPI_ID;
    }
    private static final int ERROR_DS_DUP_SCHEMA_ID_GUID = (int)8381L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DUP_SCHEMA_ID_GUID 8381
     * }
     */
    public static int ERROR_DS_DUP_SCHEMA_ID_GUID() {
        return ERROR_DS_DUP_SCHEMA_ID_GUID;
    }
    private static final int ERROR_DS_DUP_LDAP_DISPLAY_NAME = (int)8382L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DUP_LDAP_DISPLAY_NAME 8382
     * }
     */
    public static int ERROR_DS_DUP_LDAP_DISPLAY_NAME() {
        return ERROR_DS_DUP_LDAP_DISPLAY_NAME;
    }
    private static final int ERROR_DS_SEMANTIC_ATT_TEST = (int)8383L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_SEMANTIC_ATT_TEST 8383
     * }
     */
    public static int ERROR_DS_SEMANTIC_ATT_TEST() {
        return ERROR_DS_SEMANTIC_ATT_TEST;
    }
    private static final int ERROR_DS_SYNTAX_MISMATCH = (int)8384L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_SYNTAX_MISMATCH 8384
     * }
     */
    public static int ERROR_DS_SYNTAX_MISMATCH() {
        return ERROR_DS_SYNTAX_MISMATCH;
    }
    private static final int ERROR_DS_EXISTS_IN_MUST_HAVE = (int)8385L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_EXISTS_IN_MUST_HAVE 8385
     * }
     */
    public static int ERROR_DS_EXISTS_IN_MUST_HAVE() {
        return ERROR_DS_EXISTS_IN_MUST_HAVE;
    }
    private static final int ERROR_DS_EXISTS_IN_MAY_HAVE = (int)8386L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_EXISTS_IN_MAY_HAVE 8386
     * }
     */
    public static int ERROR_DS_EXISTS_IN_MAY_HAVE() {
        return ERROR_DS_EXISTS_IN_MAY_HAVE;
    }
    private static final int ERROR_DS_NONEXISTENT_MAY_HAVE = (int)8387L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NONEXISTENT_MAY_HAVE 8387
     * }
     */
    public static int ERROR_DS_NONEXISTENT_MAY_HAVE() {
        return ERROR_DS_NONEXISTENT_MAY_HAVE;
    }
    private static final int ERROR_DS_NONEXISTENT_MUST_HAVE = (int)8388L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NONEXISTENT_MUST_HAVE 8388
     * }
     */
    public static int ERROR_DS_NONEXISTENT_MUST_HAVE() {
        return ERROR_DS_NONEXISTENT_MUST_HAVE;
    }
    private static final int ERROR_DS_AUX_CLS_TEST_FAIL = (int)8389L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_AUX_CLS_TEST_FAIL 8389
     * }
     */
    public static int ERROR_DS_AUX_CLS_TEST_FAIL() {
        return ERROR_DS_AUX_CLS_TEST_FAIL;
    }
    private static final int ERROR_DS_NONEXISTENT_POSS_SUP = (int)8390L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NONEXISTENT_POSS_SUP 8390
     * }
     */
    public static int ERROR_DS_NONEXISTENT_POSS_SUP() {
        return ERROR_DS_NONEXISTENT_POSS_SUP;
    }
    private static final int ERROR_DS_SUB_CLS_TEST_FAIL = (int)8391L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_SUB_CLS_TEST_FAIL 8391
     * }
     */
    public static int ERROR_DS_SUB_CLS_TEST_FAIL() {
        return ERROR_DS_SUB_CLS_TEST_FAIL;
    }
    private static final int ERROR_DS_BAD_RDN_ATT_ID_SYNTAX = (int)8392L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_BAD_RDN_ATT_ID_SYNTAX 8392
     * }
     */
    public static int ERROR_DS_BAD_RDN_ATT_ID_SYNTAX() {
        return ERROR_DS_BAD_RDN_ATT_ID_SYNTAX;
    }
    private static final int ERROR_DS_EXISTS_IN_AUX_CLS = (int)8393L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_EXISTS_IN_AUX_CLS 8393
     * }
     */
    public static int ERROR_DS_EXISTS_IN_AUX_CLS() {
        return ERROR_DS_EXISTS_IN_AUX_CLS;
    }
    private static final int ERROR_DS_EXISTS_IN_SUB_CLS = (int)8394L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_EXISTS_IN_SUB_CLS 8394
     * }
     */
    public static int ERROR_DS_EXISTS_IN_SUB_CLS() {
        return ERROR_DS_EXISTS_IN_SUB_CLS;
    }
    private static final int ERROR_DS_EXISTS_IN_POSS_SUP = (int)8395L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_EXISTS_IN_POSS_SUP 8395
     * }
     */
    public static int ERROR_DS_EXISTS_IN_POSS_SUP() {
        return ERROR_DS_EXISTS_IN_POSS_SUP;
    }
    private static final int ERROR_DS_RECALCSCHEMA_FAILED = (int)8396L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_RECALCSCHEMA_FAILED 8396
     * }
     */
    public static int ERROR_DS_RECALCSCHEMA_FAILED() {
        return ERROR_DS_RECALCSCHEMA_FAILED;
    }
    private static final int ERROR_DS_TREE_DELETE_NOT_FINISHED = (int)8397L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_TREE_DELETE_NOT_FINISHED 8397
     * }
     */
    public static int ERROR_DS_TREE_DELETE_NOT_FINISHED() {
        return ERROR_DS_TREE_DELETE_NOT_FINISHED;
    }
    private static final int ERROR_DS_CANT_DELETE = (int)8398L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CANT_DELETE 8398
     * }
     */
    public static int ERROR_DS_CANT_DELETE() {
        return ERROR_DS_CANT_DELETE;
    }
    private static final int ERROR_DS_ATT_SCHEMA_REQ_ID = (int)8399L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_ATT_SCHEMA_REQ_ID 8399
     * }
     */
    public static int ERROR_DS_ATT_SCHEMA_REQ_ID() {
        return ERROR_DS_ATT_SCHEMA_REQ_ID;
    }
    private static final int ERROR_DS_BAD_ATT_SCHEMA_SYNTAX = (int)8400L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_BAD_ATT_SCHEMA_SYNTAX 8400
     * }
     */
    public static int ERROR_DS_BAD_ATT_SCHEMA_SYNTAX() {
        return ERROR_DS_BAD_ATT_SCHEMA_SYNTAX;
    }
    private static final int ERROR_DS_CANT_CACHE_ATT = (int)8401L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CANT_CACHE_ATT 8401
     * }
     */
    public static int ERROR_DS_CANT_CACHE_ATT() {
        return ERROR_DS_CANT_CACHE_ATT;
    }
    private static final int ERROR_DS_CANT_CACHE_CLASS = (int)8402L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CANT_CACHE_CLASS 8402
     * }
     */
    public static int ERROR_DS_CANT_CACHE_CLASS() {
        return ERROR_DS_CANT_CACHE_CLASS;
    }
    private static final int ERROR_DS_CANT_REMOVE_ATT_CACHE = (int)8403L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CANT_REMOVE_ATT_CACHE 8403
     * }
     */
    public static int ERROR_DS_CANT_REMOVE_ATT_CACHE() {
        return ERROR_DS_CANT_REMOVE_ATT_CACHE;
    }
    private static final int ERROR_DS_CANT_REMOVE_CLASS_CACHE = (int)8404L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CANT_REMOVE_CLASS_CACHE 8404
     * }
     */
    public static int ERROR_DS_CANT_REMOVE_CLASS_CACHE() {
        return ERROR_DS_CANT_REMOVE_CLASS_CACHE;
    }
    private static final int ERROR_DS_CANT_RETRIEVE_DN = (int)8405L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CANT_RETRIEVE_DN 8405
     * }
     */
    public static int ERROR_DS_CANT_RETRIEVE_DN() {
        return ERROR_DS_CANT_RETRIEVE_DN;
    }
    private static final int ERROR_DS_MISSING_SUPREF = (int)8406L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_MISSING_SUPREF 8406
     * }
     */
    public static int ERROR_DS_MISSING_SUPREF() {
        return ERROR_DS_MISSING_SUPREF;
    }
    private static final int ERROR_DS_CANT_RETRIEVE_INSTANCE = (int)8407L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CANT_RETRIEVE_INSTANCE 8407
     * }
     */
    public static int ERROR_DS_CANT_RETRIEVE_INSTANCE() {
        return ERROR_DS_CANT_RETRIEVE_INSTANCE;
    }
    private static final int ERROR_DS_CODE_INCONSISTENCY = (int)8408L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CODE_INCONSISTENCY 8408
     * }
     */
    public static int ERROR_DS_CODE_INCONSISTENCY() {
        return ERROR_DS_CODE_INCONSISTENCY;
    }
    private static final int ERROR_DS_DATABASE_ERROR = (int)8409L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DATABASE_ERROR 8409
     * }
     */
    public static int ERROR_DS_DATABASE_ERROR() {
        return ERROR_DS_DATABASE_ERROR;
    }
    private static final int ERROR_DS_GOVERNSID_MISSING = (int)8410L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_GOVERNSID_MISSING 8410
     * }
     */
    public static int ERROR_DS_GOVERNSID_MISSING() {
        return ERROR_DS_GOVERNSID_MISSING;
    }
    private static final int ERROR_DS_MISSING_EXPECTED_ATT = (int)8411L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_MISSING_EXPECTED_ATT 8411
     * }
     */
    public static int ERROR_DS_MISSING_EXPECTED_ATT() {
        return ERROR_DS_MISSING_EXPECTED_ATT;
    }
    private static final int ERROR_DS_NCNAME_MISSING_CR_REF = (int)8412L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NCNAME_MISSING_CR_REF 8412
     * }
     */
    public static int ERROR_DS_NCNAME_MISSING_CR_REF() {
        return ERROR_DS_NCNAME_MISSING_CR_REF;
    }
    private static final int ERROR_DS_SECURITY_CHECKING_ERROR = (int)8413L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_SECURITY_CHECKING_ERROR 8413
     * }
     */
    public static int ERROR_DS_SECURITY_CHECKING_ERROR() {
        return ERROR_DS_SECURITY_CHECKING_ERROR;
    }
    private static final int ERROR_DS_SCHEMA_NOT_LOADED = (int)8414L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_SCHEMA_NOT_LOADED 8414
     * }
     */
    public static int ERROR_DS_SCHEMA_NOT_LOADED() {
        return ERROR_DS_SCHEMA_NOT_LOADED;
    }
    private static final int ERROR_DS_SCHEMA_ALLOC_FAILED = (int)8415L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_SCHEMA_ALLOC_FAILED 8415
     * }
     */
    public static int ERROR_DS_SCHEMA_ALLOC_FAILED() {
        return ERROR_DS_SCHEMA_ALLOC_FAILED;
    }
    private static final int ERROR_DS_ATT_SCHEMA_REQ_SYNTAX = (int)8416L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_ATT_SCHEMA_REQ_SYNTAX 8416
     * }
     */
    public static int ERROR_DS_ATT_SCHEMA_REQ_SYNTAX() {
        return ERROR_DS_ATT_SCHEMA_REQ_SYNTAX;
    }
    private static final int ERROR_DS_GCVERIFY_ERROR = (int)8417L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_GCVERIFY_ERROR 8417
     * }
     */
    public static int ERROR_DS_GCVERIFY_ERROR() {
        return ERROR_DS_GCVERIFY_ERROR;
    }
    private static final int ERROR_DS_DRA_SCHEMA_MISMATCH = (int)8418L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DRA_SCHEMA_MISMATCH 8418
     * }
     */
    public static int ERROR_DS_DRA_SCHEMA_MISMATCH() {
        return ERROR_DS_DRA_SCHEMA_MISMATCH;
    }
    private static final int ERROR_DS_CANT_FIND_DSA_OBJ = (int)8419L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CANT_FIND_DSA_OBJ 8419
     * }
     */
    public static int ERROR_DS_CANT_FIND_DSA_OBJ() {
        return ERROR_DS_CANT_FIND_DSA_OBJ;
    }
    private static final int ERROR_DS_CANT_FIND_EXPECTED_NC = (int)8420L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CANT_FIND_EXPECTED_NC 8420
     * }
     */
    public static int ERROR_DS_CANT_FIND_EXPECTED_NC() {
        return ERROR_DS_CANT_FIND_EXPECTED_NC;
    }
    private static final int ERROR_DS_CANT_FIND_NC_IN_CACHE = (int)8421L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CANT_FIND_NC_IN_CACHE 8421
     * }
     */
    public static int ERROR_DS_CANT_FIND_NC_IN_CACHE() {
        return ERROR_DS_CANT_FIND_NC_IN_CACHE;
    }
    private static final int ERROR_DS_CANT_RETRIEVE_CHILD = (int)8422L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CANT_RETRIEVE_CHILD 8422
     * }
     */
    public static int ERROR_DS_CANT_RETRIEVE_CHILD() {
        return ERROR_DS_CANT_RETRIEVE_CHILD;
    }
    private static final int ERROR_DS_SECURITY_ILLEGAL_MODIFY = (int)8423L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_SECURITY_ILLEGAL_MODIFY 8423
     * }
     */
    public static int ERROR_DS_SECURITY_ILLEGAL_MODIFY() {
        return ERROR_DS_SECURITY_ILLEGAL_MODIFY;
    }
    private static final int ERROR_DS_CANT_REPLACE_HIDDEN_REC = (int)8424L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CANT_REPLACE_HIDDEN_REC 8424
     * }
     */
    public static int ERROR_DS_CANT_REPLACE_HIDDEN_REC() {
        return ERROR_DS_CANT_REPLACE_HIDDEN_REC;
    }
    private static final int ERROR_DS_BAD_HIERARCHY_FILE = (int)8425L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_BAD_HIERARCHY_FILE 8425
     * }
     */
    public static int ERROR_DS_BAD_HIERARCHY_FILE() {
        return ERROR_DS_BAD_HIERARCHY_FILE;
    }
    private static final int ERROR_DS_BUILD_HIERARCHY_TABLE_FAILED = (int)8426L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_BUILD_HIERARCHY_TABLE_FAILED 8426
     * }
     */
    public static int ERROR_DS_BUILD_HIERARCHY_TABLE_FAILED() {
        return ERROR_DS_BUILD_HIERARCHY_TABLE_FAILED;
    }
    private static final int ERROR_DS_CONFIG_PARAM_MISSING = (int)8427L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CONFIG_PARAM_MISSING 8427
     * }
     */
    public static int ERROR_DS_CONFIG_PARAM_MISSING() {
        return ERROR_DS_CONFIG_PARAM_MISSING;
    }
    private static final int ERROR_DS_COUNTING_AB_INDICES_FAILED = (int)8428L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_COUNTING_AB_INDICES_FAILED 8428
     * }
     */
    public static int ERROR_DS_COUNTING_AB_INDICES_FAILED() {
        return ERROR_DS_COUNTING_AB_INDICES_FAILED;
    }
    private static final int ERROR_DS_HIERARCHY_TABLE_MALLOC_FAILED = (int)8429L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_HIERARCHY_TABLE_MALLOC_FAILED 8429
     * }
     */
    public static int ERROR_DS_HIERARCHY_TABLE_MALLOC_FAILED() {
        return ERROR_DS_HIERARCHY_TABLE_MALLOC_FAILED;
    }
    private static final int ERROR_DS_INTERNAL_FAILURE = (int)8430L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_INTERNAL_FAILURE 8430
     * }
     */
    public static int ERROR_DS_INTERNAL_FAILURE() {
        return ERROR_DS_INTERNAL_FAILURE;
    }
    private static final int ERROR_DS_UNKNOWN_ERROR = (int)8431L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_UNKNOWN_ERROR 8431
     * }
     */
    public static int ERROR_DS_UNKNOWN_ERROR() {
        return ERROR_DS_UNKNOWN_ERROR;
    }
    private static final int ERROR_DS_ROOT_REQUIRES_CLASS_TOP = (int)8432L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_ROOT_REQUIRES_CLASS_TOP 8432
     * }
     */
    public static int ERROR_DS_ROOT_REQUIRES_CLASS_TOP() {
        return ERROR_DS_ROOT_REQUIRES_CLASS_TOP;
    }
    private static final int ERROR_DS_REFUSING_FSMO_ROLES = (int)8433L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_REFUSING_FSMO_ROLES 8433
     * }
     */
    public static int ERROR_DS_REFUSING_FSMO_ROLES() {
        return ERROR_DS_REFUSING_FSMO_ROLES;
    }
    private static final int ERROR_DS_MISSING_FSMO_SETTINGS = (int)8434L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_MISSING_FSMO_SETTINGS 8434
     * }
     */
    public static int ERROR_DS_MISSING_FSMO_SETTINGS() {
        return ERROR_DS_MISSING_FSMO_SETTINGS;
    }
    private static final int ERROR_DS_UNABLE_TO_SURRENDER_ROLES = (int)8435L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_UNABLE_TO_SURRENDER_ROLES 8435
     * }
     */
    public static int ERROR_DS_UNABLE_TO_SURRENDER_ROLES() {
        return ERROR_DS_UNABLE_TO_SURRENDER_ROLES;
    }
    private static final int ERROR_DS_DRA_GENERIC = (int)8436L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DRA_GENERIC 8436
     * }
     */
    public static int ERROR_DS_DRA_GENERIC() {
        return ERROR_DS_DRA_GENERIC;
    }
    private static final int ERROR_DS_DRA_INVALID_PARAMETER = (int)8437L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DRA_INVALID_PARAMETER 8437
     * }
     */
    public static int ERROR_DS_DRA_INVALID_PARAMETER() {
        return ERROR_DS_DRA_INVALID_PARAMETER;
    }
    private static final int ERROR_DS_DRA_BUSY = (int)8438L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DRA_BUSY 8438
     * }
     */
    public static int ERROR_DS_DRA_BUSY() {
        return ERROR_DS_DRA_BUSY;
    }
    private static final int ERROR_DS_DRA_BAD_DN = (int)8439L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DRA_BAD_DN 8439
     * }
     */
    public static int ERROR_DS_DRA_BAD_DN() {
        return ERROR_DS_DRA_BAD_DN;
    }
    private static final int ERROR_DS_DRA_BAD_NC = (int)8440L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DRA_BAD_NC 8440
     * }
     */
    public static int ERROR_DS_DRA_BAD_NC() {
        return ERROR_DS_DRA_BAD_NC;
    }
    private static final int ERROR_DS_DRA_DN_EXISTS = (int)8441L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DRA_DN_EXISTS 8441
     * }
     */
    public static int ERROR_DS_DRA_DN_EXISTS() {
        return ERROR_DS_DRA_DN_EXISTS;
    }
    private static final int ERROR_DS_DRA_INTERNAL_ERROR = (int)8442L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DRA_INTERNAL_ERROR 8442
     * }
     */
    public static int ERROR_DS_DRA_INTERNAL_ERROR() {
        return ERROR_DS_DRA_INTERNAL_ERROR;
    }
    private static final int ERROR_DS_DRA_INCONSISTENT_DIT = (int)8443L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DRA_INCONSISTENT_DIT 8443
     * }
     */
    public static int ERROR_DS_DRA_INCONSISTENT_DIT() {
        return ERROR_DS_DRA_INCONSISTENT_DIT;
    }
    private static final int ERROR_DS_DRA_CONNECTION_FAILED = (int)8444L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DRA_CONNECTION_FAILED 8444
     * }
     */
    public static int ERROR_DS_DRA_CONNECTION_FAILED() {
        return ERROR_DS_DRA_CONNECTION_FAILED;
    }
    private static final int ERROR_DS_DRA_BAD_INSTANCE_TYPE = (int)8445L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DRA_BAD_INSTANCE_TYPE 8445
     * }
     */
    public static int ERROR_DS_DRA_BAD_INSTANCE_TYPE() {
        return ERROR_DS_DRA_BAD_INSTANCE_TYPE;
    }
    private static final int ERROR_DS_DRA_OUT_OF_MEM = (int)8446L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DRA_OUT_OF_MEM 8446
     * }
     */
    public static int ERROR_DS_DRA_OUT_OF_MEM() {
        return ERROR_DS_DRA_OUT_OF_MEM;
    }
    private static final int ERROR_DS_DRA_MAIL_PROBLEM = (int)8447L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DRA_MAIL_PROBLEM 8447
     * }
     */
    public static int ERROR_DS_DRA_MAIL_PROBLEM() {
        return ERROR_DS_DRA_MAIL_PROBLEM;
    }
    private static final int ERROR_DS_DRA_REF_ALREADY_EXISTS = (int)8448L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DRA_REF_ALREADY_EXISTS 8448
     * }
     */
    public static int ERROR_DS_DRA_REF_ALREADY_EXISTS() {
        return ERROR_DS_DRA_REF_ALREADY_EXISTS;
    }
    private static final int ERROR_DS_DRA_REF_NOT_FOUND = (int)8449L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DRA_REF_NOT_FOUND 8449
     * }
     */
    public static int ERROR_DS_DRA_REF_NOT_FOUND() {
        return ERROR_DS_DRA_REF_NOT_FOUND;
    }
    private static final int ERROR_DS_DRA_OBJ_IS_REP_SOURCE = (int)8450L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DRA_OBJ_IS_REP_SOURCE 8450
     * }
     */
    public static int ERROR_DS_DRA_OBJ_IS_REP_SOURCE() {
        return ERROR_DS_DRA_OBJ_IS_REP_SOURCE;
    }
    private static final int ERROR_DS_DRA_DB_ERROR = (int)8451L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DRA_DB_ERROR 8451
     * }
     */
    public static int ERROR_DS_DRA_DB_ERROR() {
        return ERROR_DS_DRA_DB_ERROR;
    }
    private static final int ERROR_DS_DRA_NO_REPLICA = (int)8452L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DRA_NO_REPLICA 8452
     * }
     */
    public static int ERROR_DS_DRA_NO_REPLICA() {
        return ERROR_DS_DRA_NO_REPLICA;
    }
    private static final int ERROR_DS_DRA_ACCESS_DENIED = (int)8453L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DRA_ACCESS_DENIED 8453
     * }
     */
    public static int ERROR_DS_DRA_ACCESS_DENIED() {
        return ERROR_DS_DRA_ACCESS_DENIED;
    }
    private static final int ERROR_DS_DRA_NOT_SUPPORTED = (int)8454L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DRA_NOT_SUPPORTED 8454
     * }
     */
    public static int ERROR_DS_DRA_NOT_SUPPORTED() {
        return ERROR_DS_DRA_NOT_SUPPORTED;
    }
    private static final int ERROR_DS_DRA_RPC_CANCELLED = (int)8455L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DRA_RPC_CANCELLED 8455
     * }
     */
    public static int ERROR_DS_DRA_RPC_CANCELLED() {
        return ERROR_DS_DRA_RPC_CANCELLED;
    }
    private static final int ERROR_DS_DRA_SOURCE_DISABLED = (int)8456L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DRA_SOURCE_DISABLED 8456
     * }
     */
    public static int ERROR_DS_DRA_SOURCE_DISABLED() {
        return ERROR_DS_DRA_SOURCE_DISABLED;
    }
    private static final int ERROR_DS_DRA_SINK_DISABLED = (int)8457L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DRA_SINK_DISABLED 8457
     * }
     */
    public static int ERROR_DS_DRA_SINK_DISABLED() {
        return ERROR_DS_DRA_SINK_DISABLED;
    }
    private static final int ERROR_DS_DRA_NAME_COLLISION = (int)8458L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DRA_NAME_COLLISION 8458
     * }
     */
    public static int ERROR_DS_DRA_NAME_COLLISION() {
        return ERROR_DS_DRA_NAME_COLLISION;
    }
    private static final int ERROR_DS_DRA_SOURCE_REINSTALLED = (int)8459L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DRA_SOURCE_REINSTALLED 8459
     * }
     */
    public static int ERROR_DS_DRA_SOURCE_REINSTALLED() {
        return ERROR_DS_DRA_SOURCE_REINSTALLED;
    }
    private static final int ERROR_DS_DRA_MISSING_PARENT = (int)8460L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DRA_MISSING_PARENT 8460
     * }
     */
    public static int ERROR_DS_DRA_MISSING_PARENT() {
        return ERROR_DS_DRA_MISSING_PARENT;
    }
    private static final int ERROR_DS_DRA_PREEMPTED = (int)8461L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DRA_PREEMPTED 8461
     * }
     */
    public static int ERROR_DS_DRA_PREEMPTED() {
        return ERROR_DS_DRA_PREEMPTED;
    }
    private static final int ERROR_DS_DRA_ABANDON_SYNC = (int)8462L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DRA_ABANDON_SYNC 8462
     * }
     */
    public static int ERROR_DS_DRA_ABANDON_SYNC() {
        return ERROR_DS_DRA_ABANDON_SYNC;
    }
    private static final int ERROR_DS_DRA_SHUTDOWN = (int)8463L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DRA_SHUTDOWN 8463
     * }
     */
    public static int ERROR_DS_DRA_SHUTDOWN() {
        return ERROR_DS_DRA_SHUTDOWN;
    }
    private static final int ERROR_DS_DRA_INCOMPATIBLE_PARTIAL_SET = (int)8464L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DRA_INCOMPATIBLE_PARTIAL_SET 8464
     * }
     */
    public static int ERROR_DS_DRA_INCOMPATIBLE_PARTIAL_SET() {
        return ERROR_DS_DRA_INCOMPATIBLE_PARTIAL_SET;
    }
    private static final int ERROR_DS_DRA_SOURCE_IS_PARTIAL_REPLICA = (int)8465L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DRA_SOURCE_IS_PARTIAL_REPLICA 8465
     * }
     */
    public static int ERROR_DS_DRA_SOURCE_IS_PARTIAL_REPLICA() {
        return ERROR_DS_DRA_SOURCE_IS_PARTIAL_REPLICA;
    }
    private static final int ERROR_DS_DRA_EXTN_CONNECTION_FAILED = (int)8466L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DRA_EXTN_CONNECTION_FAILED 8466
     * }
     */
    public static int ERROR_DS_DRA_EXTN_CONNECTION_FAILED() {
        return ERROR_DS_DRA_EXTN_CONNECTION_FAILED;
    }
    private static final int ERROR_DS_INSTALL_SCHEMA_MISMATCH = (int)8467L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_INSTALL_SCHEMA_MISMATCH 8467
     * }
     */
    public static int ERROR_DS_INSTALL_SCHEMA_MISMATCH() {
        return ERROR_DS_INSTALL_SCHEMA_MISMATCH;
    }
    private static final int ERROR_DS_DUP_LINK_ID = (int)8468L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DUP_LINK_ID 8468
     * }
     */
    public static int ERROR_DS_DUP_LINK_ID() {
        return ERROR_DS_DUP_LINK_ID;
    }
    private static final int ERROR_DS_NAME_ERROR_RESOLVING = (int)8469L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NAME_ERROR_RESOLVING 8469
     * }
     */
    public static int ERROR_DS_NAME_ERROR_RESOLVING() {
        return ERROR_DS_NAME_ERROR_RESOLVING;
    }
    private static final int ERROR_DS_NAME_ERROR_NOT_FOUND = (int)8470L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NAME_ERROR_NOT_FOUND 8470
     * }
     */
    public static int ERROR_DS_NAME_ERROR_NOT_FOUND() {
        return ERROR_DS_NAME_ERROR_NOT_FOUND;
    }
    private static final int ERROR_DS_NAME_ERROR_NOT_UNIQUE = (int)8471L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NAME_ERROR_NOT_UNIQUE 8471
     * }
     */
    public static int ERROR_DS_NAME_ERROR_NOT_UNIQUE() {
        return ERROR_DS_NAME_ERROR_NOT_UNIQUE;
    }
    private static final int ERROR_DS_NAME_ERROR_NO_MAPPING = (int)8472L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NAME_ERROR_NO_MAPPING 8472
     * }
     */
    public static int ERROR_DS_NAME_ERROR_NO_MAPPING() {
        return ERROR_DS_NAME_ERROR_NO_MAPPING;
    }
    private static final int ERROR_DS_NAME_ERROR_DOMAIN_ONLY = (int)8473L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NAME_ERROR_DOMAIN_ONLY 8473
     * }
     */
    public static int ERROR_DS_NAME_ERROR_DOMAIN_ONLY() {
        return ERROR_DS_NAME_ERROR_DOMAIN_ONLY;
    }
    private static final int ERROR_DS_NAME_ERROR_NO_SYNTACTICAL_MAPPING = (int)8474L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NAME_ERROR_NO_SYNTACTICAL_MAPPING 8474
     * }
     */
    public static int ERROR_DS_NAME_ERROR_NO_SYNTACTICAL_MAPPING() {
        return ERROR_DS_NAME_ERROR_NO_SYNTACTICAL_MAPPING;
    }
    private static final int ERROR_DS_CONSTRUCTED_ATT_MOD = (int)8475L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CONSTRUCTED_ATT_MOD 8475
     * }
     */
    public static int ERROR_DS_CONSTRUCTED_ATT_MOD() {
        return ERROR_DS_CONSTRUCTED_ATT_MOD;
    }
    private static final int ERROR_DS_WRONG_OM_OBJ_CLASS = (int)8476L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_WRONG_OM_OBJ_CLASS 8476
     * }
     */
    public static int ERROR_DS_WRONG_OM_OBJ_CLASS() {
        return ERROR_DS_WRONG_OM_OBJ_CLASS;
    }
    private static final int ERROR_DS_DRA_REPL_PENDING = (int)8477L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DRA_REPL_PENDING 8477
     * }
     */
    public static int ERROR_DS_DRA_REPL_PENDING() {
        return ERROR_DS_DRA_REPL_PENDING;
    }
    private static final int ERROR_DS_DS_REQUIRED = (int)8478L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DS_REQUIRED 8478
     * }
     */
    public static int ERROR_DS_DS_REQUIRED() {
        return ERROR_DS_DS_REQUIRED;
    }
    private static final int ERROR_DS_INVALID_LDAP_DISPLAY_NAME = (int)8479L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_INVALID_LDAP_DISPLAY_NAME 8479
     * }
     */
    public static int ERROR_DS_INVALID_LDAP_DISPLAY_NAME() {
        return ERROR_DS_INVALID_LDAP_DISPLAY_NAME;
    }
    private static final int ERROR_DS_NON_BASE_SEARCH = (int)8480L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NON_BASE_SEARCH 8480
     * }
     */
    public static int ERROR_DS_NON_BASE_SEARCH() {
        return ERROR_DS_NON_BASE_SEARCH;
    }
    private static final int ERROR_DS_CANT_RETRIEVE_ATTS = (int)8481L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CANT_RETRIEVE_ATTS 8481
     * }
     */
    public static int ERROR_DS_CANT_RETRIEVE_ATTS() {
        return ERROR_DS_CANT_RETRIEVE_ATTS;
    }
    private static final int ERROR_DS_BACKLINK_WITHOUT_LINK = (int)8482L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_BACKLINK_WITHOUT_LINK 8482
     * }
     */
    public static int ERROR_DS_BACKLINK_WITHOUT_LINK() {
        return ERROR_DS_BACKLINK_WITHOUT_LINK;
    }
    private static final int ERROR_DS_EPOCH_MISMATCH = (int)8483L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_EPOCH_MISMATCH 8483
     * }
     */
    public static int ERROR_DS_EPOCH_MISMATCH() {
        return ERROR_DS_EPOCH_MISMATCH;
    }
    private static final int ERROR_DS_SRC_NAME_MISMATCH = (int)8484L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_SRC_NAME_MISMATCH 8484
     * }
     */
    public static int ERROR_DS_SRC_NAME_MISMATCH() {
        return ERROR_DS_SRC_NAME_MISMATCH;
    }
    private static final int ERROR_DS_SRC_AND_DST_NC_IDENTICAL = (int)8485L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_SRC_AND_DST_NC_IDENTICAL 8485
     * }
     */
    public static int ERROR_DS_SRC_AND_DST_NC_IDENTICAL() {
        return ERROR_DS_SRC_AND_DST_NC_IDENTICAL;
    }
    private static final int ERROR_DS_DST_NC_MISMATCH = (int)8486L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DST_NC_MISMATCH 8486
     * }
     */
    public static int ERROR_DS_DST_NC_MISMATCH() {
        return ERROR_DS_DST_NC_MISMATCH;
    }
    private static final int ERROR_DS_NOT_AUTHORITIVE_FOR_DST_NC = (int)8487L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NOT_AUTHORITIVE_FOR_DST_NC 8487
     * }
     */
    public static int ERROR_DS_NOT_AUTHORITIVE_FOR_DST_NC() {
        return ERROR_DS_NOT_AUTHORITIVE_FOR_DST_NC;
    }
    private static final int ERROR_DS_SRC_GUID_MISMATCH = (int)8488L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_SRC_GUID_MISMATCH 8488
     * }
     */
    public static int ERROR_DS_SRC_GUID_MISMATCH() {
        return ERROR_DS_SRC_GUID_MISMATCH;
    }
    private static final int ERROR_DS_CANT_MOVE_DELETED_OBJECT = (int)8489L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CANT_MOVE_DELETED_OBJECT 8489
     * }
     */
    public static int ERROR_DS_CANT_MOVE_DELETED_OBJECT() {
        return ERROR_DS_CANT_MOVE_DELETED_OBJECT;
    }
    private static final int ERROR_DS_PDC_OPERATION_IN_PROGRESS = (int)8490L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_PDC_OPERATION_IN_PROGRESS 8490
     * }
     */
    public static int ERROR_DS_PDC_OPERATION_IN_PROGRESS() {
        return ERROR_DS_PDC_OPERATION_IN_PROGRESS;
    }
    private static final int ERROR_DS_CROSS_DOMAIN_CLEANUP_REQD = (int)8491L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CROSS_DOMAIN_CLEANUP_REQD 8491
     * }
     */
    public static int ERROR_DS_CROSS_DOMAIN_CLEANUP_REQD() {
        return ERROR_DS_CROSS_DOMAIN_CLEANUP_REQD;
    }
    private static final int ERROR_DS_ILLEGAL_XDOM_MOVE_OPERATION = (int)8492L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_ILLEGAL_XDOM_MOVE_OPERATION 8492
     * }
     */
    public static int ERROR_DS_ILLEGAL_XDOM_MOVE_OPERATION() {
        return ERROR_DS_ILLEGAL_XDOM_MOVE_OPERATION;
    }
    private static final int ERROR_DS_CANT_WITH_ACCT_GROUP_MEMBERSHPS = (int)8493L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CANT_WITH_ACCT_GROUP_MEMBERSHPS 8493
     * }
     */
    public static int ERROR_DS_CANT_WITH_ACCT_GROUP_MEMBERSHPS() {
        return ERROR_DS_CANT_WITH_ACCT_GROUP_MEMBERSHPS;
    }
    private static final int ERROR_DS_NC_MUST_HAVE_NC_PARENT = (int)8494L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NC_MUST_HAVE_NC_PARENT 8494
     * }
     */
    public static int ERROR_DS_NC_MUST_HAVE_NC_PARENT() {
        return ERROR_DS_NC_MUST_HAVE_NC_PARENT;
    }
    private static final int ERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE = (int)8495L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE 8495
     * }
     */
    public static int ERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE() {
        return ERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE;
    }
    private static final int ERROR_DS_DST_DOMAIN_NOT_NATIVE = (int)8496L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DST_DOMAIN_NOT_NATIVE 8496
     * }
     */
    public static int ERROR_DS_DST_DOMAIN_NOT_NATIVE() {
        return ERROR_DS_DST_DOMAIN_NOT_NATIVE;
    }
    private static final int ERROR_DS_MISSING_INFRASTRUCTURE_CONTAINER = (int)8497L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_MISSING_INFRASTRUCTURE_CONTAINER 8497
     * }
     */
    public static int ERROR_DS_MISSING_INFRASTRUCTURE_CONTAINER() {
        return ERROR_DS_MISSING_INFRASTRUCTURE_CONTAINER;
    }
    private static final int ERROR_DS_CANT_MOVE_ACCOUNT_GROUP = (int)8498L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CANT_MOVE_ACCOUNT_GROUP 8498
     * }
     */
    public static int ERROR_DS_CANT_MOVE_ACCOUNT_GROUP() {
        return ERROR_DS_CANT_MOVE_ACCOUNT_GROUP;
    }
    private static final int ERROR_DS_CANT_MOVE_RESOURCE_GROUP = (int)8499L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CANT_MOVE_RESOURCE_GROUP 8499
     * }
     */
    public static int ERROR_DS_CANT_MOVE_RESOURCE_GROUP() {
        return ERROR_DS_CANT_MOVE_RESOURCE_GROUP;
    }
    private static final int ERROR_DS_INVALID_SEARCH_FLAG = (int)8500L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_INVALID_SEARCH_FLAG 8500
     * }
     */
    public static int ERROR_DS_INVALID_SEARCH_FLAG() {
        return ERROR_DS_INVALID_SEARCH_FLAG;
    }
    private static final int ERROR_DS_NO_TREE_DELETE_ABOVE_NC = (int)8501L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NO_TREE_DELETE_ABOVE_NC 8501
     * }
     */
    public static int ERROR_DS_NO_TREE_DELETE_ABOVE_NC() {
        return ERROR_DS_NO_TREE_DELETE_ABOVE_NC;
    }
    private static final int ERROR_DS_COULDNT_LOCK_TREE_FOR_DELETE = (int)8502L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_COULDNT_LOCK_TREE_FOR_DELETE 8502
     * }
     */
    public static int ERROR_DS_COULDNT_LOCK_TREE_FOR_DELETE() {
        return ERROR_DS_COULDNT_LOCK_TREE_FOR_DELETE;
    }
    private static final int ERROR_DS_COULDNT_IDENTIFY_OBJECTS_FOR_TREE_DELETE = (int)8503L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_COULDNT_IDENTIFY_OBJECTS_FOR_TREE_DELETE 8503
     * }
     */
    public static int ERROR_DS_COULDNT_IDENTIFY_OBJECTS_FOR_TREE_DELETE() {
        return ERROR_DS_COULDNT_IDENTIFY_OBJECTS_FOR_TREE_DELETE;
    }
    private static final int ERROR_DS_SAM_INIT_FAILURE = (int)8504L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_SAM_INIT_FAILURE 8504
     * }
     */
    public static int ERROR_DS_SAM_INIT_FAILURE() {
        return ERROR_DS_SAM_INIT_FAILURE;
    }
    private static final int ERROR_DS_SENSITIVE_GROUP_VIOLATION = (int)8505L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_SENSITIVE_GROUP_VIOLATION 8505
     * }
     */
    public static int ERROR_DS_SENSITIVE_GROUP_VIOLATION() {
        return ERROR_DS_SENSITIVE_GROUP_VIOLATION;
    }
    private static final int ERROR_DS_CANT_MOD_PRIMARYGROUPID = (int)8506L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CANT_MOD_PRIMARYGROUPID 8506
     * }
     */
    public static int ERROR_DS_CANT_MOD_PRIMARYGROUPID() {
        return ERROR_DS_CANT_MOD_PRIMARYGROUPID;
    }
    private static final int ERROR_DS_ILLEGAL_BASE_SCHEMA_MOD = (int)8507L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_ILLEGAL_BASE_SCHEMA_MOD 8507
     * }
     */
    public static int ERROR_DS_ILLEGAL_BASE_SCHEMA_MOD() {
        return ERROR_DS_ILLEGAL_BASE_SCHEMA_MOD;
    }
    private static final int ERROR_DS_NONSAFE_SCHEMA_CHANGE = (int)8508L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NONSAFE_SCHEMA_CHANGE 8508
     * }
     */
    public static int ERROR_DS_NONSAFE_SCHEMA_CHANGE() {
        return ERROR_DS_NONSAFE_SCHEMA_CHANGE;
    }
    private static final int ERROR_DS_SCHEMA_UPDATE_DISALLOWED = (int)8509L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_SCHEMA_UPDATE_DISALLOWED 8509
     * }
     */
    public static int ERROR_DS_SCHEMA_UPDATE_DISALLOWED() {
        return ERROR_DS_SCHEMA_UPDATE_DISALLOWED;
    }
    private static final int ERROR_DS_CANT_CREATE_UNDER_SCHEMA = (int)8510L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CANT_CREATE_UNDER_SCHEMA 8510
     * }
     */
    public static int ERROR_DS_CANT_CREATE_UNDER_SCHEMA() {
        return ERROR_DS_CANT_CREATE_UNDER_SCHEMA;
    }
    private static final int ERROR_DS_INSTALL_NO_SRC_SCH_VERSION = (int)8511L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_INSTALL_NO_SRC_SCH_VERSION 8511
     * }
     */
    public static int ERROR_DS_INSTALL_NO_SRC_SCH_VERSION() {
        return ERROR_DS_INSTALL_NO_SRC_SCH_VERSION;
    }
    private static final int ERROR_DS_INSTALL_NO_SCH_VERSION_IN_INIFILE = (int)8512L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_INSTALL_NO_SCH_VERSION_IN_INIFILE 8512
     * }
     */
    public static int ERROR_DS_INSTALL_NO_SCH_VERSION_IN_INIFILE() {
        return ERROR_DS_INSTALL_NO_SCH_VERSION_IN_INIFILE;
    }
    private static final int ERROR_DS_INVALID_GROUP_TYPE = (int)8513L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_INVALID_GROUP_TYPE 8513
     * }
     */
    public static int ERROR_DS_INVALID_GROUP_TYPE() {
        return ERROR_DS_INVALID_GROUP_TYPE;
    }
    private static final int ERROR_DS_NO_NEST_GLOBALGROUP_IN_MIXEDDOMAIN = (int)8514L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NO_NEST_GLOBALGROUP_IN_MIXEDDOMAIN 8514
     * }
     */
    public static int ERROR_DS_NO_NEST_GLOBALGROUP_IN_MIXEDDOMAIN() {
        return ERROR_DS_NO_NEST_GLOBALGROUP_IN_MIXEDDOMAIN;
    }
    private static final int ERROR_DS_NO_NEST_LOCALGROUP_IN_MIXEDDOMAIN = (int)8515L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NO_NEST_LOCALGROUP_IN_MIXEDDOMAIN 8515
     * }
     */
    public static int ERROR_DS_NO_NEST_LOCALGROUP_IN_MIXEDDOMAIN() {
        return ERROR_DS_NO_NEST_LOCALGROUP_IN_MIXEDDOMAIN;
    }
    private static final int ERROR_DS_GLOBAL_CANT_HAVE_LOCAL_MEMBER = (int)8516L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_GLOBAL_CANT_HAVE_LOCAL_MEMBER 8516
     * }
     */
    public static int ERROR_DS_GLOBAL_CANT_HAVE_LOCAL_MEMBER() {
        return ERROR_DS_GLOBAL_CANT_HAVE_LOCAL_MEMBER;
    }
    private static final int ERROR_DS_GLOBAL_CANT_HAVE_UNIVERSAL_MEMBER = (int)8517L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_GLOBAL_CANT_HAVE_UNIVERSAL_MEMBER 8517
     * }
     */
    public static int ERROR_DS_GLOBAL_CANT_HAVE_UNIVERSAL_MEMBER() {
        return ERROR_DS_GLOBAL_CANT_HAVE_UNIVERSAL_MEMBER;
    }
    private static final int ERROR_DS_UNIVERSAL_CANT_HAVE_LOCAL_MEMBER = (int)8518L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_UNIVERSAL_CANT_HAVE_LOCAL_MEMBER 8518
     * }
     */
    public static int ERROR_DS_UNIVERSAL_CANT_HAVE_LOCAL_MEMBER() {
        return ERROR_DS_UNIVERSAL_CANT_HAVE_LOCAL_MEMBER;
    }
    private static final int ERROR_DS_GLOBAL_CANT_HAVE_CROSSDOMAIN_MEMBER = (int)8519L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_GLOBAL_CANT_HAVE_CROSSDOMAIN_MEMBER 8519
     * }
     */
    public static int ERROR_DS_GLOBAL_CANT_HAVE_CROSSDOMAIN_MEMBER() {
        return ERROR_DS_GLOBAL_CANT_HAVE_CROSSDOMAIN_MEMBER;
    }
    private static final int ERROR_DS_LOCAL_CANT_HAVE_CROSSDOMAIN_LOCAL_MEMBER = (int)8520L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_LOCAL_CANT_HAVE_CROSSDOMAIN_LOCAL_MEMBER 8520
     * }
     */
    public static int ERROR_DS_LOCAL_CANT_HAVE_CROSSDOMAIN_LOCAL_MEMBER() {
        return ERROR_DS_LOCAL_CANT_HAVE_CROSSDOMAIN_LOCAL_MEMBER;
    }
    private static final int ERROR_DS_HAVE_PRIMARY_MEMBERS = (int)8521L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_HAVE_PRIMARY_MEMBERS 8521
     * }
     */
    public static int ERROR_DS_HAVE_PRIMARY_MEMBERS() {
        return ERROR_DS_HAVE_PRIMARY_MEMBERS;
    }
    private static final int ERROR_DS_STRING_SD_CONVERSION_FAILED = (int)8522L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_STRING_SD_CONVERSION_FAILED 8522
     * }
     */
    public static int ERROR_DS_STRING_SD_CONVERSION_FAILED() {
        return ERROR_DS_STRING_SD_CONVERSION_FAILED;
    }
    private static final int ERROR_DS_NAMING_MASTER_GC = (int)8523L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NAMING_MASTER_GC 8523
     * }
     */
    public static int ERROR_DS_NAMING_MASTER_GC() {
        return ERROR_DS_NAMING_MASTER_GC;
    }
    private static final int ERROR_DS_DNS_LOOKUP_FAILURE = (int)8524L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DNS_LOOKUP_FAILURE 8524
     * }
     */
    public static int ERROR_DS_DNS_LOOKUP_FAILURE() {
        return ERROR_DS_DNS_LOOKUP_FAILURE;
    }
    private static final int ERROR_DS_COULDNT_UPDATE_SPNS = (int)8525L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_COULDNT_UPDATE_SPNS 8525
     * }
     */
    public static int ERROR_DS_COULDNT_UPDATE_SPNS() {
        return ERROR_DS_COULDNT_UPDATE_SPNS;
    }
    private static final int ERROR_DS_CANT_RETRIEVE_SD = (int)8526L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CANT_RETRIEVE_SD 8526
     * }
     */
    public static int ERROR_DS_CANT_RETRIEVE_SD() {
        return ERROR_DS_CANT_RETRIEVE_SD;
    }
    private static final int ERROR_DS_KEY_NOT_UNIQUE = (int)8527L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_KEY_NOT_UNIQUE 8527
     * }
     */
    public static int ERROR_DS_KEY_NOT_UNIQUE() {
        return ERROR_DS_KEY_NOT_UNIQUE;
    }
    private static final int ERROR_DS_WRONG_LINKED_ATT_SYNTAX = (int)8528L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_WRONG_LINKED_ATT_SYNTAX 8528
     * }
     */
    public static int ERROR_DS_WRONG_LINKED_ATT_SYNTAX() {
        return ERROR_DS_WRONG_LINKED_ATT_SYNTAX;
    }
    private static final int ERROR_DS_SAM_NEED_BOOTKEY_PASSWORD = (int)8529L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_SAM_NEED_BOOTKEY_PASSWORD 8529
     * }
     */
    public static int ERROR_DS_SAM_NEED_BOOTKEY_PASSWORD() {
        return ERROR_DS_SAM_NEED_BOOTKEY_PASSWORD;
    }
    private static final int ERROR_DS_SAM_NEED_BOOTKEY_FLOPPY = (int)8530L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_SAM_NEED_BOOTKEY_FLOPPY 8530
     * }
     */
    public static int ERROR_DS_SAM_NEED_BOOTKEY_FLOPPY() {
        return ERROR_DS_SAM_NEED_BOOTKEY_FLOPPY;
    }
    private static final int ERROR_DS_CANT_START = (int)8531L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CANT_START 8531
     * }
     */
    public static int ERROR_DS_CANT_START() {
        return ERROR_DS_CANT_START;
    }
    private static final int ERROR_DS_INIT_FAILURE = (int)8532L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_INIT_FAILURE 8532
     * }
     */
    public static int ERROR_DS_INIT_FAILURE() {
        return ERROR_DS_INIT_FAILURE;
    }
    private static final int ERROR_DS_NO_PKT_PRIVACY_ON_CONNECTION = (int)8533L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NO_PKT_PRIVACY_ON_CONNECTION 8533
     * }
     */
    public static int ERROR_DS_NO_PKT_PRIVACY_ON_CONNECTION() {
        return ERROR_DS_NO_PKT_PRIVACY_ON_CONNECTION;
    }
    private static final int ERROR_DS_SOURCE_DOMAIN_IN_FOREST = (int)8534L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_SOURCE_DOMAIN_IN_FOREST 8534
     * }
     */
    public static int ERROR_DS_SOURCE_DOMAIN_IN_FOREST() {
        return ERROR_DS_SOURCE_DOMAIN_IN_FOREST;
    }
    private static final int ERROR_DS_DESTINATION_DOMAIN_NOT_IN_FOREST = (int)8535L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DESTINATION_DOMAIN_NOT_IN_FOREST 8535
     * }
     */
    public static int ERROR_DS_DESTINATION_DOMAIN_NOT_IN_FOREST() {
        return ERROR_DS_DESTINATION_DOMAIN_NOT_IN_FOREST;
    }
    private static final int ERROR_DS_DESTINATION_AUDITING_NOT_ENABLED = (int)8536L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DESTINATION_AUDITING_NOT_ENABLED 8536
     * }
     */
    public static int ERROR_DS_DESTINATION_AUDITING_NOT_ENABLED() {
        return ERROR_DS_DESTINATION_AUDITING_NOT_ENABLED;
    }
    private static final int ERROR_DS_CANT_FIND_DC_FOR_SRC_DOMAIN = (int)8537L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CANT_FIND_DC_FOR_SRC_DOMAIN 8537
     * }
     */
    public static int ERROR_DS_CANT_FIND_DC_FOR_SRC_DOMAIN() {
        return ERROR_DS_CANT_FIND_DC_FOR_SRC_DOMAIN;
    }
    private static final int ERROR_DS_SRC_OBJ_NOT_GROUP_OR_USER = (int)8538L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_SRC_OBJ_NOT_GROUP_OR_USER 8538
     * }
     */
    public static int ERROR_DS_SRC_OBJ_NOT_GROUP_OR_USER() {
        return ERROR_DS_SRC_OBJ_NOT_GROUP_OR_USER;
    }
    private static final int ERROR_DS_SRC_SID_EXISTS_IN_FOREST = (int)8539L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_SRC_SID_EXISTS_IN_FOREST 8539
     * }
     */
    public static int ERROR_DS_SRC_SID_EXISTS_IN_FOREST() {
        return ERROR_DS_SRC_SID_EXISTS_IN_FOREST;
    }
    private static final int ERROR_DS_SRC_AND_DST_OBJECT_CLASS_MISMATCH = (int)8540L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_SRC_AND_DST_OBJECT_CLASS_MISMATCH 8540
     * }
     */
    public static int ERROR_DS_SRC_AND_DST_OBJECT_CLASS_MISMATCH() {
        return ERROR_DS_SRC_AND_DST_OBJECT_CLASS_MISMATCH;
    }
    private static final int ERROR_SAM_INIT_FAILURE = (int)8541L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SAM_INIT_FAILURE 8541
     * }
     */
    public static int ERROR_SAM_INIT_FAILURE() {
        return ERROR_SAM_INIT_FAILURE;
    }
    private static final int ERROR_DS_DRA_SCHEMA_INFO_SHIP = (int)8542L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DRA_SCHEMA_INFO_SHIP 8542
     * }
     */
    public static int ERROR_DS_DRA_SCHEMA_INFO_SHIP() {
        return ERROR_DS_DRA_SCHEMA_INFO_SHIP;
    }
    private static final int ERROR_DS_DRA_SCHEMA_CONFLICT = (int)8543L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DRA_SCHEMA_CONFLICT 8543
     * }
     */
    public static int ERROR_DS_DRA_SCHEMA_CONFLICT() {
        return ERROR_DS_DRA_SCHEMA_CONFLICT;
    }
    private static final int ERROR_DS_DRA_EARLIER_SCHEMA_CONFLICT = (int)8544L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DRA_EARLIER_SCHEMA_CONFLICT 8544
     * }
     */
    public static int ERROR_DS_DRA_EARLIER_SCHEMA_CONFLICT() {
        return ERROR_DS_DRA_EARLIER_SCHEMA_CONFLICT;
    }
    private static final int ERROR_DS_DRA_OBJ_NC_MISMATCH = (int)8545L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DRA_OBJ_NC_MISMATCH 8545
     * }
     */
    public static int ERROR_DS_DRA_OBJ_NC_MISMATCH() {
        return ERROR_DS_DRA_OBJ_NC_MISMATCH;
    }
    private static final int ERROR_DS_NC_STILL_HAS_DSAS = (int)8546L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NC_STILL_HAS_DSAS 8546
     * }
     */
    public static int ERROR_DS_NC_STILL_HAS_DSAS() {
        return ERROR_DS_NC_STILL_HAS_DSAS;
    }
    private static final int ERROR_DS_GC_REQUIRED = (int)8547L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_GC_REQUIRED 8547
     * }
     */
    public static int ERROR_DS_GC_REQUIRED() {
        return ERROR_DS_GC_REQUIRED;
    }
    private static final int ERROR_DS_LOCAL_MEMBER_OF_LOCAL_ONLY = (int)8548L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_LOCAL_MEMBER_OF_LOCAL_ONLY 8548
     * }
     */
    public static int ERROR_DS_LOCAL_MEMBER_OF_LOCAL_ONLY() {
        return ERROR_DS_LOCAL_MEMBER_OF_LOCAL_ONLY;
    }
    private static final int ERROR_DS_NO_FPO_IN_UNIVERSAL_GROUPS = (int)8549L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NO_FPO_IN_UNIVERSAL_GROUPS 8549
     * }
     */
    public static int ERROR_DS_NO_FPO_IN_UNIVERSAL_GROUPS() {
        return ERROR_DS_NO_FPO_IN_UNIVERSAL_GROUPS;
    }
    private static final int ERROR_DS_CANT_ADD_TO_GC = (int)8550L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CANT_ADD_TO_GC 8550
     * }
     */
    public static int ERROR_DS_CANT_ADD_TO_GC() {
        return ERROR_DS_CANT_ADD_TO_GC;
    }
    private static final int ERROR_DS_NO_CHECKPOINT_WITH_PDC = (int)8551L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NO_CHECKPOINT_WITH_PDC 8551
     * }
     */
    public static int ERROR_DS_NO_CHECKPOINT_WITH_PDC() {
        return ERROR_DS_NO_CHECKPOINT_WITH_PDC;
    }
    private static final int ERROR_DS_SOURCE_AUDITING_NOT_ENABLED = (int)8552L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_SOURCE_AUDITING_NOT_ENABLED 8552
     * }
     */
    public static int ERROR_DS_SOURCE_AUDITING_NOT_ENABLED() {
        return ERROR_DS_SOURCE_AUDITING_NOT_ENABLED;
    }
    private static final int ERROR_DS_CANT_CREATE_IN_NONDOMAIN_NC = (int)8553L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CANT_CREATE_IN_NONDOMAIN_NC 8553
     * }
     */
    public static int ERROR_DS_CANT_CREATE_IN_NONDOMAIN_NC() {
        return ERROR_DS_CANT_CREATE_IN_NONDOMAIN_NC;
    }
    private static final int ERROR_DS_INVALID_NAME_FOR_SPN = (int)8554L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_INVALID_NAME_FOR_SPN 8554
     * }
     */
    public static int ERROR_DS_INVALID_NAME_FOR_SPN() {
        return ERROR_DS_INVALID_NAME_FOR_SPN;
    }
    private static final int ERROR_DS_FILTER_USES_CONTRUCTED_ATTRS = (int)8555L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_FILTER_USES_CONTRUCTED_ATTRS 8555
     * }
     */
    public static int ERROR_DS_FILTER_USES_CONTRUCTED_ATTRS() {
        return ERROR_DS_FILTER_USES_CONTRUCTED_ATTRS;
    }
    private static final int ERROR_DS_UNICODEPWD_NOT_IN_QUOTES = (int)8556L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_UNICODEPWD_NOT_IN_QUOTES 8556
     * }
     */
    public static int ERROR_DS_UNICODEPWD_NOT_IN_QUOTES() {
        return ERROR_DS_UNICODEPWD_NOT_IN_QUOTES;
    }
    private static final int ERROR_DS_MACHINE_ACCOUNT_QUOTA_EXCEEDED = (int)8557L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_MACHINE_ACCOUNT_QUOTA_EXCEEDED 8557
     * }
     */
    public static int ERROR_DS_MACHINE_ACCOUNT_QUOTA_EXCEEDED() {
        return ERROR_DS_MACHINE_ACCOUNT_QUOTA_EXCEEDED;
    }
    private static final int ERROR_DS_MUST_BE_RUN_ON_DST_DC = (int)8558L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_MUST_BE_RUN_ON_DST_DC 8558
     * }
     */
    public static int ERROR_DS_MUST_BE_RUN_ON_DST_DC() {
        return ERROR_DS_MUST_BE_RUN_ON_DST_DC;
    }
    private static final int ERROR_DS_SRC_DC_MUST_BE_SP4_OR_GREATER = (int)8559L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_SRC_DC_MUST_BE_SP4_OR_GREATER 8559
     * }
     */
    public static int ERROR_DS_SRC_DC_MUST_BE_SP4_OR_GREATER() {
        return ERROR_DS_SRC_DC_MUST_BE_SP4_OR_GREATER;
    }
    private static final int ERROR_DS_CANT_TREE_DELETE_CRITICAL_OBJ = (int)8560L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_CANT_TREE_DELETE_CRITICAL_OBJ 8560
     * }
     */
    public static int ERROR_DS_CANT_TREE_DELETE_CRITICAL_OBJ() {
        return ERROR_DS_CANT_TREE_DELETE_CRITICAL_OBJ;
    }
    private static final int ERROR_DS_INIT_FAILURE_CONSOLE = (int)8561L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_INIT_FAILURE_CONSOLE 8561
     * }
     */
    public static int ERROR_DS_INIT_FAILURE_CONSOLE() {
        return ERROR_DS_INIT_FAILURE_CONSOLE;
    }
    private static final int ERROR_DS_SAM_INIT_FAILURE_CONSOLE = (int)8562L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_SAM_INIT_FAILURE_CONSOLE 8562
     * }
     */
    public static int ERROR_DS_SAM_INIT_FAILURE_CONSOLE() {
        return ERROR_DS_SAM_INIT_FAILURE_CONSOLE;
    }
    private static final int ERROR_DS_FOREST_VERSION_TOO_HIGH = (int)8563L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_FOREST_VERSION_TOO_HIGH 8563
     * }
     */
    public static int ERROR_DS_FOREST_VERSION_TOO_HIGH() {
        return ERROR_DS_FOREST_VERSION_TOO_HIGH;
    }
    private static final int ERROR_DS_DOMAIN_VERSION_TOO_HIGH = (int)8564L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DOMAIN_VERSION_TOO_HIGH 8564
     * }
     */
    public static int ERROR_DS_DOMAIN_VERSION_TOO_HIGH() {
        return ERROR_DS_DOMAIN_VERSION_TOO_HIGH;
    }
    private static final int ERROR_DS_FOREST_VERSION_TOO_LOW = (int)8565L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_FOREST_VERSION_TOO_LOW 8565
     * }
     */
    public static int ERROR_DS_FOREST_VERSION_TOO_LOW() {
        return ERROR_DS_FOREST_VERSION_TOO_LOW;
    }
    private static final int ERROR_DS_DOMAIN_VERSION_TOO_LOW = (int)8566L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_DOMAIN_VERSION_TOO_LOW 8566
     * }
     */
    public static int ERROR_DS_DOMAIN_VERSION_TOO_LOW() {
        return ERROR_DS_DOMAIN_VERSION_TOO_LOW;
    }
    private static final int ERROR_DS_INCOMPATIBLE_VERSION = (int)8567L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_INCOMPATIBLE_VERSION 8567
     * }
     */
    public static int ERROR_DS_INCOMPATIBLE_VERSION() {
        return ERROR_DS_INCOMPATIBLE_VERSION;
    }
    private static final int ERROR_DS_LOW_DSA_VERSION = (int)8568L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_LOW_DSA_VERSION 8568
     * }
     */
    public static int ERROR_DS_LOW_DSA_VERSION() {
        return ERROR_DS_LOW_DSA_VERSION;
    }
    private static final int ERROR_DS_NO_BEHAVIOR_VERSION_IN_MIXEDDOMAIN = (int)8569L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_NO_BEHAVIOR_VERSION_IN_MIXEDDOMAIN 8569
     * }
     */
    public static int ERROR_DS_NO_BEHAVIOR_VERSION_IN_MIXEDDOMAIN() {
        return ERROR_DS_NO_BEHAVIOR_VERSION_IN_MIXEDDOMAIN;
    }
}

