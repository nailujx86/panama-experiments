// Generated by jextract

package net.nailuj.win;

import java.lang.invoke.*;
import java.lang.foreign.*;
import java.nio.ByteOrder;
import java.util.*;
import java.util.function.*;
import java.util.stream.*;

import static java.lang.foreign.ValueLayout.*;
import static java.lang.foreign.MemoryLayout.PathElement.*;

public class winapi_35 extends winapi_36 {

    winapi_35() {
        // Should not be called directly
    }
    private static final int DMPAPER_PENV_7_ROTATED = (int)115L;
    /**
     * {@snippet lang=c :
     * #define DMPAPER_PENV_7_ROTATED 115
     * }
     */
    public static int DMPAPER_PENV_7_ROTATED() {
        return DMPAPER_PENV_7_ROTATED;
    }
    private static final int DMPAPER_PENV_8_ROTATED = (int)116L;
    /**
     * {@snippet lang=c :
     * #define DMPAPER_PENV_8_ROTATED 116
     * }
     */
    public static int DMPAPER_PENV_8_ROTATED() {
        return DMPAPER_PENV_8_ROTATED;
    }
    private static final int DMPAPER_PENV_9_ROTATED = (int)117L;
    /**
     * {@snippet lang=c :
     * #define DMPAPER_PENV_9_ROTATED 117
     * }
     */
    public static int DMPAPER_PENV_9_ROTATED() {
        return DMPAPER_PENV_9_ROTATED;
    }
    private static final int DMPAPER_PENV_10_ROTATED = (int)118L;
    /**
     * {@snippet lang=c :
     * #define DMPAPER_PENV_10_ROTATED 118
     * }
     */
    public static int DMPAPER_PENV_10_ROTATED() {
        return DMPAPER_PENV_10_ROTATED;
    }
    private static final int DMPAPER_USER = (int)256L;
    /**
     * {@snippet lang=c :
     * #define DMPAPER_USER 256
     * }
     */
    public static int DMPAPER_USER() {
        return DMPAPER_USER;
    }
    private static final int DMBIN_UPPER = (int)1L;
    /**
     * {@snippet lang=c :
     * #define DMBIN_UPPER 1
     * }
     */
    public static int DMBIN_UPPER() {
        return DMBIN_UPPER;
    }
    private static final int DMBIN_ONLYONE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define DMBIN_ONLYONE 1
     * }
     */
    public static int DMBIN_ONLYONE() {
        return DMBIN_ONLYONE;
    }
    private static final int DMBIN_LOWER = (int)2L;
    /**
     * {@snippet lang=c :
     * #define DMBIN_LOWER 2
     * }
     */
    public static int DMBIN_LOWER() {
        return DMBIN_LOWER;
    }
    private static final int DMBIN_MIDDLE = (int)3L;
    /**
     * {@snippet lang=c :
     * #define DMBIN_MIDDLE 3
     * }
     */
    public static int DMBIN_MIDDLE() {
        return DMBIN_MIDDLE;
    }
    private static final int DMBIN_MANUAL = (int)4L;
    /**
     * {@snippet lang=c :
     * #define DMBIN_MANUAL 4
     * }
     */
    public static int DMBIN_MANUAL() {
        return DMBIN_MANUAL;
    }
    private static final int DMBIN_ENVELOPE = (int)5L;
    /**
     * {@snippet lang=c :
     * #define DMBIN_ENVELOPE 5
     * }
     */
    public static int DMBIN_ENVELOPE() {
        return DMBIN_ENVELOPE;
    }
    private static final int DMBIN_ENVMANUAL = (int)6L;
    /**
     * {@snippet lang=c :
     * #define DMBIN_ENVMANUAL 6
     * }
     */
    public static int DMBIN_ENVMANUAL() {
        return DMBIN_ENVMANUAL;
    }
    private static final int DMBIN_AUTO = (int)7L;
    /**
     * {@snippet lang=c :
     * #define DMBIN_AUTO 7
     * }
     */
    public static int DMBIN_AUTO() {
        return DMBIN_AUTO;
    }
    private static final int DMBIN_TRACTOR = (int)8L;
    /**
     * {@snippet lang=c :
     * #define DMBIN_TRACTOR 8
     * }
     */
    public static int DMBIN_TRACTOR() {
        return DMBIN_TRACTOR;
    }
    private static final int DMBIN_SMALLFMT = (int)9L;
    /**
     * {@snippet lang=c :
     * #define DMBIN_SMALLFMT 9
     * }
     */
    public static int DMBIN_SMALLFMT() {
        return DMBIN_SMALLFMT;
    }
    private static final int DMBIN_LARGEFMT = (int)10L;
    /**
     * {@snippet lang=c :
     * #define DMBIN_LARGEFMT 10
     * }
     */
    public static int DMBIN_LARGEFMT() {
        return DMBIN_LARGEFMT;
    }
    private static final int DMBIN_LARGECAPACITY = (int)11L;
    /**
     * {@snippet lang=c :
     * #define DMBIN_LARGECAPACITY 11
     * }
     */
    public static int DMBIN_LARGECAPACITY() {
        return DMBIN_LARGECAPACITY;
    }
    private static final int DMBIN_CASSETTE = (int)14L;
    /**
     * {@snippet lang=c :
     * #define DMBIN_CASSETTE 14
     * }
     */
    public static int DMBIN_CASSETTE() {
        return DMBIN_CASSETTE;
    }
    private static final int DMBIN_FORMSOURCE = (int)15L;
    /**
     * {@snippet lang=c :
     * #define DMBIN_FORMSOURCE 15
     * }
     */
    public static int DMBIN_FORMSOURCE() {
        return DMBIN_FORMSOURCE;
    }
    private static final int DMBIN_USER = (int)256L;
    /**
     * {@snippet lang=c :
     * #define DMBIN_USER 256
     * }
     */
    public static int DMBIN_USER() {
        return DMBIN_USER;
    }
    private static final int DMCOLOR_MONOCHROME = (int)1L;
    /**
     * {@snippet lang=c :
     * #define DMCOLOR_MONOCHROME 1
     * }
     */
    public static int DMCOLOR_MONOCHROME() {
        return DMCOLOR_MONOCHROME;
    }
    private static final int DMCOLOR_COLOR = (int)2L;
    /**
     * {@snippet lang=c :
     * #define DMCOLOR_COLOR 2
     * }
     */
    public static int DMCOLOR_COLOR() {
        return DMCOLOR_COLOR;
    }
    private static final int DMDUP_SIMPLEX = (int)1L;
    /**
     * {@snippet lang=c :
     * #define DMDUP_SIMPLEX 1
     * }
     */
    public static int DMDUP_SIMPLEX() {
        return DMDUP_SIMPLEX;
    }
    private static final int DMDUP_VERTICAL = (int)2L;
    /**
     * {@snippet lang=c :
     * #define DMDUP_VERTICAL 2
     * }
     */
    public static int DMDUP_VERTICAL() {
        return DMDUP_VERTICAL;
    }
    private static final int DMDUP_HORIZONTAL = (int)3L;
    /**
     * {@snippet lang=c :
     * #define DMDUP_HORIZONTAL 3
     * }
     */
    public static int DMDUP_HORIZONTAL() {
        return DMDUP_HORIZONTAL;
    }
    private static final int DMTT_BITMAP = (int)1L;
    /**
     * {@snippet lang=c :
     * #define DMTT_BITMAP 1
     * }
     */
    public static int DMTT_BITMAP() {
        return DMTT_BITMAP;
    }
    private static final int DMTT_DOWNLOAD = (int)2L;
    /**
     * {@snippet lang=c :
     * #define DMTT_DOWNLOAD 2
     * }
     */
    public static int DMTT_DOWNLOAD() {
        return DMTT_DOWNLOAD;
    }
    private static final int DMTT_SUBDEV = (int)3L;
    /**
     * {@snippet lang=c :
     * #define DMTT_SUBDEV 3
     * }
     */
    public static int DMTT_SUBDEV() {
        return DMTT_SUBDEV;
    }
    private static final int DMTT_DOWNLOAD_OUTLINE = (int)4L;
    /**
     * {@snippet lang=c :
     * #define DMTT_DOWNLOAD_OUTLINE 4
     * }
     */
    public static int DMTT_DOWNLOAD_OUTLINE() {
        return DMTT_DOWNLOAD_OUTLINE;
    }
    private static final int DMCOLLATE_FALSE = (int)0L;
    /**
     * {@snippet lang=c :
     * #define DMCOLLATE_FALSE 0
     * }
     */
    public static int DMCOLLATE_FALSE() {
        return DMCOLLATE_FALSE;
    }
    private static final int DMCOLLATE_TRUE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define DMCOLLATE_TRUE 1
     * }
     */
    public static int DMCOLLATE_TRUE() {
        return DMCOLLATE_TRUE;
    }
    private static final int DMDO_DEFAULT = (int)0L;
    /**
     * {@snippet lang=c :
     * #define DMDO_DEFAULT 0
     * }
     */
    public static int DMDO_DEFAULT() {
        return DMDO_DEFAULT;
    }
    private static final int DMDO_90 = (int)1L;
    /**
     * {@snippet lang=c :
     * #define DMDO_90 1
     * }
     */
    public static int DMDO_90() {
        return DMDO_90;
    }
    private static final int DMDO_180 = (int)2L;
    /**
     * {@snippet lang=c :
     * #define DMDO_180 2
     * }
     */
    public static int DMDO_180() {
        return DMDO_180;
    }
    private static final int DMDO_270 = (int)3L;
    /**
     * {@snippet lang=c :
     * #define DMDO_270 3
     * }
     */
    public static int DMDO_270() {
        return DMDO_270;
    }
    private static final int DMDFO_DEFAULT = (int)0L;
    /**
     * {@snippet lang=c :
     * #define DMDFO_DEFAULT 0
     * }
     */
    public static int DMDFO_DEFAULT() {
        return DMDFO_DEFAULT;
    }
    private static final int DMDFO_STRETCH = (int)1L;
    /**
     * {@snippet lang=c :
     * #define DMDFO_STRETCH 1
     * }
     */
    public static int DMDFO_STRETCH() {
        return DMDFO_STRETCH;
    }
    private static final int DMDFO_CENTER = (int)2L;
    /**
     * {@snippet lang=c :
     * #define DMDFO_CENTER 2
     * }
     */
    public static int DMDFO_CENTER() {
        return DMDFO_CENTER;
    }
    private static final int DM_INTERLACED = (int)2L;
    /**
     * {@snippet lang=c :
     * #define DM_INTERLACED 2
     * }
     */
    public static int DM_INTERLACED() {
        return DM_INTERLACED;
    }
    private static final int DMDISPLAYFLAGS_TEXTMODE = (int)4L;
    /**
     * {@snippet lang=c :
     * #define DMDISPLAYFLAGS_TEXTMODE 4
     * }
     */
    public static int DMDISPLAYFLAGS_TEXTMODE() {
        return DMDISPLAYFLAGS_TEXTMODE;
    }
    private static final int DMNUP_SYSTEM = (int)1L;
    /**
     * {@snippet lang=c :
     * #define DMNUP_SYSTEM 1
     * }
     */
    public static int DMNUP_SYSTEM() {
        return DMNUP_SYSTEM;
    }
    private static final int DMNUP_ONEUP = (int)2L;
    /**
     * {@snippet lang=c :
     * #define DMNUP_ONEUP 2
     * }
     */
    public static int DMNUP_ONEUP() {
        return DMNUP_ONEUP;
    }
    private static final int DMICMMETHOD_NONE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define DMICMMETHOD_NONE 1
     * }
     */
    public static int DMICMMETHOD_NONE() {
        return DMICMMETHOD_NONE;
    }
    private static final int DMICMMETHOD_SYSTEM = (int)2L;
    /**
     * {@snippet lang=c :
     * #define DMICMMETHOD_SYSTEM 2
     * }
     */
    public static int DMICMMETHOD_SYSTEM() {
        return DMICMMETHOD_SYSTEM;
    }
    private static final int DMICMMETHOD_DRIVER = (int)3L;
    /**
     * {@snippet lang=c :
     * #define DMICMMETHOD_DRIVER 3
     * }
     */
    public static int DMICMMETHOD_DRIVER() {
        return DMICMMETHOD_DRIVER;
    }
    private static final int DMICMMETHOD_DEVICE = (int)4L;
    /**
     * {@snippet lang=c :
     * #define DMICMMETHOD_DEVICE 4
     * }
     */
    public static int DMICMMETHOD_DEVICE() {
        return DMICMMETHOD_DEVICE;
    }
    private static final int DMICMMETHOD_USER = (int)256L;
    /**
     * {@snippet lang=c :
     * #define DMICMMETHOD_USER 256
     * }
     */
    public static int DMICMMETHOD_USER() {
        return DMICMMETHOD_USER;
    }
    private static final int DMICM_SATURATE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define DMICM_SATURATE 1
     * }
     */
    public static int DMICM_SATURATE() {
        return DMICM_SATURATE;
    }
    private static final int DMICM_CONTRAST = (int)2L;
    /**
     * {@snippet lang=c :
     * #define DMICM_CONTRAST 2
     * }
     */
    public static int DMICM_CONTRAST() {
        return DMICM_CONTRAST;
    }
    private static final int DMICM_COLORIMETRIC = (int)3L;
    /**
     * {@snippet lang=c :
     * #define DMICM_COLORIMETRIC 3
     * }
     */
    public static int DMICM_COLORIMETRIC() {
        return DMICM_COLORIMETRIC;
    }
    private static final int DMICM_ABS_COLORIMETRIC = (int)4L;
    /**
     * {@snippet lang=c :
     * #define DMICM_ABS_COLORIMETRIC 4
     * }
     */
    public static int DMICM_ABS_COLORIMETRIC() {
        return DMICM_ABS_COLORIMETRIC;
    }
    private static final int DMICM_USER = (int)256L;
    /**
     * {@snippet lang=c :
     * #define DMICM_USER 256
     * }
     */
    public static int DMICM_USER() {
        return DMICM_USER;
    }
    private static final int DMMEDIA_STANDARD = (int)1L;
    /**
     * {@snippet lang=c :
     * #define DMMEDIA_STANDARD 1
     * }
     */
    public static int DMMEDIA_STANDARD() {
        return DMMEDIA_STANDARD;
    }
    private static final int DMMEDIA_TRANSPARENCY = (int)2L;
    /**
     * {@snippet lang=c :
     * #define DMMEDIA_TRANSPARENCY 2
     * }
     */
    public static int DMMEDIA_TRANSPARENCY() {
        return DMMEDIA_TRANSPARENCY;
    }
    private static final int DMMEDIA_GLOSSY = (int)3L;
    /**
     * {@snippet lang=c :
     * #define DMMEDIA_GLOSSY 3
     * }
     */
    public static int DMMEDIA_GLOSSY() {
        return DMMEDIA_GLOSSY;
    }
    private static final int DMMEDIA_USER = (int)256L;
    /**
     * {@snippet lang=c :
     * #define DMMEDIA_USER 256
     * }
     */
    public static int DMMEDIA_USER() {
        return DMMEDIA_USER;
    }
    private static final int DMDITHER_NONE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define DMDITHER_NONE 1
     * }
     */
    public static int DMDITHER_NONE() {
        return DMDITHER_NONE;
    }
    private static final int DMDITHER_COARSE = (int)2L;
    /**
     * {@snippet lang=c :
     * #define DMDITHER_COARSE 2
     * }
     */
    public static int DMDITHER_COARSE() {
        return DMDITHER_COARSE;
    }
    private static final int DMDITHER_FINE = (int)3L;
    /**
     * {@snippet lang=c :
     * #define DMDITHER_FINE 3
     * }
     */
    public static int DMDITHER_FINE() {
        return DMDITHER_FINE;
    }
    private static final int DMDITHER_LINEART = (int)4L;
    /**
     * {@snippet lang=c :
     * #define DMDITHER_LINEART 4
     * }
     */
    public static int DMDITHER_LINEART() {
        return DMDITHER_LINEART;
    }
    private static final int DMDITHER_ERRORDIFFUSION = (int)5L;
    /**
     * {@snippet lang=c :
     * #define DMDITHER_ERRORDIFFUSION 5
     * }
     */
    public static int DMDITHER_ERRORDIFFUSION() {
        return DMDITHER_ERRORDIFFUSION;
    }
    private static final int DMDITHER_RESERVED6 = (int)6L;
    /**
     * {@snippet lang=c :
     * #define DMDITHER_RESERVED6 6
     * }
     */
    public static int DMDITHER_RESERVED6() {
        return DMDITHER_RESERVED6;
    }
    private static final int DMDITHER_RESERVED7 = (int)7L;
    /**
     * {@snippet lang=c :
     * #define DMDITHER_RESERVED7 7
     * }
     */
    public static int DMDITHER_RESERVED7() {
        return DMDITHER_RESERVED7;
    }
    private static final int DMDITHER_RESERVED8 = (int)8L;
    /**
     * {@snippet lang=c :
     * #define DMDITHER_RESERVED8 8
     * }
     */
    public static int DMDITHER_RESERVED8() {
        return DMDITHER_RESERVED8;
    }
    private static final int DMDITHER_RESERVED9 = (int)9L;
    /**
     * {@snippet lang=c :
     * #define DMDITHER_RESERVED9 9
     * }
     */
    public static int DMDITHER_RESERVED9() {
        return DMDITHER_RESERVED9;
    }
    private static final int DMDITHER_GRAYSCALE = (int)10L;
    /**
     * {@snippet lang=c :
     * #define DMDITHER_GRAYSCALE 10
     * }
     */
    public static int DMDITHER_GRAYSCALE() {
        return DMDITHER_GRAYSCALE;
    }
    private static final int DMDITHER_USER = (int)256L;
    /**
     * {@snippet lang=c :
     * #define DMDITHER_USER 256
     * }
     */
    public static int DMDITHER_USER() {
        return DMDITHER_USER;
    }
    private static final int DISPLAY_DEVICE_ATTACHED_TO_DESKTOP = (int)1L;
    /**
     * {@snippet lang=c :
     * #define DISPLAY_DEVICE_ATTACHED_TO_DESKTOP 1
     * }
     */
    public static int DISPLAY_DEVICE_ATTACHED_TO_DESKTOP() {
        return DISPLAY_DEVICE_ATTACHED_TO_DESKTOP;
    }
    private static final int DISPLAY_DEVICE_MULTI_DRIVER = (int)2L;
    /**
     * {@snippet lang=c :
     * #define DISPLAY_DEVICE_MULTI_DRIVER 2
     * }
     */
    public static int DISPLAY_DEVICE_MULTI_DRIVER() {
        return DISPLAY_DEVICE_MULTI_DRIVER;
    }
    private static final int DISPLAY_DEVICE_PRIMARY_DEVICE = (int)4L;
    /**
     * {@snippet lang=c :
     * #define DISPLAY_DEVICE_PRIMARY_DEVICE 4
     * }
     */
    public static int DISPLAY_DEVICE_PRIMARY_DEVICE() {
        return DISPLAY_DEVICE_PRIMARY_DEVICE;
    }
    private static final int DISPLAY_DEVICE_MIRRORING_DRIVER = (int)8L;
    /**
     * {@snippet lang=c :
     * #define DISPLAY_DEVICE_MIRRORING_DRIVER 8
     * }
     */
    public static int DISPLAY_DEVICE_MIRRORING_DRIVER() {
        return DISPLAY_DEVICE_MIRRORING_DRIVER;
    }
    private static final int DISPLAY_DEVICE_VGA_COMPATIBLE = (int)16L;
    /**
     * {@snippet lang=c :
     * #define DISPLAY_DEVICE_VGA_COMPATIBLE 16
     * }
     */
    public static int DISPLAY_DEVICE_VGA_COMPATIBLE() {
        return DISPLAY_DEVICE_VGA_COMPATIBLE;
    }
    private static final int DISPLAY_DEVICE_REMOVABLE = (int)32L;
    /**
     * {@snippet lang=c :
     * #define DISPLAY_DEVICE_REMOVABLE 32
     * }
     */
    public static int DISPLAY_DEVICE_REMOVABLE() {
        return DISPLAY_DEVICE_REMOVABLE;
    }
    private static final int DISPLAY_DEVICE_ACC_DRIVER = (int)64L;
    /**
     * {@snippet lang=c :
     * #define DISPLAY_DEVICE_ACC_DRIVER 64
     * }
     */
    public static int DISPLAY_DEVICE_ACC_DRIVER() {
        return DISPLAY_DEVICE_ACC_DRIVER;
    }
    private static final int DISPLAY_DEVICE_MODESPRUNED = (int)134217728L;
    /**
     * {@snippet lang=c :
     * #define DISPLAY_DEVICE_MODESPRUNED 134217728
     * }
     */
    public static int DISPLAY_DEVICE_MODESPRUNED() {
        return DISPLAY_DEVICE_MODESPRUNED;
    }
    private static final int DISPLAY_DEVICE_RDPUDD = (int)16777216L;
    /**
     * {@snippet lang=c :
     * #define DISPLAY_DEVICE_RDPUDD 16777216
     * }
     */
    public static int DISPLAY_DEVICE_RDPUDD() {
        return DISPLAY_DEVICE_RDPUDD;
    }
    private static final int DISPLAY_DEVICE_REMOTE = (int)67108864L;
    /**
     * {@snippet lang=c :
     * #define DISPLAY_DEVICE_REMOTE 67108864
     * }
     */
    public static int DISPLAY_DEVICE_REMOTE() {
        return DISPLAY_DEVICE_REMOTE;
    }
    private static final int DISPLAY_DEVICE_DISCONNECT = (int)33554432L;
    /**
     * {@snippet lang=c :
     * #define DISPLAY_DEVICE_DISCONNECT 33554432
     * }
     */
    public static int DISPLAY_DEVICE_DISCONNECT() {
        return DISPLAY_DEVICE_DISCONNECT;
    }
    private static final int DISPLAY_DEVICE_TS_COMPATIBLE = (int)2097152L;
    /**
     * {@snippet lang=c :
     * #define DISPLAY_DEVICE_TS_COMPATIBLE 2097152
     * }
     */
    public static int DISPLAY_DEVICE_TS_COMPATIBLE() {
        return DISPLAY_DEVICE_TS_COMPATIBLE;
    }
    private static final int DISPLAY_DEVICE_UNSAFE_MODES_ON = (int)524288L;
    /**
     * {@snippet lang=c :
     * #define DISPLAY_DEVICE_UNSAFE_MODES_ON 524288
     * }
     */
    public static int DISPLAY_DEVICE_UNSAFE_MODES_ON() {
        return DISPLAY_DEVICE_UNSAFE_MODES_ON;
    }
    private static final int DISPLAY_DEVICE_ACTIVE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define DISPLAY_DEVICE_ACTIVE 1
     * }
     */
    public static int DISPLAY_DEVICE_ACTIVE() {
        return DISPLAY_DEVICE_ACTIVE;
    }
    private static final int DISPLAY_DEVICE_ATTACHED = (int)2L;
    /**
     * {@snippet lang=c :
     * #define DISPLAY_DEVICE_ATTACHED 2
     * }
     */
    public static int DISPLAY_DEVICE_ATTACHED() {
        return DISPLAY_DEVICE_ATTACHED;
    }
    private static final int DISPLAYCONFIG_MAXPATH = (int)1024L;
    /**
     * {@snippet lang=c :
     * #define DISPLAYCONFIG_MAXPATH 1024
     * }
     */
    public static int DISPLAYCONFIG_MAXPATH() {
        return DISPLAYCONFIG_MAXPATH;
    }
    private static final int DISPLAYCONFIG_PATH_TARGET_MODE_IDX_INVALID = (int)65535L;
    /**
     * {@snippet lang=c :
     * #define DISPLAYCONFIG_PATH_TARGET_MODE_IDX_INVALID 65535
     * }
     */
    public static int DISPLAYCONFIG_PATH_TARGET_MODE_IDX_INVALID() {
        return DISPLAYCONFIG_PATH_TARGET_MODE_IDX_INVALID;
    }
    private static final int DISPLAYCONFIG_PATH_DESKTOP_IMAGE_IDX_INVALID = (int)65535L;
    /**
     * {@snippet lang=c :
     * #define DISPLAYCONFIG_PATH_DESKTOP_IMAGE_IDX_INVALID 65535
     * }
     */
    public static int DISPLAYCONFIG_PATH_DESKTOP_IMAGE_IDX_INVALID() {
        return DISPLAYCONFIG_PATH_DESKTOP_IMAGE_IDX_INVALID;
    }
    private static final int DISPLAYCONFIG_PATH_SOURCE_MODE_IDX_INVALID = (int)65535L;
    /**
     * {@snippet lang=c :
     * #define DISPLAYCONFIG_PATH_SOURCE_MODE_IDX_INVALID 65535
     * }
     */
    public static int DISPLAYCONFIG_PATH_SOURCE_MODE_IDX_INVALID() {
        return DISPLAYCONFIG_PATH_SOURCE_MODE_IDX_INVALID;
    }
    private static final int DISPLAYCONFIG_PATH_CLONE_GROUP_INVALID = (int)65535L;
    /**
     * {@snippet lang=c :
     * #define DISPLAYCONFIG_PATH_CLONE_GROUP_INVALID 65535
     * }
     */
    public static int DISPLAYCONFIG_PATH_CLONE_GROUP_INVALID() {
        return DISPLAYCONFIG_PATH_CLONE_GROUP_INVALID;
    }
    private static final int DISPLAYCONFIG_SOURCE_IN_USE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define DISPLAYCONFIG_SOURCE_IN_USE 1
     * }
     */
    public static int DISPLAYCONFIG_SOURCE_IN_USE() {
        return DISPLAYCONFIG_SOURCE_IN_USE;
    }
    private static final int DISPLAYCONFIG_TARGET_IN_USE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define DISPLAYCONFIG_TARGET_IN_USE 1
     * }
     */
    public static int DISPLAYCONFIG_TARGET_IN_USE() {
        return DISPLAYCONFIG_TARGET_IN_USE;
    }
    private static final int DISPLAYCONFIG_TARGET_FORCIBLE = (int)2L;
    /**
     * {@snippet lang=c :
     * #define DISPLAYCONFIG_TARGET_FORCIBLE 2
     * }
     */
    public static int DISPLAYCONFIG_TARGET_FORCIBLE() {
        return DISPLAYCONFIG_TARGET_FORCIBLE;
    }
    private static final int DISPLAYCONFIG_TARGET_FORCED_AVAILABILITY_BOOT = (int)4L;
    /**
     * {@snippet lang=c :
     * #define DISPLAYCONFIG_TARGET_FORCED_AVAILABILITY_BOOT 4
     * }
     */
    public static int DISPLAYCONFIG_TARGET_FORCED_AVAILABILITY_BOOT() {
        return DISPLAYCONFIG_TARGET_FORCED_AVAILABILITY_BOOT;
    }
    private static final int DISPLAYCONFIG_TARGET_FORCED_AVAILABILITY_PATH = (int)8L;
    /**
     * {@snippet lang=c :
     * #define DISPLAYCONFIG_TARGET_FORCED_AVAILABILITY_PATH 8
     * }
     */
    public static int DISPLAYCONFIG_TARGET_FORCED_AVAILABILITY_PATH() {
        return DISPLAYCONFIG_TARGET_FORCED_AVAILABILITY_PATH;
    }
    private static final int DISPLAYCONFIG_TARGET_FORCED_AVAILABILITY_SYSTEM = (int)16L;
    /**
     * {@snippet lang=c :
     * #define DISPLAYCONFIG_TARGET_FORCED_AVAILABILITY_SYSTEM 16
     * }
     */
    public static int DISPLAYCONFIG_TARGET_FORCED_AVAILABILITY_SYSTEM() {
        return DISPLAYCONFIG_TARGET_FORCED_AVAILABILITY_SYSTEM;
    }
    private static final int DISPLAYCONFIG_TARGET_IS_HMD = (int)32L;
    /**
     * {@snippet lang=c :
     * #define DISPLAYCONFIG_TARGET_IS_HMD 32
     * }
     */
    public static int DISPLAYCONFIG_TARGET_IS_HMD() {
        return DISPLAYCONFIG_TARGET_IS_HMD;
    }
    private static final int DISPLAYCONFIG_PATH_ACTIVE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define DISPLAYCONFIG_PATH_ACTIVE 1
     * }
     */
    public static int DISPLAYCONFIG_PATH_ACTIVE() {
        return DISPLAYCONFIG_PATH_ACTIVE;
    }
    private static final int DISPLAYCONFIG_PATH_PREFERRED_UNSCALED = (int)4L;
    /**
     * {@snippet lang=c :
     * #define DISPLAYCONFIG_PATH_PREFERRED_UNSCALED 4
     * }
     */
    public static int DISPLAYCONFIG_PATH_PREFERRED_UNSCALED() {
        return DISPLAYCONFIG_PATH_PREFERRED_UNSCALED;
    }
    private static final int DISPLAYCONFIG_PATH_SUPPORT_VIRTUAL_MODE = (int)8L;
    /**
     * {@snippet lang=c :
     * #define DISPLAYCONFIG_PATH_SUPPORT_VIRTUAL_MODE 8
     * }
     */
    public static int DISPLAYCONFIG_PATH_SUPPORT_VIRTUAL_MODE() {
        return DISPLAYCONFIG_PATH_SUPPORT_VIRTUAL_MODE;
    }
    private static final int DISPLAYCONFIG_PATH_BOOST_REFRESH_RATE = (int)16L;
    /**
     * {@snippet lang=c :
     * #define DISPLAYCONFIG_PATH_BOOST_REFRESH_RATE 16
     * }
     */
    public static int DISPLAYCONFIG_PATH_BOOST_REFRESH_RATE() {
        return DISPLAYCONFIG_PATH_BOOST_REFRESH_RATE;
    }
    private static final int DISPLAYCONFIG_PATH_VALID_FLAGS = (int)29L;
    /**
     * {@snippet lang=c :
     * #define DISPLAYCONFIG_PATH_VALID_FLAGS 29
     * }
     */
    public static int DISPLAYCONFIG_PATH_VALID_FLAGS() {
        return DISPLAYCONFIG_PATH_VALID_FLAGS;
    }
    private static final int QDC_ALL_PATHS = (int)1L;
    /**
     * {@snippet lang=c :
     * #define QDC_ALL_PATHS 1
     * }
     */
    public static int QDC_ALL_PATHS() {
        return QDC_ALL_PATHS;
    }
    private static final int QDC_ONLY_ACTIVE_PATHS = (int)2L;
    /**
     * {@snippet lang=c :
     * #define QDC_ONLY_ACTIVE_PATHS 2
     * }
     */
    public static int QDC_ONLY_ACTIVE_PATHS() {
        return QDC_ONLY_ACTIVE_PATHS;
    }
    private static final int QDC_DATABASE_CURRENT = (int)4L;
    /**
     * {@snippet lang=c :
     * #define QDC_DATABASE_CURRENT 4
     * }
     */
    public static int QDC_DATABASE_CURRENT() {
        return QDC_DATABASE_CURRENT;
    }
    private static final int QDC_VIRTUAL_MODE_AWARE = (int)16L;
    /**
     * {@snippet lang=c :
     * #define QDC_VIRTUAL_MODE_AWARE 16
     * }
     */
    public static int QDC_VIRTUAL_MODE_AWARE() {
        return QDC_VIRTUAL_MODE_AWARE;
    }
    private static final int QDC_INCLUDE_HMD = (int)32L;
    /**
     * {@snippet lang=c :
     * #define QDC_INCLUDE_HMD 32
     * }
     */
    public static int QDC_INCLUDE_HMD() {
        return QDC_INCLUDE_HMD;
    }
    private static final int QDC_VIRTUAL_REFRESH_RATE_AWARE = (int)64L;
    /**
     * {@snippet lang=c :
     * #define QDC_VIRTUAL_REFRESH_RATE_AWARE 64
     * }
     */
    public static int QDC_VIRTUAL_REFRESH_RATE_AWARE() {
        return QDC_VIRTUAL_REFRESH_RATE_AWARE;
    }
    private static final int SDC_TOPOLOGY_INTERNAL = (int)1L;
    /**
     * {@snippet lang=c :
     * #define SDC_TOPOLOGY_INTERNAL 1
     * }
     */
    public static int SDC_TOPOLOGY_INTERNAL() {
        return SDC_TOPOLOGY_INTERNAL;
    }
    private static final int SDC_TOPOLOGY_CLONE = (int)2L;
    /**
     * {@snippet lang=c :
     * #define SDC_TOPOLOGY_CLONE 2
     * }
     */
    public static int SDC_TOPOLOGY_CLONE() {
        return SDC_TOPOLOGY_CLONE;
    }
    private static final int SDC_TOPOLOGY_EXTEND = (int)4L;
    /**
     * {@snippet lang=c :
     * #define SDC_TOPOLOGY_EXTEND 4
     * }
     */
    public static int SDC_TOPOLOGY_EXTEND() {
        return SDC_TOPOLOGY_EXTEND;
    }
    private static final int SDC_TOPOLOGY_EXTERNAL = (int)8L;
    /**
     * {@snippet lang=c :
     * #define SDC_TOPOLOGY_EXTERNAL 8
     * }
     */
    public static int SDC_TOPOLOGY_EXTERNAL() {
        return SDC_TOPOLOGY_EXTERNAL;
    }
    private static final int SDC_TOPOLOGY_SUPPLIED = (int)16L;
    /**
     * {@snippet lang=c :
     * #define SDC_TOPOLOGY_SUPPLIED 16
     * }
     */
    public static int SDC_TOPOLOGY_SUPPLIED() {
        return SDC_TOPOLOGY_SUPPLIED;
    }
    private static final int SDC_USE_SUPPLIED_DISPLAY_CONFIG = (int)32L;
    /**
     * {@snippet lang=c :
     * #define SDC_USE_SUPPLIED_DISPLAY_CONFIG 32
     * }
     */
    public static int SDC_USE_SUPPLIED_DISPLAY_CONFIG() {
        return SDC_USE_SUPPLIED_DISPLAY_CONFIG;
    }
    private static final int SDC_VALIDATE = (int)64L;
    /**
     * {@snippet lang=c :
     * #define SDC_VALIDATE 64
     * }
     */
    public static int SDC_VALIDATE() {
        return SDC_VALIDATE;
    }
    private static final int SDC_APPLY = (int)128L;
    /**
     * {@snippet lang=c :
     * #define SDC_APPLY 128
     * }
     */
    public static int SDC_APPLY() {
        return SDC_APPLY;
    }
    private static final int SDC_NO_OPTIMIZATION = (int)256L;
    /**
     * {@snippet lang=c :
     * #define SDC_NO_OPTIMIZATION 256
     * }
     */
    public static int SDC_NO_OPTIMIZATION() {
        return SDC_NO_OPTIMIZATION;
    }
    private static final int SDC_SAVE_TO_DATABASE = (int)512L;
    /**
     * {@snippet lang=c :
     * #define SDC_SAVE_TO_DATABASE 512
     * }
     */
    public static int SDC_SAVE_TO_DATABASE() {
        return SDC_SAVE_TO_DATABASE;
    }
    private static final int SDC_ALLOW_CHANGES = (int)1024L;
    /**
     * {@snippet lang=c :
     * #define SDC_ALLOW_CHANGES 1024
     * }
     */
    public static int SDC_ALLOW_CHANGES() {
        return SDC_ALLOW_CHANGES;
    }
    private static final int SDC_PATH_PERSIST_IF_REQUIRED = (int)2048L;
    /**
     * {@snippet lang=c :
     * #define SDC_PATH_PERSIST_IF_REQUIRED 2048
     * }
     */
    public static int SDC_PATH_PERSIST_IF_REQUIRED() {
        return SDC_PATH_PERSIST_IF_REQUIRED;
    }
    private static final int SDC_FORCE_MODE_ENUMERATION = (int)4096L;
    /**
     * {@snippet lang=c :
     * #define SDC_FORCE_MODE_ENUMERATION 4096
     * }
     */
    public static int SDC_FORCE_MODE_ENUMERATION() {
        return SDC_FORCE_MODE_ENUMERATION;
    }
    private static final int SDC_ALLOW_PATH_ORDER_CHANGES = (int)8192L;
    /**
     * {@snippet lang=c :
     * #define SDC_ALLOW_PATH_ORDER_CHANGES 8192
     * }
     */
    public static int SDC_ALLOW_PATH_ORDER_CHANGES() {
        return SDC_ALLOW_PATH_ORDER_CHANGES;
    }
    private static final int SDC_VIRTUAL_MODE_AWARE = (int)32768L;
    /**
     * {@snippet lang=c :
     * #define SDC_VIRTUAL_MODE_AWARE 32768
     * }
     */
    public static int SDC_VIRTUAL_MODE_AWARE() {
        return SDC_VIRTUAL_MODE_AWARE;
    }
    private static final int SDC_VIRTUAL_REFRESH_RATE_AWARE = (int)131072L;
    /**
     * {@snippet lang=c :
     * #define SDC_VIRTUAL_REFRESH_RATE_AWARE 131072
     * }
     */
    public static int SDC_VIRTUAL_REFRESH_RATE_AWARE() {
        return SDC_VIRTUAL_REFRESH_RATE_AWARE;
    }
    private static final int RDH_RECTANGLES = (int)1L;
    /**
     * {@snippet lang=c :
     * #define RDH_RECTANGLES 1
     * }
     */
    public static int RDH_RECTANGLES() {
        return RDH_RECTANGLES;
    }
    private static final int SYSRGN = (int)4L;
    /**
     * {@snippet lang=c :
     * #define SYSRGN 4
     * }
     */
    public static int SYSRGN() {
        return SYSRGN;
    }
    private static final int GGO_METRICS = (int)0L;
    /**
     * {@snippet lang=c :
     * #define GGO_METRICS 0
     * }
     */
    public static int GGO_METRICS() {
        return GGO_METRICS;
    }
    private static final int GGO_BITMAP = (int)1L;
    /**
     * {@snippet lang=c :
     * #define GGO_BITMAP 1
     * }
     */
    public static int GGO_BITMAP() {
        return GGO_BITMAP;
    }
    private static final int GGO_NATIVE = (int)2L;
    /**
     * {@snippet lang=c :
     * #define GGO_NATIVE 2
     * }
     */
    public static int GGO_NATIVE() {
        return GGO_NATIVE;
    }
    private static final int GGO_BEZIER = (int)3L;
    /**
     * {@snippet lang=c :
     * #define GGO_BEZIER 3
     * }
     */
    public static int GGO_BEZIER() {
        return GGO_BEZIER;
    }
    private static final int GGO_GRAY2_BITMAP = (int)4L;
    /**
     * {@snippet lang=c :
     * #define GGO_GRAY2_BITMAP 4
     * }
     */
    public static int GGO_GRAY2_BITMAP() {
        return GGO_GRAY2_BITMAP;
    }
    private static final int GGO_GRAY4_BITMAP = (int)5L;
    /**
     * {@snippet lang=c :
     * #define GGO_GRAY4_BITMAP 5
     * }
     */
    public static int GGO_GRAY4_BITMAP() {
        return GGO_GRAY4_BITMAP;
    }
    private static final int GGO_GRAY8_BITMAP = (int)6L;
    /**
     * {@snippet lang=c :
     * #define GGO_GRAY8_BITMAP 6
     * }
     */
    public static int GGO_GRAY8_BITMAP() {
        return GGO_GRAY8_BITMAP;
    }
    private static final int GGO_GLYPH_INDEX = (int)128L;
    /**
     * {@snippet lang=c :
     * #define GGO_GLYPH_INDEX 128
     * }
     */
    public static int GGO_GLYPH_INDEX() {
        return GGO_GLYPH_INDEX;
    }
    private static final int GGO_UNHINTED = (int)256L;
    /**
     * {@snippet lang=c :
     * #define GGO_UNHINTED 256
     * }
     */
    public static int GGO_UNHINTED() {
        return GGO_UNHINTED;
    }
    private static final int TT_POLYGON_TYPE = (int)24L;
    /**
     * {@snippet lang=c :
     * #define TT_POLYGON_TYPE 24
     * }
     */
    public static int TT_POLYGON_TYPE() {
        return TT_POLYGON_TYPE;
    }
    private static final int TT_PRIM_LINE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define TT_PRIM_LINE 1
     * }
     */
    public static int TT_PRIM_LINE() {
        return TT_PRIM_LINE;
    }
    private static final int TT_PRIM_QSPLINE = (int)2L;
    /**
     * {@snippet lang=c :
     * #define TT_PRIM_QSPLINE 2
     * }
     */
    public static int TT_PRIM_QSPLINE() {
        return TT_PRIM_QSPLINE;
    }
    private static final int TT_PRIM_CSPLINE = (int)3L;
    /**
     * {@snippet lang=c :
     * #define TT_PRIM_CSPLINE 3
     * }
     */
    public static int TT_PRIM_CSPLINE() {
        return TT_PRIM_CSPLINE;
    }
    private static final int GCP_DBCS = (int)1L;
    /**
     * {@snippet lang=c :
     * #define GCP_DBCS 1
     * }
     */
    public static int GCP_DBCS() {
        return GCP_DBCS;
    }
    private static final int GCP_REORDER = (int)2L;
    /**
     * {@snippet lang=c :
     * #define GCP_REORDER 2
     * }
     */
    public static int GCP_REORDER() {
        return GCP_REORDER;
    }
    private static final int GCP_USEKERNING = (int)8L;
    /**
     * {@snippet lang=c :
     * #define GCP_USEKERNING 8
     * }
     */
    public static int GCP_USEKERNING() {
        return GCP_USEKERNING;
    }
    private static final int GCP_GLYPHSHAPE = (int)16L;
    /**
     * {@snippet lang=c :
     * #define GCP_GLYPHSHAPE 16
     * }
     */
    public static int GCP_GLYPHSHAPE() {
        return GCP_GLYPHSHAPE;
    }
    private static final int GCP_LIGATE = (int)32L;
    /**
     * {@snippet lang=c :
     * #define GCP_LIGATE 32
     * }
     */
    public static int GCP_LIGATE() {
        return GCP_LIGATE;
    }
    private static final int GCP_DIACRITIC = (int)256L;
    /**
     * {@snippet lang=c :
     * #define GCP_DIACRITIC 256
     * }
     */
    public static int GCP_DIACRITIC() {
        return GCP_DIACRITIC;
    }
    private static final int GCP_KASHIDA = (int)1024L;
    /**
     * {@snippet lang=c :
     * #define GCP_KASHIDA 1024
     * }
     */
    public static int GCP_KASHIDA() {
        return GCP_KASHIDA;
    }
    private static final int GCP_ERROR = (int)32768L;
    /**
     * {@snippet lang=c :
     * #define GCP_ERROR 32768
     * }
     */
    public static int GCP_ERROR() {
        return GCP_ERROR;
    }
    private static final int FLI_MASK = (int)4155L;
    /**
     * {@snippet lang=c :
     * #define FLI_MASK 4155
     * }
     */
    public static int FLI_MASK() {
        return FLI_MASK;
    }
    private static final int GCPCLASS_LATIN = (int)1L;
    /**
     * {@snippet lang=c :
     * #define GCPCLASS_LATIN 1
     * }
     */
    public static int GCPCLASS_LATIN() {
        return GCPCLASS_LATIN;
    }
    private static final int GCPCLASS_HEBREW = (int)2L;
    /**
     * {@snippet lang=c :
     * #define GCPCLASS_HEBREW 2
     * }
     */
    public static int GCPCLASS_HEBREW() {
        return GCPCLASS_HEBREW;
    }
    private static final int GCPCLASS_ARABIC = (int)2L;
    /**
     * {@snippet lang=c :
     * #define GCPCLASS_ARABIC 2
     * }
     */
    public static int GCPCLASS_ARABIC() {
        return GCPCLASS_ARABIC;
    }
    private static final int GCPCLASS_NEUTRAL = (int)3L;
    /**
     * {@snippet lang=c :
     * #define GCPCLASS_NEUTRAL 3
     * }
     */
    public static int GCPCLASS_NEUTRAL() {
        return GCPCLASS_NEUTRAL;
    }
    private static final int GCPCLASS_LOCALNUMBER = (int)4L;
    /**
     * {@snippet lang=c :
     * #define GCPCLASS_LOCALNUMBER 4
     * }
     */
    public static int GCPCLASS_LOCALNUMBER() {
        return GCPCLASS_LOCALNUMBER;
    }
    private static final int GCPCLASS_LATINNUMBER = (int)5L;
    /**
     * {@snippet lang=c :
     * #define GCPCLASS_LATINNUMBER 5
     * }
     */
    public static int GCPCLASS_LATINNUMBER() {
        return GCPCLASS_LATINNUMBER;
    }
    private static final int GCPCLASS_LATINNUMERICTERMINATOR = (int)6L;
    /**
     * {@snippet lang=c :
     * #define GCPCLASS_LATINNUMERICTERMINATOR 6
     * }
     */
    public static int GCPCLASS_LATINNUMERICTERMINATOR() {
        return GCPCLASS_LATINNUMERICTERMINATOR;
    }
    private static final int GCPCLASS_LATINNUMERICSEPARATOR = (int)7L;
    /**
     * {@snippet lang=c :
     * #define GCPCLASS_LATINNUMERICSEPARATOR 7
     * }
     */
    public static int GCPCLASS_LATINNUMERICSEPARATOR() {
        return GCPCLASS_LATINNUMERICSEPARATOR;
    }
    private static final int GCPCLASS_NUMERICSEPARATOR = (int)8L;
    /**
     * {@snippet lang=c :
     * #define GCPCLASS_NUMERICSEPARATOR 8
     * }
     */
    public static int GCPCLASS_NUMERICSEPARATOR() {
        return GCPCLASS_NUMERICSEPARATOR;
    }
    private static final int GCPCLASS_PREBOUNDLTR = (int)128L;
    /**
     * {@snippet lang=c :
     * #define GCPCLASS_PREBOUNDLTR 128
     * }
     */
    public static int GCPCLASS_PREBOUNDLTR() {
        return GCPCLASS_PREBOUNDLTR;
    }
    private static final int GCPCLASS_PREBOUNDRTL = (int)64L;
    /**
     * {@snippet lang=c :
     * #define GCPCLASS_PREBOUNDRTL 64
     * }
     */
    public static int GCPCLASS_PREBOUNDRTL() {
        return GCPCLASS_PREBOUNDRTL;
    }
    private static final int GCPCLASS_POSTBOUNDLTR = (int)32L;
    /**
     * {@snippet lang=c :
     * #define GCPCLASS_POSTBOUNDLTR 32
     * }
     */
    public static int GCPCLASS_POSTBOUNDLTR() {
        return GCPCLASS_POSTBOUNDLTR;
    }
    private static final int GCPCLASS_POSTBOUNDRTL = (int)16L;
    /**
     * {@snippet lang=c :
     * #define GCPCLASS_POSTBOUNDRTL 16
     * }
     */
    public static int GCPCLASS_POSTBOUNDRTL() {
        return GCPCLASS_POSTBOUNDRTL;
    }
    private static final int GCPGLYPH_LINKBEFORE = (int)32768L;
    /**
     * {@snippet lang=c :
     * #define GCPGLYPH_LINKBEFORE 32768
     * }
     */
    public static int GCPGLYPH_LINKBEFORE() {
        return GCPGLYPH_LINKBEFORE;
    }
    private static final int GCPGLYPH_LINKAFTER = (int)16384L;
    /**
     * {@snippet lang=c :
     * #define GCPGLYPH_LINKAFTER 16384
     * }
     */
    public static int GCPGLYPH_LINKAFTER() {
        return GCPGLYPH_LINKAFTER;
    }
    private static final int TT_AVAILABLE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define TT_AVAILABLE 1
     * }
     */
    public static int TT_AVAILABLE() {
        return TT_AVAILABLE;
    }
    private static final int TT_ENABLED = (int)2L;
    /**
     * {@snippet lang=c :
     * #define TT_ENABLED 2
     * }
     */
    public static int TT_ENABLED() {
        return TT_ENABLED;
    }
    private static final int PFD_TYPE_RGBA = (int)0L;
    /**
     * {@snippet lang=c :
     * #define PFD_TYPE_RGBA 0
     * }
     */
    public static int PFD_TYPE_RGBA() {
        return PFD_TYPE_RGBA;
    }
    private static final int PFD_TYPE_COLORINDEX = (int)1L;
    /**
     * {@snippet lang=c :
     * #define PFD_TYPE_COLORINDEX 1
     * }
     */
    public static int PFD_TYPE_COLORINDEX() {
        return PFD_TYPE_COLORINDEX;
    }
    private static final int PFD_MAIN_PLANE = (int)0L;
    /**
     * {@snippet lang=c :
     * #define PFD_MAIN_PLANE 0
     * }
     */
    public static int PFD_MAIN_PLANE() {
        return PFD_MAIN_PLANE;
    }
    private static final int PFD_OVERLAY_PLANE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define PFD_OVERLAY_PLANE 1
     * }
     */
    public static int PFD_OVERLAY_PLANE() {
        return PFD_OVERLAY_PLANE;
    }
    private static final int PFD_DOUBLEBUFFER = (int)1L;
    /**
     * {@snippet lang=c :
     * #define PFD_DOUBLEBUFFER 1
     * }
     */
    public static int PFD_DOUBLEBUFFER() {
        return PFD_DOUBLEBUFFER;
    }
    private static final int PFD_STEREO = (int)2L;
    /**
     * {@snippet lang=c :
     * #define PFD_STEREO 2
     * }
     */
    public static int PFD_STEREO() {
        return PFD_STEREO;
    }
    private static final int PFD_DRAW_TO_WINDOW = (int)4L;
    /**
     * {@snippet lang=c :
     * #define PFD_DRAW_TO_WINDOW 4
     * }
     */
    public static int PFD_DRAW_TO_WINDOW() {
        return PFD_DRAW_TO_WINDOW;
    }
    private static final int PFD_DRAW_TO_BITMAP = (int)8L;
    /**
     * {@snippet lang=c :
     * #define PFD_DRAW_TO_BITMAP 8
     * }
     */
    public static int PFD_DRAW_TO_BITMAP() {
        return PFD_DRAW_TO_BITMAP;
    }
    private static final int PFD_SUPPORT_GDI = (int)16L;
    /**
     * {@snippet lang=c :
     * #define PFD_SUPPORT_GDI 16
     * }
     */
    public static int PFD_SUPPORT_GDI() {
        return PFD_SUPPORT_GDI;
    }
    private static final int PFD_SUPPORT_OPENGL = (int)32L;
    /**
     * {@snippet lang=c :
     * #define PFD_SUPPORT_OPENGL 32
     * }
     */
    public static int PFD_SUPPORT_OPENGL() {
        return PFD_SUPPORT_OPENGL;
    }
    private static final int PFD_GENERIC_FORMAT = (int)64L;
    /**
     * {@snippet lang=c :
     * #define PFD_GENERIC_FORMAT 64
     * }
     */
    public static int PFD_GENERIC_FORMAT() {
        return PFD_GENERIC_FORMAT;
    }
    private static final int PFD_NEED_PALETTE = (int)128L;
    /**
     * {@snippet lang=c :
     * #define PFD_NEED_PALETTE 128
     * }
     */
    public static int PFD_NEED_PALETTE() {
        return PFD_NEED_PALETTE;
    }
    private static final int PFD_NEED_SYSTEM_PALETTE = (int)256L;
    /**
     * {@snippet lang=c :
     * #define PFD_NEED_SYSTEM_PALETTE 256
     * }
     */
    public static int PFD_NEED_SYSTEM_PALETTE() {
        return PFD_NEED_SYSTEM_PALETTE;
    }
    private static final int PFD_SWAP_EXCHANGE = (int)512L;
    /**
     * {@snippet lang=c :
     * #define PFD_SWAP_EXCHANGE 512
     * }
     */
    public static int PFD_SWAP_EXCHANGE() {
        return PFD_SWAP_EXCHANGE;
    }
    private static final int PFD_SWAP_COPY = (int)1024L;
    /**
     * {@snippet lang=c :
     * #define PFD_SWAP_COPY 1024
     * }
     */
    public static int PFD_SWAP_COPY() {
        return PFD_SWAP_COPY;
    }
    private static final int PFD_SWAP_LAYER_BUFFERS = (int)2048L;
    /**
     * {@snippet lang=c :
     * #define PFD_SWAP_LAYER_BUFFERS 2048
     * }
     */
    public static int PFD_SWAP_LAYER_BUFFERS() {
        return PFD_SWAP_LAYER_BUFFERS;
    }
    private static final int PFD_GENERIC_ACCELERATED = (int)4096L;
    /**
     * {@snippet lang=c :
     * #define PFD_GENERIC_ACCELERATED 4096
     * }
     */
    public static int PFD_GENERIC_ACCELERATED() {
        return PFD_GENERIC_ACCELERATED;
    }
    private static final int PFD_SUPPORT_DIRECTDRAW = (int)8192L;
    /**
     * {@snippet lang=c :
     * #define PFD_SUPPORT_DIRECTDRAW 8192
     * }
     */
    public static int PFD_SUPPORT_DIRECTDRAW() {
        return PFD_SUPPORT_DIRECTDRAW;
    }
    private static final int PFD_DIRECT3D_ACCELERATED = (int)16384L;
    /**
     * {@snippet lang=c :
     * #define PFD_DIRECT3D_ACCELERATED 16384
     * }
     */
    public static int PFD_DIRECT3D_ACCELERATED() {
        return PFD_DIRECT3D_ACCELERATED;
    }
    private static final int PFD_SUPPORT_COMPOSITION = (int)32768L;
    /**
     * {@snippet lang=c :
     * #define PFD_SUPPORT_COMPOSITION 32768
     * }
     */
    public static int PFD_SUPPORT_COMPOSITION() {
        return PFD_SUPPORT_COMPOSITION;
    }
    private static final int PFD_DEPTH_DONTCARE = (int)536870912L;
    /**
     * {@snippet lang=c :
     * #define PFD_DEPTH_DONTCARE 536870912
     * }
     */
    public static int PFD_DEPTH_DONTCARE() {
        return PFD_DEPTH_DONTCARE;
    }
    private static final int PFD_DOUBLEBUFFER_DONTCARE = (int)1073741824L;
    /**
     * {@snippet lang=c :
     * #define PFD_DOUBLEBUFFER_DONTCARE 1073741824
     * }
     */
    public static int PFD_DOUBLEBUFFER_DONTCARE() {
        return PFD_DOUBLEBUFFER_DONTCARE;
    }
    private static final int DC_BINADJUST = (int)19L;
    /**
     * {@snippet lang=c :
     * #define DC_BINADJUST 19
     * }
     */
    public static int DC_BINADJUST() {
        return DC_BINADJUST;
    }
    private static final int DC_EMF_COMPLIANT = (int)20L;
    /**
     * {@snippet lang=c :
     * #define DC_EMF_COMPLIANT 20
     * }
     */
    public static int DC_EMF_COMPLIANT() {
        return DC_EMF_COMPLIANT;
    }
    private static final int DC_DATATYPE_PRODUCED = (int)21L;
    /**
     * {@snippet lang=c :
     * #define DC_DATATYPE_PRODUCED 21
     * }
     */
    public static int DC_DATATYPE_PRODUCED() {
        return DC_DATATYPE_PRODUCED;
    }
    private static final int DC_COLLATE = (int)22L;
    /**
     * {@snippet lang=c :
     * #define DC_COLLATE 22
     * }
     */
    public static int DC_COLLATE() {
        return DC_COLLATE;
    }
    private static final int DC_MANUFACTURER = (int)23L;
    /**
     * {@snippet lang=c :
     * #define DC_MANUFACTURER 23
     * }
     */
    public static int DC_MANUFACTURER() {
        return DC_MANUFACTURER;
    }
    private static final int DC_MODEL = (int)24L;
    /**
     * {@snippet lang=c :
     * #define DC_MODEL 24
     * }
     */
    public static int DC_MODEL() {
        return DC_MODEL;
    }
    private static final int DC_PERSONALITY = (int)25L;
    /**
     * {@snippet lang=c :
     * #define DC_PERSONALITY 25
     * }
     */
    public static int DC_PERSONALITY() {
        return DC_PERSONALITY;
    }
    private static final int DC_PRINTRATE = (int)26L;
    /**
     * {@snippet lang=c :
     * #define DC_PRINTRATE 26
     * }
     */
    public static int DC_PRINTRATE() {
        return DC_PRINTRATE;
    }
    private static final int DC_PRINTRATEUNIT = (int)27L;
    /**
     * {@snippet lang=c :
     * #define DC_PRINTRATEUNIT 27
     * }
     */
    public static int DC_PRINTRATEUNIT() {
        return DC_PRINTRATEUNIT;
    }
    private static final int PRINTRATEUNIT_PPM = (int)1L;
    /**
     * {@snippet lang=c :
     * #define PRINTRATEUNIT_PPM 1
     * }
     */
    public static int PRINTRATEUNIT_PPM() {
        return PRINTRATEUNIT_PPM;
    }
    private static final int PRINTRATEUNIT_CPS = (int)2L;
    /**
     * {@snippet lang=c :
     * #define PRINTRATEUNIT_CPS 2
     * }
     */
    public static int PRINTRATEUNIT_CPS() {
        return PRINTRATEUNIT_CPS;
    }
    private static final int PRINTRATEUNIT_LPM = (int)3L;
    /**
     * {@snippet lang=c :
     * #define PRINTRATEUNIT_LPM 3
     * }
     */
    public static int PRINTRATEUNIT_LPM() {
        return PRINTRATEUNIT_LPM;
    }
    private static final int PRINTRATEUNIT_IPM = (int)4L;
    /**
     * {@snippet lang=c :
     * #define PRINTRATEUNIT_IPM 4
     * }
     */
    public static int PRINTRATEUNIT_IPM() {
        return PRINTRATEUNIT_IPM;
    }
    private static final int DC_PRINTERMEM = (int)28L;
    /**
     * {@snippet lang=c :
     * #define DC_PRINTERMEM 28
     * }
     */
    public static int DC_PRINTERMEM() {
        return DC_PRINTERMEM;
    }
    private static final int DC_MEDIAREADY = (int)29L;
    /**
     * {@snippet lang=c :
     * #define DC_MEDIAREADY 29
     * }
     */
    public static int DC_MEDIAREADY() {
        return DC_MEDIAREADY;
    }
    private static final int DC_STAPLE = (int)30L;
    /**
     * {@snippet lang=c :
     * #define DC_STAPLE 30
     * }
     */
    public static int DC_STAPLE() {
        return DC_STAPLE;
    }
    private static final int DC_PRINTRATEPPM = (int)31L;
    /**
     * {@snippet lang=c :
     * #define DC_PRINTRATEPPM 31
     * }
     */
    public static int DC_PRINTRATEPPM() {
        return DC_PRINTRATEPPM;
    }
    private static final int DC_COLORDEVICE = (int)32L;
    /**
     * {@snippet lang=c :
     * #define DC_COLORDEVICE 32
     * }
     */
    public static int DC_COLORDEVICE() {
        return DC_COLORDEVICE;
    }
    private static final int DC_NUP = (int)33L;
    /**
     * {@snippet lang=c :
     * #define DC_NUP 33
     * }
     */
    public static int DC_NUP() {
        return DC_NUP;
    }
    private static final int DC_MEDIATYPENAMES = (int)34L;
    /**
     * {@snippet lang=c :
     * #define DC_MEDIATYPENAMES 34
     * }
     */
    public static int DC_MEDIATYPENAMES() {
        return DC_MEDIATYPENAMES;
    }
    private static final int DC_MEDIATYPES = (int)35L;
    /**
     * {@snippet lang=c :
     * #define DC_MEDIATYPES 35
     * }
     */
    public static int DC_MEDIATYPES() {
        return DC_MEDIATYPES;
    }
    private static final int DCBA_FACEUPNONE = (int)0L;
    /**
     * {@snippet lang=c :
     * #define DCBA_FACEUPNONE 0
     * }
     */
    public static int DCBA_FACEUPNONE() {
        return DCBA_FACEUPNONE;
    }
    private static final int DCBA_FACEUPCENTER = (int)1L;
    /**
     * {@snippet lang=c :
     * #define DCBA_FACEUPCENTER 1
     * }
     */
    public static int DCBA_FACEUPCENTER() {
        return DCBA_FACEUPCENTER;
    }
    private static final int DCBA_FACEUPLEFT = (int)2L;
    /**
     * {@snippet lang=c :
     * #define DCBA_FACEUPLEFT 2
     * }
     */
    public static int DCBA_FACEUPLEFT() {
        return DCBA_FACEUPLEFT;
    }
    private static final int DCBA_FACEUPRIGHT = (int)3L;
    /**
     * {@snippet lang=c :
     * #define DCBA_FACEUPRIGHT 3
     * }
     */
    public static int DCBA_FACEUPRIGHT() {
        return DCBA_FACEUPRIGHT;
    }
    private static final int DCBA_FACEDOWNNONE = (int)256L;
    /**
     * {@snippet lang=c :
     * #define DCBA_FACEDOWNNONE 256
     * }
     */
    public static int DCBA_FACEDOWNNONE() {
        return DCBA_FACEDOWNNONE;
    }
    private static final int DCBA_FACEDOWNCENTER = (int)257L;
    /**
     * {@snippet lang=c :
     * #define DCBA_FACEDOWNCENTER 257
     * }
     */
    public static int DCBA_FACEDOWNCENTER() {
        return DCBA_FACEDOWNCENTER;
    }
    private static final int DCBA_FACEDOWNLEFT = (int)258L;
    /**
     * {@snippet lang=c :
     * #define DCBA_FACEDOWNLEFT 258
     * }
     */
    public static int DCBA_FACEDOWNLEFT() {
        return DCBA_FACEDOWNLEFT;
    }
    private static final int DCBA_FACEDOWNRIGHT = (int)259L;
    /**
     * {@snippet lang=c :
     * #define DCBA_FACEDOWNRIGHT 259
     * }
     */
    public static int DCBA_FACEDOWNRIGHT() {
        return DCBA_FACEDOWNRIGHT;
    }
    private static final int GS_8BIT_INDICES = (int)1L;
    /**
     * {@snippet lang=c :
     * #define GS_8BIT_INDICES 1
     * }
     */
    public static int GS_8BIT_INDICES() {
        return GS_8BIT_INDICES;
    }
    private static final int GGI_MARK_NONEXISTING_GLYPHS = (int)1L;
    /**
     * {@snippet lang=c :
     * #define GGI_MARK_NONEXISTING_GLYPHS 1
     * }
     */
    public static int GGI_MARK_NONEXISTING_GLYPHS() {
        return GGI_MARK_NONEXISTING_GLYPHS;
    }
    private static final int MM_MAX_NUMAXES = (int)16L;
    /**
     * {@snippet lang=c :
     * #define MM_MAX_NUMAXES 16
     * }
     */
    public static int MM_MAX_NUMAXES() {
        return MM_MAX_NUMAXES;
    }
    private static final int FR_PRIVATE = (int)16L;
    /**
     * {@snippet lang=c :
     * #define FR_PRIVATE 16
     * }
     */
    public static int FR_PRIVATE() {
        return FR_PRIVATE;
    }
    private static final int FR_NOT_ENUM = (int)32L;
    /**
     * {@snippet lang=c :
     * #define FR_NOT_ENUM 32
     * }
     */
    public static int FR_NOT_ENUM() {
        return FR_NOT_ENUM;
    }
    private static final int MM_MAX_AXES_NAMELEN = (int)16L;
    /**
     * {@snippet lang=c :
     * #define MM_MAX_AXES_NAMELEN 16
     * }
     */
    public static int MM_MAX_AXES_NAMELEN() {
        return MM_MAX_AXES_NAMELEN;
    }
    private static final int AC_SRC_OVER = (int)0L;
    /**
     * {@snippet lang=c :
     * #define AC_SRC_OVER 0
     * }
     */
    public static int AC_SRC_OVER() {
        return AC_SRC_OVER;
    }
    private static final int AC_SRC_ALPHA = (int)1L;
    /**
     * {@snippet lang=c :
     * #define AC_SRC_ALPHA 1
     * }
     */
    public static int AC_SRC_ALPHA() {
        return AC_SRC_ALPHA;
    }
    private static final int GRADIENT_FILL_RECT_H = (int)0L;
    /**
     * {@snippet lang=c :
     * #define GRADIENT_FILL_RECT_H 0
     * }
     */
    public static int GRADIENT_FILL_RECT_H() {
        return GRADIENT_FILL_RECT_H;
    }
    private static final int GRADIENT_FILL_RECT_V = (int)1L;
    /**
     * {@snippet lang=c :
     * #define GRADIENT_FILL_RECT_V 1
     * }
     */
    public static int GRADIENT_FILL_RECT_V() {
        return GRADIENT_FILL_RECT_V;
    }
    private static final int GRADIENT_FILL_TRIANGLE = (int)2L;
    /**
     * {@snippet lang=c :
     * #define GRADIENT_FILL_TRIANGLE 2
     * }
     */
    public static int GRADIENT_FILL_TRIANGLE() {
        return GRADIENT_FILL_TRIANGLE;
    }
    private static final int GRADIENT_FILL_OP_FLAG = (int)255L;
    /**
     * {@snippet lang=c :
     * #define GRADIENT_FILL_OP_FLAG 255
     * }
     */
    public static int GRADIENT_FILL_OP_FLAG() {
        return GRADIENT_FILL_OP_FLAG;
    }
    private static final int CA_NEGATIVE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define CA_NEGATIVE 1
     * }
     */
    public static int CA_NEGATIVE() {
        return CA_NEGATIVE;
    }
    private static final int CA_LOG_FILTER = (int)2L;
    /**
     * {@snippet lang=c :
     * #define CA_LOG_FILTER 2
     * }
     */
    public static int CA_LOG_FILTER() {
        return CA_LOG_FILTER;
    }
    private static final int ILLUMINANT_DEVICE_DEFAULT = (int)0L;
    /**
     * {@snippet lang=c :
     * #define ILLUMINANT_DEVICE_DEFAULT 0
     * }
     */
    public static int ILLUMINANT_DEVICE_DEFAULT() {
        return ILLUMINANT_DEVICE_DEFAULT;
    }
    private static final int ILLUMINANT_A = (int)1L;
    /**
     * {@snippet lang=c :
     * #define ILLUMINANT_A 1
     * }
     */
    public static int ILLUMINANT_A() {
        return ILLUMINANT_A;
    }
    private static final int ILLUMINANT_B = (int)2L;
    /**
     * {@snippet lang=c :
     * #define ILLUMINANT_B 2
     * }
     */
    public static int ILLUMINANT_B() {
        return ILLUMINANT_B;
    }
    private static final int ILLUMINANT_C = (int)3L;
    /**
     * {@snippet lang=c :
     * #define ILLUMINANT_C 3
     * }
     */
    public static int ILLUMINANT_C() {
        return ILLUMINANT_C;
    }
    private static final int ILLUMINANT_D50 = (int)4L;
    /**
     * {@snippet lang=c :
     * #define ILLUMINANT_D50 4
     * }
     */
    public static int ILLUMINANT_D50() {
        return ILLUMINANT_D50;
    }
    private static final int ILLUMINANT_D55 = (int)5L;
    /**
     * {@snippet lang=c :
     * #define ILLUMINANT_D55 5
     * }
     */
    public static int ILLUMINANT_D55() {
        return ILLUMINANT_D55;
    }
    private static final int ILLUMINANT_D65 = (int)6L;
    /**
     * {@snippet lang=c :
     * #define ILLUMINANT_D65 6
     * }
     */
    public static int ILLUMINANT_D65() {
        return ILLUMINANT_D65;
    }
    private static final int ILLUMINANT_D75 = (int)7L;
    /**
     * {@snippet lang=c :
     * #define ILLUMINANT_D75 7
     * }
     */
    public static int ILLUMINANT_D75() {
        return ILLUMINANT_D75;
    }
    private static final int ILLUMINANT_F2 = (int)8L;
    /**
     * {@snippet lang=c :
     * #define ILLUMINANT_F2 8
     * }
     */
    public static int ILLUMINANT_F2() {
        return ILLUMINANT_F2;
    }
    private static final int DI_APPBANDING = (int)1L;
    /**
     * {@snippet lang=c :
     * #define DI_APPBANDING 1
     * }
     */
    public static int DI_APPBANDING() {
        return DI_APPBANDING;
    }
    private static final int DI_ROPS_READ_DESTINATION = (int)2L;
    /**
     * {@snippet lang=c :
     * #define DI_ROPS_READ_DESTINATION 2
     * }
     */
    public static int DI_ROPS_READ_DESTINATION() {
        return DI_ROPS_READ_DESTINATION;
    }
    private static final int FONTMAPPER_MAX = (int)10L;
    /**
     * {@snippet lang=c :
     * #define FONTMAPPER_MAX 10
     * }
     */
    public static int FONTMAPPER_MAX() {
        return FONTMAPPER_MAX;
    }
    private static final int ICM_OFF = (int)1L;
    /**
     * {@snippet lang=c :
     * #define ICM_OFF 1
     * }
     */
    public static int ICM_OFF() {
        return ICM_OFF;
    }
    private static final int ICM_ON = (int)2L;
    /**
     * {@snippet lang=c :
     * #define ICM_ON 2
     * }
     */
    public static int ICM_ON() {
        return ICM_ON;
    }
    private static final int ICM_QUERY = (int)3L;
    /**
     * {@snippet lang=c :
     * #define ICM_QUERY 3
     * }
     */
    public static int ICM_QUERY() {
        return ICM_QUERY;
    }
    private static final int ICM_DONE_OUTSIDEDC = (int)4L;
    /**
     * {@snippet lang=c :
     * #define ICM_DONE_OUTSIDEDC 4
     * }
     */
    public static int ICM_DONE_OUTSIDEDC() {
        return ICM_DONE_OUTSIDEDC;
    }
    private static final int ENHMETA_SIGNATURE = (int)1179469088L;
    /**
     * {@snippet lang=c :
     * #define ENHMETA_SIGNATURE 1179469088
     * }
     */
    public static int ENHMETA_SIGNATURE() {
        return ENHMETA_SIGNATURE;
    }
    private static final int EMR_HEADER = (int)1L;
    /**
     * {@snippet lang=c :
     * #define EMR_HEADER 1
     * }
     */
    public static int EMR_HEADER() {
        return EMR_HEADER;
    }
    private static final int EMR_POLYBEZIER = (int)2L;
    /**
     * {@snippet lang=c :
     * #define EMR_POLYBEZIER 2
     * }
     */
    public static int EMR_POLYBEZIER() {
        return EMR_POLYBEZIER;
    }
    private static final int EMR_POLYGON = (int)3L;
    /**
     * {@snippet lang=c :
     * #define EMR_POLYGON 3
     * }
     */
    public static int EMR_POLYGON() {
        return EMR_POLYGON;
    }
    private static final int EMR_POLYLINE = (int)4L;
    /**
     * {@snippet lang=c :
     * #define EMR_POLYLINE 4
     * }
     */
    public static int EMR_POLYLINE() {
        return EMR_POLYLINE;
    }
    private static final int EMR_POLYBEZIERTO = (int)5L;
    /**
     * {@snippet lang=c :
     * #define EMR_POLYBEZIERTO 5
     * }
     */
    public static int EMR_POLYBEZIERTO() {
        return EMR_POLYBEZIERTO;
    }
    private static final int EMR_POLYLINETO = (int)6L;
    /**
     * {@snippet lang=c :
     * #define EMR_POLYLINETO 6
     * }
     */
    public static int EMR_POLYLINETO() {
        return EMR_POLYLINETO;
    }
    private static final int EMR_POLYPOLYLINE = (int)7L;
    /**
     * {@snippet lang=c :
     * #define EMR_POLYPOLYLINE 7
     * }
     */
    public static int EMR_POLYPOLYLINE() {
        return EMR_POLYPOLYLINE;
    }
    private static final int EMR_POLYPOLYGON = (int)8L;
    /**
     * {@snippet lang=c :
     * #define EMR_POLYPOLYGON 8
     * }
     */
    public static int EMR_POLYPOLYGON() {
        return EMR_POLYPOLYGON;
    }
    private static final int EMR_SETWINDOWEXTEX = (int)9L;
    /**
     * {@snippet lang=c :
     * #define EMR_SETWINDOWEXTEX 9
     * }
     */
    public static int EMR_SETWINDOWEXTEX() {
        return EMR_SETWINDOWEXTEX;
    }
    private static final int EMR_SETWINDOWORGEX = (int)10L;
    /**
     * {@snippet lang=c :
     * #define EMR_SETWINDOWORGEX 10
     * }
     */
    public static int EMR_SETWINDOWORGEX() {
        return EMR_SETWINDOWORGEX;
    }
    private static final int EMR_SETVIEWPORTEXTEX = (int)11L;
    /**
     * {@snippet lang=c :
     * #define EMR_SETVIEWPORTEXTEX 11
     * }
     */
    public static int EMR_SETVIEWPORTEXTEX() {
        return EMR_SETVIEWPORTEXTEX;
    }
    private static final int EMR_SETVIEWPORTORGEX = (int)12L;
    /**
     * {@snippet lang=c :
     * #define EMR_SETVIEWPORTORGEX 12
     * }
     */
    public static int EMR_SETVIEWPORTORGEX() {
        return EMR_SETVIEWPORTORGEX;
    }
    private static final int EMR_SETBRUSHORGEX = (int)13L;
    /**
     * {@snippet lang=c :
     * #define EMR_SETBRUSHORGEX 13
     * }
     */
    public static int EMR_SETBRUSHORGEX() {
        return EMR_SETBRUSHORGEX;
    }
    private static final int EMR_EOF = (int)14L;
    /**
     * {@snippet lang=c :
     * #define EMR_EOF 14
     * }
     */
    public static int EMR_EOF() {
        return EMR_EOF;
    }
    private static final int EMR_SETPIXELV = (int)15L;
    /**
     * {@snippet lang=c :
     * #define EMR_SETPIXELV 15
     * }
     */
    public static int EMR_SETPIXELV() {
        return EMR_SETPIXELV;
    }
    private static final int EMR_SETMAPPERFLAGS = (int)16L;
    /**
     * {@snippet lang=c :
     * #define EMR_SETMAPPERFLAGS 16
     * }
     */
    public static int EMR_SETMAPPERFLAGS() {
        return EMR_SETMAPPERFLAGS;
    }
    private static final int EMR_SETMAPMODE = (int)17L;
    /**
     * {@snippet lang=c :
     * #define EMR_SETMAPMODE 17
     * }
     */
    public static int EMR_SETMAPMODE() {
        return EMR_SETMAPMODE;
    }
    private static final int EMR_SETBKMODE = (int)18L;
    /**
     * {@snippet lang=c :
     * #define EMR_SETBKMODE 18
     * }
     */
    public static int EMR_SETBKMODE() {
        return EMR_SETBKMODE;
    }
    private static final int EMR_SETPOLYFILLMODE = (int)19L;
    /**
     * {@snippet lang=c :
     * #define EMR_SETPOLYFILLMODE 19
     * }
     */
    public static int EMR_SETPOLYFILLMODE() {
        return EMR_SETPOLYFILLMODE;
    }
    private static final int EMR_SETROP2 = (int)20L;
    /**
     * {@snippet lang=c :
     * #define EMR_SETROP2 20
     * }
     */
    public static int EMR_SETROP2() {
        return EMR_SETROP2;
    }
    private static final int EMR_SETSTRETCHBLTMODE = (int)21L;
    /**
     * {@snippet lang=c :
     * #define EMR_SETSTRETCHBLTMODE 21
     * }
     */
    public static int EMR_SETSTRETCHBLTMODE() {
        return EMR_SETSTRETCHBLTMODE;
    }
    private static final int EMR_SETTEXTALIGN = (int)22L;
    /**
     * {@snippet lang=c :
     * #define EMR_SETTEXTALIGN 22
     * }
     */
    public static int EMR_SETTEXTALIGN() {
        return EMR_SETTEXTALIGN;
    }
    private static final int EMR_SETCOLORADJUSTMENT = (int)23L;
    /**
     * {@snippet lang=c :
     * #define EMR_SETCOLORADJUSTMENT 23
     * }
     */
    public static int EMR_SETCOLORADJUSTMENT() {
        return EMR_SETCOLORADJUSTMENT;
    }
    private static final int EMR_SETTEXTCOLOR = (int)24L;
    /**
     * {@snippet lang=c :
     * #define EMR_SETTEXTCOLOR 24
     * }
     */
    public static int EMR_SETTEXTCOLOR() {
        return EMR_SETTEXTCOLOR;
    }
    private static final int EMR_SETBKCOLOR = (int)25L;
    /**
     * {@snippet lang=c :
     * #define EMR_SETBKCOLOR 25
     * }
     */
    public static int EMR_SETBKCOLOR() {
        return EMR_SETBKCOLOR;
    }
    private static final int EMR_OFFSETCLIPRGN = (int)26L;
    /**
     * {@snippet lang=c :
     * #define EMR_OFFSETCLIPRGN 26
     * }
     */
    public static int EMR_OFFSETCLIPRGN() {
        return EMR_OFFSETCLIPRGN;
    }
    private static final int EMR_MOVETOEX = (int)27L;
    /**
     * {@snippet lang=c :
     * #define EMR_MOVETOEX 27
     * }
     */
    public static int EMR_MOVETOEX() {
        return EMR_MOVETOEX;
    }
    private static final int EMR_SETMETARGN = (int)28L;
    /**
     * {@snippet lang=c :
     * #define EMR_SETMETARGN 28
     * }
     */
    public static int EMR_SETMETARGN() {
        return EMR_SETMETARGN;
    }
    private static final int EMR_EXCLUDECLIPRECT = (int)29L;
    /**
     * {@snippet lang=c :
     * #define EMR_EXCLUDECLIPRECT 29
     * }
     */
    public static int EMR_EXCLUDECLIPRECT() {
        return EMR_EXCLUDECLIPRECT;
    }
    private static final int EMR_INTERSECTCLIPRECT = (int)30L;
    /**
     * {@snippet lang=c :
     * #define EMR_INTERSECTCLIPRECT 30
     * }
     */
    public static int EMR_INTERSECTCLIPRECT() {
        return EMR_INTERSECTCLIPRECT;
    }
    private static final int EMR_SCALEVIEWPORTEXTEX = (int)31L;
    /**
     * {@snippet lang=c :
     * #define EMR_SCALEVIEWPORTEXTEX 31
     * }
     */
    public static int EMR_SCALEVIEWPORTEXTEX() {
        return EMR_SCALEVIEWPORTEXTEX;
    }
    private static final int EMR_SCALEWINDOWEXTEX = (int)32L;
    /**
     * {@snippet lang=c :
     * #define EMR_SCALEWINDOWEXTEX 32
     * }
     */
    public static int EMR_SCALEWINDOWEXTEX() {
        return EMR_SCALEWINDOWEXTEX;
    }
    private static final int EMR_SAVEDC = (int)33L;
    /**
     * {@snippet lang=c :
     * #define EMR_SAVEDC 33
     * }
     */
    public static int EMR_SAVEDC() {
        return EMR_SAVEDC;
    }
    private static final int EMR_RESTOREDC = (int)34L;
    /**
     * {@snippet lang=c :
     * #define EMR_RESTOREDC 34
     * }
     */
    public static int EMR_RESTOREDC() {
        return EMR_RESTOREDC;
    }
    private static final int EMR_SETWORLDTRANSFORM = (int)35L;
    /**
     * {@snippet lang=c :
     * #define EMR_SETWORLDTRANSFORM 35
     * }
     */
    public static int EMR_SETWORLDTRANSFORM() {
        return EMR_SETWORLDTRANSFORM;
    }
    private static final int EMR_MODIFYWORLDTRANSFORM = (int)36L;
    /**
     * {@snippet lang=c :
     * #define EMR_MODIFYWORLDTRANSFORM 36
     * }
     */
    public static int EMR_MODIFYWORLDTRANSFORM() {
        return EMR_MODIFYWORLDTRANSFORM;
    }
    private static final int EMR_SELECTOBJECT = (int)37L;
    /**
     * {@snippet lang=c :
     * #define EMR_SELECTOBJECT 37
     * }
     */
    public static int EMR_SELECTOBJECT() {
        return EMR_SELECTOBJECT;
    }
    private static final int EMR_CREATEPEN = (int)38L;
    /**
     * {@snippet lang=c :
     * #define EMR_CREATEPEN 38
     * }
     */
    public static int EMR_CREATEPEN() {
        return EMR_CREATEPEN;
    }
    private static final int EMR_CREATEBRUSHINDIRECT = (int)39L;
    /**
     * {@snippet lang=c :
     * #define EMR_CREATEBRUSHINDIRECT 39
     * }
     */
    public static int EMR_CREATEBRUSHINDIRECT() {
        return EMR_CREATEBRUSHINDIRECT;
    }
    private static final int EMR_DELETEOBJECT = (int)40L;
    /**
     * {@snippet lang=c :
     * #define EMR_DELETEOBJECT 40
     * }
     */
    public static int EMR_DELETEOBJECT() {
        return EMR_DELETEOBJECT;
    }
    private static final int EMR_ANGLEARC = (int)41L;
    /**
     * {@snippet lang=c :
     * #define EMR_ANGLEARC 41
     * }
     */
    public static int EMR_ANGLEARC() {
        return EMR_ANGLEARC;
    }
    private static final int EMR_ELLIPSE = (int)42L;
    /**
     * {@snippet lang=c :
     * #define EMR_ELLIPSE 42
     * }
     */
    public static int EMR_ELLIPSE() {
        return EMR_ELLIPSE;
    }
    private static final int EMR_RECTANGLE = (int)43L;
    /**
     * {@snippet lang=c :
     * #define EMR_RECTANGLE 43
     * }
     */
    public static int EMR_RECTANGLE() {
        return EMR_RECTANGLE;
    }
    private static final int EMR_ROUNDRECT = (int)44L;
    /**
     * {@snippet lang=c :
     * #define EMR_ROUNDRECT 44
     * }
     */
    public static int EMR_ROUNDRECT() {
        return EMR_ROUNDRECT;
    }
    private static final int EMR_ARC = (int)45L;
    /**
     * {@snippet lang=c :
     * #define EMR_ARC 45
     * }
     */
    public static int EMR_ARC() {
        return EMR_ARC;
    }
    private static final int EMR_CHORD = (int)46L;
    /**
     * {@snippet lang=c :
     * #define EMR_CHORD 46
     * }
     */
    public static int EMR_CHORD() {
        return EMR_CHORD;
    }
    private static final int EMR_PIE = (int)47L;
    /**
     * {@snippet lang=c :
     * #define EMR_PIE 47
     * }
     */
    public static int EMR_PIE() {
        return EMR_PIE;
    }
    private static final int EMR_SELECTPALETTE = (int)48L;
    /**
     * {@snippet lang=c :
     * #define EMR_SELECTPALETTE 48
     * }
     */
    public static int EMR_SELECTPALETTE() {
        return EMR_SELECTPALETTE;
    }
    private static final int EMR_CREATEPALETTE = (int)49L;
    /**
     * {@snippet lang=c :
     * #define EMR_CREATEPALETTE 49
     * }
     */
    public static int EMR_CREATEPALETTE() {
        return EMR_CREATEPALETTE;
    }
    private static final int EMR_SETPALETTEENTRIES = (int)50L;
    /**
     * {@snippet lang=c :
     * #define EMR_SETPALETTEENTRIES 50
     * }
     */
    public static int EMR_SETPALETTEENTRIES() {
        return EMR_SETPALETTEENTRIES;
    }
    private static final int EMR_RESIZEPALETTE = (int)51L;
    /**
     * {@snippet lang=c :
     * #define EMR_RESIZEPALETTE 51
     * }
     */
    public static int EMR_RESIZEPALETTE() {
        return EMR_RESIZEPALETTE;
    }
    private static final int EMR_REALIZEPALETTE = (int)52L;
    /**
     * {@snippet lang=c :
     * #define EMR_REALIZEPALETTE 52
     * }
     */
    public static int EMR_REALIZEPALETTE() {
        return EMR_REALIZEPALETTE;
    }
    private static final int EMR_EXTFLOODFILL = (int)53L;
    /**
     * {@snippet lang=c :
     * #define EMR_EXTFLOODFILL 53
     * }
     */
    public static int EMR_EXTFLOODFILL() {
        return EMR_EXTFLOODFILL;
    }
    private static final int EMR_LINETO = (int)54L;
    /**
     * {@snippet lang=c :
     * #define EMR_LINETO 54
     * }
     */
    public static int EMR_LINETO() {
        return EMR_LINETO;
    }
    private static final int EMR_ARCTO = (int)55L;
    /**
     * {@snippet lang=c :
     * #define EMR_ARCTO 55
     * }
     */
    public static int EMR_ARCTO() {
        return EMR_ARCTO;
    }
    private static final int EMR_POLYDRAW = (int)56L;
    /**
     * {@snippet lang=c :
     * #define EMR_POLYDRAW 56
     * }
     */
    public static int EMR_POLYDRAW() {
        return EMR_POLYDRAW;
    }
    private static final int EMR_SETARCDIRECTION = (int)57L;
    /**
     * {@snippet lang=c :
     * #define EMR_SETARCDIRECTION 57
     * }
     */
    public static int EMR_SETARCDIRECTION() {
        return EMR_SETARCDIRECTION;
    }
    private static final int EMR_SETMITERLIMIT = (int)58L;
    /**
     * {@snippet lang=c :
     * #define EMR_SETMITERLIMIT 58
     * }
     */
    public static int EMR_SETMITERLIMIT() {
        return EMR_SETMITERLIMIT;
    }
    private static final int EMR_BEGINPATH = (int)59L;
    /**
     * {@snippet lang=c :
     * #define EMR_BEGINPATH 59
     * }
     */
    public static int EMR_BEGINPATH() {
        return EMR_BEGINPATH;
    }
    private static final int EMR_ENDPATH = (int)60L;
    /**
     * {@snippet lang=c :
     * #define EMR_ENDPATH 60
     * }
     */
    public static int EMR_ENDPATH() {
        return EMR_ENDPATH;
    }
    private static final int EMR_CLOSEFIGURE = (int)61L;
    /**
     * {@snippet lang=c :
     * #define EMR_CLOSEFIGURE 61
     * }
     */
    public static int EMR_CLOSEFIGURE() {
        return EMR_CLOSEFIGURE;
    }
    private static final int EMR_FILLPATH = (int)62L;
    /**
     * {@snippet lang=c :
     * #define EMR_FILLPATH 62
     * }
     */
    public static int EMR_FILLPATH() {
        return EMR_FILLPATH;
    }
    private static final int EMR_STROKEANDFILLPATH = (int)63L;
    /**
     * {@snippet lang=c :
     * #define EMR_STROKEANDFILLPATH 63
     * }
     */
    public static int EMR_STROKEANDFILLPATH() {
        return EMR_STROKEANDFILLPATH;
    }
    private static final int EMR_STROKEPATH = (int)64L;
    /**
     * {@snippet lang=c :
     * #define EMR_STROKEPATH 64
     * }
     */
    public static int EMR_STROKEPATH() {
        return EMR_STROKEPATH;
    }
    private static final int EMR_FLATTENPATH = (int)65L;
    /**
     * {@snippet lang=c :
     * #define EMR_FLATTENPATH 65
     * }
     */
    public static int EMR_FLATTENPATH() {
        return EMR_FLATTENPATH;
    }
    private static final int EMR_WIDENPATH = (int)66L;
    /**
     * {@snippet lang=c :
     * #define EMR_WIDENPATH 66
     * }
     */
    public static int EMR_WIDENPATH() {
        return EMR_WIDENPATH;
    }
    private static final int EMR_SELECTCLIPPATH = (int)67L;
    /**
     * {@snippet lang=c :
     * #define EMR_SELECTCLIPPATH 67
     * }
     */
    public static int EMR_SELECTCLIPPATH() {
        return EMR_SELECTCLIPPATH;
    }
    private static final int EMR_ABORTPATH = (int)68L;
    /**
     * {@snippet lang=c :
     * #define EMR_ABORTPATH 68
     * }
     */
    public static int EMR_ABORTPATH() {
        return EMR_ABORTPATH;
    }
    private static final int EMR_GDICOMMENT = (int)70L;
    /**
     * {@snippet lang=c :
     * #define EMR_GDICOMMENT 70
     * }
     */
    public static int EMR_GDICOMMENT() {
        return EMR_GDICOMMENT;
    }
    private static final int EMR_FILLRGN = (int)71L;
    /**
     * {@snippet lang=c :
     * #define EMR_FILLRGN 71
     * }
     */
    public static int EMR_FILLRGN() {
        return EMR_FILLRGN;
    }
    private static final int EMR_FRAMERGN = (int)72L;
    /**
     * {@snippet lang=c :
     * #define EMR_FRAMERGN 72
     * }
     */
    public static int EMR_FRAMERGN() {
        return EMR_FRAMERGN;
    }
    private static final int EMR_INVERTRGN = (int)73L;
    /**
     * {@snippet lang=c :
     * #define EMR_INVERTRGN 73
     * }
     */
    public static int EMR_INVERTRGN() {
        return EMR_INVERTRGN;
    }
    private static final int EMR_PAINTRGN = (int)74L;
    /**
     * {@snippet lang=c :
     * #define EMR_PAINTRGN 74
     * }
     */
    public static int EMR_PAINTRGN() {
        return EMR_PAINTRGN;
    }
    private static final int EMR_EXTSELECTCLIPRGN = (int)75L;
    /**
     * {@snippet lang=c :
     * #define EMR_EXTSELECTCLIPRGN 75
     * }
     */
    public static int EMR_EXTSELECTCLIPRGN() {
        return EMR_EXTSELECTCLIPRGN;
    }
    private static final int EMR_BITBLT = (int)76L;
    /**
     * {@snippet lang=c :
     * #define EMR_BITBLT 76
     * }
     */
    public static int EMR_BITBLT() {
        return EMR_BITBLT;
    }
    private static final int EMR_STRETCHBLT = (int)77L;
    /**
     * {@snippet lang=c :
     * #define EMR_STRETCHBLT 77
     * }
     */
    public static int EMR_STRETCHBLT() {
        return EMR_STRETCHBLT;
    }
    private static final int EMR_MASKBLT = (int)78L;
    /**
     * {@snippet lang=c :
     * #define EMR_MASKBLT 78
     * }
     */
    public static int EMR_MASKBLT() {
        return EMR_MASKBLT;
    }
    private static final int EMR_PLGBLT = (int)79L;
    /**
     * {@snippet lang=c :
     * #define EMR_PLGBLT 79
     * }
     */
    public static int EMR_PLGBLT() {
        return EMR_PLGBLT;
    }
    private static final int EMR_SETDIBITSTODEVICE = (int)80L;
    /**
     * {@snippet lang=c :
     * #define EMR_SETDIBITSTODEVICE 80
     * }
     */
    public static int EMR_SETDIBITSTODEVICE() {
        return EMR_SETDIBITSTODEVICE;
    }
    private static final int EMR_STRETCHDIBITS = (int)81L;
    /**
     * {@snippet lang=c :
     * #define EMR_STRETCHDIBITS 81
     * }
     */
    public static int EMR_STRETCHDIBITS() {
        return EMR_STRETCHDIBITS;
    }
    private static final int EMR_EXTCREATEFONTINDIRECTW = (int)82L;
    /**
     * {@snippet lang=c :
     * #define EMR_EXTCREATEFONTINDIRECTW 82
     * }
     */
    public static int EMR_EXTCREATEFONTINDIRECTW() {
        return EMR_EXTCREATEFONTINDIRECTW;
    }
    private static final int EMR_EXTTEXTOUTA = (int)83L;
    /**
     * {@snippet lang=c :
     * #define EMR_EXTTEXTOUTA 83
     * }
     */
    public static int EMR_EXTTEXTOUTA() {
        return EMR_EXTTEXTOUTA;
    }
    private static final int EMR_EXTTEXTOUTW = (int)84L;
    /**
     * {@snippet lang=c :
     * #define EMR_EXTTEXTOUTW 84
     * }
     */
    public static int EMR_EXTTEXTOUTW() {
        return EMR_EXTTEXTOUTW;
    }
    private static final int EMR_POLYBEZIER16 = (int)85L;
    /**
     * {@snippet lang=c :
     * #define EMR_POLYBEZIER16 85
     * }
     */
    public static int EMR_POLYBEZIER16() {
        return EMR_POLYBEZIER16;
    }
    private static final int EMR_POLYGON16 = (int)86L;
    /**
     * {@snippet lang=c :
     * #define EMR_POLYGON16 86
     * }
     */
    public static int EMR_POLYGON16() {
        return EMR_POLYGON16;
    }
    private static final int EMR_POLYLINE16 = (int)87L;
    /**
     * {@snippet lang=c :
     * #define EMR_POLYLINE16 87
     * }
     */
    public static int EMR_POLYLINE16() {
        return EMR_POLYLINE16;
    }
    private static final int EMR_POLYBEZIERTO16 = (int)88L;
    /**
     * {@snippet lang=c :
     * #define EMR_POLYBEZIERTO16 88
     * }
     */
    public static int EMR_POLYBEZIERTO16() {
        return EMR_POLYBEZIERTO16;
    }
    private static final int EMR_POLYLINETO16 = (int)89L;
    /**
     * {@snippet lang=c :
     * #define EMR_POLYLINETO16 89
     * }
     */
    public static int EMR_POLYLINETO16() {
        return EMR_POLYLINETO16;
    }
    private static final int EMR_POLYPOLYLINE16 = (int)90L;
    /**
     * {@snippet lang=c :
     * #define EMR_POLYPOLYLINE16 90
     * }
     */
    public static int EMR_POLYPOLYLINE16() {
        return EMR_POLYPOLYLINE16;
    }
    private static final int EMR_POLYPOLYGON16 = (int)91L;
    /**
     * {@snippet lang=c :
     * #define EMR_POLYPOLYGON16 91
     * }
     */
    public static int EMR_POLYPOLYGON16() {
        return EMR_POLYPOLYGON16;
    }
    private static final int EMR_POLYDRAW16 = (int)92L;
    /**
     * {@snippet lang=c :
     * #define EMR_POLYDRAW16 92
     * }
     */
    public static int EMR_POLYDRAW16() {
        return EMR_POLYDRAW16;
    }
    private static final int EMR_CREATEMONOBRUSH = (int)93L;
    /**
     * {@snippet lang=c :
     * #define EMR_CREATEMONOBRUSH 93
     * }
     */
    public static int EMR_CREATEMONOBRUSH() {
        return EMR_CREATEMONOBRUSH;
    }
    private static final int EMR_CREATEDIBPATTERNBRUSHPT = (int)94L;
    /**
     * {@snippet lang=c :
     * #define EMR_CREATEDIBPATTERNBRUSHPT 94
     * }
     */
    public static int EMR_CREATEDIBPATTERNBRUSHPT() {
        return EMR_CREATEDIBPATTERNBRUSHPT;
    }
    private static final int EMR_EXTCREATEPEN = (int)95L;
    /**
     * {@snippet lang=c :
     * #define EMR_EXTCREATEPEN 95
     * }
     */
    public static int EMR_EXTCREATEPEN() {
        return EMR_EXTCREATEPEN;
    }
    private static final int EMR_POLYTEXTOUTA = (int)96L;
    /**
     * {@snippet lang=c :
     * #define EMR_POLYTEXTOUTA 96
     * }
     */
    public static int EMR_POLYTEXTOUTA() {
        return EMR_POLYTEXTOUTA;
    }
    private static final int EMR_POLYTEXTOUTW = (int)97L;
    /**
     * {@snippet lang=c :
     * #define EMR_POLYTEXTOUTW 97
     * }
     */
    public static int EMR_POLYTEXTOUTW() {
        return EMR_POLYTEXTOUTW;
    }
    private static final int EMR_SETICMMODE = (int)98L;
    /**
     * {@snippet lang=c :
     * #define EMR_SETICMMODE 98
     * }
     */
    public static int EMR_SETICMMODE() {
        return EMR_SETICMMODE;
    }
    private static final int EMR_CREATECOLORSPACE = (int)99L;
    /**
     * {@snippet lang=c :
     * #define EMR_CREATECOLORSPACE 99
     * }
     */
    public static int EMR_CREATECOLORSPACE() {
        return EMR_CREATECOLORSPACE;
    }
    private static final int EMR_SETCOLORSPACE = (int)100L;
    /**
     * {@snippet lang=c :
     * #define EMR_SETCOLORSPACE 100
     * }
     */
    public static int EMR_SETCOLORSPACE() {
        return EMR_SETCOLORSPACE;
    }
    private static final int EMR_DELETECOLORSPACE = (int)101L;
    /**
     * {@snippet lang=c :
     * #define EMR_DELETECOLORSPACE 101
     * }
     */
    public static int EMR_DELETECOLORSPACE() {
        return EMR_DELETECOLORSPACE;
    }
    private static final int EMR_GLSRECORD = (int)102L;
    /**
     * {@snippet lang=c :
     * #define EMR_GLSRECORD 102
     * }
     */
    public static int EMR_GLSRECORD() {
        return EMR_GLSRECORD;
    }
    private static final int EMR_GLSBOUNDEDRECORD = (int)103L;
    /**
     * {@snippet lang=c :
     * #define EMR_GLSBOUNDEDRECORD 103
     * }
     */
    public static int EMR_GLSBOUNDEDRECORD() {
        return EMR_GLSBOUNDEDRECORD;
    }
    private static final int EMR_PIXELFORMAT = (int)104L;
    /**
     * {@snippet lang=c :
     * #define EMR_PIXELFORMAT 104
     * }
     */
    public static int EMR_PIXELFORMAT() {
        return EMR_PIXELFORMAT;
    }
    private static final int EMR_RESERVED_105 = (int)105L;
    /**
     * {@snippet lang=c :
     * #define EMR_RESERVED_105 105
     * }
     */
    public static int EMR_RESERVED_105() {
        return EMR_RESERVED_105;
    }
    private static final int EMR_RESERVED_106 = (int)106L;
    /**
     * {@snippet lang=c :
     * #define EMR_RESERVED_106 106
     * }
     */
    public static int EMR_RESERVED_106() {
        return EMR_RESERVED_106;
    }
    private static final int EMR_RESERVED_107 = (int)107L;
    /**
     * {@snippet lang=c :
     * #define EMR_RESERVED_107 107
     * }
     */
    public static int EMR_RESERVED_107() {
        return EMR_RESERVED_107;
    }
    private static final int EMR_RESERVED_108 = (int)108L;
    /**
     * {@snippet lang=c :
     * #define EMR_RESERVED_108 108
     * }
     */
    public static int EMR_RESERVED_108() {
        return EMR_RESERVED_108;
    }
    private static final int EMR_RESERVED_109 = (int)109L;
    /**
     * {@snippet lang=c :
     * #define EMR_RESERVED_109 109
     * }
     */
    public static int EMR_RESERVED_109() {
        return EMR_RESERVED_109;
    }
    private static final int EMR_RESERVED_110 = (int)110L;
    /**
     * {@snippet lang=c :
     * #define EMR_RESERVED_110 110
     * }
     */
    public static int EMR_RESERVED_110() {
        return EMR_RESERVED_110;
    }
    private static final int EMR_COLORCORRECTPALETTE = (int)111L;
    /**
     * {@snippet lang=c :
     * #define EMR_COLORCORRECTPALETTE 111
     * }
     */
    public static int EMR_COLORCORRECTPALETTE() {
        return EMR_COLORCORRECTPALETTE;
    }
    private static final int EMR_SETICMPROFILEA = (int)112L;
    /**
     * {@snippet lang=c :
     * #define EMR_SETICMPROFILEA 112
     * }
     */
    public static int EMR_SETICMPROFILEA() {
        return EMR_SETICMPROFILEA;
    }
    private static final int EMR_SETICMPROFILEW = (int)113L;
    /**
     * {@snippet lang=c :
     * #define EMR_SETICMPROFILEW 113
     * }
     */
    public static int EMR_SETICMPROFILEW() {
        return EMR_SETICMPROFILEW;
    }
    private static final int EMR_ALPHABLEND = (int)114L;
    /**
     * {@snippet lang=c :
     * #define EMR_ALPHABLEND 114
     * }
     */
    public static int EMR_ALPHABLEND() {
        return EMR_ALPHABLEND;
    }
    private static final int EMR_SETLAYOUT = (int)115L;
    /**
     * {@snippet lang=c :
     * #define EMR_SETLAYOUT 115
     * }
     */
    public static int EMR_SETLAYOUT() {
        return EMR_SETLAYOUT;
    }
    private static final int EMR_TRANSPARENTBLT = (int)116L;
    /**
     * {@snippet lang=c :
     * #define EMR_TRANSPARENTBLT 116
     * }
     */
    public static int EMR_TRANSPARENTBLT() {
        return EMR_TRANSPARENTBLT;
    }
    private static final int EMR_RESERVED_117 = (int)117L;
    /**
     * {@snippet lang=c :
     * #define EMR_RESERVED_117 117
     * }
     */
    public static int EMR_RESERVED_117() {
        return EMR_RESERVED_117;
    }
    private static final int EMR_GRADIENTFILL = (int)118L;
    /**
     * {@snippet lang=c :
     * #define EMR_GRADIENTFILL 118
     * }
     */
    public static int EMR_GRADIENTFILL() {
        return EMR_GRADIENTFILL;
    }
    private static final int EMR_RESERVED_119 = (int)119L;
    /**
     * {@snippet lang=c :
     * #define EMR_RESERVED_119 119
     * }
     */
    public static int EMR_RESERVED_119() {
        return EMR_RESERVED_119;
    }
    private static final int EMR_RESERVED_120 = (int)120L;
    /**
     * {@snippet lang=c :
     * #define EMR_RESERVED_120 120
     * }
     */
    public static int EMR_RESERVED_120() {
        return EMR_RESERVED_120;
    }
    private static final int EMR_COLORMATCHTOTARGETW = (int)121L;
    /**
     * {@snippet lang=c :
     * #define EMR_COLORMATCHTOTARGETW 121
     * }
     */
    public static int EMR_COLORMATCHTOTARGETW() {
        return EMR_COLORMATCHTOTARGETW;
    }
    private static final int EMR_CREATECOLORSPACEW = (int)122L;
    /**
     * {@snippet lang=c :
     * #define EMR_CREATECOLORSPACEW 122
     * }
     */
    public static int EMR_CREATECOLORSPACEW() {
        return EMR_CREATECOLORSPACEW;
    }
    private static final int EMR_MIN = (int)1L;
    /**
     * {@snippet lang=c :
     * #define EMR_MIN 1
     * }
     */
    public static int EMR_MIN() {
        return EMR_MIN;
    }
    private static final int EMR_MAX = (int)122L;
    /**
     * {@snippet lang=c :
     * #define EMR_MAX 122
     * }
     */
    public static int EMR_MAX() {
        return EMR_MAX;
    }
    private static final int SETICMPROFILE_EMBEDED = (int)1L;
    /**
     * {@snippet lang=c :
     * #define SETICMPROFILE_EMBEDED 1
     * }
     */
    public static int SETICMPROFILE_EMBEDED() {
        return SETICMPROFILE_EMBEDED;
    }
    private static final int CREATECOLORSPACE_EMBEDED = (int)1L;
    /**
     * {@snippet lang=c :
     * #define CREATECOLORSPACE_EMBEDED 1
     * }
     */
    public static int CREATECOLORSPACE_EMBEDED() {
        return CREATECOLORSPACE_EMBEDED;
    }
    private static final int COLORMATCHTOTARGET_EMBEDED = (int)1L;
    /**
     * {@snippet lang=c :
     * #define COLORMATCHTOTARGET_EMBEDED 1
     * }
     */
    public static int COLORMATCHTOTARGET_EMBEDED() {
        return COLORMATCHTOTARGET_EMBEDED;
    }
    private static final int GDICOMMENT_IDENTIFIER = (int)1128875079L;
    /**
     * {@snippet lang=c :
     * #define GDICOMMENT_IDENTIFIER 1128875079
     * }
     */
    public static int GDICOMMENT_IDENTIFIER() {
        return GDICOMMENT_IDENTIFIER;
    }
    private static final int GDICOMMENT_BEGINGROUP = (int)2L;
    /**
     * {@snippet lang=c :
     * #define GDICOMMENT_BEGINGROUP 2
     * }
     */
    public static int GDICOMMENT_BEGINGROUP() {
        return GDICOMMENT_BEGINGROUP;
    }
    private static final int GDICOMMENT_ENDGROUP = (int)3L;
    /**
     * {@snippet lang=c :
     * #define GDICOMMENT_ENDGROUP 3
     * }
     */
    public static int GDICOMMENT_ENDGROUP() {
        return GDICOMMENT_ENDGROUP;
    }
    private static final int GDICOMMENT_MULTIFORMATS = (int)1073741828L;
    /**
     * {@snippet lang=c :
     * #define GDICOMMENT_MULTIFORMATS 1073741828
     * }
     */
    public static int GDICOMMENT_MULTIFORMATS() {
        return GDICOMMENT_MULTIFORMATS;
    }
    private static final int EPS_SIGNATURE = (int)1179865157L;
    /**
     * {@snippet lang=c :
     * #define EPS_SIGNATURE 1179865157
     * }
     */
    public static int EPS_SIGNATURE() {
        return EPS_SIGNATURE;
    }
    private static final int GDICOMMENT_UNICODE_STRING = (int)64L;
    /**
     * {@snippet lang=c :
     * #define GDICOMMENT_UNICODE_STRING 64
     * }
     */
    public static int GDICOMMENT_UNICODE_STRING() {
        return GDICOMMENT_UNICODE_STRING;
    }
    private static final int GDICOMMENT_UNICODE_END = (int)128L;
    /**
     * {@snippet lang=c :
     * #define GDICOMMENT_UNICODE_END 128
     * }
     */
    public static int GDICOMMENT_UNICODE_END() {
        return GDICOMMENT_UNICODE_END;
    }
    private static final int WGL_FONT_LINES = (int)0L;
    /**
     * {@snippet lang=c :
     * #define WGL_FONT_LINES 0
     * }
     */
    public static int WGL_FONT_LINES() {
        return WGL_FONT_LINES;
    }
    private static final int WGL_FONT_POLYGONS = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WGL_FONT_POLYGONS 1
     * }
     */
    public static int WGL_FONT_POLYGONS() {
        return WGL_FONT_POLYGONS;
    }
    private static final int LPD_DOUBLEBUFFER = (int)1L;
    /**
     * {@snippet lang=c :
     * #define LPD_DOUBLEBUFFER 1
     * }
     */
    public static int LPD_DOUBLEBUFFER() {
        return LPD_DOUBLEBUFFER;
    }
    private static final int LPD_STEREO = (int)2L;
    /**
     * {@snippet lang=c :
     * #define LPD_STEREO 2
     * }
     */
    public static int LPD_STEREO() {
        return LPD_STEREO;
    }
    private static final int LPD_SUPPORT_GDI = (int)16L;
    /**
     * {@snippet lang=c :
     * #define LPD_SUPPORT_GDI 16
     * }
     */
    public static int LPD_SUPPORT_GDI() {
        return LPD_SUPPORT_GDI;
    }
    private static final int LPD_SUPPORT_OPENGL = (int)32L;
    /**
     * {@snippet lang=c :
     * #define LPD_SUPPORT_OPENGL 32
     * }
     */
    public static int LPD_SUPPORT_OPENGL() {
        return LPD_SUPPORT_OPENGL;
    }
    private static final int LPD_SHARE_DEPTH = (int)64L;
    /**
     * {@snippet lang=c :
     * #define LPD_SHARE_DEPTH 64
     * }
     */
    public static int LPD_SHARE_DEPTH() {
        return LPD_SHARE_DEPTH;
    }
    private static final int LPD_SHARE_STENCIL = (int)128L;
    /**
     * {@snippet lang=c :
     * #define LPD_SHARE_STENCIL 128
     * }
     */
    public static int LPD_SHARE_STENCIL() {
        return LPD_SHARE_STENCIL;
    }
    private static final int LPD_SHARE_ACCUM = (int)256L;
    /**
     * {@snippet lang=c :
     * #define LPD_SHARE_ACCUM 256
     * }
     */
    public static int LPD_SHARE_ACCUM() {
        return LPD_SHARE_ACCUM;
    }
    private static final int LPD_SWAP_EXCHANGE = (int)512L;
    /**
     * {@snippet lang=c :
     * #define LPD_SWAP_EXCHANGE 512
     * }
     */
    public static int LPD_SWAP_EXCHANGE() {
        return LPD_SWAP_EXCHANGE;
    }
    private static final int LPD_SWAP_COPY = (int)1024L;
    /**
     * {@snippet lang=c :
     * #define LPD_SWAP_COPY 1024
     * }
     */
    public static int LPD_SWAP_COPY() {
        return LPD_SWAP_COPY;
    }
    private static final int LPD_TRANSPARENT = (int)4096L;
    /**
     * {@snippet lang=c :
     * #define LPD_TRANSPARENT 4096
     * }
     */
    public static int LPD_TRANSPARENT() {
        return LPD_TRANSPARENT;
    }
    private static final int LPD_TYPE_RGBA = (int)0L;
    /**
     * {@snippet lang=c :
     * #define LPD_TYPE_RGBA 0
     * }
     */
    public static int LPD_TYPE_RGBA() {
        return LPD_TYPE_RGBA;
    }
    private static final int LPD_TYPE_COLORINDEX = (int)1L;
    /**
     * {@snippet lang=c :
     * #define LPD_TYPE_COLORINDEX 1
     * }
     */
    public static int LPD_TYPE_COLORINDEX() {
        return LPD_TYPE_COLORINDEX;
    }
    private static final int WGL_SWAP_MAIN_PLANE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WGL_SWAP_MAIN_PLANE 1
     * }
     */
    public static int WGL_SWAP_MAIN_PLANE() {
        return WGL_SWAP_MAIN_PLANE;
    }
    private static final int WGL_SWAP_OVERLAY1 = (int)2L;
    /**
     * {@snippet lang=c :
     * #define WGL_SWAP_OVERLAY1 2
     * }
     */
    public static int WGL_SWAP_OVERLAY1() {
        return WGL_SWAP_OVERLAY1;
    }
    private static final int WGL_SWAP_OVERLAY2 = (int)4L;
    /**
     * {@snippet lang=c :
     * #define WGL_SWAP_OVERLAY2 4
     * }
     */
    public static int WGL_SWAP_OVERLAY2() {
        return WGL_SWAP_OVERLAY2;
    }
    private static final int WGL_SWAP_OVERLAY3 = (int)8L;
    /**
     * {@snippet lang=c :
     * #define WGL_SWAP_OVERLAY3 8
     * }
     */
    public static int WGL_SWAP_OVERLAY3() {
        return WGL_SWAP_OVERLAY3;
    }
    private static final int WGL_SWAP_OVERLAY4 = (int)16L;
    /**
     * {@snippet lang=c :
     * #define WGL_SWAP_OVERLAY4 16
     * }
     */
    public static int WGL_SWAP_OVERLAY4() {
        return WGL_SWAP_OVERLAY4;
    }
    private static final int WGL_SWAP_OVERLAY5 = (int)32L;
    /**
     * {@snippet lang=c :
     * #define WGL_SWAP_OVERLAY5 32
     * }
     */
    public static int WGL_SWAP_OVERLAY5() {
        return WGL_SWAP_OVERLAY5;
    }
    private static final int WGL_SWAP_OVERLAY6 = (int)64L;
    /**
     * {@snippet lang=c :
     * #define WGL_SWAP_OVERLAY6 64
     * }
     */
    public static int WGL_SWAP_OVERLAY6() {
        return WGL_SWAP_OVERLAY6;
    }
    private static final int WGL_SWAP_OVERLAY7 = (int)128L;
    /**
     * {@snippet lang=c :
     * #define WGL_SWAP_OVERLAY7 128
     * }
     */
    public static int WGL_SWAP_OVERLAY7() {
        return WGL_SWAP_OVERLAY7;
    }
    private static final int WGL_SWAP_OVERLAY8 = (int)256L;
    /**
     * {@snippet lang=c :
     * #define WGL_SWAP_OVERLAY8 256
     * }
     */
    public static int WGL_SWAP_OVERLAY8() {
        return WGL_SWAP_OVERLAY8;
    }
    private static final int WGL_SWAP_OVERLAY9 = (int)512L;
    /**
     * {@snippet lang=c :
     * #define WGL_SWAP_OVERLAY9 512
     * }
     */
    public static int WGL_SWAP_OVERLAY9() {
        return WGL_SWAP_OVERLAY9;
    }
    private static final int WGL_SWAP_OVERLAY10 = (int)1024L;
    /**
     * {@snippet lang=c :
     * #define WGL_SWAP_OVERLAY10 1024
     * }
     */
    public static int WGL_SWAP_OVERLAY10() {
        return WGL_SWAP_OVERLAY10;
    }
    private static final int WGL_SWAP_OVERLAY11 = (int)2048L;
    /**
     * {@snippet lang=c :
     * #define WGL_SWAP_OVERLAY11 2048
     * }
     */
    public static int WGL_SWAP_OVERLAY11() {
        return WGL_SWAP_OVERLAY11;
    }
    private static final int WGL_SWAP_OVERLAY12 = (int)4096L;
    /**
     * {@snippet lang=c :
     * #define WGL_SWAP_OVERLAY12 4096
     * }
     */
    public static int WGL_SWAP_OVERLAY12() {
        return WGL_SWAP_OVERLAY12;
    }
    private static final int WGL_SWAP_OVERLAY13 = (int)8192L;
    /**
     * {@snippet lang=c :
     * #define WGL_SWAP_OVERLAY13 8192
     * }
     */
    public static int WGL_SWAP_OVERLAY13() {
        return WGL_SWAP_OVERLAY13;
    }
    private static final int WGL_SWAP_OVERLAY14 = (int)16384L;
    /**
     * {@snippet lang=c :
     * #define WGL_SWAP_OVERLAY14 16384
     * }
     */
    public static int WGL_SWAP_OVERLAY14() {
        return WGL_SWAP_OVERLAY14;
    }
    private static final int WGL_SWAP_OVERLAY15 = (int)32768L;
    /**
     * {@snippet lang=c :
     * #define WGL_SWAP_OVERLAY15 32768
     * }
     */
    public static int WGL_SWAP_OVERLAY15() {
        return WGL_SWAP_OVERLAY15;
    }
    private static final int WGL_SWAP_UNDERLAY1 = (int)65536L;
    /**
     * {@snippet lang=c :
     * #define WGL_SWAP_UNDERLAY1 65536
     * }
     */
    public static int WGL_SWAP_UNDERLAY1() {
        return WGL_SWAP_UNDERLAY1;
    }
    private static final int WGL_SWAP_UNDERLAY2 = (int)131072L;
    /**
     * {@snippet lang=c :
     * #define WGL_SWAP_UNDERLAY2 131072
     * }
     */
    public static int WGL_SWAP_UNDERLAY2() {
        return WGL_SWAP_UNDERLAY2;
    }
    private static final int WGL_SWAP_UNDERLAY3 = (int)262144L;
    /**
     * {@snippet lang=c :
     * #define WGL_SWAP_UNDERLAY3 262144
     * }
     */
    public static int WGL_SWAP_UNDERLAY3() {
        return WGL_SWAP_UNDERLAY3;
    }
    private static final int WGL_SWAP_UNDERLAY4 = (int)524288L;
    /**
     * {@snippet lang=c :
     * #define WGL_SWAP_UNDERLAY4 524288
     * }
     */
    public static int WGL_SWAP_UNDERLAY4() {
        return WGL_SWAP_UNDERLAY4;
    }
    private static final int WGL_SWAP_UNDERLAY5 = (int)1048576L;
    /**
     * {@snippet lang=c :
     * #define WGL_SWAP_UNDERLAY5 1048576
     * }
     */
    public static int WGL_SWAP_UNDERLAY5() {
        return WGL_SWAP_UNDERLAY5;
    }
    private static final int WGL_SWAP_UNDERLAY6 = (int)2097152L;
    /**
     * {@snippet lang=c :
     * #define WGL_SWAP_UNDERLAY6 2097152
     * }
     */
    public static int WGL_SWAP_UNDERLAY6() {
        return WGL_SWAP_UNDERLAY6;
    }
    private static final int WGL_SWAP_UNDERLAY7 = (int)4194304L;
    /**
     * {@snippet lang=c :
     * #define WGL_SWAP_UNDERLAY7 4194304
     * }
     */
    public static int WGL_SWAP_UNDERLAY7() {
        return WGL_SWAP_UNDERLAY7;
    }
    private static final int WGL_SWAP_UNDERLAY8 = (int)8388608L;
    /**
     * {@snippet lang=c :
     * #define WGL_SWAP_UNDERLAY8 8388608
     * }
     */
    public static int WGL_SWAP_UNDERLAY8() {
        return WGL_SWAP_UNDERLAY8;
    }
    private static final int WGL_SWAP_UNDERLAY9 = (int)16777216L;
    /**
     * {@snippet lang=c :
     * #define WGL_SWAP_UNDERLAY9 16777216
     * }
     */
    public static int WGL_SWAP_UNDERLAY9() {
        return WGL_SWAP_UNDERLAY9;
    }
    private static final int WGL_SWAP_UNDERLAY10 = (int)33554432L;
    /**
     * {@snippet lang=c :
     * #define WGL_SWAP_UNDERLAY10 33554432
     * }
     */
    public static int WGL_SWAP_UNDERLAY10() {
        return WGL_SWAP_UNDERLAY10;
    }
    private static final int WGL_SWAP_UNDERLAY11 = (int)67108864L;
    /**
     * {@snippet lang=c :
     * #define WGL_SWAP_UNDERLAY11 67108864
     * }
     */
    public static int WGL_SWAP_UNDERLAY11() {
        return WGL_SWAP_UNDERLAY11;
    }
    private static final int WGL_SWAP_UNDERLAY12 = (int)134217728L;
    /**
     * {@snippet lang=c :
     * #define WGL_SWAP_UNDERLAY12 134217728
     * }
     */
    public static int WGL_SWAP_UNDERLAY12() {
        return WGL_SWAP_UNDERLAY12;
    }
    private static final int WGL_SWAP_UNDERLAY13 = (int)268435456L;
    /**
     * {@snippet lang=c :
     * #define WGL_SWAP_UNDERLAY13 268435456
     * }
     */
    public static int WGL_SWAP_UNDERLAY13() {
        return WGL_SWAP_UNDERLAY13;
    }
    private static final int WGL_SWAP_UNDERLAY14 = (int)536870912L;
    /**
     * {@snippet lang=c :
     * #define WGL_SWAP_UNDERLAY14 536870912
     * }
     */
    public static int WGL_SWAP_UNDERLAY14() {
        return WGL_SWAP_UNDERLAY14;
    }
    private static final int WGL_SWAP_UNDERLAY15 = (int)1073741824L;
    /**
     * {@snippet lang=c :
     * #define WGL_SWAP_UNDERLAY15 1073741824
     * }
     */
    public static int WGL_SWAP_UNDERLAY15() {
        return WGL_SWAP_UNDERLAY15;
    }
    private static final int WGL_SWAPMULTIPLE_MAX = (int)16L;
    /**
     * {@snippet lang=c :
     * #define WGL_SWAPMULTIPLE_MAX 16
     * }
     */
    public static int WGL_SWAPMULTIPLE_MAX() {
        return WGL_SWAPMULTIPLE_MAX;
    }
    private static final int DIFFERENCE = (int)11L;
    /**
     * {@snippet lang=c :
     * #define DIFFERENCE 11
     * }
     */
    public static int DIFFERENCE() {
        return DIFFERENCE;
    }
    private static final int SB_MIN = (int)0L;
    /**
     * {@snippet lang=c :
     * #define SB_MIN 0
     * }
     */
    public static int SB_MIN() {
        return SB_MIN;
    }
    private static final int SB_HORZ = (int)0L;
    /**
     * {@snippet lang=c :
     * #define SB_HORZ 0
     * }
     */
    public static int SB_HORZ() {
        return SB_HORZ;
    }
    private static final int SB_VERT = (int)1L;
    /**
     * {@snippet lang=c :
     * #define SB_VERT 1
     * }
     */
    public static int SB_VERT() {
        return SB_VERT;
    }
    private static final int SB_CTL = (int)2L;
    /**
     * {@snippet lang=c :
     * #define SB_CTL 2
     * }
     */
    public static int SB_CTL() {
        return SB_CTL;
    }
    private static final int SB_BOTH = (int)3L;
    /**
     * {@snippet lang=c :
     * #define SB_BOTH 3
     * }
     */
    public static int SB_BOTH() {
        return SB_BOTH;
    }
    private static final int SB_LINEUP = (int)0L;
    /**
     * {@snippet lang=c :
     * #define SB_LINEUP 0
     * }
     */
    public static int SB_LINEUP() {
        return SB_LINEUP;
    }
    private static final int SB_LINELEFT = (int)0L;
    /**
     * {@snippet lang=c :
     * #define SB_LINELEFT 0
     * }
     */
    public static int SB_LINELEFT() {
        return SB_LINELEFT;
    }
    private static final int SB_LINEDOWN = (int)1L;
    /**
     * {@snippet lang=c :
     * #define SB_LINEDOWN 1
     * }
     */
    public static int SB_LINEDOWN() {
        return SB_LINEDOWN;
    }
    private static final int SB_LINERIGHT = (int)1L;
    /**
     * {@snippet lang=c :
     * #define SB_LINERIGHT 1
     * }
     */
    public static int SB_LINERIGHT() {
        return SB_LINERIGHT;
    }
    private static final int SB_PAGEUP = (int)2L;
    /**
     * {@snippet lang=c :
     * #define SB_PAGEUP 2
     * }
     */
    public static int SB_PAGEUP() {
        return SB_PAGEUP;
    }
    private static final int SB_PAGELEFT = (int)2L;
    /**
     * {@snippet lang=c :
     * #define SB_PAGELEFT 2
     * }
     */
    public static int SB_PAGELEFT() {
        return SB_PAGELEFT;
    }
    private static final int SB_PAGEDOWN = (int)3L;
    /**
     * {@snippet lang=c :
     * #define SB_PAGEDOWN 3
     * }
     */
    public static int SB_PAGEDOWN() {
        return SB_PAGEDOWN;
    }
    private static final int SB_PAGERIGHT = (int)3L;
    /**
     * {@snippet lang=c :
     * #define SB_PAGERIGHT 3
     * }
     */
    public static int SB_PAGERIGHT() {
        return SB_PAGERIGHT;
    }
    private static final int SB_THUMBPOSITION = (int)4L;
    /**
     * {@snippet lang=c :
     * #define SB_THUMBPOSITION 4
     * }
     */
    public static int SB_THUMBPOSITION() {
        return SB_THUMBPOSITION;
    }
    private static final int SB_THUMBTRACK = (int)5L;
    /**
     * {@snippet lang=c :
     * #define SB_THUMBTRACK 5
     * }
     */
    public static int SB_THUMBTRACK() {
        return SB_THUMBTRACK;
    }
    private static final int SB_TOP = (int)6L;
    /**
     * {@snippet lang=c :
     * #define SB_TOP 6
     * }
     */
    public static int SB_TOP() {
        return SB_TOP;
    }
    private static final int SB_LEFT = (int)6L;
    /**
     * {@snippet lang=c :
     * #define SB_LEFT 6
     * }
     */
    public static int SB_LEFT() {
        return SB_LEFT;
    }
    private static final int SB_BOTTOM = (int)7L;
    /**
     * {@snippet lang=c :
     * #define SB_BOTTOM 7
     * }
     */
    public static int SB_BOTTOM() {
        return SB_BOTTOM;
    }
    private static final int SB_RIGHT = (int)7L;
    /**
     * {@snippet lang=c :
     * #define SB_RIGHT 7
     * }
     */
    public static int SB_RIGHT() {
        return SB_RIGHT;
    }
    private static final int SB_ENDSCROLL = (int)8L;
    /**
     * {@snippet lang=c :
     * #define SB_ENDSCROLL 8
     * }
     */
    public static int SB_ENDSCROLL() {
        return SB_ENDSCROLL;
    }
    private static final int SW_HIDE = (int)0L;
    /**
     * {@snippet lang=c :
     * #define SW_HIDE 0
     * }
     */
    public static int SW_HIDE() {
        return SW_HIDE;
    }
    private static final int SW_SHOWNORMAL = (int)1L;
    /**
     * {@snippet lang=c :
     * #define SW_SHOWNORMAL 1
     * }
     */
    public static int SW_SHOWNORMAL() {
        return SW_SHOWNORMAL;
    }
    private static final int SW_NORMAL = (int)1L;
    /**
     * {@snippet lang=c :
     * #define SW_NORMAL 1
     * }
     */
    public static int SW_NORMAL() {
        return SW_NORMAL;
    }
    private static final int SW_SHOWMINIMIZED = (int)2L;
    /**
     * {@snippet lang=c :
     * #define SW_SHOWMINIMIZED 2
     * }
     */
    public static int SW_SHOWMINIMIZED() {
        return SW_SHOWMINIMIZED;
    }
    private static final int SW_SHOWMAXIMIZED = (int)3L;
    /**
     * {@snippet lang=c :
     * #define SW_SHOWMAXIMIZED 3
     * }
     */
    public static int SW_SHOWMAXIMIZED() {
        return SW_SHOWMAXIMIZED;
    }
    private static final int SW_MAXIMIZE = (int)3L;
    /**
     * {@snippet lang=c :
     * #define SW_MAXIMIZE 3
     * }
     */
    public static int SW_MAXIMIZE() {
        return SW_MAXIMIZE;
    }
    private static final int SW_SHOWNOACTIVATE = (int)4L;
    /**
     * {@snippet lang=c :
     * #define SW_SHOWNOACTIVATE 4
     * }
     */
    public static int SW_SHOWNOACTIVATE() {
        return SW_SHOWNOACTIVATE;
    }
    private static final int SW_SHOW = (int)5L;
    /**
     * {@snippet lang=c :
     * #define SW_SHOW 5
     * }
     */
    public static int SW_SHOW() {
        return SW_SHOW;
    }
    private static final int SW_MINIMIZE = (int)6L;
    /**
     * {@snippet lang=c :
     * #define SW_MINIMIZE 6
     * }
     */
    public static int SW_MINIMIZE() {
        return SW_MINIMIZE;
    }
    private static final int SW_SHOWMINNOACTIVE = (int)7L;
    /**
     * {@snippet lang=c :
     * #define SW_SHOWMINNOACTIVE 7
     * }
     */
    public static int SW_SHOWMINNOACTIVE() {
        return SW_SHOWMINNOACTIVE;
    }
    private static final int SW_SHOWNA = (int)8L;
    /**
     * {@snippet lang=c :
     * #define SW_SHOWNA 8
     * }
     */
    public static int SW_SHOWNA() {
        return SW_SHOWNA;
    }
    private static final int SW_RESTORE = (int)9L;
    /**
     * {@snippet lang=c :
     * #define SW_RESTORE 9
     * }
     */
    public static int SW_RESTORE() {
        return SW_RESTORE;
    }
    private static final int SW_SHOWDEFAULT = (int)10L;
    /**
     * {@snippet lang=c :
     * #define SW_SHOWDEFAULT 10
     * }
     */
    public static int SW_SHOWDEFAULT() {
        return SW_SHOWDEFAULT;
    }
    private static final int SW_FORCEMINIMIZE = (int)11L;
    /**
     * {@snippet lang=c :
     * #define SW_FORCEMINIMIZE 11
     * }
     */
    public static int SW_FORCEMINIMIZE() {
        return SW_FORCEMINIMIZE;
    }
    private static final int SW_MAX = (int)11L;
    /**
     * {@snippet lang=c :
     * #define SW_MAX 11
     * }
     */
    public static int SW_MAX() {
        return SW_MAX;
    }
    private static final int HIDE_WINDOW = (int)0L;
    /**
     * {@snippet lang=c :
     * #define HIDE_WINDOW 0
     * }
     */
    public static int HIDE_WINDOW() {
        return HIDE_WINDOW;
    }
    private static final int SHOW_OPENWINDOW = (int)1L;
    /**
     * {@snippet lang=c :
     * #define SHOW_OPENWINDOW 1
     * }
     */
    public static int SHOW_OPENWINDOW() {
        return SHOW_OPENWINDOW;
    }
    private static final int SHOW_ICONWINDOW = (int)2L;
    /**
     * {@snippet lang=c :
     * #define SHOW_ICONWINDOW 2
     * }
     */
    public static int SHOW_ICONWINDOW() {
        return SHOW_ICONWINDOW;
    }
    private static final int SHOW_FULLSCREEN = (int)3L;
    /**
     * {@snippet lang=c :
     * #define SHOW_FULLSCREEN 3
     * }
     */
    public static int SHOW_FULLSCREEN() {
        return SHOW_FULLSCREEN;
    }
    private static final int SHOW_OPENNOACTIVATE = (int)4L;
    /**
     * {@snippet lang=c :
     * #define SHOW_OPENNOACTIVATE 4
     * }
     */
    public static int SHOW_OPENNOACTIVATE() {
        return SHOW_OPENNOACTIVATE;
    }
    private static final int SW_PARENTCLOSING = (int)1L;
    /**
     * {@snippet lang=c :
     * #define SW_PARENTCLOSING 1
     * }
     */
    public static int SW_PARENTCLOSING() {
        return SW_PARENTCLOSING;
    }
    private static final int SW_OTHERZOOM = (int)2L;
    /**
     * {@snippet lang=c :
     * #define SW_OTHERZOOM 2
     * }
     */
    public static int SW_OTHERZOOM() {
        return SW_OTHERZOOM;
    }
    private static final int SW_PARENTOPENING = (int)3L;
    /**
     * {@snippet lang=c :
     * #define SW_PARENTOPENING 3
     * }
     */
    public static int SW_PARENTOPENING() {
        return SW_PARENTOPENING;
    }
    private static final int SW_OTHERUNZOOM = (int)4L;
    /**
     * {@snippet lang=c :
     * #define SW_OTHERUNZOOM 4
     * }
     */
    public static int SW_OTHERUNZOOM() {
        return SW_OTHERUNZOOM;
    }
    private static final int AW_HOR_POSITIVE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define AW_HOR_POSITIVE 1
     * }
     */
    public static int AW_HOR_POSITIVE() {
        return AW_HOR_POSITIVE;
    }
    private static final int AW_HOR_NEGATIVE = (int)2L;
    /**
     * {@snippet lang=c :
     * #define AW_HOR_NEGATIVE 2
     * }
     */
    public static int AW_HOR_NEGATIVE() {
        return AW_HOR_NEGATIVE;
    }
    private static final int AW_VER_POSITIVE = (int)4L;
    /**
     * {@snippet lang=c :
     * #define AW_VER_POSITIVE 4
     * }
     */
    public static int AW_VER_POSITIVE() {
        return AW_VER_POSITIVE;
    }
    private static final int AW_VER_NEGATIVE = (int)8L;
    /**
     * {@snippet lang=c :
     * #define AW_VER_NEGATIVE 8
     * }
     */
    public static int AW_VER_NEGATIVE() {
        return AW_VER_NEGATIVE;
    }
    private static final int AW_CENTER = (int)16L;
    /**
     * {@snippet lang=c :
     * #define AW_CENTER 16
     * }
     */
    public static int AW_CENTER() {
        return AW_CENTER;
    }
    private static final int AW_HIDE = (int)65536L;
    /**
     * {@snippet lang=c :
     * #define AW_HIDE 65536
     * }
     */
    public static int AW_HIDE() {
        return AW_HIDE;
    }
    private static final int AW_ACTIVATE = (int)131072L;
    /**
     * {@snippet lang=c :
     * #define AW_ACTIVATE 131072
     * }
     */
    public static int AW_ACTIVATE() {
        return AW_ACTIVATE;
    }
    private static final int AW_SLIDE = (int)262144L;
    /**
     * {@snippet lang=c :
     * #define AW_SLIDE 262144
     * }
     */
    public static int AW_SLIDE() {
        return AW_SLIDE;
    }
    private static final int AW_BLEND = (int)524288L;
    /**
     * {@snippet lang=c :
     * #define AW_BLEND 524288
     * }
     */
    public static int AW_BLEND() {
        return AW_BLEND;
    }
    private static final int KF_EXTENDED = (int)256L;
    /**
     * {@snippet lang=c :
     * #define KF_EXTENDED 256
     * }
     */
    public static int KF_EXTENDED() {
        return KF_EXTENDED;
    }
    private static final int KF_DLGMODE = (int)2048L;
    /**
     * {@snippet lang=c :
     * #define KF_DLGMODE 2048
     * }
     */
    public static int KF_DLGMODE() {
        return KF_DLGMODE;
    }
    private static final int KF_MENUMODE = (int)4096L;
    /**
     * {@snippet lang=c :
     * #define KF_MENUMODE 4096
     * }
     */
    public static int KF_MENUMODE() {
        return KF_MENUMODE;
    }
    private static final int KF_ALTDOWN = (int)8192L;
    /**
     * {@snippet lang=c :
     * #define KF_ALTDOWN 8192
     * }
     */
    public static int KF_ALTDOWN() {
        return KF_ALTDOWN;
    }
    private static final int KF_REPEAT = (int)16384L;
    /**
     * {@snippet lang=c :
     * #define KF_REPEAT 16384
     * }
     */
    public static int KF_REPEAT() {
        return KF_REPEAT;
    }
    private static final int KF_UP = (int)32768L;
    /**
     * {@snippet lang=c :
     * #define KF_UP 32768
     * }
     */
    public static int KF_UP() {
        return KF_UP;
    }
    private static final int VK_LBUTTON = (int)1L;
    /**
     * {@snippet lang=c :
     * #define VK_LBUTTON 1
     * }
     */
    public static int VK_LBUTTON() {
        return VK_LBUTTON;
    }
    private static final int VK_RBUTTON = (int)2L;
    /**
     * {@snippet lang=c :
     * #define VK_RBUTTON 2
     * }
     */
    public static int VK_RBUTTON() {
        return VK_RBUTTON;
    }
    private static final int VK_CANCEL = (int)3L;
    /**
     * {@snippet lang=c :
     * #define VK_CANCEL 3
     * }
     */
    public static int VK_CANCEL() {
        return VK_CANCEL;
    }
    private static final int VK_MBUTTON = (int)4L;
    /**
     * {@snippet lang=c :
     * #define VK_MBUTTON 4
     * }
     */
    public static int VK_MBUTTON() {
        return VK_MBUTTON;
    }
    private static final int VK_XBUTTON1 = (int)5L;
    /**
     * {@snippet lang=c :
     * #define VK_XBUTTON1 5
     * }
     */
    public static int VK_XBUTTON1() {
        return VK_XBUTTON1;
    }
    private static final int VK_XBUTTON2 = (int)6L;
    /**
     * {@snippet lang=c :
     * #define VK_XBUTTON2 6
     * }
     */
    public static int VK_XBUTTON2() {
        return VK_XBUTTON2;
    }
    private static final int VK_BACK = (int)8L;
    /**
     * {@snippet lang=c :
     * #define VK_BACK 8
     * }
     */
    public static int VK_BACK() {
        return VK_BACK;
    }
    private static final int VK_TAB = (int)9L;
    /**
     * {@snippet lang=c :
     * #define VK_TAB 9
     * }
     */
    public static int VK_TAB() {
        return VK_TAB;
    }
    private static final int VK_CLEAR = (int)12L;
    /**
     * {@snippet lang=c :
     * #define VK_CLEAR 12
     * }
     */
    public static int VK_CLEAR() {
        return VK_CLEAR;
    }
    private static final int VK_RETURN = (int)13L;
    /**
     * {@snippet lang=c :
     * #define VK_RETURN 13
     * }
     */
    public static int VK_RETURN() {
        return VK_RETURN;
    }
    private static final int VK_SHIFT = (int)16L;
    /**
     * {@snippet lang=c :
     * #define VK_SHIFT 16
     * }
     */
    public static int VK_SHIFT() {
        return VK_SHIFT;
    }
    private static final int VK_CONTROL = (int)17L;
    /**
     * {@snippet lang=c :
     * #define VK_CONTROL 17
     * }
     */
    public static int VK_CONTROL() {
        return VK_CONTROL;
    }
    private static final int VK_MENU = (int)18L;
    /**
     * {@snippet lang=c :
     * #define VK_MENU 18
     * }
     */
    public static int VK_MENU() {
        return VK_MENU;
    }
    private static final int VK_PAUSE = (int)19L;
    /**
     * {@snippet lang=c :
     * #define VK_PAUSE 19
     * }
     */
    public static int VK_PAUSE() {
        return VK_PAUSE;
    }
    private static final int VK_CAPITAL = (int)20L;
    /**
     * {@snippet lang=c :
     * #define VK_CAPITAL 20
     * }
     */
    public static int VK_CAPITAL() {
        return VK_CAPITAL;
    }
    private static final int VK_KANA = (int)21L;
    /**
     * {@snippet lang=c :
     * #define VK_KANA 21
     * }
     */
    public static int VK_KANA() {
        return VK_KANA;
    }
    private static final int VK_HANGEUL = (int)21L;
    /**
     * {@snippet lang=c :
     * #define VK_HANGEUL 21
     * }
     */
    public static int VK_HANGEUL() {
        return VK_HANGEUL;
    }
    private static final int VK_HANGUL = (int)21L;
    /**
     * {@snippet lang=c :
     * #define VK_HANGUL 21
     * }
     */
    public static int VK_HANGUL() {
        return VK_HANGUL;
    }
    private static final int VK_IME_ON = (int)22L;
    /**
     * {@snippet lang=c :
     * #define VK_IME_ON 22
     * }
     */
    public static int VK_IME_ON() {
        return VK_IME_ON;
    }
    private static final int VK_JUNJA = (int)23L;
    /**
     * {@snippet lang=c :
     * #define VK_JUNJA 23
     * }
     */
    public static int VK_JUNJA() {
        return VK_JUNJA;
    }
    private static final int VK_FINAL = (int)24L;
    /**
     * {@snippet lang=c :
     * #define VK_FINAL 24
     * }
     */
    public static int VK_FINAL() {
        return VK_FINAL;
    }
    private static final int VK_HANJA = (int)25L;
    /**
     * {@snippet lang=c :
     * #define VK_HANJA 25
     * }
     */
    public static int VK_HANJA() {
        return VK_HANJA;
    }
    private static final int VK_KANJI = (int)25L;
    /**
     * {@snippet lang=c :
     * #define VK_KANJI 25
     * }
     */
    public static int VK_KANJI() {
        return VK_KANJI;
    }
    private static final int VK_IME_OFF = (int)26L;
    /**
     * {@snippet lang=c :
     * #define VK_IME_OFF 26
     * }
     */
    public static int VK_IME_OFF() {
        return VK_IME_OFF;
    }
    private static final int VK_ESCAPE = (int)27L;
    /**
     * {@snippet lang=c :
     * #define VK_ESCAPE 27
     * }
     */
    public static int VK_ESCAPE() {
        return VK_ESCAPE;
    }
    private static final int VK_CONVERT = (int)28L;
    /**
     * {@snippet lang=c :
     * #define VK_CONVERT 28
     * }
     */
    public static int VK_CONVERT() {
        return VK_CONVERT;
    }
    private static final int VK_NONCONVERT = (int)29L;
    /**
     * {@snippet lang=c :
     * #define VK_NONCONVERT 29
     * }
     */
    public static int VK_NONCONVERT() {
        return VK_NONCONVERT;
    }
    private static final int VK_ACCEPT = (int)30L;
    /**
     * {@snippet lang=c :
     * #define VK_ACCEPT 30
     * }
     */
    public static int VK_ACCEPT() {
        return VK_ACCEPT;
    }
    private static final int VK_MODECHANGE = (int)31L;
    /**
     * {@snippet lang=c :
     * #define VK_MODECHANGE 31
     * }
     */
    public static int VK_MODECHANGE() {
        return VK_MODECHANGE;
    }
    private static final int VK_SPACE = (int)32L;
    /**
     * {@snippet lang=c :
     * #define VK_SPACE 32
     * }
     */
    public static int VK_SPACE() {
        return VK_SPACE;
    }
    private static final int VK_PRIOR = (int)33L;
    /**
     * {@snippet lang=c :
     * #define VK_PRIOR 33
     * }
     */
    public static int VK_PRIOR() {
        return VK_PRIOR;
    }
    private static final int VK_NEXT = (int)34L;
    /**
     * {@snippet lang=c :
     * #define VK_NEXT 34
     * }
     */
    public static int VK_NEXT() {
        return VK_NEXT;
    }
    private static final int VK_END = (int)35L;
    /**
     * {@snippet lang=c :
     * #define VK_END 35
     * }
     */
    public static int VK_END() {
        return VK_END;
    }
    private static final int VK_HOME = (int)36L;
    /**
     * {@snippet lang=c :
     * #define VK_HOME 36
     * }
     */
    public static int VK_HOME() {
        return VK_HOME;
    }
    private static final int VK_LEFT = (int)37L;
    /**
     * {@snippet lang=c :
     * #define VK_LEFT 37
     * }
     */
    public static int VK_LEFT() {
        return VK_LEFT;
    }
    private static final int VK_UP = (int)38L;
    /**
     * {@snippet lang=c :
     * #define VK_UP 38
     * }
     */
    public static int VK_UP() {
        return VK_UP;
    }
    private static final int VK_RIGHT = (int)39L;
    /**
     * {@snippet lang=c :
     * #define VK_RIGHT 39
     * }
     */
    public static int VK_RIGHT() {
        return VK_RIGHT;
    }
    private static final int VK_DOWN = (int)40L;
    /**
     * {@snippet lang=c :
     * #define VK_DOWN 40
     * }
     */
    public static int VK_DOWN() {
        return VK_DOWN;
    }
    private static final int VK_SELECT = (int)41L;
    /**
     * {@snippet lang=c :
     * #define VK_SELECT 41
     * }
     */
    public static int VK_SELECT() {
        return VK_SELECT;
    }
    private static final int VK_PRINT = (int)42L;
    /**
     * {@snippet lang=c :
     * #define VK_PRINT 42
     * }
     */
    public static int VK_PRINT() {
        return VK_PRINT;
    }
    private static final int VK_EXECUTE = (int)43L;
    /**
     * {@snippet lang=c :
     * #define VK_EXECUTE 43
     * }
     */
    public static int VK_EXECUTE() {
        return VK_EXECUTE;
    }
    private static final int VK_SNAPSHOT = (int)44L;
    /**
     * {@snippet lang=c :
     * #define VK_SNAPSHOT 44
     * }
     */
    public static int VK_SNAPSHOT() {
        return VK_SNAPSHOT;
    }
    private static final int VK_INSERT = (int)45L;
    /**
     * {@snippet lang=c :
     * #define VK_INSERT 45
     * }
     */
    public static int VK_INSERT() {
        return VK_INSERT;
    }
    private static final int VK_DELETE = (int)46L;
    /**
     * {@snippet lang=c :
     * #define VK_DELETE 46
     * }
     */
    public static int VK_DELETE() {
        return VK_DELETE;
    }
    private static final int VK_HELP = (int)47L;
    /**
     * {@snippet lang=c :
     * #define VK_HELP 47
     * }
     */
    public static int VK_HELP() {
        return VK_HELP;
    }
    private static final int VK_LWIN = (int)91L;
    /**
     * {@snippet lang=c :
     * #define VK_LWIN 91
     * }
     */
    public static int VK_LWIN() {
        return VK_LWIN;
    }
    private static final int VK_RWIN = (int)92L;
    /**
     * {@snippet lang=c :
     * #define VK_RWIN 92
     * }
     */
    public static int VK_RWIN() {
        return VK_RWIN;
    }
    private static final int VK_APPS = (int)93L;
    /**
     * {@snippet lang=c :
     * #define VK_APPS 93
     * }
     */
    public static int VK_APPS() {
        return VK_APPS;
    }
    private static final int VK_SLEEP = (int)95L;
    /**
     * {@snippet lang=c :
     * #define VK_SLEEP 95
     * }
     */
    public static int VK_SLEEP() {
        return VK_SLEEP;
    }
    private static final int VK_NUMPAD0 = (int)96L;
    /**
     * {@snippet lang=c :
     * #define VK_NUMPAD0 96
     * }
     */
    public static int VK_NUMPAD0() {
        return VK_NUMPAD0;
    }
    private static final int VK_NUMPAD1 = (int)97L;
    /**
     * {@snippet lang=c :
     * #define VK_NUMPAD1 97
     * }
     */
    public static int VK_NUMPAD1() {
        return VK_NUMPAD1;
    }
    private static final int VK_NUMPAD2 = (int)98L;
    /**
     * {@snippet lang=c :
     * #define VK_NUMPAD2 98
     * }
     */
    public static int VK_NUMPAD2() {
        return VK_NUMPAD2;
    }
    private static final int VK_NUMPAD3 = (int)99L;
    /**
     * {@snippet lang=c :
     * #define VK_NUMPAD3 99
     * }
     */
    public static int VK_NUMPAD3() {
        return VK_NUMPAD3;
    }
    private static final int VK_NUMPAD4 = (int)100L;
    /**
     * {@snippet lang=c :
     * #define VK_NUMPAD4 100
     * }
     */
    public static int VK_NUMPAD4() {
        return VK_NUMPAD4;
    }
    private static final int VK_NUMPAD5 = (int)101L;
    /**
     * {@snippet lang=c :
     * #define VK_NUMPAD5 101
     * }
     */
    public static int VK_NUMPAD5() {
        return VK_NUMPAD5;
    }
    private static final int VK_NUMPAD6 = (int)102L;
    /**
     * {@snippet lang=c :
     * #define VK_NUMPAD6 102
     * }
     */
    public static int VK_NUMPAD6() {
        return VK_NUMPAD6;
    }
    private static final int VK_NUMPAD7 = (int)103L;
    /**
     * {@snippet lang=c :
     * #define VK_NUMPAD7 103
     * }
     */
    public static int VK_NUMPAD7() {
        return VK_NUMPAD7;
    }
    private static final int VK_NUMPAD8 = (int)104L;
    /**
     * {@snippet lang=c :
     * #define VK_NUMPAD8 104
     * }
     */
    public static int VK_NUMPAD8() {
        return VK_NUMPAD8;
    }
    private static final int VK_NUMPAD9 = (int)105L;
    /**
     * {@snippet lang=c :
     * #define VK_NUMPAD9 105
     * }
     */
    public static int VK_NUMPAD9() {
        return VK_NUMPAD9;
    }
    private static final int VK_MULTIPLY = (int)106L;
    /**
     * {@snippet lang=c :
     * #define VK_MULTIPLY 106
     * }
     */
    public static int VK_MULTIPLY() {
        return VK_MULTIPLY;
    }
    private static final int VK_ADD = (int)107L;
    /**
     * {@snippet lang=c :
     * #define VK_ADD 107
     * }
     */
    public static int VK_ADD() {
        return VK_ADD;
    }
    private static final int VK_SEPARATOR = (int)108L;
    /**
     * {@snippet lang=c :
     * #define VK_SEPARATOR 108
     * }
     */
    public static int VK_SEPARATOR() {
        return VK_SEPARATOR;
    }
    private static final int VK_SUBTRACT = (int)109L;
    /**
     * {@snippet lang=c :
     * #define VK_SUBTRACT 109
     * }
     */
    public static int VK_SUBTRACT() {
        return VK_SUBTRACT;
    }
    private static final int VK_DECIMAL = (int)110L;
    /**
     * {@snippet lang=c :
     * #define VK_DECIMAL 110
     * }
     */
    public static int VK_DECIMAL() {
        return VK_DECIMAL;
    }
    private static final int VK_DIVIDE = (int)111L;
    /**
     * {@snippet lang=c :
     * #define VK_DIVIDE 111
     * }
     */
    public static int VK_DIVIDE() {
        return VK_DIVIDE;
    }
    private static final int VK_F1 = (int)112L;
    /**
     * {@snippet lang=c :
     * #define VK_F1 112
     * }
     */
    public static int VK_F1() {
        return VK_F1;
    }
    private static final int VK_F2 = (int)113L;
    /**
     * {@snippet lang=c :
     * #define VK_F2 113
     * }
     */
    public static int VK_F2() {
        return VK_F2;
    }
    private static final int VK_F3 = (int)114L;
    /**
     * {@snippet lang=c :
     * #define VK_F3 114
     * }
     */
    public static int VK_F3() {
        return VK_F3;
    }
    private static final int VK_F4 = (int)115L;
    /**
     * {@snippet lang=c :
     * #define VK_F4 115
     * }
     */
    public static int VK_F4() {
        return VK_F4;
    }
    private static final int VK_F5 = (int)116L;
    /**
     * {@snippet lang=c :
     * #define VK_F5 116
     * }
     */
    public static int VK_F5() {
        return VK_F5;
    }
    private static final int VK_F6 = (int)117L;
    /**
     * {@snippet lang=c :
     * #define VK_F6 117
     * }
     */
    public static int VK_F6() {
        return VK_F6;
    }
    private static final int VK_F7 = (int)118L;
    /**
     * {@snippet lang=c :
     * #define VK_F7 118
     * }
     */
    public static int VK_F7() {
        return VK_F7;
    }
    private static final int VK_F8 = (int)119L;
    /**
     * {@snippet lang=c :
     * #define VK_F8 119
     * }
     */
    public static int VK_F8() {
        return VK_F8;
    }
    private static final int VK_F9 = (int)120L;
    /**
     * {@snippet lang=c :
     * #define VK_F9 120
     * }
     */
    public static int VK_F9() {
        return VK_F9;
    }
    private static final int VK_F10 = (int)121L;
    /**
     * {@snippet lang=c :
     * #define VK_F10 121
     * }
     */
    public static int VK_F10() {
        return VK_F10;
    }
    private static final int VK_F11 = (int)122L;
    /**
     * {@snippet lang=c :
     * #define VK_F11 122
     * }
     */
    public static int VK_F11() {
        return VK_F11;
    }
    private static final int VK_F12 = (int)123L;
    /**
     * {@snippet lang=c :
     * #define VK_F12 123
     * }
     */
    public static int VK_F12() {
        return VK_F12;
    }
    private static final int VK_F13 = (int)124L;
    /**
     * {@snippet lang=c :
     * #define VK_F13 124
     * }
     */
    public static int VK_F13() {
        return VK_F13;
    }
    private static final int VK_F14 = (int)125L;
    /**
     * {@snippet lang=c :
     * #define VK_F14 125
     * }
     */
    public static int VK_F14() {
        return VK_F14;
    }
    private static final int VK_F15 = (int)126L;
    /**
     * {@snippet lang=c :
     * #define VK_F15 126
     * }
     */
    public static int VK_F15() {
        return VK_F15;
    }
    private static final int VK_F16 = (int)127L;
    /**
     * {@snippet lang=c :
     * #define VK_F16 127
     * }
     */
    public static int VK_F16() {
        return VK_F16;
    }
    private static final int VK_F17 = (int)128L;
    /**
     * {@snippet lang=c :
     * #define VK_F17 128
     * }
     */
    public static int VK_F17() {
        return VK_F17;
    }
    private static final int VK_F18 = (int)129L;
    /**
     * {@snippet lang=c :
     * #define VK_F18 129
     * }
     */
    public static int VK_F18() {
        return VK_F18;
    }
    private static final int VK_F19 = (int)130L;
    /**
     * {@snippet lang=c :
     * #define VK_F19 130
     * }
     */
    public static int VK_F19() {
        return VK_F19;
    }
    private static final int VK_F20 = (int)131L;
    /**
     * {@snippet lang=c :
     * #define VK_F20 131
     * }
     */
    public static int VK_F20() {
        return VK_F20;
    }
    private static final int VK_F21 = (int)132L;
    /**
     * {@snippet lang=c :
     * #define VK_F21 132
     * }
     */
    public static int VK_F21() {
        return VK_F21;
    }
    private static final int VK_F22 = (int)133L;
    /**
     * {@snippet lang=c :
     * #define VK_F22 133
     * }
     */
    public static int VK_F22() {
        return VK_F22;
    }
    private static final int VK_F23 = (int)134L;
    /**
     * {@snippet lang=c :
     * #define VK_F23 134
     * }
     */
    public static int VK_F23() {
        return VK_F23;
    }
    private static final int VK_F24 = (int)135L;
    /**
     * {@snippet lang=c :
     * #define VK_F24 135
     * }
     */
    public static int VK_F24() {
        return VK_F24;
    }
    private static final int VK_NAVIGATION_VIEW = (int)136L;
    /**
     * {@snippet lang=c :
     * #define VK_NAVIGATION_VIEW 136
     * }
     */
    public static int VK_NAVIGATION_VIEW() {
        return VK_NAVIGATION_VIEW;
    }
    private static final int VK_NAVIGATION_MENU = (int)137L;
    /**
     * {@snippet lang=c :
     * #define VK_NAVIGATION_MENU 137
     * }
     */
    public static int VK_NAVIGATION_MENU() {
        return VK_NAVIGATION_MENU;
    }
    private static final int VK_NAVIGATION_UP = (int)138L;
    /**
     * {@snippet lang=c :
     * #define VK_NAVIGATION_UP 138
     * }
     */
    public static int VK_NAVIGATION_UP() {
        return VK_NAVIGATION_UP;
    }
    private static final int VK_NAVIGATION_DOWN = (int)139L;
    /**
     * {@snippet lang=c :
     * #define VK_NAVIGATION_DOWN 139
     * }
     */
    public static int VK_NAVIGATION_DOWN() {
        return VK_NAVIGATION_DOWN;
    }
    private static final int VK_NAVIGATION_LEFT = (int)140L;
    /**
     * {@snippet lang=c :
     * #define VK_NAVIGATION_LEFT 140
     * }
     */
    public static int VK_NAVIGATION_LEFT() {
        return VK_NAVIGATION_LEFT;
    }
    private static final int VK_NAVIGATION_RIGHT = (int)141L;
    /**
     * {@snippet lang=c :
     * #define VK_NAVIGATION_RIGHT 141
     * }
     */
    public static int VK_NAVIGATION_RIGHT() {
        return VK_NAVIGATION_RIGHT;
    }
    private static final int VK_NAVIGATION_ACCEPT = (int)142L;
    /**
     * {@snippet lang=c :
     * #define VK_NAVIGATION_ACCEPT 142
     * }
     */
    public static int VK_NAVIGATION_ACCEPT() {
        return VK_NAVIGATION_ACCEPT;
    }
    private static final int VK_NAVIGATION_CANCEL = (int)143L;
    /**
     * {@snippet lang=c :
     * #define VK_NAVIGATION_CANCEL 143
     * }
     */
    public static int VK_NAVIGATION_CANCEL() {
        return VK_NAVIGATION_CANCEL;
    }
    private static final int VK_NUMLOCK = (int)144L;
    /**
     * {@snippet lang=c :
     * #define VK_NUMLOCK 144
     * }
     */
    public static int VK_NUMLOCK() {
        return VK_NUMLOCK;
    }
    private static final int VK_SCROLL = (int)145L;
    /**
     * {@snippet lang=c :
     * #define VK_SCROLL 145
     * }
     */
    public static int VK_SCROLL() {
        return VK_SCROLL;
    }
    private static final int VK_OEM_NEC_EQUAL = (int)146L;
    /**
     * {@snippet lang=c :
     * #define VK_OEM_NEC_EQUAL 146
     * }
     */
    public static int VK_OEM_NEC_EQUAL() {
        return VK_OEM_NEC_EQUAL;
    }
    private static final int VK_OEM_FJ_JISHO = (int)146L;
    /**
     * {@snippet lang=c :
     * #define VK_OEM_FJ_JISHO 146
     * }
     */
    public static int VK_OEM_FJ_JISHO() {
        return VK_OEM_FJ_JISHO;
    }
    private static final int VK_OEM_FJ_MASSHOU = (int)147L;
    /**
     * {@snippet lang=c :
     * #define VK_OEM_FJ_MASSHOU 147
     * }
     */
    public static int VK_OEM_FJ_MASSHOU() {
        return VK_OEM_FJ_MASSHOU;
    }
    private static final int VK_OEM_FJ_TOUROKU = (int)148L;
    /**
     * {@snippet lang=c :
     * #define VK_OEM_FJ_TOUROKU 148
     * }
     */
    public static int VK_OEM_FJ_TOUROKU() {
        return VK_OEM_FJ_TOUROKU;
    }
    private static final int VK_OEM_FJ_LOYA = (int)149L;
    /**
     * {@snippet lang=c :
     * #define VK_OEM_FJ_LOYA 149
     * }
     */
    public static int VK_OEM_FJ_LOYA() {
        return VK_OEM_FJ_LOYA;
    }
    private static final int VK_OEM_FJ_ROYA = (int)150L;
    /**
     * {@snippet lang=c :
     * #define VK_OEM_FJ_ROYA 150
     * }
     */
    public static int VK_OEM_FJ_ROYA() {
        return VK_OEM_FJ_ROYA;
    }
    private static final int VK_LSHIFT = (int)160L;
    /**
     * {@snippet lang=c :
     * #define VK_LSHIFT 160
     * }
     */
    public static int VK_LSHIFT() {
        return VK_LSHIFT;
    }
    private static final int VK_RSHIFT = (int)161L;
    /**
     * {@snippet lang=c :
     * #define VK_RSHIFT 161
     * }
     */
    public static int VK_RSHIFT() {
        return VK_RSHIFT;
    }
    private static final int VK_LCONTROL = (int)162L;
    /**
     * {@snippet lang=c :
     * #define VK_LCONTROL 162
     * }
     */
    public static int VK_LCONTROL() {
        return VK_LCONTROL;
    }
    private static final int VK_RCONTROL = (int)163L;
    /**
     * {@snippet lang=c :
     * #define VK_RCONTROL 163
     * }
     */
    public static int VK_RCONTROL() {
        return VK_RCONTROL;
    }
    private static final int VK_LMENU = (int)164L;
    /**
     * {@snippet lang=c :
     * #define VK_LMENU 164
     * }
     */
    public static int VK_LMENU() {
        return VK_LMENU;
    }
    private static final int VK_RMENU = (int)165L;
    /**
     * {@snippet lang=c :
     * #define VK_RMENU 165
     * }
     */
    public static int VK_RMENU() {
        return VK_RMENU;
    }
    private static final int VK_BROWSER_BACK = (int)166L;
    /**
     * {@snippet lang=c :
     * #define VK_BROWSER_BACK 166
     * }
     */
    public static int VK_BROWSER_BACK() {
        return VK_BROWSER_BACK;
    }
    private static final int VK_BROWSER_FORWARD = (int)167L;
    /**
     * {@snippet lang=c :
     * #define VK_BROWSER_FORWARD 167
     * }
     */
    public static int VK_BROWSER_FORWARD() {
        return VK_BROWSER_FORWARD;
    }
    private static final int VK_BROWSER_REFRESH = (int)168L;
    /**
     * {@snippet lang=c :
     * #define VK_BROWSER_REFRESH 168
     * }
     */
    public static int VK_BROWSER_REFRESH() {
        return VK_BROWSER_REFRESH;
    }
    private static final int VK_BROWSER_STOP = (int)169L;
    /**
     * {@snippet lang=c :
     * #define VK_BROWSER_STOP 169
     * }
     */
    public static int VK_BROWSER_STOP() {
        return VK_BROWSER_STOP;
    }
    private static final int VK_BROWSER_SEARCH = (int)170L;
    /**
     * {@snippet lang=c :
     * #define VK_BROWSER_SEARCH 170
     * }
     */
    public static int VK_BROWSER_SEARCH() {
        return VK_BROWSER_SEARCH;
    }
    private static final int VK_BROWSER_FAVORITES = (int)171L;
    /**
     * {@snippet lang=c :
     * #define VK_BROWSER_FAVORITES 171
     * }
     */
    public static int VK_BROWSER_FAVORITES() {
        return VK_BROWSER_FAVORITES;
    }
    private static final int VK_BROWSER_HOME = (int)172L;
    /**
     * {@snippet lang=c :
     * #define VK_BROWSER_HOME 172
     * }
     */
    public static int VK_BROWSER_HOME() {
        return VK_BROWSER_HOME;
    }
    private static final int VK_VOLUME_MUTE = (int)173L;
    /**
     * {@snippet lang=c :
     * #define VK_VOLUME_MUTE 173
     * }
     */
    public static int VK_VOLUME_MUTE() {
        return VK_VOLUME_MUTE;
    }
    private static final int VK_VOLUME_DOWN = (int)174L;
    /**
     * {@snippet lang=c :
     * #define VK_VOLUME_DOWN 174
     * }
     */
    public static int VK_VOLUME_DOWN() {
        return VK_VOLUME_DOWN;
    }
    private static final int VK_VOLUME_UP = (int)175L;
    /**
     * {@snippet lang=c :
     * #define VK_VOLUME_UP 175
     * }
     */
    public static int VK_VOLUME_UP() {
        return VK_VOLUME_UP;
    }
    private static final int VK_MEDIA_NEXT_TRACK = (int)176L;
    /**
     * {@snippet lang=c :
     * #define VK_MEDIA_NEXT_TRACK 176
     * }
     */
    public static int VK_MEDIA_NEXT_TRACK() {
        return VK_MEDIA_NEXT_TRACK;
    }
    private static final int VK_MEDIA_PREV_TRACK = (int)177L;
    /**
     * {@snippet lang=c :
     * #define VK_MEDIA_PREV_TRACK 177
     * }
     */
    public static int VK_MEDIA_PREV_TRACK() {
        return VK_MEDIA_PREV_TRACK;
    }
    private static final int VK_MEDIA_STOP = (int)178L;
    /**
     * {@snippet lang=c :
     * #define VK_MEDIA_STOP 178
     * }
     */
    public static int VK_MEDIA_STOP() {
        return VK_MEDIA_STOP;
    }
    private static final int VK_MEDIA_PLAY_PAUSE = (int)179L;
    /**
     * {@snippet lang=c :
     * #define VK_MEDIA_PLAY_PAUSE 179
     * }
     */
    public static int VK_MEDIA_PLAY_PAUSE() {
        return VK_MEDIA_PLAY_PAUSE;
    }
    private static final int VK_LAUNCH_MAIL = (int)180L;
    /**
     * {@snippet lang=c :
     * #define VK_LAUNCH_MAIL 180
     * }
     */
    public static int VK_LAUNCH_MAIL() {
        return VK_LAUNCH_MAIL;
    }
    private static final int VK_LAUNCH_MEDIA_SELECT = (int)181L;
    /**
     * {@snippet lang=c :
     * #define VK_LAUNCH_MEDIA_SELECT 181
     * }
     */
    public static int VK_LAUNCH_MEDIA_SELECT() {
        return VK_LAUNCH_MEDIA_SELECT;
    }
    private static final int VK_LAUNCH_APP1 = (int)182L;
    /**
     * {@snippet lang=c :
     * #define VK_LAUNCH_APP1 182
     * }
     */
    public static int VK_LAUNCH_APP1() {
        return VK_LAUNCH_APP1;
    }
    private static final int VK_LAUNCH_APP2 = (int)183L;
    /**
     * {@snippet lang=c :
     * #define VK_LAUNCH_APP2 183
     * }
     */
    public static int VK_LAUNCH_APP2() {
        return VK_LAUNCH_APP2;
    }
    private static final int VK_OEM_1 = (int)186L;
    /**
     * {@snippet lang=c :
     * #define VK_OEM_1 186
     * }
     */
    public static int VK_OEM_1() {
        return VK_OEM_1;
    }
    private static final int VK_OEM_PLUS = (int)187L;
    /**
     * {@snippet lang=c :
     * #define VK_OEM_PLUS 187
     * }
     */
    public static int VK_OEM_PLUS() {
        return VK_OEM_PLUS;
    }
    private static final int VK_OEM_COMMA = (int)188L;
    /**
     * {@snippet lang=c :
     * #define VK_OEM_COMMA 188
     * }
     */
    public static int VK_OEM_COMMA() {
        return VK_OEM_COMMA;
    }
    private static final int VK_OEM_MINUS = (int)189L;
    /**
     * {@snippet lang=c :
     * #define VK_OEM_MINUS 189
     * }
     */
    public static int VK_OEM_MINUS() {
        return VK_OEM_MINUS;
    }
    private static final int VK_OEM_PERIOD = (int)190L;
    /**
     * {@snippet lang=c :
     * #define VK_OEM_PERIOD 190
     * }
     */
    public static int VK_OEM_PERIOD() {
        return VK_OEM_PERIOD;
    }
    private static final int VK_OEM_2 = (int)191L;
    /**
     * {@snippet lang=c :
     * #define VK_OEM_2 191
     * }
     */
    public static int VK_OEM_2() {
        return VK_OEM_2;
    }
    private static final int VK_OEM_3 = (int)192L;
    /**
     * {@snippet lang=c :
     * #define VK_OEM_3 192
     * }
     */
    public static int VK_OEM_3() {
        return VK_OEM_3;
    }
    private static final int VK_GAMEPAD_A = (int)195L;
    /**
     * {@snippet lang=c :
     * #define VK_GAMEPAD_A 195
     * }
     */
    public static int VK_GAMEPAD_A() {
        return VK_GAMEPAD_A;
    }
    private static final int VK_GAMEPAD_B = (int)196L;
    /**
     * {@snippet lang=c :
     * #define VK_GAMEPAD_B 196
     * }
     */
    public static int VK_GAMEPAD_B() {
        return VK_GAMEPAD_B;
    }
    private static final int VK_GAMEPAD_X = (int)197L;
    /**
     * {@snippet lang=c :
     * #define VK_GAMEPAD_X 197
     * }
     */
    public static int VK_GAMEPAD_X() {
        return VK_GAMEPAD_X;
    }
    private static final int VK_GAMEPAD_Y = (int)198L;
    /**
     * {@snippet lang=c :
     * #define VK_GAMEPAD_Y 198
     * }
     */
    public static int VK_GAMEPAD_Y() {
        return VK_GAMEPAD_Y;
    }
    private static final int VK_GAMEPAD_RIGHT_SHOULDER = (int)199L;
    /**
     * {@snippet lang=c :
     * #define VK_GAMEPAD_RIGHT_SHOULDER 199
     * }
     */
    public static int VK_GAMEPAD_RIGHT_SHOULDER() {
        return VK_GAMEPAD_RIGHT_SHOULDER;
    }
    private static final int VK_GAMEPAD_LEFT_SHOULDER = (int)200L;
    /**
     * {@snippet lang=c :
     * #define VK_GAMEPAD_LEFT_SHOULDER 200
     * }
     */
    public static int VK_GAMEPAD_LEFT_SHOULDER() {
        return VK_GAMEPAD_LEFT_SHOULDER;
    }
    private static final int VK_GAMEPAD_LEFT_TRIGGER = (int)201L;
    /**
     * {@snippet lang=c :
     * #define VK_GAMEPAD_LEFT_TRIGGER 201
     * }
     */
    public static int VK_GAMEPAD_LEFT_TRIGGER() {
        return VK_GAMEPAD_LEFT_TRIGGER;
    }
    private static final int VK_GAMEPAD_RIGHT_TRIGGER = (int)202L;
    /**
     * {@snippet lang=c :
     * #define VK_GAMEPAD_RIGHT_TRIGGER 202
     * }
     */
    public static int VK_GAMEPAD_RIGHT_TRIGGER() {
        return VK_GAMEPAD_RIGHT_TRIGGER;
    }
    private static final int VK_GAMEPAD_DPAD_UP = (int)203L;
    /**
     * {@snippet lang=c :
     * #define VK_GAMEPAD_DPAD_UP 203
     * }
     */
    public static int VK_GAMEPAD_DPAD_UP() {
        return VK_GAMEPAD_DPAD_UP;
    }
    private static final int VK_GAMEPAD_DPAD_DOWN = (int)204L;
    /**
     * {@snippet lang=c :
     * #define VK_GAMEPAD_DPAD_DOWN 204
     * }
     */
    public static int VK_GAMEPAD_DPAD_DOWN() {
        return VK_GAMEPAD_DPAD_DOWN;
    }
    private static final int VK_GAMEPAD_DPAD_LEFT = (int)205L;
    /**
     * {@snippet lang=c :
     * #define VK_GAMEPAD_DPAD_LEFT 205
     * }
     */
    public static int VK_GAMEPAD_DPAD_LEFT() {
        return VK_GAMEPAD_DPAD_LEFT;
    }
    private static final int VK_GAMEPAD_DPAD_RIGHT = (int)206L;
    /**
     * {@snippet lang=c :
     * #define VK_GAMEPAD_DPAD_RIGHT 206
     * }
     */
    public static int VK_GAMEPAD_DPAD_RIGHT() {
        return VK_GAMEPAD_DPAD_RIGHT;
    }
    private static final int VK_GAMEPAD_MENU = (int)207L;
    /**
     * {@snippet lang=c :
     * #define VK_GAMEPAD_MENU 207
     * }
     */
    public static int VK_GAMEPAD_MENU() {
        return VK_GAMEPAD_MENU;
    }
    private static final int VK_GAMEPAD_VIEW = (int)208L;
    /**
     * {@snippet lang=c :
     * #define VK_GAMEPAD_VIEW 208
     * }
     */
    public static int VK_GAMEPAD_VIEW() {
        return VK_GAMEPAD_VIEW;
    }
    private static final int VK_GAMEPAD_LEFT_THUMBSTICK_BUTTON = (int)209L;
    /**
     * {@snippet lang=c :
     * #define VK_GAMEPAD_LEFT_THUMBSTICK_BUTTON 209
     * }
     */
    public static int VK_GAMEPAD_LEFT_THUMBSTICK_BUTTON() {
        return VK_GAMEPAD_LEFT_THUMBSTICK_BUTTON;
    }
    private static final int VK_GAMEPAD_RIGHT_THUMBSTICK_BUTTON = (int)210L;
    /**
     * {@snippet lang=c :
     * #define VK_GAMEPAD_RIGHT_THUMBSTICK_BUTTON 210
     * }
     */
    public static int VK_GAMEPAD_RIGHT_THUMBSTICK_BUTTON() {
        return VK_GAMEPAD_RIGHT_THUMBSTICK_BUTTON;
    }
    private static final int VK_GAMEPAD_LEFT_THUMBSTICK_UP = (int)211L;
    /**
     * {@snippet lang=c :
     * #define VK_GAMEPAD_LEFT_THUMBSTICK_UP 211
     * }
     */
    public static int VK_GAMEPAD_LEFT_THUMBSTICK_UP() {
        return VK_GAMEPAD_LEFT_THUMBSTICK_UP;
    }
    private static final int VK_GAMEPAD_LEFT_THUMBSTICK_DOWN = (int)212L;
    /**
     * {@snippet lang=c :
     * #define VK_GAMEPAD_LEFT_THUMBSTICK_DOWN 212
     * }
     */
    public static int VK_GAMEPAD_LEFT_THUMBSTICK_DOWN() {
        return VK_GAMEPAD_LEFT_THUMBSTICK_DOWN;
    }
    private static final int VK_GAMEPAD_LEFT_THUMBSTICK_RIGHT = (int)213L;
    /**
     * {@snippet lang=c :
     * #define VK_GAMEPAD_LEFT_THUMBSTICK_RIGHT 213
     * }
     */
    public static int VK_GAMEPAD_LEFT_THUMBSTICK_RIGHT() {
        return VK_GAMEPAD_LEFT_THUMBSTICK_RIGHT;
    }
    private static final int VK_GAMEPAD_LEFT_THUMBSTICK_LEFT = (int)214L;
    /**
     * {@snippet lang=c :
     * #define VK_GAMEPAD_LEFT_THUMBSTICK_LEFT 214
     * }
     */
    public static int VK_GAMEPAD_LEFT_THUMBSTICK_LEFT() {
        return VK_GAMEPAD_LEFT_THUMBSTICK_LEFT;
    }
    private static final int VK_GAMEPAD_RIGHT_THUMBSTICK_UP = (int)215L;
    /**
     * {@snippet lang=c :
     * #define VK_GAMEPAD_RIGHT_THUMBSTICK_UP 215
     * }
     */
    public static int VK_GAMEPAD_RIGHT_THUMBSTICK_UP() {
        return VK_GAMEPAD_RIGHT_THUMBSTICK_UP;
    }
    private static final int VK_GAMEPAD_RIGHT_THUMBSTICK_DOWN = (int)216L;
    /**
     * {@snippet lang=c :
     * #define VK_GAMEPAD_RIGHT_THUMBSTICK_DOWN 216
     * }
     */
    public static int VK_GAMEPAD_RIGHT_THUMBSTICK_DOWN() {
        return VK_GAMEPAD_RIGHT_THUMBSTICK_DOWN;
    }
    private static final int VK_GAMEPAD_RIGHT_THUMBSTICK_RIGHT = (int)217L;
    /**
     * {@snippet lang=c :
     * #define VK_GAMEPAD_RIGHT_THUMBSTICK_RIGHT 217
     * }
     */
    public static int VK_GAMEPAD_RIGHT_THUMBSTICK_RIGHT() {
        return VK_GAMEPAD_RIGHT_THUMBSTICK_RIGHT;
    }
    private static final int VK_GAMEPAD_RIGHT_THUMBSTICK_LEFT = (int)218L;
    /**
     * {@snippet lang=c :
     * #define VK_GAMEPAD_RIGHT_THUMBSTICK_LEFT 218
     * }
     */
    public static int VK_GAMEPAD_RIGHT_THUMBSTICK_LEFT() {
        return VK_GAMEPAD_RIGHT_THUMBSTICK_LEFT;
    }
    private static final int VK_OEM_4 = (int)219L;
    /**
     * {@snippet lang=c :
     * #define VK_OEM_4 219
     * }
     */
    public static int VK_OEM_4() {
        return VK_OEM_4;
    }
    private static final int VK_OEM_5 = (int)220L;
    /**
     * {@snippet lang=c :
     * #define VK_OEM_5 220
     * }
     */
    public static int VK_OEM_5() {
        return VK_OEM_5;
    }
    private static final int VK_OEM_6 = (int)221L;
    /**
     * {@snippet lang=c :
     * #define VK_OEM_6 221
     * }
     */
    public static int VK_OEM_6() {
        return VK_OEM_6;
    }
    private static final int VK_OEM_7 = (int)222L;
    /**
     * {@snippet lang=c :
     * #define VK_OEM_7 222
     * }
     */
    public static int VK_OEM_7() {
        return VK_OEM_7;
    }
    private static final int VK_OEM_8 = (int)223L;
    /**
     * {@snippet lang=c :
     * #define VK_OEM_8 223
     * }
     */
    public static int VK_OEM_8() {
        return VK_OEM_8;
    }
    private static final int VK_OEM_AX = (int)225L;
    /**
     * {@snippet lang=c :
     * #define VK_OEM_AX 225
     * }
     */
    public static int VK_OEM_AX() {
        return VK_OEM_AX;
    }
    private static final int VK_OEM_102 = (int)226L;
    /**
     * {@snippet lang=c :
     * #define VK_OEM_102 226
     * }
     */
    public static int VK_OEM_102() {
        return VK_OEM_102;
    }
    private static final int VK_ICO_HELP = (int)227L;
    /**
     * {@snippet lang=c :
     * #define VK_ICO_HELP 227
     * }
     */
    public static int VK_ICO_HELP() {
        return VK_ICO_HELP;
    }
    private static final int VK_ICO_00 = (int)228L;
    /**
     * {@snippet lang=c :
     * #define VK_ICO_00 228
     * }
     */
    public static int VK_ICO_00() {
        return VK_ICO_00;
    }
    private static final int VK_PROCESSKEY = (int)229L;
    /**
     * {@snippet lang=c :
     * #define VK_PROCESSKEY 229
     * }
     */
    public static int VK_PROCESSKEY() {
        return VK_PROCESSKEY;
    }
    private static final int VK_ICO_CLEAR = (int)230L;
    /**
     * {@snippet lang=c :
     * #define VK_ICO_CLEAR 230
     * }
     */
    public static int VK_ICO_CLEAR() {
        return VK_ICO_CLEAR;
    }
    private static final int VK_PACKET = (int)231L;
    /**
     * {@snippet lang=c :
     * #define VK_PACKET 231
     * }
     */
    public static int VK_PACKET() {
        return VK_PACKET;
    }
    private static final int VK_OEM_RESET = (int)233L;
    /**
     * {@snippet lang=c :
     * #define VK_OEM_RESET 233
     * }
     */
    public static int VK_OEM_RESET() {
        return VK_OEM_RESET;
    }
    private static final int VK_OEM_JUMP = (int)234L;
    /**
     * {@snippet lang=c :
     * #define VK_OEM_JUMP 234
     * }
     */
    public static int VK_OEM_JUMP() {
        return VK_OEM_JUMP;
    }
    private static final int VK_OEM_PA1 = (int)235L;
    /**
     * {@snippet lang=c :
     * #define VK_OEM_PA1 235
     * }
     */
    public static int VK_OEM_PA1() {
        return VK_OEM_PA1;
    }
    private static final int VK_OEM_PA2 = (int)236L;
    /**
     * {@snippet lang=c :
     * #define VK_OEM_PA2 236
     * }
     */
    public static int VK_OEM_PA2() {
        return VK_OEM_PA2;
    }
    private static final int VK_OEM_PA3 = (int)237L;
    /**
     * {@snippet lang=c :
     * #define VK_OEM_PA3 237
     * }
     */
    public static int VK_OEM_PA3() {
        return VK_OEM_PA3;
    }
    private static final int VK_OEM_WSCTRL = (int)238L;
    /**
     * {@snippet lang=c :
     * #define VK_OEM_WSCTRL 238
     * }
     */
    public static int VK_OEM_WSCTRL() {
        return VK_OEM_WSCTRL;
    }
    private static final int VK_OEM_CUSEL = (int)239L;
    /**
     * {@snippet lang=c :
     * #define VK_OEM_CUSEL 239
     * }
     */
    public static int VK_OEM_CUSEL() {
        return VK_OEM_CUSEL;
    }
    private static final int VK_OEM_ATTN = (int)240L;
    /**
     * {@snippet lang=c :
     * #define VK_OEM_ATTN 240
     * }
     */
    public static int VK_OEM_ATTN() {
        return VK_OEM_ATTN;
    }
    private static final int VK_OEM_FINISH = (int)241L;
    /**
     * {@snippet lang=c :
     * #define VK_OEM_FINISH 241
     * }
     */
    public static int VK_OEM_FINISH() {
        return VK_OEM_FINISH;
    }
    private static final int VK_OEM_COPY = (int)242L;
    /**
     * {@snippet lang=c :
     * #define VK_OEM_COPY 242
     * }
     */
    public static int VK_OEM_COPY() {
        return VK_OEM_COPY;
    }
    private static final int VK_OEM_AUTO = (int)243L;
    /**
     * {@snippet lang=c :
     * #define VK_OEM_AUTO 243
     * }
     */
    public static int VK_OEM_AUTO() {
        return VK_OEM_AUTO;
    }
    private static final int VK_OEM_ENLW = (int)244L;
    /**
     * {@snippet lang=c :
     * #define VK_OEM_ENLW 244
     * }
     */
    public static int VK_OEM_ENLW() {
        return VK_OEM_ENLW;
    }
    private static final int VK_OEM_BACKTAB = (int)245L;
    /**
     * {@snippet lang=c :
     * #define VK_OEM_BACKTAB 245
     * }
     */
    public static int VK_OEM_BACKTAB() {
        return VK_OEM_BACKTAB;
    }
    private static final int VK_ATTN = (int)246L;
    /**
     * {@snippet lang=c :
     * #define VK_ATTN 246
     * }
     */
    public static int VK_ATTN() {
        return VK_ATTN;
    }
    private static final int VK_CRSEL = (int)247L;
    /**
     * {@snippet lang=c :
     * #define VK_CRSEL 247
     * }
     */
    public static int VK_CRSEL() {
        return VK_CRSEL;
    }
    private static final int VK_EXSEL = (int)248L;
    /**
     * {@snippet lang=c :
     * #define VK_EXSEL 248
     * }
     */
    public static int VK_EXSEL() {
        return VK_EXSEL;
    }
    private static final int VK_EREOF = (int)249L;
    /**
     * {@snippet lang=c :
     * #define VK_EREOF 249
     * }
     */
    public static int VK_EREOF() {
        return VK_EREOF;
    }
    private static final int VK_PLAY = (int)250L;
    /**
     * {@snippet lang=c :
     * #define VK_PLAY 250
     * }
     */
    public static int VK_PLAY() {
        return VK_PLAY;
    }
    private static final int VK_ZOOM = (int)251L;
    /**
     * {@snippet lang=c :
     * #define VK_ZOOM 251
     * }
     */
    public static int VK_ZOOM() {
        return VK_ZOOM;
    }
    private static final int VK_NONAME = (int)252L;
    /**
     * {@snippet lang=c :
     * #define VK_NONAME 252
     * }
     */
    public static int VK_NONAME() {
        return VK_NONAME;
    }
    private static final int VK_PA1 = (int)253L;
    /**
     * {@snippet lang=c :
     * #define VK_PA1 253
     * }
     */
    public static int VK_PA1() {
        return VK_PA1;
    }
    private static final int VK_OEM_CLEAR = (int)254L;
    /**
     * {@snippet lang=c :
     * #define VK_OEM_CLEAR 254
     * }
     */
    public static int VK_OEM_CLEAR() {
        return VK_OEM_CLEAR;
    }
    private static final int WH_JOURNALRECORD = (int)0L;
    /**
     * {@snippet lang=c :
     * #define WH_JOURNALRECORD 0
     * }
     */
    public static int WH_JOURNALRECORD() {
        return WH_JOURNALRECORD;
    }
    private static final int WH_JOURNALPLAYBACK = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WH_JOURNALPLAYBACK 1
     * }
     */
    public static int WH_JOURNALPLAYBACK() {
        return WH_JOURNALPLAYBACK;
    }
    private static final int WH_KEYBOARD = (int)2L;
    /**
     * {@snippet lang=c :
     * #define WH_KEYBOARD 2
     * }
     */
    public static int WH_KEYBOARD() {
        return WH_KEYBOARD;
    }
    private static final int WH_GETMESSAGE = (int)3L;
    /**
     * {@snippet lang=c :
     * #define WH_GETMESSAGE 3
     * }
     */
    public static int WH_GETMESSAGE() {
        return WH_GETMESSAGE;
    }
    private static final int WH_CALLWNDPROC = (int)4L;
    /**
     * {@snippet lang=c :
     * #define WH_CALLWNDPROC 4
     * }
     */
    public static int WH_CALLWNDPROC() {
        return WH_CALLWNDPROC;
    }
    private static final int WH_CBT = (int)5L;
    /**
     * {@snippet lang=c :
     * #define WH_CBT 5
     * }
     */
    public static int WH_CBT() {
        return WH_CBT;
    }
    private static final int WH_SYSMSGFILTER = (int)6L;
    /**
     * {@snippet lang=c :
     * #define WH_SYSMSGFILTER 6
     * }
     */
    public static int WH_SYSMSGFILTER() {
        return WH_SYSMSGFILTER;
    }
    private static final int WH_MOUSE = (int)7L;
    /**
     * {@snippet lang=c :
     * #define WH_MOUSE 7
     * }
     */
    public static int WH_MOUSE() {
        return WH_MOUSE;
    }
    private static final int WH_DEBUG = (int)9L;
    /**
     * {@snippet lang=c :
     * #define WH_DEBUG 9
     * }
     */
    public static int WH_DEBUG() {
        return WH_DEBUG;
    }
    private static final int WH_SHELL = (int)10L;
    /**
     * {@snippet lang=c :
     * #define WH_SHELL 10
     * }
     */
    public static int WH_SHELL() {
        return WH_SHELL;
    }
    private static final int WH_FOREGROUNDIDLE = (int)11L;
    /**
     * {@snippet lang=c :
     * #define WH_FOREGROUNDIDLE 11
     * }
     */
    public static int WH_FOREGROUNDIDLE() {
        return WH_FOREGROUNDIDLE;
    }
    private static final int WH_CALLWNDPROCRET = (int)12L;
    /**
     * {@snippet lang=c :
     * #define WH_CALLWNDPROCRET 12
     * }
     */
    public static int WH_CALLWNDPROCRET() {
        return WH_CALLWNDPROCRET;
    }
    private static final int WH_KEYBOARD_LL = (int)13L;
    /**
     * {@snippet lang=c :
     * #define WH_KEYBOARD_LL 13
     * }
     */
    public static int WH_KEYBOARD_LL() {
        return WH_KEYBOARD_LL;
    }
    private static final int WH_MOUSE_LL = (int)14L;
    /**
     * {@snippet lang=c :
     * #define WH_MOUSE_LL 14
     * }
     */
    public static int WH_MOUSE_LL() {
        return WH_MOUSE_LL;
    }
    private static final int WH_MAX = (int)14L;
    /**
     * {@snippet lang=c :
     * #define WH_MAX 14
     * }
     */
    public static int WH_MAX() {
        return WH_MAX;
    }
    private static final int HC_ACTION = (int)0L;
    /**
     * {@snippet lang=c :
     * #define HC_ACTION 0
     * }
     */
    public static int HC_ACTION() {
        return HC_ACTION;
    }
    private static final int HC_GETNEXT = (int)1L;
    /**
     * {@snippet lang=c :
     * #define HC_GETNEXT 1
     * }
     */
    public static int HC_GETNEXT() {
        return HC_GETNEXT;
    }
    private static final int HC_SKIP = (int)2L;
    /**
     * {@snippet lang=c :
     * #define HC_SKIP 2
     * }
     */
    public static int HC_SKIP() {
        return HC_SKIP;
    }
    private static final int HC_NOREMOVE = (int)3L;
    /**
     * {@snippet lang=c :
     * #define HC_NOREMOVE 3
     * }
     */
    public static int HC_NOREMOVE() {
        return HC_NOREMOVE;
    }
    private static final int HC_SYSMODALON = (int)4L;
    /**
     * {@snippet lang=c :
     * #define HC_SYSMODALON 4
     * }
     */
    public static int HC_SYSMODALON() {
        return HC_SYSMODALON;
    }
    private static final int HC_SYSMODALOFF = (int)5L;
    /**
     * {@snippet lang=c :
     * #define HC_SYSMODALOFF 5
     * }
     */
    public static int HC_SYSMODALOFF() {
        return HC_SYSMODALOFF;
    }
    private static final int HCBT_MOVESIZE = (int)0L;
    /**
     * {@snippet lang=c :
     * #define HCBT_MOVESIZE 0
     * }
     */
    public static int HCBT_MOVESIZE() {
        return HCBT_MOVESIZE;
    }
    private static final int HCBT_MINMAX = (int)1L;
    /**
     * {@snippet lang=c :
     * #define HCBT_MINMAX 1
     * }
     */
    public static int HCBT_MINMAX() {
        return HCBT_MINMAX;
    }
    private static final int HCBT_QS = (int)2L;
    /**
     * {@snippet lang=c :
     * #define HCBT_QS 2
     * }
     */
    public static int HCBT_QS() {
        return HCBT_QS;
    }
    private static final int HCBT_CREATEWND = (int)3L;
    /**
     * {@snippet lang=c :
     * #define HCBT_CREATEWND 3
     * }
     */
    public static int HCBT_CREATEWND() {
        return HCBT_CREATEWND;
    }
    private static final int HCBT_DESTROYWND = (int)4L;
    /**
     * {@snippet lang=c :
     * #define HCBT_DESTROYWND 4
     * }
     */
    public static int HCBT_DESTROYWND() {
        return HCBT_DESTROYWND;
    }
    private static final int HCBT_ACTIVATE = (int)5L;
    /**
     * {@snippet lang=c :
     * #define HCBT_ACTIVATE 5
     * }
     */
    public static int HCBT_ACTIVATE() {
        return HCBT_ACTIVATE;
    }
    private static final int HCBT_CLICKSKIPPED = (int)6L;
    /**
     * {@snippet lang=c :
     * #define HCBT_CLICKSKIPPED 6
     * }
     */
    public static int HCBT_CLICKSKIPPED() {
        return HCBT_CLICKSKIPPED;
    }
    private static final int HCBT_KEYSKIPPED = (int)7L;
    /**
     * {@snippet lang=c :
     * #define HCBT_KEYSKIPPED 7
     * }
     */
    public static int HCBT_KEYSKIPPED() {
        return HCBT_KEYSKIPPED;
    }
    private static final int HCBT_SYSCOMMAND = (int)8L;
    /**
     * {@snippet lang=c :
     * #define HCBT_SYSCOMMAND 8
     * }
     */
    public static int HCBT_SYSCOMMAND() {
        return HCBT_SYSCOMMAND;
    }
    private static final int HCBT_SETFOCUS = (int)9L;
    /**
     * {@snippet lang=c :
     * #define HCBT_SETFOCUS 9
     * }
     */
    public static int HCBT_SETFOCUS() {
        return HCBT_SETFOCUS;
    }
    private static final int WTS_CONSOLE_CONNECT = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WTS_CONSOLE_CONNECT 1
     * }
     */
    public static int WTS_CONSOLE_CONNECT() {
        return WTS_CONSOLE_CONNECT;
    }
    private static final int WTS_CONSOLE_DISCONNECT = (int)2L;
    /**
     * {@snippet lang=c :
     * #define WTS_CONSOLE_DISCONNECT 2
     * }
     */
    public static int WTS_CONSOLE_DISCONNECT() {
        return WTS_CONSOLE_DISCONNECT;
    }
    private static final int WTS_REMOTE_CONNECT = (int)3L;
    /**
     * {@snippet lang=c :
     * #define WTS_REMOTE_CONNECT 3
     * }
     */
    public static int WTS_REMOTE_CONNECT() {
        return WTS_REMOTE_CONNECT;
    }
    private static final int WTS_REMOTE_DISCONNECT = (int)4L;
    /**
     * {@snippet lang=c :
     * #define WTS_REMOTE_DISCONNECT 4
     * }
     */
    public static int WTS_REMOTE_DISCONNECT() {
        return WTS_REMOTE_DISCONNECT;
    }
    private static final int WTS_SESSION_LOGON = (int)5L;
    /**
     * {@snippet lang=c :
     * #define WTS_SESSION_LOGON 5
     * }
     */
    public static int WTS_SESSION_LOGON() {
        return WTS_SESSION_LOGON;
    }
    private static final int WTS_SESSION_LOGOFF = (int)6L;
    /**
     * {@snippet lang=c :
     * #define WTS_SESSION_LOGOFF 6
     * }
     */
    public static int WTS_SESSION_LOGOFF() {
        return WTS_SESSION_LOGOFF;
    }
    private static final int WTS_SESSION_LOCK = (int)7L;
    /**
     * {@snippet lang=c :
     * #define WTS_SESSION_LOCK 7
     * }
     */
    public static int WTS_SESSION_LOCK() {
        return WTS_SESSION_LOCK;
    }
    private static final int WTS_SESSION_UNLOCK = (int)8L;
    /**
     * {@snippet lang=c :
     * #define WTS_SESSION_UNLOCK 8
     * }
     */
    public static int WTS_SESSION_UNLOCK() {
        return WTS_SESSION_UNLOCK;
    }
    private static final int WTS_SESSION_REMOTE_CONTROL = (int)9L;
    /**
     * {@snippet lang=c :
     * #define WTS_SESSION_REMOTE_CONTROL 9
     * }
     */
    public static int WTS_SESSION_REMOTE_CONTROL() {
        return WTS_SESSION_REMOTE_CONTROL;
    }
    private static final int WTS_SESSION_CREATE = (int)10L;
    /**
     * {@snippet lang=c :
     * #define WTS_SESSION_CREATE 10
     * }
     */
    public static int WTS_SESSION_CREATE() {
        return WTS_SESSION_CREATE;
    }
    private static final int WTS_SESSION_TERMINATE = (int)11L;
    /**
     * {@snippet lang=c :
     * #define WTS_SESSION_TERMINATE 11
     * }
     */
    public static int WTS_SESSION_TERMINATE() {
        return WTS_SESSION_TERMINATE;
    }
    private static final int MSGF_DIALOGBOX = (int)0L;
    /**
     * {@snippet lang=c :
     * #define MSGF_DIALOGBOX 0
     * }
     */
    public static int MSGF_DIALOGBOX() {
        return MSGF_DIALOGBOX;
    }
    private static final int MSGF_MESSAGEBOX = (int)1L;
    /**
     * {@snippet lang=c :
     * #define MSGF_MESSAGEBOX 1
     * }
     */
    public static int MSGF_MESSAGEBOX() {
        return MSGF_MESSAGEBOX;
    }
    private static final int MSGF_MENU = (int)2L;
    /**
     * {@snippet lang=c :
     * #define MSGF_MENU 2
     * }
     */
    public static int MSGF_MENU() {
        return MSGF_MENU;
    }
    private static final int MSGF_SCROLLBAR = (int)5L;
    /**
     * {@snippet lang=c :
     * #define MSGF_SCROLLBAR 5
     * }
     */
    public static int MSGF_SCROLLBAR() {
        return MSGF_SCROLLBAR;
    }
    private static final int MSGF_NEXTWINDOW = (int)6L;
    /**
     * {@snippet lang=c :
     * #define MSGF_NEXTWINDOW 6
     * }
     */
    public static int MSGF_NEXTWINDOW() {
        return MSGF_NEXTWINDOW;
    }
    private static final int MSGF_MAX = (int)8L;
    /**
     * {@snippet lang=c :
     * #define MSGF_MAX 8
     * }
     */
    public static int MSGF_MAX() {
        return MSGF_MAX;
    }
    private static final int MSGF_USER = (int)4096L;
    /**
     * {@snippet lang=c :
     * #define MSGF_USER 4096
     * }
     */
    public static int MSGF_USER() {
        return MSGF_USER;
    }
    private static final int HSHELL_WINDOWCREATED = (int)1L;
    /**
     * {@snippet lang=c :
     * #define HSHELL_WINDOWCREATED 1
     * }
     */
    public static int HSHELL_WINDOWCREATED() {
        return HSHELL_WINDOWCREATED;
    }
    private static final int HSHELL_WINDOWDESTROYED = (int)2L;
    /**
     * {@snippet lang=c :
     * #define HSHELL_WINDOWDESTROYED 2
     * }
     */
    public static int HSHELL_WINDOWDESTROYED() {
        return HSHELL_WINDOWDESTROYED;
    }
    private static final int HSHELL_ACTIVATESHELLWINDOW = (int)3L;
    /**
     * {@snippet lang=c :
     * #define HSHELL_ACTIVATESHELLWINDOW 3
     * }
     */
    public static int HSHELL_ACTIVATESHELLWINDOW() {
        return HSHELL_ACTIVATESHELLWINDOW;
    }
    private static final int HSHELL_WINDOWACTIVATED = (int)4L;
    /**
     * {@snippet lang=c :
     * #define HSHELL_WINDOWACTIVATED 4
     * }
     */
    public static int HSHELL_WINDOWACTIVATED() {
        return HSHELL_WINDOWACTIVATED;
    }
    private static final int HSHELL_GETMINRECT = (int)5L;
    /**
     * {@snippet lang=c :
     * #define HSHELL_GETMINRECT 5
     * }
     */
    public static int HSHELL_GETMINRECT() {
        return HSHELL_GETMINRECT;
    }
    private static final int HSHELL_REDRAW = (int)6L;
    /**
     * {@snippet lang=c :
     * #define HSHELL_REDRAW 6
     * }
     */
    public static int HSHELL_REDRAW() {
        return HSHELL_REDRAW;
    }
    private static final int HSHELL_TASKMAN = (int)7L;
    /**
     * {@snippet lang=c :
     * #define HSHELL_TASKMAN 7
     * }
     */
    public static int HSHELL_TASKMAN() {
        return HSHELL_TASKMAN;
    }
    private static final int HSHELL_LANGUAGE = (int)8L;
    /**
     * {@snippet lang=c :
     * #define HSHELL_LANGUAGE 8
     * }
     */
    public static int HSHELL_LANGUAGE() {
        return HSHELL_LANGUAGE;
    }
    private static final int HSHELL_SYSMENU = (int)9L;
    /**
     * {@snippet lang=c :
     * #define HSHELL_SYSMENU 9
     * }
     */
    public static int HSHELL_SYSMENU() {
        return HSHELL_SYSMENU;
    }
    private static final int HSHELL_ENDTASK = (int)10L;
    /**
     * {@snippet lang=c :
     * #define HSHELL_ENDTASK 10
     * }
     */
    public static int HSHELL_ENDTASK() {
        return HSHELL_ENDTASK;
    }
    private static final int HSHELL_ACCESSIBILITYSTATE = (int)11L;
    /**
     * {@snippet lang=c :
     * #define HSHELL_ACCESSIBILITYSTATE 11
     * }
     */
    public static int HSHELL_ACCESSIBILITYSTATE() {
        return HSHELL_ACCESSIBILITYSTATE;
    }
    private static final int HSHELL_APPCOMMAND = (int)12L;
    /**
     * {@snippet lang=c :
     * #define HSHELL_APPCOMMAND 12
     * }
     */
    public static int HSHELL_APPCOMMAND() {
        return HSHELL_APPCOMMAND;
    }
    private static final int HSHELL_WINDOWREPLACED = (int)13L;
    /**
     * {@snippet lang=c :
     * #define HSHELL_WINDOWREPLACED 13
     * }
     */
    public static int HSHELL_WINDOWREPLACED() {
        return HSHELL_WINDOWREPLACED;
    }
    private static final int HSHELL_WINDOWREPLACING = (int)14L;
    /**
     * {@snippet lang=c :
     * #define HSHELL_WINDOWREPLACING 14
     * }
     */
    public static int HSHELL_WINDOWREPLACING() {
        return HSHELL_WINDOWREPLACING;
    }
    private static final int HSHELL_MONITORCHANGED = (int)16L;
    /**
     * {@snippet lang=c :
     * #define HSHELL_MONITORCHANGED 16
     * }
     */
    public static int HSHELL_MONITORCHANGED() {
        return HSHELL_MONITORCHANGED;
    }
    private static final int HSHELL_HIGHBIT = (int)32768L;
    /**
     * {@snippet lang=c :
     * #define HSHELL_HIGHBIT 32768
     * }
     */
    public static int HSHELL_HIGHBIT() {
        return HSHELL_HIGHBIT;
    }
    private static final int APPCOMMAND_BROWSER_BACKWARD = (int)1L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_BROWSER_BACKWARD 1
     * }
     */
    public static int APPCOMMAND_BROWSER_BACKWARD() {
        return APPCOMMAND_BROWSER_BACKWARD;
    }
    private static final int APPCOMMAND_BROWSER_FORWARD = (int)2L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_BROWSER_FORWARD 2
     * }
     */
    public static int APPCOMMAND_BROWSER_FORWARD() {
        return APPCOMMAND_BROWSER_FORWARD;
    }
    private static final int APPCOMMAND_BROWSER_REFRESH = (int)3L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_BROWSER_REFRESH 3
     * }
     */
    public static int APPCOMMAND_BROWSER_REFRESH() {
        return APPCOMMAND_BROWSER_REFRESH;
    }
    private static final int APPCOMMAND_BROWSER_STOP = (int)4L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_BROWSER_STOP 4
     * }
     */
    public static int APPCOMMAND_BROWSER_STOP() {
        return APPCOMMAND_BROWSER_STOP;
    }
    private static final int APPCOMMAND_BROWSER_SEARCH = (int)5L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_BROWSER_SEARCH 5
     * }
     */
    public static int APPCOMMAND_BROWSER_SEARCH() {
        return APPCOMMAND_BROWSER_SEARCH;
    }
    private static final int APPCOMMAND_BROWSER_FAVORITES = (int)6L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_BROWSER_FAVORITES 6
     * }
     */
    public static int APPCOMMAND_BROWSER_FAVORITES() {
        return APPCOMMAND_BROWSER_FAVORITES;
    }
    private static final int APPCOMMAND_BROWSER_HOME = (int)7L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_BROWSER_HOME 7
     * }
     */
    public static int APPCOMMAND_BROWSER_HOME() {
        return APPCOMMAND_BROWSER_HOME;
    }
    private static final int APPCOMMAND_VOLUME_MUTE = (int)8L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_VOLUME_MUTE 8
     * }
     */
    public static int APPCOMMAND_VOLUME_MUTE() {
        return APPCOMMAND_VOLUME_MUTE;
    }
    private static final int APPCOMMAND_VOLUME_DOWN = (int)9L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_VOLUME_DOWN 9
     * }
     */
    public static int APPCOMMAND_VOLUME_DOWN() {
        return APPCOMMAND_VOLUME_DOWN;
    }
    private static final int APPCOMMAND_VOLUME_UP = (int)10L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_VOLUME_UP 10
     * }
     */
    public static int APPCOMMAND_VOLUME_UP() {
        return APPCOMMAND_VOLUME_UP;
    }
    private static final int APPCOMMAND_MEDIA_NEXTTRACK = (int)11L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_MEDIA_NEXTTRACK 11
     * }
     */
    public static int APPCOMMAND_MEDIA_NEXTTRACK() {
        return APPCOMMAND_MEDIA_NEXTTRACK;
    }
    private static final int APPCOMMAND_MEDIA_PREVIOUSTRACK = (int)12L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_MEDIA_PREVIOUSTRACK 12
     * }
     */
    public static int APPCOMMAND_MEDIA_PREVIOUSTRACK() {
        return APPCOMMAND_MEDIA_PREVIOUSTRACK;
    }
    private static final int APPCOMMAND_MEDIA_STOP = (int)13L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_MEDIA_STOP 13
     * }
     */
    public static int APPCOMMAND_MEDIA_STOP() {
        return APPCOMMAND_MEDIA_STOP;
    }
    private static final int APPCOMMAND_MEDIA_PLAY_PAUSE = (int)14L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_MEDIA_PLAY_PAUSE 14
     * }
     */
    public static int APPCOMMAND_MEDIA_PLAY_PAUSE() {
        return APPCOMMAND_MEDIA_PLAY_PAUSE;
    }
    private static final int APPCOMMAND_LAUNCH_MAIL = (int)15L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_LAUNCH_MAIL 15
     * }
     */
    public static int APPCOMMAND_LAUNCH_MAIL() {
        return APPCOMMAND_LAUNCH_MAIL;
    }
    private static final int APPCOMMAND_LAUNCH_MEDIA_SELECT = (int)16L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_LAUNCH_MEDIA_SELECT 16
     * }
     */
    public static int APPCOMMAND_LAUNCH_MEDIA_SELECT() {
        return APPCOMMAND_LAUNCH_MEDIA_SELECT;
    }
    private static final int APPCOMMAND_LAUNCH_APP1 = (int)17L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_LAUNCH_APP1 17
     * }
     */
    public static int APPCOMMAND_LAUNCH_APP1() {
        return APPCOMMAND_LAUNCH_APP1;
    }
    private static final int APPCOMMAND_LAUNCH_APP2 = (int)18L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_LAUNCH_APP2 18
     * }
     */
    public static int APPCOMMAND_LAUNCH_APP2() {
        return APPCOMMAND_LAUNCH_APP2;
    }
    private static final int APPCOMMAND_BASS_DOWN = (int)19L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_BASS_DOWN 19
     * }
     */
    public static int APPCOMMAND_BASS_DOWN() {
        return APPCOMMAND_BASS_DOWN;
    }
    private static final int APPCOMMAND_BASS_BOOST = (int)20L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_BASS_BOOST 20
     * }
     */
    public static int APPCOMMAND_BASS_BOOST() {
        return APPCOMMAND_BASS_BOOST;
    }
    private static final int APPCOMMAND_BASS_UP = (int)21L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_BASS_UP 21
     * }
     */
    public static int APPCOMMAND_BASS_UP() {
        return APPCOMMAND_BASS_UP;
    }
    private static final int APPCOMMAND_TREBLE_DOWN = (int)22L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_TREBLE_DOWN 22
     * }
     */
    public static int APPCOMMAND_TREBLE_DOWN() {
        return APPCOMMAND_TREBLE_DOWN;
    }
    private static final int APPCOMMAND_TREBLE_UP = (int)23L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_TREBLE_UP 23
     * }
     */
    public static int APPCOMMAND_TREBLE_UP() {
        return APPCOMMAND_TREBLE_UP;
    }
    private static final int APPCOMMAND_MICROPHONE_VOLUME_MUTE = (int)24L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_MICROPHONE_VOLUME_MUTE 24
     * }
     */
    public static int APPCOMMAND_MICROPHONE_VOLUME_MUTE() {
        return APPCOMMAND_MICROPHONE_VOLUME_MUTE;
    }
    private static final int APPCOMMAND_MICROPHONE_VOLUME_DOWN = (int)25L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_MICROPHONE_VOLUME_DOWN 25
     * }
     */
    public static int APPCOMMAND_MICROPHONE_VOLUME_DOWN() {
        return APPCOMMAND_MICROPHONE_VOLUME_DOWN;
    }
    private static final int APPCOMMAND_MICROPHONE_VOLUME_UP = (int)26L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_MICROPHONE_VOLUME_UP 26
     * }
     */
    public static int APPCOMMAND_MICROPHONE_VOLUME_UP() {
        return APPCOMMAND_MICROPHONE_VOLUME_UP;
    }
    private static final int APPCOMMAND_HELP = (int)27L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_HELP 27
     * }
     */
    public static int APPCOMMAND_HELP() {
        return APPCOMMAND_HELP;
    }
    private static final int APPCOMMAND_FIND = (int)28L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_FIND 28
     * }
     */
    public static int APPCOMMAND_FIND() {
        return APPCOMMAND_FIND;
    }
    private static final int APPCOMMAND_NEW = (int)29L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_NEW 29
     * }
     */
    public static int APPCOMMAND_NEW() {
        return APPCOMMAND_NEW;
    }
    private static final int APPCOMMAND_OPEN = (int)30L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_OPEN 30
     * }
     */
    public static int APPCOMMAND_OPEN() {
        return APPCOMMAND_OPEN;
    }
    private static final int APPCOMMAND_CLOSE = (int)31L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_CLOSE 31
     * }
     */
    public static int APPCOMMAND_CLOSE() {
        return APPCOMMAND_CLOSE;
    }
    private static final int APPCOMMAND_SAVE = (int)32L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_SAVE 32
     * }
     */
    public static int APPCOMMAND_SAVE() {
        return APPCOMMAND_SAVE;
    }
    private static final int APPCOMMAND_PRINT = (int)33L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_PRINT 33
     * }
     */
    public static int APPCOMMAND_PRINT() {
        return APPCOMMAND_PRINT;
    }
    private static final int APPCOMMAND_UNDO = (int)34L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_UNDO 34
     * }
     */
    public static int APPCOMMAND_UNDO() {
        return APPCOMMAND_UNDO;
    }
    private static final int APPCOMMAND_REDO = (int)35L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_REDO 35
     * }
     */
    public static int APPCOMMAND_REDO() {
        return APPCOMMAND_REDO;
    }
    private static final int APPCOMMAND_COPY = (int)36L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_COPY 36
     * }
     */
    public static int APPCOMMAND_COPY() {
        return APPCOMMAND_COPY;
    }
    private static final int APPCOMMAND_CUT = (int)37L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_CUT 37
     * }
     */
    public static int APPCOMMAND_CUT() {
        return APPCOMMAND_CUT;
    }
    private static final int APPCOMMAND_PASTE = (int)38L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_PASTE 38
     * }
     */
    public static int APPCOMMAND_PASTE() {
        return APPCOMMAND_PASTE;
    }
    private static final int APPCOMMAND_REPLY_TO_MAIL = (int)39L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_REPLY_TO_MAIL 39
     * }
     */
    public static int APPCOMMAND_REPLY_TO_MAIL() {
        return APPCOMMAND_REPLY_TO_MAIL;
    }
    private static final int APPCOMMAND_FORWARD_MAIL = (int)40L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_FORWARD_MAIL 40
     * }
     */
    public static int APPCOMMAND_FORWARD_MAIL() {
        return APPCOMMAND_FORWARD_MAIL;
    }
    private static final int APPCOMMAND_SEND_MAIL = (int)41L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_SEND_MAIL 41
     * }
     */
    public static int APPCOMMAND_SEND_MAIL() {
        return APPCOMMAND_SEND_MAIL;
    }
    private static final int APPCOMMAND_SPELL_CHECK = (int)42L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_SPELL_CHECK 42
     * }
     */
    public static int APPCOMMAND_SPELL_CHECK() {
        return APPCOMMAND_SPELL_CHECK;
    }
    private static final int APPCOMMAND_DICTATE_OR_COMMAND_CONTROL_TOGGLE = (int)43L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_DICTATE_OR_COMMAND_CONTROL_TOGGLE 43
     * }
     */
    public static int APPCOMMAND_DICTATE_OR_COMMAND_CONTROL_TOGGLE() {
        return APPCOMMAND_DICTATE_OR_COMMAND_CONTROL_TOGGLE;
    }
    private static final int APPCOMMAND_MIC_ON_OFF_TOGGLE = (int)44L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_MIC_ON_OFF_TOGGLE 44
     * }
     */
    public static int APPCOMMAND_MIC_ON_OFF_TOGGLE() {
        return APPCOMMAND_MIC_ON_OFF_TOGGLE;
    }
    private static final int APPCOMMAND_CORRECTION_LIST = (int)45L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_CORRECTION_LIST 45
     * }
     */
    public static int APPCOMMAND_CORRECTION_LIST() {
        return APPCOMMAND_CORRECTION_LIST;
    }
    private static final int APPCOMMAND_MEDIA_PLAY = (int)46L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_MEDIA_PLAY 46
     * }
     */
    public static int APPCOMMAND_MEDIA_PLAY() {
        return APPCOMMAND_MEDIA_PLAY;
    }
    private static final int APPCOMMAND_MEDIA_PAUSE = (int)47L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_MEDIA_PAUSE 47
     * }
     */
    public static int APPCOMMAND_MEDIA_PAUSE() {
        return APPCOMMAND_MEDIA_PAUSE;
    }
    private static final int APPCOMMAND_MEDIA_RECORD = (int)48L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_MEDIA_RECORD 48
     * }
     */
    public static int APPCOMMAND_MEDIA_RECORD() {
        return APPCOMMAND_MEDIA_RECORD;
    }
    private static final int APPCOMMAND_MEDIA_FAST_FORWARD = (int)49L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_MEDIA_FAST_FORWARD 49
     * }
     */
    public static int APPCOMMAND_MEDIA_FAST_FORWARD() {
        return APPCOMMAND_MEDIA_FAST_FORWARD;
    }
    private static final int APPCOMMAND_MEDIA_REWIND = (int)50L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_MEDIA_REWIND 50
     * }
     */
    public static int APPCOMMAND_MEDIA_REWIND() {
        return APPCOMMAND_MEDIA_REWIND;
    }
    private static final int APPCOMMAND_MEDIA_CHANNEL_UP = (int)51L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_MEDIA_CHANNEL_UP 51
     * }
     */
    public static int APPCOMMAND_MEDIA_CHANNEL_UP() {
        return APPCOMMAND_MEDIA_CHANNEL_UP;
    }
    private static final int APPCOMMAND_MEDIA_CHANNEL_DOWN = (int)52L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_MEDIA_CHANNEL_DOWN 52
     * }
     */
    public static int APPCOMMAND_MEDIA_CHANNEL_DOWN() {
        return APPCOMMAND_MEDIA_CHANNEL_DOWN;
    }
    private static final int APPCOMMAND_DELETE = (int)53L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_DELETE 53
     * }
     */
    public static int APPCOMMAND_DELETE() {
        return APPCOMMAND_DELETE;
    }
    private static final int APPCOMMAND_DWM_FLIP3D = (int)54L;
    /**
     * {@snippet lang=c :
     * #define APPCOMMAND_DWM_FLIP3D 54
     * }
     */
    public static int APPCOMMAND_DWM_FLIP3D() {
        return APPCOMMAND_DWM_FLIP3D;
    }
    private static final int FAPPCOMMAND_MOUSE = (int)32768L;
    /**
     * {@snippet lang=c :
     * #define FAPPCOMMAND_MOUSE 32768
     * }
     */
    public static int FAPPCOMMAND_MOUSE() {
        return FAPPCOMMAND_MOUSE;
    }
    private static final int FAPPCOMMAND_KEY = (int)0L;
    /**
     * {@snippet lang=c :
     * #define FAPPCOMMAND_KEY 0
     * }
     */
    public static int FAPPCOMMAND_KEY() {
        return FAPPCOMMAND_KEY;
    }
    private static final int FAPPCOMMAND_OEM = (int)4096L;
    /**
     * {@snippet lang=c :
     * #define FAPPCOMMAND_OEM 4096
     * }
     */
    public static int FAPPCOMMAND_OEM() {
        return FAPPCOMMAND_OEM;
    }
    private static final int FAPPCOMMAND_MASK = (int)61440L;
    /**
     * {@snippet lang=c :
     * #define FAPPCOMMAND_MASK 61440
     * }
     */
    public static int FAPPCOMMAND_MASK() {
        return FAPPCOMMAND_MASK;
    }
    private static final int LLKHF_INJECTED = (int)16L;
    /**
     * {@snippet lang=c :
     * #define LLKHF_INJECTED 16
     * }
     */
    public static int LLKHF_INJECTED() {
        return LLKHF_INJECTED;
    }
    private static final int LLKHF_LOWER_IL_INJECTED = (int)2L;
    /**
     * {@snippet lang=c :
     * #define LLKHF_LOWER_IL_INJECTED 2
     * }
     */
    public static int LLKHF_LOWER_IL_INJECTED() {
        return LLKHF_LOWER_IL_INJECTED;
    }
    private static final int LLMHF_INJECTED = (int)1L;
    /**
     * {@snippet lang=c :
     * #define LLMHF_INJECTED 1
     * }
     */
    public static int LLMHF_INJECTED() {
        return LLMHF_INJECTED;
    }
    private static final int LLMHF_LOWER_IL_INJECTED = (int)2L;
    /**
     * {@snippet lang=c :
     * #define LLMHF_LOWER_IL_INJECTED 2
     * }
     */
    public static int LLMHF_LOWER_IL_INJECTED() {
        return LLMHF_LOWER_IL_INJECTED;
    }
    private static final int HKL_PREV = (int)0L;
    /**
     * {@snippet lang=c :
     * #define HKL_PREV 0
     * }
     */
    public static int HKL_PREV() {
        return HKL_PREV;
    }
    private static final int HKL_NEXT = (int)1L;
    /**
     * {@snippet lang=c :
     * #define HKL_NEXT 1
     * }
     */
    public static int HKL_NEXT() {
        return HKL_NEXT;
    }
    private static final int KLF_ACTIVATE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define KLF_ACTIVATE 1
     * }
     */
    public static int KLF_ACTIVATE() {
        return KLF_ACTIVATE;
    }
    private static final int KLF_SUBSTITUTE_OK = (int)2L;
    /**
     * {@snippet lang=c :
     * #define KLF_SUBSTITUTE_OK 2
     * }
     */
    public static int KLF_SUBSTITUTE_OK() {
        return KLF_SUBSTITUTE_OK;
    }
    private static final int KLF_REORDER = (int)8L;
    /**
     * {@snippet lang=c :
     * #define KLF_REORDER 8
     * }
     */
    public static int KLF_REORDER() {
        return KLF_REORDER;
    }
    private static final int KLF_REPLACELANG = (int)16L;
    /**
     * {@snippet lang=c :
     * #define KLF_REPLACELANG 16
     * }
     */
    public static int KLF_REPLACELANG() {
        return KLF_REPLACELANG;
    }
    private static final int KLF_NOTELLSHELL = (int)128L;
    /**
     * {@snippet lang=c :
     * #define KLF_NOTELLSHELL 128
     * }
     */
    public static int KLF_NOTELLSHELL() {
        return KLF_NOTELLSHELL;
    }
    private static final int KLF_SETFORPROCESS = (int)256L;
    /**
     * {@snippet lang=c :
     * #define KLF_SETFORPROCESS 256
     * }
     */
    public static int KLF_SETFORPROCESS() {
        return KLF_SETFORPROCESS;
    }
    private static final int KLF_SHIFTLOCK = (int)65536L;
    /**
     * {@snippet lang=c :
     * #define KLF_SHIFTLOCK 65536
     * }
     */
    public static int KLF_SHIFTLOCK() {
        return KLF_SHIFTLOCK;
    }
    private static final int KLF_RESET = (int)1073741824L;
    /**
     * {@snippet lang=c :
     * #define KLF_RESET 1073741824
     * }
     */
    public static int KLF_RESET() {
        return KLF_RESET;
    }
    private static final int INPUTLANGCHANGE_SYSCHARSET = (int)1L;
    /**
     * {@snippet lang=c :
     * #define INPUTLANGCHANGE_SYSCHARSET 1
     * }
     */
    public static int INPUTLANGCHANGE_SYSCHARSET() {
        return INPUTLANGCHANGE_SYSCHARSET;
    }
    private static final int INPUTLANGCHANGE_FORWARD = (int)2L;
    /**
     * {@snippet lang=c :
     * #define INPUTLANGCHANGE_FORWARD 2
     * }
     */
    public static int INPUTLANGCHANGE_FORWARD() {
        return INPUTLANGCHANGE_FORWARD;
    }
    private static final int INPUTLANGCHANGE_BACKWARD = (int)4L;
    /**
     * {@snippet lang=c :
     * #define INPUTLANGCHANGE_BACKWARD 4
     * }
     */
    public static int INPUTLANGCHANGE_BACKWARD() {
        return INPUTLANGCHANGE_BACKWARD;
    }
    private static final int KL_NAMELENGTH = (int)9L;
    /**
     * {@snippet lang=c :
     * #define KL_NAMELENGTH 9
     * }
     */
    public static int KL_NAMELENGTH() {
        return KL_NAMELENGTH;
    }
    private static final int GMMP_USE_DISPLAY_POINTS = (int)1L;
    /**
     * {@snippet lang=c :
     * #define GMMP_USE_DISPLAY_POINTS 1
     * }
     */
    public static int GMMP_USE_DISPLAY_POINTS() {
        return GMMP_USE_DISPLAY_POINTS;
    }
    private static final int GMMP_USE_HIGH_RESOLUTION_POINTS = (int)2L;
    /**
     * {@snippet lang=c :
     * #define GMMP_USE_HIGH_RESOLUTION_POINTS 2
     * }
     */
    public static int GMMP_USE_HIGH_RESOLUTION_POINTS() {
        return GMMP_USE_HIGH_RESOLUTION_POINTS;
    }
    private static final int CWF_CREATE_ONLY = (int)1L;
    /**
     * {@snippet lang=c :
     * #define CWF_CREATE_ONLY 1
     * }
     */
    public static int CWF_CREATE_ONLY() {
        return CWF_CREATE_ONLY;
    }
    private static final int UOI_FLAGS = (int)1L;
    /**
     * {@snippet lang=c :
     * #define UOI_FLAGS 1
     * }
     */
    public static int UOI_FLAGS() {
        return UOI_FLAGS;
    }
    private static final int UOI_NAME = (int)2L;
    /**
     * {@snippet lang=c :
     * #define UOI_NAME 2
     * }
     */
    public static int UOI_NAME() {
        return UOI_NAME;
    }
    private static final int UOI_TYPE = (int)3L;
    /**
     * {@snippet lang=c :
     * #define UOI_TYPE 3
     * }
     */
    public static int UOI_TYPE() {
        return UOI_TYPE;
    }
    private static final int UOI_USER_SID = (int)4L;
    /**
     * {@snippet lang=c :
     * #define UOI_USER_SID 4
     * }
     */
    public static int UOI_USER_SID() {
        return UOI_USER_SID;
    }
    private static final int UOI_HEAPSIZE = (int)5L;
    /**
     * {@snippet lang=c :
     * #define UOI_HEAPSIZE 5
     * }
     */
    public static int UOI_HEAPSIZE() {
        return UOI_HEAPSIZE;
    }
    private static final int UOI_IO = (int)6L;
    /**
     * {@snippet lang=c :
     * #define UOI_IO 6
     * }
     */
    public static int UOI_IO() {
        return UOI_IO;
    }
    private static final int UOI_TIMERPROC_EXCEPTION_SUPPRESSION = (int)7L;
    /**
     * {@snippet lang=c :
     * #define UOI_TIMERPROC_EXCEPTION_SUPPRESSION 7
     * }
     */
    public static int UOI_TIMERPROC_EXCEPTION_SUPPRESSION() {
        return UOI_TIMERPROC_EXCEPTION_SUPPRESSION;
    }
    private static final int WM_NULL = (int)0L;
    /**
     * {@snippet lang=c :
     * #define WM_NULL 0
     * }
     */
    public static int WM_NULL() {
        return WM_NULL;
    }
    private static final int WM_CREATE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WM_CREATE 1
     * }
     */
    public static int WM_CREATE() {
        return WM_CREATE;
    }
    private static final int WM_DESTROY = (int)2L;
    /**
     * {@snippet lang=c :
     * #define WM_DESTROY 2
     * }
     */
    public static int WM_DESTROY() {
        return WM_DESTROY;
    }
    private static final int WM_MOVE = (int)3L;
    /**
     * {@snippet lang=c :
     * #define WM_MOVE 3
     * }
     */
    public static int WM_MOVE() {
        return WM_MOVE;
    }
    private static final int WM_SIZE = (int)5L;
    /**
     * {@snippet lang=c :
     * #define WM_SIZE 5
     * }
     */
    public static int WM_SIZE() {
        return WM_SIZE;
    }
    private static final int WM_ACTIVATE = (int)6L;
    /**
     * {@snippet lang=c :
     * #define WM_ACTIVATE 6
     * }
     */
    public static int WM_ACTIVATE() {
        return WM_ACTIVATE;
    }
    private static final int WA_INACTIVE = (int)0L;
    /**
     * {@snippet lang=c :
     * #define WA_INACTIVE 0
     * }
     */
    public static int WA_INACTIVE() {
        return WA_INACTIVE;
    }
    private static final int WA_ACTIVE = (int)1L;
    /**
     * {@snippet lang=c :
     * #define WA_ACTIVE 1
     * }
     */
    public static int WA_ACTIVE() {
        return WA_ACTIVE;
    }
    private static final int WA_CLICKACTIVE = (int)2L;
    /**
     * {@snippet lang=c :
     * #define WA_CLICKACTIVE 2
     * }
     */
    public static int WA_CLICKACTIVE() {
        return WA_CLICKACTIVE;
    }
    private static final int WM_SETFOCUS = (int)7L;
    /**
     * {@snippet lang=c :
     * #define WM_SETFOCUS 7
     * }
     */
    public static int WM_SETFOCUS() {
        return WM_SETFOCUS;
    }
    private static final int WM_KILLFOCUS = (int)8L;
    /**
     * {@snippet lang=c :
     * #define WM_KILLFOCUS 8
     * }
     */
    public static int WM_KILLFOCUS() {
        return WM_KILLFOCUS;
    }
    private static final int WM_ENABLE = (int)10L;
    /**
     * {@snippet lang=c :
     * #define WM_ENABLE 10
     * }
     */
    public static int WM_ENABLE() {
        return WM_ENABLE;
    }
    private static final int WM_SETREDRAW = (int)11L;
    /**
     * {@snippet lang=c :
     * #define WM_SETREDRAW 11
     * }
     */
    public static int WM_SETREDRAW() {
        return WM_SETREDRAW;
    }
    private static final int WM_SETTEXT = (int)12L;
    /**
     * {@snippet lang=c :
     * #define WM_SETTEXT 12
     * }
     */
    public static int WM_SETTEXT() {
        return WM_SETTEXT;
    }
    private static final int WM_GETTEXT = (int)13L;
    /**
     * {@snippet lang=c :
     * #define WM_GETTEXT 13
     * }
     */
    public static int WM_GETTEXT() {
        return WM_GETTEXT;
    }
    private static final int WM_GETTEXTLENGTH = (int)14L;
    /**
     * {@snippet lang=c :
     * #define WM_GETTEXTLENGTH 14
     * }
     */
    public static int WM_GETTEXTLENGTH() {
        return WM_GETTEXTLENGTH;
    }
    private static final int WM_PAINT = (int)15L;
    /**
     * {@snippet lang=c :
     * #define WM_PAINT 15
     * }
     */
    public static int WM_PAINT() {
        return WM_PAINT;
    }
    private static final int WM_CLOSE = (int)16L;
    /**
     * {@snippet lang=c :
     * #define WM_CLOSE 16
     * }
     */
    public static int WM_CLOSE() {
        return WM_CLOSE;
    }
    private static final int WM_QUERYENDSESSION = (int)17L;
    /**
     * {@snippet lang=c :
     * #define WM_QUERYENDSESSION 17
     * }
     */
    public static int WM_QUERYENDSESSION() {
        return WM_QUERYENDSESSION;
    }
    private static final int WM_QUERYOPEN = (int)19L;
    /**
     * {@snippet lang=c :
     * #define WM_QUERYOPEN 19
     * }
     */
    public static int WM_QUERYOPEN() {
        return WM_QUERYOPEN;
    }
    private static final int WM_ENDSESSION = (int)22L;
    /**
     * {@snippet lang=c :
     * #define WM_ENDSESSION 22
     * }
     */
    public static int WM_ENDSESSION() {
        return WM_ENDSESSION;
    }
    private static final int WM_QUIT = (int)18L;
    /**
     * {@snippet lang=c :
     * #define WM_QUIT 18
     * }
     */
    public static int WM_QUIT() {
        return WM_QUIT;
    }
    private static final int WM_ERASEBKGND = (int)20L;
    /**
     * {@snippet lang=c :
     * #define WM_ERASEBKGND 20
     * }
     */
    public static int WM_ERASEBKGND() {
        return WM_ERASEBKGND;
    }
    private static final int WM_SYSCOLORCHANGE = (int)21L;
    /**
     * {@snippet lang=c :
     * #define WM_SYSCOLORCHANGE 21
     * }
     */
    public static int WM_SYSCOLORCHANGE() {
        return WM_SYSCOLORCHANGE;
    }
    private static final int WM_SHOWWINDOW = (int)24L;
    /**
     * {@snippet lang=c :
     * #define WM_SHOWWINDOW 24
     * }
     */
    public static int WM_SHOWWINDOW() {
        return WM_SHOWWINDOW;
    }
    private static final int WM_WININICHANGE = (int)26L;
    /**
     * {@snippet lang=c :
     * #define WM_WININICHANGE 26
     * }
     */
    public static int WM_WININICHANGE() {
        return WM_WININICHANGE;
    }
    private static final int WM_DEVMODECHANGE = (int)27L;
    /**
     * {@snippet lang=c :
     * #define WM_DEVMODECHANGE 27
     * }
     */
    public static int WM_DEVMODECHANGE() {
        return WM_DEVMODECHANGE;
    }
    private static final int WM_ACTIVATEAPP = (int)28L;
    /**
     * {@snippet lang=c :
     * #define WM_ACTIVATEAPP 28
     * }
     */
    public static int WM_ACTIVATEAPP() {
        return WM_ACTIVATEAPP;
    }
    private static final int WM_FONTCHANGE = (int)29L;
    /**
     * {@snippet lang=c :
     * #define WM_FONTCHANGE 29
     * }
     */
    public static int WM_FONTCHANGE() {
        return WM_FONTCHANGE;
    }
    private static final int WM_TIMECHANGE = (int)30L;
    /**
     * {@snippet lang=c :
     * #define WM_TIMECHANGE 30
     * }
     */
    public static int WM_TIMECHANGE() {
        return WM_TIMECHANGE;
    }
    private static final int WM_CANCELMODE = (int)31L;
    /**
     * {@snippet lang=c :
     * #define WM_CANCELMODE 31
     * }
     */
    public static int WM_CANCELMODE() {
        return WM_CANCELMODE;
    }
    private static final int WM_SETCURSOR = (int)32L;
    /**
     * {@snippet lang=c :
     * #define WM_SETCURSOR 32
     * }
     */
    public static int WM_SETCURSOR() {
        return WM_SETCURSOR;
    }
    private static final int WM_MOUSEACTIVATE = (int)33L;
    /**
     * {@snippet lang=c :
     * #define WM_MOUSEACTIVATE 33
     * }
     */
    public static int WM_MOUSEACTIVATE() {
        return WM_MOUSEACTIVATE;
    }
    private static final int WM_CHILDACTIVATE = (int)34L;
    /**
     * {@snippet lang=c :
     * #define WM_CHILDACTIVATE 34
     * }
     */
    public static int WM_CHILDACTIVATE() {
        return WM_CHILDACTIVATE;
    }
    private static final int WM_QUEUESYNC = (int)35L;
    /**
     * {@snippet lang=c :
     * #define WM_QUEUESYNC 35
     * }
     */
    public static int WM_QUEUESYNC() {
        return WM_QUEUESYNC;
    }
    private static final int WM_GETMINMAXINFO = (int)36L;
    /**
     * {@snippet lang=c :
     * #define WM_GETMINMAXINFO 36
     * }
     */
    public static int WM_GETMINMAXINFO() {
        return WM_GETMINMAXINFO;
    }
    private static final int WM_PAINTICON = (int)38L;
    /**
     * {@snippet lang=c :
     * #define WM_PAINTICON 38
     * }
     */
    public static int WM_PAINTICON() {
        return WM_PAINTICON;
    }
    private static final int WM_ICONERASEBKGND = (int)39L;
    /**
     * {@snippet lang=c :
     * #define WM_ICONERASEBKGND 39
     * }
     */
    public static int WM_ICONERASEBKGND() {
        return WM_ICONERASEBKGND;
    }
    private static final int WM_NEXTDLGCTL = (int)40L;
    /**
     * {@snippet lang=c :
     * #define WM_NEXTDLGCTL 40
     * }
     */
    public static int WM_NEXTDLGCTL() {
        return WM_NEXTDLGCTL;
    }
    private static final int WM_SPOOLERSTATUS = (int)42L;
    /**
     * {@snippet lang=c :
     * #define WM_SPOOLERSTATUS 42
     * }
     */
    public static int WM_SPOOLERSTATUS() {
        return WM_SPOOLERSTATUS;
    }
    private static final int WM_DRAWITEM = (int)43L;
    /**
     * {@snippet lang=c :
     * #define WM_DRAWITEM 43
     * }
     */
    public static int WM_DRAWITEM() {
        return WM_DRAWITEM;
    }
    private static final int WM_MEASUREITEM = (int)44L;
    /**
     * {@snippet lang=c :
     * #define WM_MEASUREITEM 44
     * }
     */
    public static int WM_MEASUREITEM() {
        return WM_MEASUREITEM;
    }
    private static final int WM_DELETEITEM = (int)45L;
    /**
     * {@snippet lang=c :
     * #define WM_DELETEITEM 45
     * }
     */
    public static int WM_DELETEITEM() {
        return WM_DELETEITEM;
    }
    private static final int WM_VKEYTOITEM = (int)46L;
    /**
     * {@snippet lang=c :
     * #define WM_VKEYTOITEM 46
     * }
     */
    public static int WM_VKEYTOITEM() {
        return WM_VKEYTOITEM;
    }
    private static final int WM_CHARTOITEM = (int)47L;
    /**
     * {@snippet lang=c :
     * #define WM_CHARTOITEM 47
     * }
     */
    public static int WM_CHARTOITEM() {
        return WM_CHARTOITEM;
    }
    private static final int WM_SETFONT = (int)48L;
    /**
     * {@snippet lang=c :
     * #define WM_SETFONT 48
     * }
     */
    public static int WM_SETFONT() {
        return WM_SETFONT;
    }
    private static final int WM_GETFONT = (int)49L;
    /**
     * {@snippet lang=c :
     * #define WM_GETFONT 49
     * }
     */
    public static int WM_GETFONT() {
        return WM_GETFONT;
    }
    private static final int WM_SETHOTKEY = (int)50L;
    /**
     * {@snippet lang=c :
     * #define WM_SETHOTKEY 50
     * }
     */
    public static int WM_SETHOTKEY() {
        return WM_SETHOTKEY;
    }
    private static final int WM_GETHOTKEY = (int)51L;
    /**
     * {@snippet lang=c :
     * #define WM_GETHOTKEY 51
     * }
     */
    public static int WM_GETHOTKEY() {
        return WM_GETHOTKEY;
    }
    private static final int WM_QUERYDRAGICON = (int)55L;
    /**
     * {@snippet lang=c :
     * #define WM_QUERYDRAGICON 55
     * }
     */
    public static int WM_QUERYDRAGICON() {
        return WM_QUERYDRAGICON;
    }
    private static final int WM_COMPAREITEM = (int)57L;
    /**
     * {@snippet lang=c :
     * #define WM_COMPAREITEM 57
     * }
     */
    public static int WM_COMPAREITEM() {
        return WM_COMPAREITEM;
    }
    private static final int WM_GETOBJECT = (int)61L;
    /**
     * {@snippet lang=c :
     * #define WM_GETOBJECT 61
     * }
     */
    public static int WM_GETOBJECT() {
        return WM_GETOBJECT;
    }
    private static final int WM_COMPACTING = (int)65L;
    /**
     * {@snippet lang=c :
     * #define WM_COMPACTING 65
     * }
     */
    public static int WM_COMPACTING() {
        return WM_COMPACTING;
    }
    private static final int WM_COMMNOTIFY = (int)68L;
    /**
     * {@snippet lang=c :
     * #define WM_COMMNOTIFY 68
     * }
     */
    public static int WM_COMMNOTIFY() {
        return WM_COMMNOTIFY;
    }
    private static final int WM_WINDOWPOSCHANGING = (int)70L;
    /**
     * {@snippet lang=c :
     * #define WM_WINDOWPOSCHANGING 70
     * }
     */
    public static int WM_WINDOWPOSCHANGING() {
        return WM_WINDOWPOSCHANGING;
    }
    private static final int WM_WINDOWPOSCHANGED = (int)71L;
    /**
     * {@snippet lang=c :
     * #define WM_WINDOWPOSCHANGED 71
     * }
     */
    public static int WM_WINDOWPOSCHANGED() {
        return WM_WINDOWPOSCHANGED;
    }
    private static final int WM_POWER = (int)72L;
    /**
     * {@snippet lang=c :
     * #define WM_POWER 72
     * }
     */
    public static int WM_POWER() {
        return WM_POWER;
    }
    private static final int PWR_OK = (int)1L;
    /**
     * {@snippet lang=c :
     * #define PWR_OK 1
     * }
     */
    public static int PWR_OK() {
        return PWR_OK;
    }
    private static final int PWR_SUSPENDREQUEST = (int)1L;
    /**
     * {@snippet lang=c :
     * #define PWR_SUSPENDREQUEST 1
     * }
     */
    public static int PWR_SUSPENDREQUEST() {
        return PWR_SUSPENDREQUEST;
    }
    private static final int PWR_SUSPENDRESUME = (int)2L;
    /**
     * {@snippet lang=c :
     * #define PWR_SUSPENDRESUME 2
     * }
     */
    public static int PWR_SUSPENDRESUME() {
        return PWR_SUSPENDRESUME;
    }
    private static final int PWR_CRITICALRESUME = (int)3L;
    /**
     * {@snippet lang=c :
     * #define PWR_CRITICALRESUME 3
     * }
     */
    public static int PWR_CRITICALRESUME() {
        return PWR_CRITICALRESUME;
    }
    private static final int WM_COPYDATA = (int)74L;
    /**
     * {@snippet lang=c :
     * #define WM_COPYDATA 74
     * }
     */
    public static int WM_COPYDATA() {
        return WM_COPYDATA;
    }
    private static final int WM_CANCELJOURNAL = (int)75L;
    /**
     * {@snippet lang=c :
     * #define WM_CANCELJOURNAL 75
     * }
     */
    public static int WM_CANCELJOURNAL() {
        return WM_CANCELJOURNAL;
    }
    private static final int WM_NOTIFY = (int)78L;
    /**
     * {@snippet lang=c :
     * #define WM_NOTIFY 78
     * }
     */
    public static int WM_NOTIFY() {
        return WM_NOTIFY;
    }
    private static final int WM_INPUTLANGCHANGEREQUEST = (int)80L;
    /**
     * {@snippet lang=c :
     * #define WM_INPUTLANGCHANGEREQUEST 80
     * }
     */
    public static int WM_INPUTLANGCHANGEREQUEST() {
        return WM_INPUTLANGCHANGEREQUEST;
    }
    private static final int WM_INPUTLANGCHANGE = (int)81L;
    /**
     * {@snippet lang=c :
     * #define WM_INPUTLANGCHANGE 81
     * }
     */
    public static int WM_INPUTLANGCHANGE() {
        return WM_INPUTLANGCHANGE;
    }
    private static final int WM_TCARD = (int)82L;
    /**
     * {@snippet lang=c :
     * #define WM_TCARD 82
     * }
     */
    public static int WM_TCARD() {
        return WM_TCARD;
    }
    private static final int WM_HELP = (int)83L;
    /**
     * {@snippet lang=c :
     * #define WM_HELP 83
     * }
     */
    public static int WM_HELP() {
        return WM_HELP;
    }
    private static final int WM_USERCHANGED = (int)84L;
    /**
     * {@snippet lang=c :
     * #define WM_USERCHANGED 84
     * }
     */
    public static int WM_USERCHANGED() {
        return WM_USERCHANGED;
    }
    private static final int WM_NOTIFYFORMAT = (int)85L;
    /**
     * {@snippet lang=c :
     * #define WM_NOTIFYFORMAT 85
     * }
     */
    public static int WM_NOTIFYFORMAT() {
        return WM_NOTIFYFORMAT;
    }
    private static final int NFR_ANSI = (int)1L;
    /**
     * {@snippet lang=c :
     * #define NFR_ANSI 1
     * }
     */
    public static int NFR_ANSI() {
        return NFR_ANSI;
    }
    private static final int NFR_UNICODE = (int)2L;
    /**
     * {@snippet lang=c :
     * #define NFR_UNICODE 2
     * }
     */
    public static int NFR_UNICODE() {
        return NFR_UNICODE;
    }
    private static final int NF_QUERY = (int)3L;
    /**
     * {@snippet lang=c :
     * #define NF_QUERY 3
     * }
     */
    public static int NF_QUERY() {
        return NF_QUERY;
    }
    private static final int NF_REQUERY = (int)4L;
    /**
     * {@snippet lang=c :
     * #define NF_REQUERY 4
     * }
     */
    public static int NF_REQUERY() {
        return NF_REQUERY;
    }
    private static final int WM_CONTEXTMENU = (int)123L;
    /**
     * {@snippet lang=c :
     * #define WM_CONTEXTMENU 123
     * }
     */
    public static int WM_CONTEXTMENU() {
        return WM_CONTEXTMENU;
    }
    private static final int WM_STYLECHANGING = (int)124L;
    /**
     * {@snippet lang=c :
     * #define WM_STYLECHANGING 124
     * }
     */
    public static int WM_STYLECHANGING() {
        return WM_STYLECHANGING;
    }
    private static final int WM_STYLECHANGED = (int)125L;
    /**
     * {@snippet lang=c :
     * #define WM_STYLECHANGED 125
     * }
     */
    public static int WM_STYLECHANGED() {
        return WM_STYLECHANGED;
    }
    private static final int WM_DISPLAYCHANGE = (int)126L;
    /**
     * {@snippet lang=c :
     * #define WM_DISPLAYCHANGE 126
     * }
     */
    public static int WM_DISPLAYCHANGE() {
        return WM_DISPLAYCHANGE;
    }
    private static final int WM_GETICON = (int)127L;
    /**
     * {@snippet lang=c :
     * #define WM_GETICON 127
     * }
     */
    public static int WM_GETICON() {
        return WM_GETICON;
    }
    private static final int WM_SETICON = (int)128L;
    /**
     * {@snippet lang=c :
     * #define WM_SETICON 128
     * }
     */
    public static int WM_SETICON() {
        return WM_SETICON;
    }
    private static final int WM_NCCREATE = (int)129L;
    /**
     * {@snippet lang=c :
     * #define WM_NCCREATE 129
     * }
     */
    public static int WM_NCCREATE() {
        return WM_NCCREATE;
    }
    private static final int WM_NCDESTROY = (int)130L;
    /**
     * {@snippet lang=c :
     * #define WM_NCDESTROY 130
     * }
     */
    public static int WM_NCDESTROY() {
        return WM_NCDESTROY;
    }
    private static final int WM_NCCALCSIZE = (int)131L;
    /**
     * {@snippet lang=c :
     * #define WM_NCCALCSIZE 131
     * }
     */
    public static int WM_NCCALCSIZE() {
        return WM_NCCALCSIZE;
    }
    private static final int WM_NCHITTEST = (int)132L;
    /**
     * {@snippet lang=c :
     * #define WM_NCHITTEST 132
     * }
     */
    public static int WM_NCHITTEST() {
        return WM_NCHITTEST;
    }
    private static final int WM_NCPAINT = (int)133L;
    /**
     * {@snippet lang=c :
     * #define WM_NCPAINT 133
     * }
     */
    public static int WM_NCPAINT() {
        return WM_NCPAINT;
    }
    private static final int WM_NCACTIVATE = (int)134L;
    /**
     * {@snippet lang=c :
     * #define WM_NCACTIVATE 134
     * }
     */
    public static int WM_NCACTIVATE() {
        return WM_NCACTIVATE;
    }
    private static final int WM_GETDLGCODE = (int)135L;
    /**
     * {@snippet lang=c :
     * #define WM_GETDLGCODE 135
     * }
     */
    public static int WM_GETDLGCODE() {
        return WM_GETDLGCODE;
    }
    private static final int WM_SYNCPAINT = (int)136L;
    /**
     * {@snippet lang=c :
     * #define WM_SYNCPAINT 136
     * }
     */
    public static int WM_SYNCPAINT() {
        return WM_SYNCPAINT;
    }
    private static final int WM_NCMOUSEMOVE = (int)160L;
    /**
     * {@snippet lang=c :
     * #define WM_NCMOUSEMOVE 160
     * }
     */
    public static int WM_NCMOUSEMOVE() {
        return WM_NCMOUSEMOVE;
    }
    private static final int WM_NCLBUTTONDOWN = (int)161L;
    /**
     * {@snippet lang=c :
     * #define WM_NCLBUTTONDOWN 161
     * }
     */
    public static int WM_NCLBUTTONDOWN() {
        return WM_NCLBUTTONDOWN;
    }
    private static final int WM_NCLBUTTONUP = (int)162L;
    /**
     * {@snippet lang=c :
     * #define WM_NCLBUTTONUP 162
     * }
     */
    public static int WM_NCLBUTTONUP() {
        return WM_NCLBUTTONUP;
    }
    private static final int WM_NCLBUTTONDBLCLK = (int)163L;
    /**
     * {@snippet lang=c :
     * #define WM_NCLBUTTONDBLCLK 163
     * }
     */
    public static int WM_NCLBUTTONDBLCLK() {
        return WM_NCLBUTTONDBLCLK;
    }
    private static final int WM_NCRBUTTONDOWN = (int)164L;
    /**
     * {@snippet lang=c :
     * #define WM_NCRBUTTONDOWN 164
     * }
     */
    public static int WM_NCRBUTTONDOWN() {
        return WM_NCRBUTTONDOWN;
    }
    private static final int WM_NCRBUTTONUP = (int)165L;
    /**
     * {@snippet lang=c :
     * #define WM_NCRBUTTONUP 165
     * }
     */
    public static int WM_NCRBUTTONUP() {
        return WM_NCRBUTTONUP;
    }
    private static final int WM_NCRBUTTONDBLCLK = (int)166L;
    /**
     * {@snippet lang=c :
     * #define WM_NCRBUTTONDBLCLK 166
     * }
     */
    public static int WM_NCRBUTTONDBLCLK() {
        return WM_NCRBUTTONDBLCLK;
    }
    private static final int WM_NCMBUTTONDOWN = (int)167L;
    /**
     * {@snippet lang=c :
     * #define WM_NCMBUTTONDOWN 167
     * }
     */
    public static int WM_NCMBUTTONDOWN() {
        return WM_NCMBUTTONDOWN;
    }
    private static final int WM_NCMBUTTONUP = (int)168L;
    /**
     * {@snippet lang=c :
     * #define WM_NCMBUTTONUP 168
     * }
     */
    public static int WM_NCMBUTTONUP() {
        return WM_NCMBUTTONUP;
    }
    private static final int WM_NCMBUTTONDBLCLK = (int)169L;
    /**
     * {@snippet lang=c :
     * #define WM_NCMBUTTONDBLCLK 169
     * }
     */
    public static int WM_NCMBUTTONDBLCLK() {
        return WM_NCMBUTTONDBLCLK;
    }
    private static final int WM_NCXBUTTONDOWN = (int)171L;
    /**
     * {@snippet lang=c :
     * #define WM_NCXBUTTONDOWN 171
     * }
     */
    public static int WM_NCXBUTTONDOWN() {
        return WM_NCXBUTTONDOWN;
    }
    private static final int WM_NCXBUTTONUP = (int)172L;
    /**
     * {@snippet lang=c :
     * #define WM_NCXBUTTONUP 172
     * }
     */
    public static int WM_NCXBUTTONUP() {
        return WM_NCXBUTTONUP;
    }
    private static final int WM_NCXBUTTONDBLCLK = (int)173L;
    /**
     * {@snippet lang=c :
     * #define WM_NCXBUTTONDBLCLK 173
     * }
     */
    public static int WM_NCXBUTTONDBLCLK() {
        return WM_NCXBUTTONDBLCLK;
    }
    private static final int WM_INPUT_DEVICE_CHANGE = (int)254L;
    /**
     * {@snippet lang=c :
     * #define WM_INPUT_DEVICE_CHANGE 254
     * }
     */
    public static int WM_INPUT_DEVICE_CHANGE() {
        return WM_INPUT_DEVICE_CHANGE;
    }
    private static final int WM_INPUT = (int)255L;
    /**
     * {@snippet lang=c :
     * #define WM_INPUT 255
     * }
     */
    public static int WM_INPUT() {
        return WM_INPUT;
    }
    private static final int WM_KEYFIRST = (int)256L;
    /**
     * {@snippet lang=c :
     * #define WM_KEYFIRST 256
     * }
     */
    public static int WM_KEYFIRST() {
        return WM_KEYFIRST;
    }
    private static final int WM_KEYDOWN = (int)256L;
    /**
     * {@snippet lang=c :
     * #define WM_KEYDOWN 256
     * }
     */
    public static int WM_KEYDOWN() {
        return WM_KEYDOWN;
    }
    private static final int WM_KEYUP = (int)257L;
    /**
     * {@snippet lang=c :
     * #define WM_KEYUP 257
     * }
     */
    public static int WM_KEYUP() {
        return WM_KEYUP;
    }
    private static final int WM_CHAR = (int)258L;
    /**
     * {@snippet lang=c :
     * #define WM_CHAR 258
     * }
     */
    public static int WM_CHAR() {
        return WM_CHAR;
    }
    private static final int WM_DEADCHAR = (int)259L;
    /**
     * {@snippet lang=c :
     * #define WM_DEADCHAR 259
     * }
     */
    public static int WM_DEADCHAR() {
        return WM_DEADCHAR;
    }
    private static final int WM_SYSKEYDOWN = (int)260L;
    /**
     * {@snippet lang=c :
     * #define WM_SYSKEYDOWN 260
     * }
     */
    public static int WM_SYSKEYDOWN() {
        return WM_SYSKEYDOWN;
    }
    private static final int WM_SYSKEYUP = (int)261L;
    /**
     * {@snippet lang=c :
     * #define WM_SYSKEYUP 261
     * }
     */
    public static int WM_SYSKEYUP() {
        return WM_SYSKEYUP;
    }
    private static final int WM_SYSCHAR = (int)262L;
    /**
     * {@snippet lang=c :
     * #define WM_SYSCHAR 262
     * }
     */
    public static int WM_SYSCHAR() {
        return WM_SYSCHAR;
    }
    private static final int WM_SYSDEADCHAR = (int)263L;
    /**
     * {@snippet lang=c :
     * #define WM_SYSDEADCHAR 263
     * }
     */
    public static int WM_SYSDEADCHAR() {
        return WM_SYSDEADCHAR;
    }
    private static final int WM_UNICHAR = (int)265L;
    /**
     * {@snippet lang=c :
     * #define WM_UNICHAR 265
     * }
     */
    public static int WM_UNICHAR() {
        return WM_UNICHAR;
    }
    private static final int WM_KEYLAST = (int)265L;
    /**
     * {@snippet lang=c :
     * #define WM_KEYLAST 265
     * }
     */
    public static int WM_KEYLAST() {
        return WM_KEYLAST;
    }
    private static final int UNICODE_NOCHAR = (int)65535L;
    /**
     * {@snippet lang=c :
     * #define UNICODE_NOCHAR 65535
     * }
     */
    public static int UNICODE_NOCHAR() {
        return UNICODE_NOCHAR;
    }
    private static final int WM_IME_STARTCOMPOSITION = (int)269L;
    /**
     * {@snippet lang=c :
     * #define WM_IME_STARTCOMPOSITION 269
     * }
     */
    public static int WM_IME_STARTCOMPOSITION() {
        return WM_IME_STARTCOMPOSITION;
    }
    private static final int WM_IME_ENDCOMPOSITION = (int)270L;
    /**
     * {@snippet lang=c :
     * #define WM_IME_ENDCOMPOSITION 270
     * }
     */
    public static int WM_IME_ENDCOMPOSITION() {
        return WM_IME_ENDCOMPOSITION;
    }
    private static final int WM_IME_COMPOSITION = (int)271L;
    /**
     * {@snippet lang=c :
     * #define WM_IME_COMPOSITION 271
     * }
     */
    public static int WM_IME_COMPOSITION() {
        return WM_IME_COMPOSITION;
    }
    private static final int WM_IME_KEYLAST = (int)271L;
    /**
     * {@snippet lang=c :
     * #define WM_IME_KEYLAST 271
     * }
     */
    public static int WM_IME_KEYLAST() {
        return WM_IME_KEYLAST;
    }
    private static final int WM_INITDIALOG = (int)272L;
    /**
     * {@snippet lang=c :
     * #define WM_INITDIALOG 272
     * }
     */
    public static int WM_INITDIALOG() {
        return WM_INITDIALOG;
    }
    private static final int WM_COMMAND = (int)273L;
    /**
     * {@snippet lang=c :
     * #define WM_COMMAND 273
     * }
     */
    public static int WM_COMMAND() {
        return WM_COMMAND;
    }
    private static final int WM_SYSCOMMAND = (int)274L;
    /**
     * {@snippet lang=c :
     * #define WM_SYSCOMMAND 274
     * }
     */
    public static int WM_SYSCOMMAND() {
        return WM_SYSCOMMAND;
    }
    private static final int WM_TIMER = (int)275L;
    /**
     * {@snippet lang=c :
     * #define WM_TIMER 275
     * }
     */
    public static int WM_TIMER() {
        return WM_TIMER;
    }
    private static final int WM_HSCROLL = (int)276L;
    /**
     * {@snippet lang=c :
     * #define WM_HSCROLL 276
     * }
     */
    public static int WM_HSCROLL() {
        return WM_HSCROLL;
    }
    private static final int WM_VSCROLL = (int)277L;
    /**
     * {@snippet lang=c :
     * #define WM_VSCROLL 277
     * }
     */
    public static int WM_VSCROLL() {
        return WM_VSCROLL;
    }
    private static final int WM_INITMENU = (int)278L;
    /**
     * {@snippet lang=c :
     * #define WM_INITMENU 278
     * }
     */
    public static int WM_INITMENU() {
        return WM_INITMENU;
    }
    private static final int WM_INITMENUPOPUP = (int)279L;
    /**
     * {@snippet lang=c :
     * #define WM_INITMENUPOPUP 279
     * }
     */
    public static int WM_INITMENUPOPUP() {
        return WM_INITMENUPOPUP;
    }
    private static final int WM_GESTURE = (int)281L;
    /**
     * {@snippet lang=c :
     * #define WM_GESTURE 281
     * }
     */
    public static int WM_GESTURE() {
        return WM_GESTURE;
    }
    private static final int WM_GESTURENOTIFY = (int)282L;
    /**
     * {@snippet lang=c :
     * #define WM_GESTURENOTIFY 282
     * }
     */
    public static int WM_GESTURENOTIFY() {
        return WM_GESTURENOTIFY;
    }
    private static final int WM_MENUSELECT = (int)287L;
    /**
     * {@snippet lang=c :
     * #define WM_MENUSELECT 287
     * }
     */
    public static int WM_MENUSELECT() {
        return WM_MENUSELECT;
    }
    private static final int WM_MENUCHAR = (int)288L;
    /**
     * {@snippet lang=c :
     * #define WM_MENUCHAR 288
     * }
     */
    public static int WM_MENUCHAR() {
        return WM_MENUCHAR;
    }
    private static final int WM_ENTERIDLE = (int)289L;
    /**
     * {@snippet lang=c :
     * #define WM_ENTERIDLE 289
     * }
     */
    public static int WM_ENTERIDLE() {
        return WM_ENTERIDLE;
    }
    private static final int WM_MENURBUTTONUP = (int)290L;
    /**
     * {@snippet lang=c :
     * #define WM_MENURBUTTONUP 290
     * }
     */
    public static int WM_MENURBUTTONUP() {
        return WM_MENURBUTTONUP;
    }
    private static final int WM_MENUDRAG = (int)291L;
    /**
     * {@snippet lang=c :
     * #define WM_MENUDRAG 291
     * }
     */
    public static int WM_MENUDRAG() {
        return WM_MENUDRAG;
    }
    private static final int WM_MENUGETOBJECT = (int)292L;
    /**
     * {@snippet lang=c :
     * #define WM_MENUGETOBJECT 292
     * }
     */
    public static int WM_MENUGETOBJECT() {
        return WM_MENUGETOBJECT;
    }
    private static final int WM_UNINITMENUPOPUP = (int)293L;
    /**
     * {@snippet lang=c :
     * #define WM_UNINITMENUPOPUP 293
     * }
     */
    public static int WM_UNINITMENUPOPUP() {
        return WM_UNINITMENUPOPUP;
    }
    private static final int WM_MENUCOMMAND = (int)294L;
    /**
     * {@snippet lang=c :
     * #define WM_MENUCOMMAND 294
     * }
     */
    public static int WM_MENUCOMMAND() {
        return WM_MENUCOMMAND;
    }
    private static final int WM_CHANGEUISTATE = (int)295L;
    /**
     * {@snippet lang=c :
     * #define WM_CHANGEUISTATE 295
     * }
     */
    public static int WM_CHANGEUISTATE() {
        return WM_CHANGEUISTATE;
    }
    private static final int WM_UPDATEUISTATE = (int)296L;
    /**
     * {@snippet lang=c :
     * #define WM_UPDATEUISTATE 296
     * }
     */
    public static int WM_UPDATEUISTATE() {
        return WM_UPDATEUISTATE;
    }
    private static final int WM_QUERYUISTATE = (int)297L;
    /**
     * {@snippet lang=c :
     * #define WM_QUERYUISTATE 297
     * }
     */
    public static int WM_QUERYUISTATE() {
        return WM_QUERYUISTATE;
    }
    private static final int UIS_SET = (int)1L;
    /**
     * {@snippet lang=c :
     * #define UIS_SET 1
     * }
     */
    public static int UIS_SET() {
        return UIS_SET;
    }
    private static final int UIS_CLEAR = (int)2L;
    /**
     * {@snippet lang=c :
     * #define UIS_CLEAR 2
     * }
     */
    public static int UIS_CLEAR() {
        return UIS_CLEAR;
    }
    private static final int UIS_INITIALIZE = (int)3L;
    /**
     * {@snippet lang=c :
     * #define UIS_INITIALIZE 3
     * }
     */
    public static int UIS_INITIALIZE() {
        return UIS_INITIALIZE;
    }
    private static final int UISF_HIDEFOCUS = (int)1L;
    /**
     * {@snippet lang=c :
     * #define UISF_HIDEFOCUS 1
     * }
     */
    public static int UISF_HIDEFOCUS() {
        return UISF_HIDEFOCUS;
    }
    private static final int UISF_HIDEACCEL = (int)2L;
    /**
     * {@snippet lang=c :
     * #define UISF_HIDEACCEL 2
     * }
     */
    public static int UISF_HIDEACCEL() {
        return UISF_HIDEACCEL;
    }
    private static final int UISF_ACTIVE = (int)4L;
    /**
     * {@snippet lang=c :
     * #define UISF_ACTIVE 4
     * }
     */
    public static int UISF_ACTIVE() {
        return UISF_ACTIVE;
    }
    private static final int WM_CTLCOLORMSGBOX = (int)306L;
    /**
     * {@snippet lang=c :
     * #define WM_CTLCOLORMSGBOX 306
     * }
     */
    public static int WM_CTLCOLORMSGBOX() {
        return WM_CTLCOLORMSGBOX;
    }
    private static final int WM_CTLCOLOREDIT = (int)307L;
    /**
     * {@snippet lang=c :
     * #define WM_CTLCOLOREDIT 307
     * }
     */
    public static int WM_CTLCOLOREDIT() {
        return WM_CTLCOLOREDIT;
    }
    private static final int WM_CTLCOLORLISTBOX = (int)308L;
    /**
     * {@snippet lang=c :
     * #define WM_CTLCOLORLISTBOX 308
     * }
     */
    public static int WM_CTLCOLORLISTBOX() {
        return WM_CTLCOLORLISTBOX;
    }
    private static final int WM_CTLCOLORBTN = (int)309L;
    /**
     * {@snippet lang=c :
     * #define WM_CTLCOLORBTN 309
     * }
     */
    public static int WM_CTLCOLORBTN() {
        return WM_CTLCOLORBTN;
    }
    private static final int WM_CTLCOLORDLG = (int)310L;
    /**
     * {@snippet lang=c :
     * #define WM_CTLCOLORDLG 310
     * }
     */
    public static int WM_CTLCOLORDLG() {
        return WM_CTLCOLORDLG;
    }
    private static final int WM_CTLCOLORSCROLLBAR = (int)311L;
    /**
     * {@snippet lang=c :
     * #define WM_CTLCOLORSCROLLBAR 311
     * }
     */
    public static int WM_CTLCOLORSCROLLBAR() {
        return WM_CTLCOLORSCROLLBAR;
    }
    private static final int WM_CTLCOLORSTATIC = (int)312L;
    /**
     * {@snippet lang=c :
     * #define WM_CTLCOLORSTATIC 312
     * }
     */
    public static int WM_CTLCOLORSTATIC() {
        return WM_CTLCOLORSTATIC;
    }
    private static final int MN_GETHMENU = (int)481L;
    /**
     * {@snippet lang=c :
     * #define MN_GETHMENU 481
     * }
     */
    public static int MN_GETHMENU() {
        return MN_GETHMENU;
    }
    private static final int WM_MOUSEFIRST = (int)512L;
    /**
     * {@snippet lang=c :
     * #define WM_MOUSEFIRST 512
     * }
     */
    public static int WM_MOUSEFIRST() {
        return WM_MOUSEFIRST;
    }
    private static final int WM_MOUSEMOVE = (int)512L;
    /**
     * {@snippet lang=c :
     * #define WM_MOUSEMOVE 512
     * }
     */
    public static int WM_MOUSEMOVE() {
        return WM_MOUSEMOVE;
    }
    private static final int WM_LBUTTONDOWN = (int)513L;
    /**
     * {@snippet lang=c :
     * #define WM_LBUTTONDOWN 513
     * }
     */
    public static int WM_LBUTTONDOWN() {
        return WM_LBUTTONDOWN;
    }
    private static final int WM_LBUTTONUP = (int)514L;
    /**
     * {@snippet lang=c :
     * #define WM_LBUTTONUP 514
     * }
     */
    public static int WM_LBUTTONUP() {
        return WM_LBUTTONUP;
    }
    private static final int WM_LBUTTONDBLCLK = (int)515L;
    /**
     * {@snippet lang=c :
     * #define WM_LBUTTONDBLCLK 515
     * }
     */
    public static int WM_LBUTTONDBLCLK() {
        return WM_LBUTTONDBLCLK;
    }
    private static final int WM_RBUTTONDOWN = (int)516L;
    /**
     * {@snippet lang=c :
     * #define WM_RBUTTONDOWN 516
     * }
     */
    public static int WM_RBUTTONDOWN() {
        return WM_RBUTTONDOWN;
    }
    private static final int WM_RBUTTONUP = (int)517L;
    /**
     * {@snippet lang=c :
     * #define WM_RBUTTONUP 517
     * }
     */
    public static int WM_RBUTTONUP() {
        return WM_RBUTTONUP;
    }
    private static final int WM_RBUTTONDBLCLK = (int)518L;
    /**
     * {@snippet lang=c :
     * #define WM_RBUTTONDBLCLK 518
     * }
     */
    public static int WM_RBUTTONDBLCLK() {
        return WM_RBUTTONDBLCLK;
    }
    private static final int WM_MBUTTONDOWN = (int)519L;
    /**
     * {@snippet lang=c :
     * #define WM_MBUTTONDOWN 519
     * }
     */
    public static int WM_MBUTTONDOWN() {
        return WM_MBUTTONDOWN;
    }
    private static final int WM_MBUTTONUP = (int)520L;
    /**
     * {@snippet lang=c :
     * #define WM_MBUTTONUP 520
     * }
     */
    public static int WM_MBUTTONUP() {
        return WM_MBUTTONUP;
    }
    private static final int WM_MBUTTONDBLCLK = (int)521L;
    /**
     * {@snippet lang=c :
     * #define WM_MBUTTONDBLCLK 521
     * }
     */
    public static int WM_MBUTTONDBLCLK() {
        return WM_MBUTTONDBLCLK;
    }
    private static final int WM_MOUSEWHEEL = (int)522L;
    /**
     * {@snippet lang=c :
     * #define WM_MOUSEWHEEL 522
     * }
     */
    public static int WM_MOUSEWHEEL() {
        return WM_MOUSEWHEEL;
    }
    private static final int WM_XBUTTONDOWN = (int)523L;
    /**
     * {@snippet lang=c :
     * #define WM_XBUTTONDOWN 523
     * }
     */
    public static int WM_XBUTTONDOWN() {
        return WM_XBUTTONDOWN;
    }
    private static final int WM_XBUTTONUP = (int)524L;
    /**
     * {@snippet lang=c :
     * #define WM_XBUTTONUP 524
     * }
     */
    public static int WM_XBUTTONUP() {
        return WM_XBUTTONUP;
    }
    private static final int WM_XBUTTONDBLCLK = (int)525L;
    /**
     * {@snippet lang=c :
     * #define WM_XBUTTONDBLCLK 525
     * }
     */
    public static int WM_XBUTTONDBLCLK() {
        return WM_XBUTTONDBLCLK;
    }
    private static final int WM_MOUSEHWHEEL = (int)526L;
    /**
     * {@snippet lang=c :
     * #define WM_MOUSEHWHEEL 526
     * }
     */
    public static int WM_MOUSEHWHEEL() {
        return WM_MOUSEHWHEEL;
    }
    private static final int WM_MOUSELAST = (int)526L;
    /**
     * {@snippet lang=c :
     * #define WM_MOUSELAST 526
     * }
     */
    public static int WM_MOUSELAST() {
        return WM_MOUSELAST;
    }
    private static final int WHEEL_DELTA = (int)120L;
    /**
     * {@snippet lang=c :
     * #define WHEEL_DELTA 120
     * }
     */
    public static int WHEEL_DELTA() {
        return WHEEL_DELTA;
    }
}

