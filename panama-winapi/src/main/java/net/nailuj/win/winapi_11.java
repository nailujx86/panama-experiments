// Generated by jextract

package net.nailuj.win;

import java.lang.invoke.*;
import java.lang.foreign.*;
import java.nio.ByteOrder;
import java.util.*;
import java.util.function.*;
import java.util.stream.*;

import static java.lang.foreign.ValueLayout.*;
import static java.lang.foreign.MemoryLayout.PathElement.*;

public class winapi_11 extends winapi_12 {

    winapi_11() {
        // Should not be called directly
    }
    private static final int ERROR_UNSATISFIED_DEPENDENCIES = (int)441L;
    /**
     * {@snippet lang=c :
     * #define ERROR_UNSATISFIED_DEPENDENCIES 441
     * }
     */
    public static int ERROR_UNSATISFIED_DEPENDENCIES() {
        return ERROR_UNSATISFIED_DEPENDENCIES;
    }
    private static final int ERROR_CASE_SENSITIVE_PATH = (int)442L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CASE_SENSITIVE_PATH 442
     * }
     */
    public static int ERROR_CASE_SENSITIVE_PATH() {
        return ERROR_CASE_SENSITIVE_PATH;
    }
    private static final int ERROR_UNEXPECTED_NTCACHEMANAGER_ERROR = (int)443L;
    /**
     * {@snippet lang=c :
     * #define ERROR_UNEXPECTED_NTCACHEMANAGER_ERROR 443
     * }
     */
    public static int ERROR_UNEXPECTED_NTCACHEMANAGER_ERROR() {
        return ERROR_UNEXPECTED_NTCACHEMANAGER_ERROR;
    }
    private static final int ERROR_LINUX_SUBSYSTEM_UPDATE_REQUIRED = (int)444L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LINUX_SUBSYSTEM_UPDATE_REQUIRED 444
     * }
     */
    public static int ERROR_LINUX_SUBSYSTEM_UPDATE_REQUIRED() {
        return ERROR_LINUX_SUBSYSTEM_UPDATE_REQUIRED;
    }
    private static final int ERROR_DLP_POLICY_WARNS_AGAINST_OPERATION = (int)445L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DLP_POLICY_WARNS_AGAINST_OPERATION 445
     * }
     */
    public static int ERROR_DLP_POLICY_WARNS_AGAINST_OPERATION() {
        return ERROR_DLP_POLICY_WARNS_AGAINST_OPERATION;
    }
    private static final int ERROR_DLP_POLICY_DENIES_OPERATION = (int)446L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DLP_POLICY_DENIES_OPERATION 446
     * }
     */
    public static int ERROR_DLP_POLICY_DENIES_OPERATION() {
        return ERROR_DLP_POLICY_DENIES_OPERATION;
    }
    private static final int ERROR_SECURITY_DENIES_OPERATION = (int)447L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SECURITY_DENIES_OPERATION 447
     * }
     */
    public static int ERROR_SECURITY_DENIES_OPERATION() {
        return ERROR_SECURITY_DENIES_OPERATION;
    }
    private static final int ERROR_UNTRUSTED_MOUNT_POINT = (int)448L;
    /**
     * {@snippet lang=c :
     * #define ERROR_UNTRUSTED_MOUNT_POINT 448
     * }
     */
    public static int ERROR_UNTRUSTED_MOUNT_POINT() {
        return ERROR_UNTRUSTED_MOUNT_POINT;
    }
    private static final int ERROR_DLP_POLICY_SILENTLY_FAIL = (int)449L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DLP_POLICY_SILENTLY_FAIL 449
     * }
     */
    public static int ERROR_DLP_POLICY_SILENTLY_FAIL() {
        return ERROR_DLP_POLICY_SILENTLY_FAIL;
    }
    private static final int ERROR_CAPAUTHZ_NOT_DEVUNLOCKED = (int)450L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CAPAUTHZ_NOT_DEVUNLOCKED 450
     * }
     */
    public static int ERROR_CAPAUTHZ_NOT_DEVUNLOCKED() {
        return ERROR_CAPAUTHZ_NOT_DEVUNLOCKED;
    }
    private static final int ERROR_CAPAUTHZ_CHANGE_TYPE = (int)451L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CAPAUTHZ_CHANGE_TYPE 451
     * }
     */
    public static int ERROR_CAPAUTHZ_CHANGE_TYPE() {
        return ERROR_CAPAUTHZ_CHANGE_TYPE;
    }
    private static final int ERROR_CAPAUTHZ_NOT_PROVISIONED = (int)452L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CAPAUTHZ_NOT_PROVISIONED 452
     * }
     */
    public static int ERROR_CAPAUTHZ_NOT_PROVISIONED() {
        return ERROR_CAPAUTHZ_NOT_PROVISIONED;
    }
    private static final int ERROR_CAPAUTHZ_NOT_AUTHORIZED = (int)453L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CAPAUTHZ_NOT_AUTHORIZED 453
     * }
     */
    public static int ERROR_CAPAUTHZ_NOT_AUTHORIZED() {
        return ERROR_CAPAUTHZ_NOT_AUTHORIZED;
    }
    private static final int ERROR_CAPAUTHZ_NO_POLICY = (int)454L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CAPAUTHZ_NO_POLICY 454
     * }
     */
    public static int ERROR_CAPAUTHZ_NO_POLICY() {
        return ERROR_CAPAUTHZ_NO_POLICY;
    }
    private static final int ERROR_CAPAUTHZ_DB_CORRUPTED = (int)455L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CAPAUTHZ_DB_CORRUPTED 455
     * }
     */
    public static int ERROR_CAPAUTHZ_DB_CORRUPTED() {
        return ERROR_CAPAUTHZ_DB_CORRUPTED;
    }
    private static final int ERROR_CAPAUTHZ_SCCD_INVALID_CATALOG = (int)456L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CAPAUTHZ_SCCD_INVALID_CATALOG 456
     * }
     */
    public static int ERROR_CAPAUTHZ_SCCD_INVALID_CATALOG() {
        return ERROR_CAPAUTHZ_SCCD_INVALID_CATALOG;
    }
    private static final int ERROR_CAPAUTHZ_SCCD_NO_AUTH_ENTITY = (int)457L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CAPAUTHZ_SCCD_NO_AUTH_ENTITY 457
     * }
     */
    public static int ERROR_CAPAUTHZ_SCCD_NO_AUTH_ENTITY() {
        return ERROR_CAPAUTHZ_SCCD_NO_AUTH_ENTITY;
    }
    private static final int ERROR_CAPAUTHZ_SCCD_PARSE_ERROR = (int)458L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CAPAUTHZ_SCCD_PARSE_ERROR 458
     * }
     */
    public static int ERROR_CAPAUTHZ_SCCD_PARSE_ERROR() {
        return ERROR_CAPAUTHZ_SCCD_PARSE_ERROR;
    }
    private static final int ERROR_CAPAUTHZ_SCCD_DEV_MODE_REQUIRED = (int)459L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CAPAUTHZ_SCCD_DEV_MODE_REQUIRED 459
     * }
     */
    public static int ERROR_CAPAUTHZ_SCCD_DEV_MODE_REQUIRED() {
        return ERROR_CAPAUTHZ_SCCD_DEV_MODE_REQUIRED;
    }
    private static final int ERROR_CAPAUTHZ_SCCD_NO_CAPABILITY_MATCH = (int)460L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CAPAUTHZ_SCCD_NO_CAPABILITY_MATCH 460
     * }
     */
    public static int ERROR_CAPAUTHZ_SCCD_NO_CAPABILITY_MATCH() {
        return ERROR_CAPAUTHZ_SCCD_NO_CAPABILITY_MATCH;
    }
    private static final int ERROR_CIMFS_IMAGE_CORRUPT = (int)470L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CIMFS_IMAGE_CORRUPT 470
     * }
     */
    public static int ERROR_CIMFS_IMAGE_CORRUPT() {
        return ERROR_CIMFS_IMAGE_CORRUPT;
    }
    private static final int ERROR_CIMFS_IMAGE_VERSION_NOT_SUPPORTED = (int)471L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CIMFS_IMAGE_VERSION_NOT_SUPPORTED 471
     * }
     */
    public static int ERROR_CIMFS_IMAGE_VERSION_NOT_SUPPORTED() {
        return ERROR_CIMFS_IMAGE_VERSION_NOT_SUPPORTED;
    }
    private static final int ERROR_STORAGE_STACK_ACCESS_DENIED = (int)472L;
    /**
     * {@snippet lang=c :
     * #define ERROR_STORAGE_STACK_ACCESS_DENIED 472
     * }
     */
    public static int ERROR_STORAGE_STACK_ACCESS_DENIED() {
        return ERROR_STORAGE_STACK_ACCESS_DENIED;
    }
    private static final int ERROR_INSUFFICIENT_VIRTUAL_ADDR_RESOURCES = (int)473L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INSUFFICIENT_VIRTUAL_ADDR_RESOURCES 473
     * }
     */
    public static int ERROR_INSUFFICIENT_VIRTUAL_ADDR_RESOURCES() {
        return ERROR_INSUFFICIENT_VIRTUAL_ADDR_RESOURCES;
    }
    private static final int ERROR_INDEX_OUT_OF_BOUNDS = (int)474L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INDEX_OUT_OF_BOUNDS 474
     * }
     */
    public static int ERROR_INDEX_OUT_OF_BOUNDS() {
        return ERROR_INDEX_OUT_OF_BOUNDS;
    }
    private static final int ERROR_CLOUD_FILE_US_MESSAGE_TIMEOUT = (int)475L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLOUD_FILE_US_MESSAGE_TIMEOUT 475
     * }
     */
    public static int ERROR_CLOUD_FILE_US_MESSAGE_TIMEOUT() {
        return ERROR_CLOUD_FILE_US_MESSAGE_TIMEOUT;
    }
    private static final int ERROR_NOT_A_DEV_VOLUME = (int)476L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_A_DEV_VOLUME 476
     * }
     */
    public static int ERROR_NOT_A_DEV_VOLUME() {
        return ERROR_NOT_A_DEV_VOLUME;
    }
    private static final int ERROR_FS_GUID_MISMATCH = (int)477L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FS_GUID_MISMATCH 477
     * }
     */
    public static int ERROR_FS_GUID_MISMATCH() {
        return ERROR_FS_GUID_MISMATCH;
    }
    private static final int ERROR_CANT_ATTACH_TO_DEV_VOLUME = (int)478L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CANT_ATTACH_TO_DEV_VOLUME 478
     * }
     */
    public static int ERROR_CANT_ATTACH_TO_DEV_VOLUME() {
        return ERROR_CANT_ATTACH_TO_DEV_VOLUME;
    }
    private static final int ERROR_MEMORY_DECOMPRESSION_FAILURE = (int)479L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MEMORY_DECOMPRESSION_FAILURE 479
     * }
     */
    public static int ERROR_MEMORY_DECOMPRESSION_FAILURE() {
        return ERROR_MEMORY_DECOMPRESSION_FAILURE;
    }
    private static final int ERROR_PNP_QUERY_REMOVE_DEVICE_TIMEOUT = (int)480L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PNP_QUERY_REMOVE_DEVICE_TIMEOUT 480
     * }
     */
    public static int ERROR_PNP_QUERY_REMOVE_DEVICE_TIMEOUT() {
        return ERROR_PNP_QUERY_REMOVE_DEVICE_TIMEOUT;
    }
    private static final int ERROR_PNP_QUERY_REMOVE_RELATED_DEVICE_TIMEOUT = (int)481L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PNP_QUERY_REMOVE_RELATED_DEVICE_TIMEOUT 481
     * }
     */
    public static int ERROR_PNP_QUERY_REMOVE_RELATED_DEVICE_TIMEOUT() {
        return ERROR_PNP_QUERY_REMOVE_RELATED_DEVICE_TIMEOUT;
    }
    private static final int ERROR_PNP_QUERY_REMOVE_UNRELATED_DEVICE_TIMEOUT = (int)482L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PNP_QUERY_REMOVE_UNRELATED_DEVICE_TIMEOUT 482
     * }
     */
    public static int ERROR_PNP_QUERY_REMOVE_UNRELATED_DEVICE_TIMEOUT() {
        return ERROR_PNP_QUERY_REMOVE_UNRELATED_DEVICE_TIMEOUT;
    }
    private static final int ERROR_DEVICE_HARDWARE_ERROR = (int)483L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DEVICE_HARDWARE_ERROR 483
     * }
     */
    public static int ERROR_DEVICE_HARDWARE_ERROR() {
        return ERROR_DEVICE_HARDWARE_ERROR;
    }
    private static final int ERROR_INVALID_ADDRESS = (int)487L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_ADDRESS 487
     * }
     */
    public static int ERROR_INVALID_ADDRESS() {
        return ERROR_INVALID_ADDRESS;
    }
    private static final int ERROR_HAS_SYSTEM_CRITICAL_FILES = (int)488L;
    /**
     * {@snippet lang=c :
     * #define ERROR_HAS_SYSTEM_CRITICAL_FILES 488
     * }
     */
    public static int ERROR_HAS_SYSTEM_CRITICAL_FILES() {
        return ERROR_HAS_SYSTEM_CRITICAL_FILES;
    }
    private static final int ERROR_ENCRYPTED_FILE_NOT_SUPPORTED = (int)489L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ENCRYPTED_FILE_NOT_SUPPORTED 489
     * }
     */
    public static int ERROR_ENCRYPTED_FILE_NOT_SUPPORTED() {
        return ERROR_ENCRYPTED_FILE_NOT_SUPPORTED;
    }
    private static final int ERROR_SPARSE_FILE_NOT_SUPPORTED = (int)490L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SPARSE_FILE_NOT_SUPPORTED 490
     * }
     */
    public static int ERROR_SPARSE_FILE_NOT_SUPPORTED() {
        return ERROR_SPARSE_FILE_NOT_SUPPORTED;
    }
    private static final int ERROR_PAGEFILE_NOT_SUPPORTED = (int)491L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PAGEFILE_NOT_SUPPORTED 491
     * }
     */
    public static int ERROR_PAGEFILE_NOT_SUPPORTED() {
        return ERROR_PAGEFILE_NOT_SUPPORTED;
    }
    private static final int ERROR_VOLUME_NOT_SUPPORTED = (int)492L;
    /**
     * {@snippet lang=c :
     * #define ERROR_VOLUME_NOT_SUPPORTED 492
     * }
     */
    public static int ERROR_VOLUME_NOT_SUPPORTED() {
        return ERROR_VOLUME_NOT_SUPPORTED;
    }
    private static final int ERROR_NOT_SUPPORTED_WITH_BYPASSIO = (int)493L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_SUPPORTED_WITH_BYPASSIO 493
     * }
     */
    public static int ERROR_NOT_SUPPORTED_WITH_BYPASSIO() {
        return ERROR_NOT_SUPPORTED_WITH_BYPASSIO;
    }
    private static final int ERROR_NO_BYPASSIO_DRIVER_SUPPORT = (int)494L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_BYPASSIO_DRIVER_SUPPORT 494
     * }
     */
    public static int ERROR_NO_BYPASSIO_DRIVER_SUPPORT() {
        return ERROR_NO_BYPASSIO_DRIVER_SUPPORT;
    }
    private static final int ERROR_NOT_SUPPORTED_WITH_ENCRYPTION = (int)495L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_SUPPORTED_WITH_ENCRYPTION 495
     * }
     */
    public static int ERROR_NOT_SUPPORTED_WITH_ENCRYPTION() {
        return ERROR_NOT_SUPPORTED_WITH_ENCRYPTION;
    }
    private static final int ERROR_NOT_SUPPORTED_WITH_COMPRESSION = (int)496L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_SUPPORTED_WITH_COMPRESSION 496
     * }
     */
    public static int ERROR_NOT_SUPPORTED_WITH_COMPRESSION() {
        return ERROR_NOT_SUPPORTED_WITH_COMPRESSION;
    }
    private static final int ERROR_NOT_SUPPORTED_WITH_REPLICATION = (int)497L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_SUPPORTED_WITH_REPLICATION 497
     * }
     */
    public static int ERROR_NOT_SUPPORTED_WITH_REPLICATION() {
        return ERROR_NOT_SUPPORTED_WITH_REPLICATION;
    }
    private static final int ERROR_NOT_SUPPORTED_WITH_DEDUPLICATION = (int)498L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_SUPPORTED_WITH_DEDUPLICATION 498
     * }
     */
    public static int ERROR_NOT_SUPPORTED_WITH_DEDUPLICATION() {
        return ERROR_NOT_SUPPORTED_WITH_DEDUPLICATION;
    }
    private static final int ERROR_NOT_SUPPORTED_WITH_AUDITING = (int)499L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_SUPPORTED_WITH_AUDITING 499
     * }
     */
    public static int ERROR_NOT_SUPPORTED_WITH_AUDITING() {
        return ERROR_NOT_SUPPORTED_WITH_AUDITING;
    }
    private static final int ERROR_USER_PROFILE_LOAD = (int)500L;
    /**
     * {@snippet lang=c :
     * #define ERROR_USER_PROFILE_LOAD 500
     * }
     */
    public static int ERROR_USER_PROFILE_LOAD() {
        return ERROR_USER_PROFILE_LOAD;
    }
    private static final int ERROR_SESSION_KEY_TOO_SHORT = (int)501L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SESSION_KEY_TOO_SHORT 501
     * }
     */
    public static int ERROR_SESSION_KEY_TOO_SHORT() {
        return ERROR_SESSION_KEY_TOO_SHORT;
    }
    private static final int ERROR_ACCESS_DENIED_APPDATA = (int)502L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ACCESS_DENIED_APPDATA 502
     * }
     */
    public static int ERROR_ACCESS_DENIED_APPDATA() {
        return ERROR_ACCESS_DENIED_APPDATA;
    }
    private static final int ERROR_NOT_SUPPORTED_WITH_MONITORING = (int)503L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_SUPPORTED_WITH_MONITORING 503
     * }
     */
    public static int ERROR_NOT_SUPPORTED_WITH_MONITORING() {
        return ERROR_NOT_SUPPORTED_WITH_MONITORING;
    }
    private static final int ERROR_NOT_SUPPORTED_WITH_SNAPSHOT = (int)504L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_SUPPORTED_WITH_SNAPSHOT 504
     * }
     */
    public static int ERROR_NOT_SUPPORTED_WITH_SNAPSHOT() {
        return ERROR_NOT_SUPPORTED_WITH_SNAPSHOT;
    }
    private static final int ERROR_NOT_SUPPORTED_WITH_VIRTUALIZATION = (int)505L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_SUPPORTED_WITH_VIRTUALIZATION 505
     * }
     */
    public static int ERROR_NOT_SUPPORTED_WITH_VIRTUALIZATION() {
        return ERROR_NOT_SUPPORTED_WITH_VIRTUALIZATION;
    }
    private static final int ERROR_BYPASSIO_FLT_NOT_SUPPORTED = (int)506L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BYPASSIO_FLT_NOT_SUPPORTED 506
     * }
     */
    public static int ERROR_BYPASSIO_FLT_NOT_SUPPORTED() {
        return ERROR_BYPASSIO_FLT_NOT_SUPPORTED;
    }
    private static final int ERROR_DEVICE_RESET_REQUIRED = (int)507L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DEVICE_RESET_REQUIRED 507
     * }
     */
    public static int ERROR_DEVICE_RESET_REQUIRED() {
        return ERROR_DEVICE_RESET_REQUIRED;
    }
    private static final int ERROR_VOLUME_WRITE_ACCESS_DENIED = (int)508L;
    /**
     * {@snippet lang=c :
     * #define ERROR_VOLUME_WRITE_ACCESS_DENIED 508
     * }
     */
    public static int ERROR_VOLUME_WRITE_ACCESS_DENIED() {
        return ERROR_VOLUME_WRITE_ACCESS_DENIED;
    }
    private static final int ERROR_NOT_SUPPORTED_WITH_CACHED_HANDLE = (int)509L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_SUPPORTED_WITH_CACHED_HANDLE 509
     * }
     */
    public static int ERROR_NOT_SUPPORTED_WITH_CACHED_HANDLE() {
        return ERROR_NOT_SUPPORTED_WITH_CACHED_HANDLE;
    }
    private static final int ERROR_FS_METADATA_INCONSISTENT = (int)510L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FS_METADATA_INCONSISTENT 510
     * }
     */
    public static int ERROR_FS_METADATA_INCONSISTENT() {
        return ERROR_FS_METADATA_INCONSISTENT;
    }
    private static final int ERROR_BLOCK_WEAK_REFERENCE_INVALID = (int)511L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BLOCK_WEAK_REFERENCE_INVALID 511
     * }
     */
    public static int ERROR_BLOCK_WEAK_REFERENCE_INVALID() {
        return ERROR_BLOCK_WEAK_REFERENCE_INVALID;
    }
    private static final int ERROR_BLOCK_SOURCE_WEAK_REFERENCE_INVALID = (int)512L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BLOCK_SOURCE_WEAK_REFERENCE_INVALID 512
     * }
     */
    public static int ERROR_BLOCK_SOURCE_WEAK_REFERENCE_INVALID() {
        return ERROR_BLOCK_SOURCE_WEAK_REFERENCE_INVALID;
    }
    private static final int ERROR_BLOCK_TARGET_WEAK_REFERENCE_INVALID = (int)513L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BLOCK_TARGET_WEAK_REFERENCE_INVALID 513
     * }
     */
    public static int ERROR_BLOCK_TARGET_WEAK_REFERENCE_INVALID() {
        return ERROR_BLOCK_TARGET_WEAK_REFERENCE_INVALID;
    }
    private static final int ERROR_BLOCK_SHARED = (int)514L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BLOCK_SHARED 514
     * }
     */
    public static int ERROR_BLOCK_SHARED() {
        return ERROR_BLOCK_SHARED;
    }
    private static final int ERROR_VOLUME_UPGRADE_NOT_NEEDED = (int)515L;
    /**
     * {@snippet lang=c :
     * #define ERROR_VOLUME_UPGRADE_NOT_NEEDED 515
     * }
     */
    public static int ERROR_VOLUME_UPGRADE_NOT_NEEDED() {
        return ERROR_VOLUME_UPGRADE_NOT_NEEDED;
    }
    private static final int ERROR_VOLUME_UPGRADE_PENDING = (int)516L;
    /**
     * {@snippet lang=c :
     * #define ERROR_VOLUME_UPGRADE_PENDING 516
     * }
     */
    public static int ERROR_VOLUME_UPGRADE_PENDING() {
        return ERROR_VOLUME_UPGRADE_PENDING;
    }
    private static final int ERROR_VOLUME_UPGRADE_DISABLED = (int)517L;
    /**
     * {@snippet lang=c :
     * #define ERROR_VOLUME_UPGRADE_DISABLED 517
     * }
     */
    public static int ERROR_VOLUME_UPGRADE_DISABLED() {
        return ERROR_VOLUME_UPGRADE_DISABLED;
    }
    private static final int ERROR_VOLUME_UPGRADE_DISABLED_TILL_OS_DOWNGRADE_EXPIRED = (int)518L;
    /**
     * {@snippet lang=c :
     * #define ERROR_VOLUME_UPGRADE_DISABLED_TILL_OS_DOWNGRADE_EXPIRED 518
     * }
     */
    public static int ERROR_VOLUME_UPGRADE_DISABLED_TILL_OS_DOWNGRADE_EXPIRED() {
        return ERROR_VOLUME_UPGRADE_DISABLED_TILL_OS_DOWNGRADE_EXPIRED;
    }
    private static final int ERROR_INVALID_CONFIG_VALUE = (int)519L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_CONFIG_VALUE 519
     * }
     */
    public static int ERROR_INVALID_CONFIG_VALUE() {
        return ERROR_INVALID_CONFIG_VALUE;
    }
    private static final int ERROR_MEMORY_DECOMPRESSION_HW_ERROR = (int)520L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MEMORY_DECOMPRESSION_HW_ERROR 520
     * }
     */
    public static int ERROR_MEMORY_DECOMPRESSION_HW_ERROR() {
        return ERROR_MEMORY_DECOMPRESSION_HW_ERROR;
    }
    private static final int ERROR_VOLUME_ROLLBACK_DETECTED = (int)521L;
    /**
     * {@snippet lang=c :
     * #define ERROR_VOLUME_ROLLBACK_DETECTED 521
     * }
     */
    public static int ERROR_VOLUME_ROLLBACK_DETECTED() {
        return ERROR_VOLUME_ROLLBACK_DETECTED;
    }
    private static final int ERROR_ARITHMETIC_OVERFLOW = (int)534L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ARITHMETIC_OVERFLOW 534
     * }
     */
    public static int ERROR_ARITHMETIC_OVERFLOW() {
        return ERROR_ARITHMETIC_OVERFLOW;
    }
    private static final int ERROR_PIPE_CONNECTED = (int)535L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PIPE_CONNECTED 535
     * }
     */
    public static int ERROR_PIPE_CONNECTED() {
        return ERROR_PIPE_CONNECTED;
    }
    private static final int ERROR_PIPE_LISTENING = (int)536L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PIPE_LISTENING 536
     * }
     */
    public static int ERROR_PIPE_LISTENING() {
        return ERROR_PIPE_LISTENING;
    }
    private static final int ERROR_VERIFIER_STOP = (int)537L;
    /**
     * {@snippet lang=c :
     * #define ERROR_VERIFIER_STOP 537
     * }
     */
    public static int ERROR_VERIFIER_STOP() {
        return ERROR_VERIFIER_STOP;
    }
    private static final int ERROR_ABIOS_ERROR = (int)538L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ABIOS_ERROR 538
     * }
     */
    public static int ERROR_ABIOS_ERROR() {
        return ERROR_ABIOS_ERROR;
    }
    private static final int ERROR_WX86_WARNING = (int)539L;
    /**
     * {@snippet lang=c :
     * #define ERROR_WX86_WARNING 539
     * }
     */
    public static int ERROR_WX86_WARNING() {
        return ERROR_WX86_WARNING;
    }
    private static final int ERROR_WX86_ERROR = (int)540L;
    /**
     * {@snippet lang=c :
     * #define ERROR_WX86_ERROR 540
     * }
     */
    public static int ERROR_WX86_ERROR() {
        return ERROR_WX86_ERROR;
    }
    private static final int ERROR_TIMER_NOT_CANCELED = (int)541L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TIMER_NOT_CANCELED 541
     * }
     */
    public static int ERROR_TIMER_NOT_CANCELED() {
        return ERROR_TIMER_NOT_CANCELED;
    }
    private static final int ERROR_UNWIND = (int)542L;
    /**
     * {@snippet lang=c :
     * #define ERROR_UNWIND 542
     * }
     */
    public static int ERROR_UNWIND() {
        return ERROR_UNWIND;
    }
    private static final int ERROR_BAD_STACK = (int)543L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BAD_STACK 543
     * }
     */
    public static int ERROR_BAD_STACK() {
        return ERROR_BAD_STACK;
    }
    private static final int ERROR_INVALID_UNWIND_TARGET = (int)544L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_UNWIND_TARGET 544
     * }
     */
    public static int ERROR_INVALID_UNWIND_TARGET() {
        return ERROR_INVALID_UNWIND_TARGET;
    }
    private static final int ERROR_INVALID_PORT_ATTRIBUTES = (int)545L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_PORT_ATTRIBUTES 545
     * }
     */
    public static int ERROR_INVALID_PORT_ATTRIBUTES() {
        return ERROR_INVALID_PORT_ATTRIBUTES;
    }
    private static final int ERROR_PORT_MESSAGE_TOO_LONG = (int)546L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PORT_MESSAGE_TOO_LONG 546
     * }
     */
    public static int ERROR_PORT_MESSAGE_TOO_LONG() {
        return ERROR_PORT_MESSAGE_TOO_LONG;
    }
    private static final int ERROR_INVALID_QUOTA_LOWER = (int)547L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_QUOTA_LOWER 547
     * }
     */
    public static int ERROR_INVALID_QUOTA_LOWER() {
        return ERROR_INVALID_QUOTA_LOWER;
    }
    private static final int ERROR_DEVICE_ALREADY_ATTACHED = (int)548L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DEVICE_ALREADY_ATTACHED 548
     * }
     */
    public static int ERROR_DEVICE_ALREADY_ATTACHED() {
        return ERROR_DEVICE_ALREADY_ATTACHED;
    }
    private static final int ERROR_INSTRUCTION_MISALIGNMENT = (int)549L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INSTRUCTION_MISALIGNMENT 549
     * }
     */
    public static int ERROR_INSTRUCTION_MISALIGNMENT() {
        return ERROR_INSTRUCTION_MISALIGNMENT;
    }
    private static final int ERROR_PROFILING_NOT_STARTED = (int)550L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PROFILING_NOT_STARTED 550
     * }
     */
    public static int ERROR_PROFILING_NOT_STARTED() {
        return ERROR_PROFILING_NOT_STARTED;
    }
    private static final int ERROR_PROFILING_NOT_STOPPED = (int)551L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PROFILING_NOT_STOPPED 551
     * }
     */
    public static int ERROR_PROFILING_NOT_STOPPED() {
        return ERROR_PROFILING_NOT_STOPPED;
    }
    private static final int ERROR_COULD_NOT_INTERPRET = (int)552L;
    /**
     * {@snippet lang=c :
     * #define ERROR_COULD_NOT_INTERPRET 552
     * }
     */
    public static int ERROR_COULD_NOT_INTERPRET() {
        return ERROR_COULD_NOT_INTERPRET;
    }
    private static final int ERROR_PROFILING_AT_LIMIT = (int)553L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PROFILING_AT_LIMIT 553
     * }
     */
    public static int ERROR_PROFILING_AT_LIMIT() {
        return ERROR_PROFILING_AT_LIMIT;
    }
    private static final int ERROR_CANT_WAIT = (int)554L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CANT_WAIT 554
     * }
     */
    public static int ERROR_CANT_WAIT() {
        return ERROR_CANT_WAIT;
    }
    private static final int ERROR_CANT_TERMINATE_SELF = (int)555L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CANT_TERMINATE_SELF 555
     * }
     */
    public static int ERROR_CANT_TERMINATE_SELF() {
        return ERROR_CANT_TERMINATE_SELF;
    }
    private static final int ERROR_UNEXPECTED_MM_CREATE_ERR = (int)556L;
    /**
     * {@snippet lang=c :
     * #define ERROR_UNEXPECTED_MM_CREATE_ERR 556
     * }
     */
    public static int ERROR_UNEXPECTED_MM_CREATE_ERR() {
        return ERROR_UNEXPECTED_MM_CREATE_ERR;
    }
    private static final int ERROR_UNEXPECTED_MM_MAP_ERROR = (int)557L;
    /**
     * {@snippet lang=c :
     * #define ERROR_UNEXPECTED_MM_MAP_ERROR 557
     * }
     */
    public static int ERROR_UNEXPECTED_MM_MAP_ERROR() {
        return ERROR_UNEXPECTED_MM_MAP_ERROR;
    }
    private static final int ERROR_UNEXPECTED_MM_EXTEND_ERR = (int)558L;
    /**
     * {@snippet lang=c :
     * #define ERROR_UNEXPECTED_MM_EXTEND_ERR 558
     * }
     */
    public static int ERROR_UNEXPECTED_MM_EXTEND_ERR() {
        return ERROR_UNEXPECTED_MM_EXTEND_ERR;
    }
    private static final int ERROR_BAD_FUNCTION_TABLE = (int)559L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BAD_FUNCTION_TABLE 559
     * }
     */
    public static int ERROR_BAD_FUNCTION_TABLE() {
        return ERROR_BAD_FUNCTION_TABLE;
    }
    private static final int ERROR_NO_GUID_TRANSLATION = (int)560L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_GUID_TRANSLATION 560
     * }
     */
    public static int ERROR_NO_GUID_TRANSLATION() {
        return ERROR_NO_GUID_TRANSLATION;
    }
    private static final int ERROR_INVALID_LDT_SIZE = (int)561L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_LDT_SIZE 561
     * }
     */
    public static int ERROR_INVALID_LDT_SIZE() {
        return ERROR_INVALID_LDT_SIZE;
    }
    private static final int ERROR_INVALID_LDT_OFFSET = (int)563L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_LDT_OFFSET 563
     * }
     */
    public static int ERROR_INVALID_LDT_OFFSET() {
        return ERROR_INVALID_LDT_OFFSET;
    }
    private static final int ERROR_INVALID_LDT_DESCRIPTOR = (int)564L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_LDT_DESCRIPTOR 564
     * }
     */
    public static int ERROR_INVALID_LDT_DESCRIPTOR() {
        return ERROR_INVALID_LDT_DESCRIPTOR;
    }
    private static final int ERROR_TOO_MANY_THREADS = (int)565L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TOO_MANY_THREADS 565
     * }
     */
    public static int ERROR_TOO_MANY_THREADS() {
        return ERROR_TOO_MANY_THREADS;
    }
    private static final int ERROR_THREAD_NOT_IN_PROCESS = (int)566L;
    /**
     * {@snippet lang=c :
     * #define ERROR_THREAD_NOT_IN_PROCESS 566
     * }
     */
    public static int ERROR_THREAD_NOT_IN_PROCESS() {
        return ERROR_THREAD_NOT_IN_PROCESS;
    }
    private static final int ERROR_PAGEFILE_QUOTA_EXCEEDED = (int)567L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PAGEFILE_QUOTA_EXCEEDED 567
     * }
     */
    public static int ERROR_PAGEFILE_QUOTA_EXCEEDED() {
        return ERROR_PAGEFILE_QUOTA_EXCEEDED;
    }
    private static final int ERROR_LOGON_SERVER_CONFLICT = (int)568L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOGON_SERVER_CONFLICT 568
     * }
     */
    public static int ERROR_LOGON_SERVER_CONFLICT() {
        return ERROR_LOGON_SERVER_CONFLICT;
    }
    private static final int ERROR_SYNCHRONIZATION_REQUIRED = (int)569L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SYNCHRONIZATION_REQUIRED 569
     * }
     */
    public static int ERROR_SYNCHRONIZATION_REQUIRED() {
        return ERROR_SYNCHRONIZATION_REQUIRED;
    }
    private static final int ERROR_NET_OPEN_FAILED = (int)570L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NET_OPEN_FAILED 570
     * }
     */
    public static int ERROR_NET_OPEN_FAILED() {
        return ERROR_NET_OPEN_FAILED;
    }
    private static final int ERROR_IO_PRIVILEGE_FAILED = (int)571L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IO_PRIVILEGE_FAILED 571
     * }
     */
    public static int ERROR_IO_PRIVILEGE_FAILED() {
        return ERROR_IO_PRIVILEGE_FAILED;
    }
    private static final int ERROR_CONTROL_C_EXIT = (int)572L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CONTROL_C_EXIT 572
     * }
     */
    public static int ERROR_CONTROL_C_EXIT() {
        return ERROR_CONTROL_C_EXIT;
    }
    private static final int ERROR_MISSING_SYSTEMFILE = (int)573L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MISSING_SYSTEMFILE 573
     * }
     */
    public static int ERROR_MISSING_SYSTEMFILE() {
        return ERROR_MISSING_SYSTEMFILE;
    }
    private static final int ERROR_UNHANDLED_EXCEPTION = (int)574L;
    /**
     * {@snippet lang=c :
     * #define ERROR_UNHANDLED_EXCEPTION 574
     * }
     */
    public static int ERROR_UNHANDLED_EXCEPTION() {
        return ERROR_UNHANDLED_EXCEPTION;
    }
    private static final int ERROR_APP_INIT_FAILURE = (int)575L;
    /**
     * {@snippet lang=c :
     * #define ERROR_APP_INIT_FAILURE 575
     * }
     */
    public static int ERROR_APP_INIT_FAILURE() {
        return ERROR_APP_INIT_FAILURE;
    }
    private static final int ERROR_PAGEFILE_CREATE_FAILED = (int)576L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PAGEFILE_CREATE_FAILED 576
     * }
     */
    public static int ERROR_PAGEFILE_CREATE_FAILED() {
        return ERROR_PAGEFILE_CREATE_FAILED;
    }
    private static final int ERROR_INVALID_IMAGE_HASH = (int)577L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_IMAGE_HASH 577
     * }
     */
    public static int ERROR_INVALID_IMAGE_HASH() {
        return ERROR_INVALID_IMAGE_HASH;
    }
    private static final int ERROR_NO_PAGEFILE = (int)578L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_PAGEFILE 578
     * }
     */
    public static int ERROR_NO_PAGEFILE() {
        return ERROR_NO_PAGEFILE;
    }
    private static final int ERROR_ILLEGAL_FLOAT_CONTEXT = (int)579L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ILLEGAL_FLOAT_CONTEXT 579
     * }
     */
    public static int ERROR_ILLEGAL_FLOAT_CONTEXT() {
        return ERROR_ILLEGAL_FLOAT_CONTEXT;
    }
    private static final int ERROR_NO_EVENT_PAIR = (int)580L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_EVENT_PAIR 580
     * }
     */
    public static int ERROR_NO_EVENT_PAIR() {
        return ERROR_NO_EVENT_PAIR;
    }
    private static final int ERROR_DOMAIN_CTRLR_CONFIG_ERROR = (int)581L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DOMAIN_CTRLR_CONFIG_ERROR 581
     * }
     */
    public static int ERROR_DOMAIN_CTRLR_CONFIG_ERROR() {
        return ERROR_DOMAIN_CTRLR_CONFIG_ERROR;
    }
    private static final int ERROR_ILLEGAL_CHARACTER = (int)582L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ILLEGAL_CHARACTER 582
     * }
     */
    public static int ERROR_ILLEGAL_CHARACTER() {
        return ERROR_ILLEGAL_CHARACTER;
    }
    private static final int ERROR_UNDEFINED_CHARACTER = (int)583L;
    /**
     * {@snippet lang=c :
     * #define ERROR_UNDEFINED_CHARACTER 583
     * }
     */
    public static int ERROR_UNDEFINED_CHARACTER() {
        return ERROR_UNDEFINED_CHARACTER;
    }
    private static final int ERROR_FLOPPY_VOLUME = (int)584L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FLOPPY_VOLUME 584
     * }
     */
    public static int ERROR_FLOPPY_VOLUME() {
        return ERROR_FLOPPY_VOLUME;
    }
    private static final int ERROR_BIOS_FAILED_TO_CONNECT_INTERRUPT = (int)585L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BIOS_FAILED_TO_CONNECT_INTERRUPT 585
     * }
     */
    public static int ERROR_BIOS_FAILED_TO_CONNECT_INTERRUPT() {
        return ERROR_BIOS_FAILED_TO_CONNECT_INTERRUPT;
    }
    private static final int ERROR_BACKUP_CONTROLLER = (int)586L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BACKUP_CONTROLLER 586
     * }
     */
    public static int ERROR_BACKUP_CONTROLLER() {
        return ERROR_BACKUP_CONTROLLER;
    }
    private static final int ERROR_MUTANT_LIMIT_EXCEEDED = (int)587L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MUTANT_LIMIT_EXCEEDED 587
     * }
     */
    public static int ERROR_MUTANT_LIMIT_EXCEEDED() {
        return ERROR_MUTANT_LIMIT_EXCEEDED;
    }
    private static final int ERROR_FS_DRIVER_REQUIRED = (int)588L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FS_DRIVER_REQUIRED 588
     * }
     */
    public static int ERROR_FS_DRIVER_REQUIRED() {
        return ERROR_FS_DRIVER_REQUIRED;
    }
    private static final int ERROR_CANNOT_LOAD_REGISTRY_FILE = (int)589L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CANNOT_LOAD_REGISTRY_FILE 589
     * }
     */
    public static int ERROR_CANNOT_LOAD_REGISTRY_FILE() {
        return ERROR_CANNOT_LOAD_REGISTRY_FILE;
    }
    private static final int ERROR_DEBUG_ATTACH_FAILED = (int)590L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DEBUG_ATTACH_FAILED 590
     * }
     */
    public static int ERROR_DEBUG_ATTACH_FAILED() {
        return ERROR_DEBUG_ATTACH_FAILED;
    }
    private static final int ERROR_SYSTEM_PROCESS_TERMINATED = (int)591L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SYSTEM_PROCESS_TERMINATED 591
     * }
     */
    public static int ERROR_SYSTEM_PROCESS_TERMINATED() {
        return ERROR_SYSTEM_PROCESS_TERMINATED;
    }
    private static final int ERROR_DATA_NOT_ACCEPTED = (int)592L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DATA_NOT_ACCEPTED 592
     * }
     */
    public static int ERROR_DATA_NOT_ACCEPTED() {
        return ERROR_DATA_NOT_ACCEPTED;
    }
    private static final int ERROR_VDM_HARD_ERROR = (int)593L;
    /**
     * {@snippet lang=c :
     * #define ERROR_VDM_HARD_ERROR 593
     * }
     */
    public static int ERROR_VDM_HARD_ERROR() {
        return ERROR_VDM_HARD_ERROR;
    }
    private static final int ERROR_DRIVER_CANCEL_TIMEOUT = (int)594L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DRIVER_CANCEL_TIMEOUT 594
     * }
     */
    public static int ERROR_DRIVER_CANCEL_TIMEOUT() {
        return ERROR_DRIVER_CANCEL_TIMEOUT;
    }
    private static final int ERROR_REPLY_MESSAGE_MISMATCH = (int)595L;
    /**
     * {@snippet lang=c :
     * #define ERROR_REPLY_MESSAGE_MISMATCH 595
     * }
     */
    public static int ERROR_REPLY_MESSAGE_MISMATCH() {
        return ERROR_REPLY_MESSAGE_MISMATCH;
    }
    private static final int ERROR_LOST_WRITEBEHIND_DATA = (int)596L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOST_WRITEBEHIND_DATA 596
     * }
     */
    public static int ERROR_LOST_WRITEBEHIND_DATA() {
        return ERROR_LOST_WRITEBEHIND_DATA;
    }
    private static final int ERROR_CLIENT_SERVER_PARAMETERS_INVALID = (int)597L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLIENT_SERVER_PARAMETERS_INVALID 597
     * }
     */
    public static int ERROR_CLIENT_SERVER_PARAMETERS_INVALID() {
        return ERROR_CLIENT_SERVER_PARAMETERS_INVALID;
    }
    private static final int ERROR_NOT_TINY_STREAM = (int)598L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_TINY_STREAM 598
     * }
     */
    public static int ERROR_NOT_TINY_STREAM() {
        return ERROR_NOT_TINY_STREAM;
    }
    private static final int ERROR_STACK_OVERFLOW_READ = (int)599L;
    /**
     * {@snippet lang=c :
     * #define ERROR_STACK_OVERFLOW_READ 599
     * }
     */
    public static int ERROR_STACK_OVERFLOW_READ() {
        return ERROR_STACK_OVERFLOW_READ;
    }
    private static final int ERROR_CONVERT_TO_LARGE = (int)600L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CONVERT_TO_LARGE 600
     * }
     */
    public static int ERROR_CONVERT_TO_LARGE() {
        return ERROR_CONVERT_TO_LARGE;
    }
    private static final int ERROR_FOUND_OUT_OF_SCOPE = (int)601L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FOUND_OUT_OF_SCOPE 601
     * }
     */
    public static int ERROR_FOUND_OUT_OF_SCOPE() {
        return ERROR_FOUND_OUT_OF_SCOPE;
    }
    private static final int ERROR_ALLOCATE_BUCKET = (int)602L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ALLOCATE_BUCKET 602
     * }
     */
    public static int ERROR_ALLOCATE_BUCKET() {
        return ERROR_ALLOCATE_BUCKET;
    }
    private static final int ERROR_MARSHALL_OVERFLOW = (int)603L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MARSHALL_OVERFLOW 603
     * }
     */
    public static int ERROR_MARSHALL_OVERFLOW() {
        return ERROR_MARSHALL_OVERFLOW;
    }
    private static final int ERROR_INVALID_VARIANT = (int)604L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_VARIANT 604
     * }
     */
    public static int ERROR_INVALID_VARIANT() {
        return ERROR_INVALID_VARIANT;
    }
    private static final int ERROR_BAD_COMPRESSION_BUFFER = (int)605L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BAD_COMPRESSION_BUFFER 605
     * }
     */
    public static int ERROR_BAD_COMPRESSION_BUFFER() {
        return ERROR_BAD_COMPRESSION_BUFFER;
    }
    private static final int ERROR_AUDIT_FAILED = (int)606L;
    /**
     * {@snippet lang=c :
     * #define ERROR_AUDIT_FAILED 606
     * }
     */
    public static int ERROR_AUDIT_FAILED() {
        return ERROR_AUDIT_FAILED;
    }
    private static final int ERROR_TIMER_RESOLUTION_NOT_SET = (int)607L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TIMER_RESOLUTION_NOT_SET 607
     * }
     */
    public static int ERROR_TIMER_RESOLUTION_NOT_SET() {
        return ERROR_TIMER_RESOLUTION_NOT_SET;
    }
    private static final int ERROR_INSUFFICIENT_LOGON_INFO = (int)608L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INSUFFICIENT_LOGON_INFO 608
     * }
     */
    public static int ERROR_INSUFFICIENT_LOGON_INFO() {
        return ERROR_INSUFFICIENT_LOGON_INFO;
    }
    private static final int ERROR_BAD_DLL_ENTRYPOINT = (int)609L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BAD_DLL_ENTRYPOINT 609
     * }
     */
    public static int ERROR_BAD_DLL_ENTRYPOINT() {
        return ERROR_BAD_DLL_ENTRYPOINT;
    }
    private static final int ERROR_BAD_SERVICE_ENTRYPOINT = (int)610L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BAD_SERVICE_ENTRYPOINT 610
     * }
     */
    public static int ERROR_BAD_SERVICE_ENTRYPOINT() {
        return ERROR_BAD_SERVICE_ENTRYPOINT;
    }
    private static final int ERROR_IP_ADDRESS_CONFLICT1 = (int)611L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IP_ADDRESS_CONFLICT1 611
     * }
     */
    public static int ERROR_IP_ADDRESS_CONFLICT1() {
        return ERROR_IP_ADDRESS_CONFLICT1;
    }
    private static final int ERROR_IP_ADDRESS_CONFLICT2 = (int)612L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IP_ADDRESS_CONFLICT2 612
     * }
     */
    public static int ERROR_IP_ADDRESS_CONFLICT2() {
        return ERROR_IP_ADDRESS_CONFLICT2;
    }
    private static final int ERROR_REGISTRY_QUOTA_LIMIT = (int)613L;
    /**
     * {@snippet lang=c :
     * #define ERROR_REGISTRY_QUOTA_LIMIT 613
     * }
     */
    public static int ERROR_REGISTRY_QUOTA_LIMIT() {
        return ERROR_REGISTRY_QUOTA_LIMIT;
    }
    private static final int ERROR_NO_CALLBACK_ACTIVE = (int)614L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_CALLBACK_ACTIVE 614
     * }
     */
    public static int ERROR_NO_CALLBACK_ACTIVE() {
        return ERROR_NO_CALLBACK_ACTIVE;
    }
    private static final int ERROR_PWD_TOO_SHORT = (int)615L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PWD_TOO_SHORT 615
     * }
     */
    public static int ERROR_PWD_TOO_SHORT() {
        return ERROR_PWD_TOO_SHORT;
    }
    private static final int ERROR_PWD_TOO_RECENT = (int)616L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PWD_TOO_RECENT 616
     * }
     */
    public static int ERROR_PWD_TOO_RECENT() {
        return ERROR_PWD_TOO_RECENT;
    }
    private static final int ERROR_PWD_HISTORY_CONFLICT = (int)617L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PWD_HISTORY_CONFLICT 617
     * }
     */
    public static int ERROR_PWD_HISTORY_CONFLICT() {
        return ERROR_PWD_HISTORY_CONFLICT;
    }
    private static final int ERROR_UNSUPPORTED_COMPRESSION = (int)618L;
    /**
     * {@snippet lang=c :
     * #define ERROR_UNSUPPORTED_COMPRESSION 618
     * }
     */
    public static int ERROR_UNSUPPORTED_COMPRESSION() {
        return ERROR_UNSUPPORTED_COMPRESSION;
    }
    private static final int ERROR_INVALID_HW_PROFILE = (int)619L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_HW_PROFILE 619
     * }
     */
    public static int ERROR_INVALID_HW_PROFILE() {
        return ERROR_INVALID_HW_PROFILE;
    }
    private static final int ERROR_INVALID_PLUGPLAY_DEVICE_PATH = (int)620L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_PLUGPLAY_DEVICE_PATH 620
     * }
     */
    public static int ERROR_INVALID_PLUGPLAY_DEVICE_PATH() {
        return ERROR_INVALID_PLUGPLAY_DEVICE_PATH;
    }
    private static final int ERROR_QUOTA_LIST_INCONSISTENT = (int)621L;
    /**
     * {@snippet lang=c :
     * #define ERROR_QUOTA_LIST_INCONSISTENT 621
     * }
     */
    public static int ERROR_QUOTA_LIST_INCONSISTENT() {
        return ERROR_QUOTA_LIST_INCONSISTENT;
    }
    private static final int ERROR_EVALUATION_EXPIRATION = (int)622L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EVALUATION_EXPIRATION 622
     * }
     */
    public static int ERROR_EVALUATION_EXPIRATION() {
        return ERROR_EVALUATION_EXPIRATION;
    }
    private static final int ERROR_ILLEGAL_DLL_RELOCATION = (int)623L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ILLEGAL_DLL_RELOCATION 623
     * }
     */
    public static int ERROR_ILLEGAL_DLL_RELOCATION() {
        return ERROR_ILLEGAL_DLL_RELOCATION;
    }
    private static final int ERROR_DLL_INIT_FAILED_LOGOFF = (int)624L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DLL_INIT_FAILED_LOGOFF 624
     * }
     */
    public static int ERROR_DLL_INIT_FAILED_LOGOFF() {
        return ERROR_DLL_INIT_FAILED_LOGOFF;
    }
    private static final int ERROR_VALIDATE_CONTINUE = (int)625L;
    /**
     * {@snippet lang=c :
     * #define ERROR_VALIDATE_CONTINUE 625
     * }
     */
    public static int ERROR_VALIDATE_CONTINUE() {
        return ERROR_VALIDATE_CONTINUE;
    }
    private static final int ERROR_NO_MORE_MATCHES = (int)626L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_MORE_MATCHES 626
     * }
     */
    public static int ERROR_NO_MORE_MATCHES() {
        return ERROR_NO_MORE_MATCHES;
    }
    private static final int ERROR_RANGE_LIST_CONFLICT = (int)627L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RANGE_LIST_CONFLICT 627
     * }
     */
    public static int ERROR_RANGE_LIST_CONFLICT() {
        return ERROR_RANGE_LIST_CONFLICT;
    }
    private static final int ERROR_SERVER_SID_MISMATCH = (int)628L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SERVER_SID_MISMATCH 628
     * }
     */
    public static int ERROR_SERVER_SID_MISMATCH() {
        return ERROR_SERVER_SID_MISMATCH;
    }
    private static final int ERROR_CANT_ENABLE_DENY_ONLY = (int)629L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CANT_ENABLE_DENY_ONLY 629
     * }
     */
    public static int ERROR_CANT_ENABLE_DENY_ONLY() {
        return ERROR_CANT_ENABLE_DENY_ONLY;
    }
    private static final int ERROR_FLOAT_MULTIPLE_FAULTS = (int)630L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FLOAT_MULTIPLE_FAULTS 630
     * }
     */
    public static int ERROR_FLOAT_MULTIPLE_FAULTS() {
        return ERROR_FLOAT_MULTIPLE_FAULTS;
    }
    private static final int ERROR_FLOAT_MULTIPLE_TRAPS = (int)631L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FLOAT_MULTIPLE_TRAPS 631
     * }
     */
    public static int ERROR_FLOAT_MULTIPLE_TRAPS() {
        return ERROR_FLOAT_MULTIPLE_TRAPS;
    }
    private static final int ERROR_NOINTERFACE = (int)632L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOINTERFACE 632
     * }
     */
    public static int ERROR_NOINTERFACE() {
        return ERROR_NOINTERFACE;
    }
    private static final int ERROR_DRIVER_FAILED_SLEEP = (int)633L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DRIVER_FAILED_SLEEP 633
     * }
     */
    public static int ERROR_DRIVER_FAILED_SLEEP() {
        return ERROR_DRIVER_FAILED_SLEEP;
    }
    private static final int ERROR_CORRUPT_SYSTEM_FILE = (int)634L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CORRUPT_SYSTEM_FILE 634
     * }
     */
    public static int ERROR_CORRUPT_SYSTEM_FILE() {
        return ERROR_CORRUPT_SYSTEM_FILE;
    }
    private static final int ERROR_COMMITMENT_MINIMUM = (int)635L;
    /**
     * {@snippet lang=c :
     * #define ERROR_COMMITMENT_MINIMUM 635
     * }
     */
    public static int ERROR_COMMITMENT_MINIMUM() {
        return ERROR_COMMITMENT_MINIMUM;
    }
    private static final int ERROR_PNP_RESTART_ENUMERATION = (int)636L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PNP_RESTART_ENUMERATION 636
     * }
     */
    public static int ERROR_PNP_RESTART_ENUMERATION() {
        return ERROR_PNP_RESTART_ENUMERATION;
    }
    private static final int ERROR_SYSTEM_IMAGE_BAD_SIGNATURE = (int)637L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SYSTEM_IMAGE_BAD_SIGNATURE 637
     * }
     */
    public static int ERROR_SYSTEM_IMAGE_BAD_SIGNATURE() {
        return ERROR_SYSTEM_IMAGE_BAD_SIGNATURE;
    }
    private static final int ERROR_PNP_REBOOT_REQUIRED = (int)638L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PNP_REBOOT_REQUIRED 638
     * }
     */
    public static int ERROR_PNP_REBOOT_REQUIRED() {
        return ERROR_PNP_REBOOT_REQUIRED;
    }
    private static final int ERROR_INSUFFICIENT_POWER = (int)639L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INSUFFICIENT_POWER 639
     * }
     */
    public static int ERROR_INSUFFICIENT_POWER() {
        return ERROR_INSUFFICIENT_POWER;
    }
    private static final int ERROR_MULTIPLE_FAULT_VIOLATION = (int)640L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MULTIPLE_FAULT_VIOLATION 640
     * }
     */
    public static int ERROR_MULTIPLE_FAULT_VIOLATION() {
        return ERROR_MULTIPLE_FAULT_VIOLATION;
    }
    private static final int ERROR_SYSTEM_SHUTDOWN = (int)641L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SYSTEM_SHUTDOWN 641
     * }
     */
    public static int ERROR_SYSTEM_SHUTDOWN() {
        return ERROR_SYSTEM_SHUTDOWN;
    }
    private static final int ERROR_PORT_NOT_SET = (int)642L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PORT_NOT_SET 642
     * }
     */
    public static int ERROR_PORT_NOT_SET() {
        return ERROR_PORT_NOT_SET;
    }
    private static final int ERROR_DS_VERSION_CHECK_FAILURE = (int)643L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DS_VERSION_CHECK_FAILURE 643
     * }
     */
    public static int ERROR_DS_VERSION_CHECK_FAILURE() {
        return ERROR_DS_VERSION_CHECK_FAILURE;
    }
    private static final int ERROR_RANGE_NOT_FOUND = (int)644L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RANGE_NOT_FOUND 644
     * }
     */
    public static int ERROR_RANGE_NOT_FOUND() {
        return ERROR_RANGE_NOT_FOUND;
    }
    private static final int ERROR_NOT_SAFE_MODE_DRIVER = (int)646L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_SAFE_MODE_DRIVER 646
     * }
     */
    public static int ERROR_NOT_SAFE_MODE_DRIVER() {
        return ERROR_NOT_SAFE_MODE_DRIVER;
    }
    private static final int ERROR_FAILED_DRIVER_ENTRY = (int)647L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FAILED_DRIVER_ENTRY 647
     * }
     */
    public static int ERROR_FAILED_DRIVER_ENTRY() {
        return ERROR_FAILED_DRIVER_ENTRY;
    }
    private static final int ERROR_DEVICE_ENUMERATION_ERROR = (int)648L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DEVICE_ENUMERATION_ERROR 648
     * }
     */
    public static int ERROR_DEVICE_ENUMERATION_ERROR() {
        return ERROR_DEVICE_ENUMERATION_ERROR;
    }
    private static final int ERROR_MOUNT_POINT_NOT_RESOLVED = (int)649L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MOUNT_POINT_NOT_RESOLVED 649
     * }
     */
    public static int ERROR_MOUNT_POINT_NOT_RESOLVED() {
        return ERROR_MOUNT_POINT_NOT_RESOLVED;
    }
    private static final int ERROR_INVALID_DEVICE_OBJECT_PARAMETER = (int)650L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_DEVICE_OBJECT_PARAMETER 650
     * }
     */
    public static int ERROR_INVALID_DEVICE_OBJECT_PARAMETER() {
        return ERROR_INVALID_DEVICE_OBJECT_PARAMETER;
    }
    private static final int ERROR_MCA_OCCURED = (int)651L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MCA_OCCURED 651
     * }
     */
    public static int ERROR_MCA_OCCURED() {
        return ERROR_MCA_OCCURED;
    }
    private static final int ERROR_DRIVER_DATABASE_ERROR = (int)652L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DRIVER_DATABASE_ERROR 652
     * }
     */
    public static int ERROR_DRIVER_DATABASE_ERROR() {
        return ERROR_DRIVER_DATABASE_ERROR;
    }
    private static final int ERROR_SYSTEM_HIVE_TOO_LARGE = (int)653L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SYSTEM_HIVE_TOO_LARGE 653
     * }
     */
    public static int ERROR_SYSTEM_HIVE_TOO_LARGE() {
        return ERROR_SYSTEM_HIVE_TOO_LARGE;
    }
    private static final int ERROR_DRIVER_FAILED_PRIOR_UNLOAD = (int)654L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DRIVER_FAILED_PRIOR_UNLOAD 654
     * }
     */
    public static int ERROR_DRIVER_FAILED_PRIOR_UNLOAD() {
        return ERROR_DRIVER_FAILED_PRIOR_UNLOAD;
    }
    private static final int ERROR_VOLSNAP_PREPARE_HIBERNATE = (int)655L;
    /**
     * {@snippet lang=c :
     * #define ERROR_VOLSNAP_PREPARE_HIBERNATE 655
     * }
     */
    public static int ERROR_VOLSNAP_PREPARE_HIBERNATE() {
        return ERROR_VOLSNAP_PREPARE_HIBERNATE;
    }
    private static final int ERROR_HIBERNATION_FAILURE = (int)656L;
    /**
     * {@snippet lang=c :
     * #define ERROR_HIBERNATION_FAILURE 656
     * }
     */
    public static int ERROR_HIBERNATION_FAILURE() {
        return ERROR_HIBERNATION_FAILURE;
    }
    private static final int ERROR_PWD_TOO_LONG = (int)657L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PWD_TOO_LONG 657
     * }
     */
    public static int ERROR_PWD_TOO_LONG() {
        return ERROR_PWD_TOO_LONG;
    }
    private static final int ERROR_FILE_SYSTEM_LIMITATION = (int)665L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FILE_SYSTEM_LIMITATION 665
     * }
     */
    public static int ERROR_FILE_SYSTEM_LIMITATION() {
        return ERROR_FILE_SYSTEM_LIMITATION;
    }
    private static final int ERROR_ASSERTION_FAILURE = (int)668L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ASSERTION_FAILURE 668
     * }
     */
    public static int ERROR_ASSERTION_FAILURE() {
        return ERROR_ASSERTION_FAILURE;
    }
    private static final int ERROR_ACPI_ERROR = (int)669L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ACPI_ERROR 669
     * }
     */
    public static int ERROR_ACPI_ERROR() {
        return ERROR_ACPI_ERROR;
    }
    private static final int ERROR_WOW_ASSERTION = (int)670L;
    /**
     * {@snippet lang=c :
     * #define ERROR_WOW_ASSERTION 670
     * }
     */
    public static int ERROR_WOW_ASSERTION() {
        return ERROR_WOW_ASSERTION;
    }
    private static final int ERROR_PNP_BAD_MPS_TABLE = (int)671L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PNP_BAD_MPS_TABLE 671
     * }
     */
    public static int ERROR_PNP_BAD_MPS_TABLE() {
        return ERROR_PNP_BAD_MPS_TABLE;
    }
    private static final int ERROR_PNP_TRANSLATION_FAILED = (int)672L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PNP_TRANSLATION_FAILED 672
     * }
     */
    public static int ERROR_PNP_TRANSLATION_FAILED() {
        return ERROR_PNP_TRANSLATION_FAILED;
    }
    private static final int ERROR_PNP_IRQ_TRANSLATION_FAILED = (int)673L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PNP_IRQ_TRANSLATION_FAILED 673
     * }
     */
    public static int ERROR_PNP_IRQ_TRANSLATION_FAILED() {
        return ERROR_PNP_IRQ_TRANSLATION_FAILED;
    }
    private static final int ERROR_PNP_INVALID_ID = (int)674L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PNP_INVALID_ID 674
     * }
     */
    public static int ERROR_PNP_INVALID_ID() {
        return ERROR_PNP_INVALID_ID;
    }
    private static final int ERROR_WAKE_SYSTEM_DEBUGGER = (int)675L;
    /**
     * {@snippet lang=c :
     * #define ERROR_WAKE_SYSTEM_DEBUGGER 675
     * }
     */
    public static int ERROR_WAKE_SYSTEM_DEBUGGER() {
        return ERROR_WAKE_SYSTEM_DEBUGGER;
    }
    private static final int ERROR_HANDLES_CLOSED = (int)676L;
    /**
     * {@snippet lang=c :
     * #define ERROR_HANDLES_CLOSED 676
     * }
     */
    public static int ERROR_HANDLES_CLOSED() {
        return ERROR_HANDLES_CLOSED;
    }
    private static final int ERROR_EXTRANEOUS_INFORMATION = (int)677L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EXTRANEOUS_INFORMATION 677
     * }
     */
    public static int ERROR_EXTRANEOUS_INFORMATION() {
        return ERROR_EXTRANEOUS_INFORMATION;
    }
    private static final int ERROR_RXACT_COMMIT_NECESSARY = (int)678L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RXACT_COMMIT_NECESSARY 678
     * }
     */
    public static int ERROR_RXACT_COMMIT_NECESSARY() {
        return ERROR_RXACT_COMMIT_NECESSARY;
    }
    private static final int ERROR_MEDIA_CHECK = (int)679L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MEDIA_CHECK 679
     * }
     */
    public static int ERROR_MEDIA_CHECK() {
        return ERROR_MEDIA_CHECK;
    }
    private static final int ERROR_GUID_SUBSTITUTION_MADE = (int)680L;
    /**
     * {@snippet lang=c :
     * #define ERROR_GUID_SUBSTITUTION_MADE 680
     * }
     */
    public static int ERROR_GUID_SUBSTITUTION_MADE() {
        return ERROR_GUID_SUBSTITUTION_MADE;
    }
    private static final int ERROR_STOPPED_ON_SYMLINK = (int)681L;
    /**
     * {@snippet lang=c :
     * #define ERROR_STOPPED_ON_SYMLINK 681
     * }
     */
    public static int ERROR_STOPPED_ON_SYMLINK() {
        return ERROR_STOPPED_ON_SYMLINK;
    }
    private static final int ERROR_LONGJUMP = (int)682L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LONGJUMP 682
     * }
     */
    public static int ERROR_LONGJUMP() {
        return ERROR_LONGJUMP;
    }
    private static final int ERROR_PLUGPLAY_QUERY_VETOED = (int)683L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PLUGPLAY_QUERY_VETOED 683
     * }
     */
    public static int ERROR_PLUGPLAY_QUERY_VETOED() {
        return ERROR_PLUGPLAY_QUERY_VETOED;
    }
    private static final int ERROR_UNWIND_CONSOLIDATE = (int)684L;
    /**
     * {@snippet lang=c :
     * #define ERROR_UNWIND_CONSOLIDATE 684
     * }
     */
    public static int ERROR_UNWIND_CONSOLIDATE() {
        return ERROR_UNWIND_CONSOLIDATE;
    }
    private static final int ERROR_REGISTRY_HIVE_RECOVERED = (int)685L;
    /**
     * {@snippet lang=c :
     * #define ERROR_REGISTRY_HIVE_RECOVERED 685
     * }
     */
    public static int ERROR_REGISTRY_HIVE_RECOVERED() {
        return ERROR_REGISTRY_HIVE_RECOVERED;
    }
    private static final int ERROR_DLL_MIGHT_BE_INSECURE = (int)686L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DLL_MIGHT_BE_INSECURE 686
     * }
     */
    public static int ERROR_DLL_MIGHT_BE_INSECURE() {
        return ERROR_DLL_MIGHT_BE_INSECURE;
    }
    private static final int ERROR_DLL_MIGHT_BE_INCOMPATIBLE = (int)687L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DLL_MIGHT_BE_INCOMPATIBLE 687
     * }
     */
    public static int ERROR_DLL_MIGHT_BE_INCOMPATIBLE() {
        return ERROR_DLL_MIGHT_BE_INCOMPATIBLE;
    }
    private static final int ERROR_DBG_EXCEPTION_NOT_HANDLED = (int)688L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DBG_EXCEPTION_NOT_HANDLED 688
     * }
     */
    public static int ERROR_DBG_EXCEPTION_NOT_HANDLED() {
        return ERROR_DBG_EXCEPTION_NOT_HANDLED;
    }
    private static final int ERROR_DBG_REPLY_LATER = (int)689L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DBG_REPLY_LATER 689
     * }
     */
    public static int ERROR_DBG_REPLY_LATER() {
        return ERROR_DBG_REPLY_LATER;
    }
    private static final int ERROR_DBG_UNABLE_TO_PROVIDE_HANDLE = (int)690L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DBG_UNABLE_TO_PROVIDE_HANDLE 690
     * }
     */
    public static int ERROR_DBG_UNABLE_TO_PROVIDE_HANDLE() {
        return ERROR_DBG_UNABLE_TO_PROVIDE_HANDLE;
    }
    private static final int ERROR_DBG_TERMINATE_THREAD = (int)691L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DBG_TERMINATE_THREAD 691
     * }
     */
    public static int ERROR_DBG_TERMINATE_THREAD() {
        return ERROR_DBG_TERMINATE_THREAD;
    }
    private static final int ERROR_DBG_TERMINATE_PROCESS = (int)692L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DBG_TERMINATE_PROCESS 692
     * }
     */
    public static int ERROR_DBG_TERMINATE_PROCESS() {
        return ERROR_DBG_TERMINATE_PROCESS;
    }
    private static final int ERROR_DBG_CONTROL_C = (int)693L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DBG_CONTROL_C 693
     * }
     */
    public static int ERROR_DBG_CONTROL_C() {
        return ERROR_DBG_CONTROL_C;
    }
    private static final int ERROR_DBG_PRINTEXCEPTION_C = (int)694L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DBG_PRINTEXCEPTION_C 694
     * }
     */
    public static int ERROR_DBG_PRINTEXCEPTION_C() {
        return ERROR_DBG_PRINTEXCEPTION_C;
    }
    private static final int ERROR_DBG_RIPEXCEPTION = (int)695L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DBG_RIPEXCEPTION 695
     * }
     */
    public static int ERROR_DBG_RIPEXCEPTION() {
        return ERROR_DBG_RIPEXCEPTION;
    }
    private static final int ERROR_DBG_CONTROL_BREAK = (int)696L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DBG_CONTROL_BREAK 696
     * }
     */
    public static int ERROR_DBG_CONTROL_BREAK() {
        return ERROR_DBG_CONTROL_BREAK;
    }
    private static final int ERROR_DBG_COMMAND_EXCEPTION = (int)697L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DBG_COMMAND_EXCEPTION 697
     * }
     */
    public static int ERROR_DBG_COMMAND_EXCEPTION() {
        return ERROR_DBG_COMMAND_EXCEPTION;
    }
    private static final int ERROR_OBJECT_NAME_EXISTS = (int)698L;
    /**
     * {@snippet lang=c :
     * #define ERROR_OBJECT_NAME_EXISTS 698
     * }
     */
    public static int ERROR_OBJECT_NAME_EXISTS() {
        return ERROR_OBJECT_NAME_EXISTS;
    }
    private static final int ERROR_THREAD_WAS_SUSPENDED = (int)699L;
    /**
     * {@snippet lang=c :
     * #define ERROR_THREAD_WAS_SUSPENDED 699
     * }
     */
    public static int ERROR_THREAD_WAS_SUSPENDED() {
        return ERROR_THREAD_WAS_SUSPENDED;
    }
    private static final int ERROR_IMAGE_NOT_AT_BASE = (int)700L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IMAGE_NOT_AT_BASE 700
     * }
     */
    public static int ERROR_IMAGE_NOT_AT_BASE() {
        return ERROR_IMAGE_NOT_AT_BASE;
    }
    private static final int ERROR_RXACT_STATE_CREATED = (int)701L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RXACT_STATE_CREATED 701
     * }
     */
    public static int ERROR_RXACT_STATE_CREATED() {
        return ERROR_RXACT_STATE_CREATED;
    }
    private static final int ERROR_SEGMENT_NOTIFICATION = (int)702L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SEGMENT_NOTIFICATION 702
     * }
     */
    public static int ERROR_SEGMENT_NOTIFICATION() {
        return ERROR_SEGMENT_NOTIFICATION;
    }
    private static final int ERROR_BAD_CURRENT_DIRECTORY = (int)703L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BAD_CURRENT_DIRECTORY 703
     * }
     */
    public static int ERROR_BAD_CURRENT_DIRECTORY() {
        return ERROR_BAD_CURRENT_DIRECTORY;
    }
    private static final int ERROR_FT_READ_RECOVERY_FROM_BACKUP = (int)704L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FT_READ_RECOVERY_FROM_BACKUP 704
     * }
     */
    public static int ERROR_FT_READ_RECOVERY_FROM_BACKUP() {
        return ERROR_FT_READ_RECOVERY_FROM_BACKUP;
    }
    private static final int ERROR_FT_WRITE_RECOVERY = (int)705L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FT_WRITE_RECOVERY 705
     * }
     */
    public static int ERROR_FT_WRITE_RECOVERY() {
        return ERROR_FT_WRITE_RECOVERY;
    }
    private static final int ERROR_IMAGE_MACHINE_TYPE_MISMATCH = (int)706L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IMAGE_MACHINE_TYPE_MISMATCH 706
     * }
     */
    public static int ERROR_IMAGE_MACHINE_TYPE_MISMATCH() {
        return ERROR_IMAGE_MACHINE_TYPE_MISMATCH;
    }
    private static final int ERROR_RECEIVE_PARTIAL = (int)707L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RECEIVE_PARTIAL 707
     * }
     */
    public static int ERROR_RECEIVE_PARTIAL() {
        return ERROR_RECEIVE_PARTIAL;
    }
    private static final int ERROR_RECEIVE_EXPEDITED = (int)708L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RECEIVE_EXPEDITED 708
     * }
     */
    public static int ERROR_RECEIVE_EXPEDITED() {
        return ERROR_RECEIVE_EXPEDITED;
    }
    private static final int ERROR_RECEIVE_PARTIAL_EXPEDITED = (int)709L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RECEIVE_PARTIAL_EXPEDITED 709
     * }
     */
    public static int ERROR_RECEIVE_PARTIAL_EXPEDITED() {
        return ERROR_RECEIVE_PARTIAL_EXPEDITED;
    }
    private static final int ERROR_EVENT_DONE = (int)710L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EVENT_DONE 710
     * }
     */
    public static int ERROR_EVENT_DONE() {
        return ERROR_EVENT_DONE;
    }
    private static final int ERROR_EVENT_PENDING = (int)711L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EVENT_PENDING 711
     * }
     */
    public static int ERROR_EVENT_PENDING() {
        return ERROR_EVENT_PENDING;
    }
    private static final int ERROR_CHECKING_FILE_SYSTEM = (int)712L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CHECKING_FILE_SYSTEM 712
     * }
     */
    public static int ERROR_CHECKING_FILE_SYSTEM() {
        return ERROR_CHECKING_FILE_SYSTEM;
    }
    private static final int ERROR_FATAL_APP_EXIT = (int)713L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FATAL_APP_EXIT 713
     * }
     */
    public static int ERROR_FATAL_APP_EXIT() {
        return ERROR_FATAL_APP_EXIT;
    }
    private static final int ERROR_PREDEFINED_HANDLE = (int)714L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PREDEFINED_HANDLE 714
     * }
     */
    public static int ERROR_PREDEFINED_HANDLE() {
        return ERROR_PREDEFINED_HANDLE;
    }
    private static final int ERROR_WAS_UNLOCKED = (int)715L;
    /**
     * {@snippet lang=c :
     * #define ERROR_WAS_UNLOCKED 715
     * }
     */
    public static int ERROR_WAS_UNLOCKED() {
        return ERROR_WAS_UNLOCKED;
    }
    private static final int ERROR_SERVICE_NOTIFICATION = (int)716L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SERVICE_NOTIFICATION 716
     * }
     */
    public static int ERROR_SERVICE_NOTIFICATION() {
        return ERROR_SERVICE_NOTIFICATION;
    }
    private static final int ERROR_WAS_LOCKED = (int)717L;
    /**
     * {@snippet lang=c :
     * #define ERROR_WAS_LOCKED 717
     * }
     */
    public static int ERROR_WAS_LOCKED() {
        return ERROR_WAS_LOCKED;
    }
    private static final int ERROR_LOG_HARD_ERROR = (int)718L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_HARD_ERROR 718
     * }
     */
    public static int ERROR_LOG_HARD_ERROR() {
        return ERROR_LOG_HARD_ERROR;
    }
    private static final int ERROR_ALREADY_WIN32 = (int)719L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ALREADY_WIN32 719
     * }
     */
    public static int ERROR_ALREADY_WIN32() {
        return ERROR_ALREADY_WIN32;
    }
    private static final int ERROR_IMAGE_MACHINE_TYPE_MISMATCH_EXE = (int)720L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IMAGE_MACHINE_TYPE_MISMATCH_EXE 720
     * }
     */
    public static int ERROR_IMAGE_MACHINE_TYPE_MISMATCH_EXE() {
        return ERROR_IMAGE_MACHINE_TYPE_MISMATCH_EXE;
    }
    private static final int ERROR_NO_YIELD_PERFORMED = (int)721L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_YIELD_PERFORMED 721
     * }
     */
    public static int ERROR_NO_YIELD_PERFORMED() {
        return ERROR_NO_YIELD_PERFORMED;
    }
    private static final int ERROR_TIMER_RESUME_IGNORED = (int)722L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TIMER_RESUME_IGNORED 722
     * }
     */
    public static int ERROR_TIMER_RESUME_IGNORED() {
        return ERROR_TIMER_RESUME_IGNORED;
    }
    private static final int ERROR_ARBITRATION_UNHANDLED = (int)723L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ARBITRATION_UNHANDLED 723
     * }
     */
    public static int ERROR_ARBITRATION_UNHANDLED() {
        return ERROR_ARBITRATION_UNHANDLED;
    }
    private static final int ERROR_CARDBUS_NOT_SUPPORTED = (int)724L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CARDBUS_NOT_SUPPORTED 724
     * }
     */
    public static int ERROR_CARDBUS_NOT_SUPPORTED() {
        return ERROR_CARDBUS_NOT_SUPPORTED;
    }
    private static final int ERROR_MP_PROCESSOR_MISMATCH = (int)725L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MP_PROCESSOR_MISMATCH 725
     * }
     */
    public static int ERROR_MP_PROCESSOR_MISMATCH() {
        return ERROR_MP_PROCESSOR_MISMATCH;
    }
    private static final int ERROR_HIBERNATED = (int)726L;
    /**
     * {@snippet lang=c :
     * #define ERROR_HIBERNATED 726
     * }
     */
    public static int ERROR_HIBERNATED() {
        return ERROR_HIBERNATED;
    }
    private static final int ERROR_RESUME_HIBERNATION = (int)727L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RESUME_HIBERNATION 727
     * }
     */
    public static int ERROR_RESUME_HIBERNATION() {
        return ERROR_RESUME_HIBERNATION;
    }
    private static final int ERROR_FIRMWARE_UPDATED = (int)728L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FIRMWARE_UPDATED 728
     * }
     */
    public static int ERROR_FIRMWARE_UPDATED() {
        return ERROR_FIRMWARE_UPDATED;
    }
    private static final int ERROR_DRIVERS_LEAKING_LOCKED_PAGES = (int)729L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DRIVERS_LEAKING_LOCKED_PAGES 729
     * }
     */
    public static int ERROR_DRIVERS_LEAKING_LOCKED_PAGES() {
        return ERROR_DRIVERS_LEAKING_LOCKED_PAGES;
    }
    private static final int ERROR_WAKE_SYSTEM = (int)730L;
    /**
     * {@snippet lang=c :
     * #define ERROR_WAKE_SYSTEM 730
     * }
     */
    public static int ERROR_WAKE_SYSTEM() {
        return ERROR_WAKE_SYSTEM;
    }
    private static final int ERROR_WAIT_1 = (int)731L;
    /**
     * {@snippet lang=c :
     * #define ERROR_WAIT_1 731
     * }
     */
    public static int ERROR_WAIT_1() {
        return ERROR_WAIT_1;
    }
    private static final int ERROR_WAIT_2 = (int)732L;
    /**
     * {@snippet lang=c :
     * #define ERROR_WAIT_2 732
     * }
     */
    public static int ERROR_WAIT_2() {
        return ERROR_WAIT_2;
    }
    private static final int ERROR_WAIT_3 = (int)733L;
    /**
     * {@snippet lang=c :
     * #define ERROR_WAIT_3 733
     * }
     */
    public static int ERROR_WAIT_3() {
        return ERROR_WAIT_3;
    }
    private static final int ERROR_WAIT_63 = (int)734L;
    /**
     * {@snippet lang=c :
     * #define ERROR_WAIT_63 734
     * }
     */
    public static int ERROR_WAIT_63() {
        return ERROR_WAIT_63;
    }
    private static final int ERROR_ABANDONED_WAIT_0 = (int)735L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ABANDONED_WAIT_0 735
     * }
     */
    public static int ERROR_ABANDONED_WAIT_0() {
        return ERROR_ABANDONED_WAIT_0;
    }
    private static final int ERROR_ABANDONED_WAIT_63 = (int)736L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ABANDONED_WAIT_63 736
     * }
     */
    public static int ERROR_ABANDONED_WAIT_63() {
        return ERROR_ABANDONED_WAIT_63;
    }
    private static final int ERROR_USER_APC = (int)737L;
    /**
     * {@snippet lang=c :
     * #define ERROR_USER_APC 737
     * }
     */
    public static int ERROR_USER_APC() {
        return ERROR_USER_APC;
    }
    private static final int ERROR_KERNEL_APC = (int)738L;
    /**
     * {@snippet lang=c :
     * #define ERROR_KERNEL_APC 738
     * }
     */
    public static int ERROR_KERNEL_APC() {
        return ERROR_KERNEL_APC;
    }
    private static final int ERROR_ALERTED = (int)739L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ALERTED 739
     * }
     */
    public static int ERROR_ALERTED() {
        return ERROR_ALERTED;
    }
    private static final int ERROR_ELEVATION_REQUIRED = (int)740L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ELEVATION_REQUIRED 740
     * }
     */
    public static int ERROR_ELEVATION_REQUIRED() {
        return ERROR_ELEVATION_REQUIRED;
    }
    private static final int ERROR_REPARSE = (int)741L;
    /**
     * {@snippet lang=c :
     * #define ERROR_REPARSE 741
     * }
     */
    public static int ERROR_REPARSE() {
        return ERROR_REPARSE;
    }
    private static final int ERROR_OPLOCK_BREAK_IN_PROGRESS = (int)742L;
    /**
     * {@snippet lang=c :
     * #define ERROR_OPLOCK_BREAK_IN_PROGRESS 742
     * }
     */
    public static int ERROR_OPLOCK_BREAK_IN_PROGRESS() {
        return ERROR_OPLOCK_BREAK_IN_PROGRESS;
    }
    private static final int ERROR_VOLUME_MOUNTED = (int)743L;
    /**
     * {@snippet lang=c :
     * #define ERROR_VOLUME_MOUNTED 743
     * }
     */
    public static int ERROR_VOLUME_MOUNTED() {
        return ERROR_VOLUME_MOUNTED;
    }
    private static final int ERROR_RXACT_COMMITTED = (int)744L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RXACT_COMMITTED 744
     * }
     */
    public static int ERROR_RXACT_COMMITTED() {
        return ERROR_RXACT_COMMITTED;
    }
    private static final int ERROR_NOTIFY_CLEANUP = (int)745L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOTIFY_CLEANUP 745
     * }
     */
    public static int ERROR_NOTIFY_CLEANUP() {
        return ERROR_NOTIFY_CLEANUP;
    }
    private static final int ERROR_PRIMARY_TRANSPORT_CONNECT_FAILED = (int)746L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PRIMARY_TRANSPORT_CONNECT_FAILED 746
     * }
     */
    public static int ERROR_PRIMARY_TRANSPORT_CONNECT_FAILED() {
        return ERROR_PRIMARY_TRANSPORT_CONNECT_FAILED;
    }
    private static final int ERROR_PAGE_FAULT_TRANSITION = (int)747L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PAGE_FAULT_TRANSITION 747
     * }
     */
    public static int ERROR_PAGE_FAULT_TRANSITION() {
        return ERROR_PAGE_FAULT_TRANSITION;
    }
    private static final int ERROR_PAGE_FAULT_DEMAND_ZERO = (int)748L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PAGE_FAULT_DEMAND_ZERO 748
     * }
     */
    public static int ERROR_PAGE_FAULT_DEMAND_ZERO() {
        return ERROR_PAGE_FAULT_DEMAND_ZERO;
    }
    private static final int ERROR_PAGE_FAULT_COPY_ON_WRITE = (int)749L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PAGE_FAULT_COPY_ON_WRITE 749
     * }
     */
    public static int ERROR_PAGE_FAULT_COPY_ON_WRITE() {
        return ERROR_PAGE_FAULT_COPY_ON_WRITE;
    }
    private static final int ERROR_PAGE_FAULT_GUARD_PAGE = (int)750L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PAGE_FAULT_GUARD_PAGE 750
     * }
     */
    public static int ERROR_PAGE_FAULT_GUARD_PAGE() {
        return ERROR_PAGE_FAULT_GUARD_PAGE;
    }
    private static final int ERROR_PAGE_FAULT_PAGING_FILE = (int)751L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PAGE_FAULT_PAGING_FILE 751
     * }
     */
    public static int ERROR_PAGE_FAULT_PAGING_FILE() {
        return ERROR_PAGE_FAULT_PAGING_FILE;
    }
    private static final int ERROR_CACHE_PAGE_LOCKED = (int)752L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CACHE_PAGE_LOCKED 752
     * }
     */
    public static int ERROR_CACHE_PAGE_LOCKED() {
        return ERROR_CACHE_PAGE_LOCKED;
    }
    private static final int ERROR_CRASH_DUMP = (int)753L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CRASH_DUMP 753
     * }
     */
    public static int ERROR_CRASH_DUMP() {
        return ERROR_CRASH_DUMP;
    }
    private static final int ERROR_BUFFER_ALL_ZEROS = (int)754L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BUFFER_ALL_ZEROS 754
     * }
     */
    public static int ERROR_BUFFER_ALL_ZEROS() {
        return ERROR_BUFFER_ALL_ZEROS;
    }
    private static final int ERROR_REPARSE_OBJECT = (int)755L;
    /**
     * {@snippet lang=c :
     * #define ERROR_REPARSE_OBJECT 755
     * }
     */
    public static int ERROR_REPARSE_OBJECT() {
        return ERROR_REPARSE_OBJECT;
    }
    private static final int ERROR_RESOURCE_REQUIREMENTS_CHANGED = (int)756L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RESOURCE_REQUIREMENTS_CHANGED 756
     * }
     */
    public static int ERROR_RESOURCE_REQUIREMENTS_CHANGED() {
        return ERROR_RESOURCE_REQUIREMENTS_CHANGED;
    }
    private static final int ERROR_TRANSLATION_COMPLETE = (int)757L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TRANSLATION_COMPLETE 757
     * }
     */
    public static int ERROR_TRANSLATION_COMPLETE() {
        return ERROR_TRANSLATION_COMPLETE;
    }
    private static final int ERROR_NOTHING_TO_TERMINATE = (int)758L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOTHING_TO_TERMINATE 758
     * }
     */
    public static int ERROR_NOTHING_TO_TERMINATE() {
        return ERROR_NOTHING_TO_TERMINATE;
    }
    private static final int ERROR_PROCESS_NOT_IN_JOB = (int)759L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PROCESS_NOT_IN_JOB 759
     * }
     */
    public static int ERROR_PROCESS_NOT_IN_JOB() {
        return ERROR_PROCESS_NOT_IN_JOB;
    }
    private static final int ERROR_PROCESS_IN_JOB = (int)760L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PROCESS_IN_JOB 760
     * }
     */
    public static int ERROR_PROCESS_IN_JOB() {
        return ERROR_PROCESS_IN_JOB;
    }
    private static final int ERROR_VOLSNAP_HIBERNATE_READY = (int)761L;
    /**
     * {@snippet lang=c :
     * #define ERROR_VOLSNAP_HIBERNATE_READY 761
     * }
     */
    public static int ERROR_VOLSNAP_HIBERNATE_READY() {
        return ERROR_VOLSNAP_HIBERNATE_READY;
    }
    private static final int ERROR_FSFILTER_OP_COMPLETED_SUCCESSFULLY = (int)762L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FSFILTER_OP_COMPLETED_SUCCESSFULLY 762
     * }
     */
    public static int ERROR_FSFILTER_OP_COMPLETED_SUCCESSFULLY() {
        return ERROR_FSFILTER_OP_COMPLETED_SUCCESSFULLY;
    }
    private static final int ERROR_INTERRUPT_VECTOR_ALREADY_CONNECTED = (int)763L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INTERRUPT_VECTOR_ALREADY_CONNECTED 763
     * }
     */
    public static int ERROR_INTERRUPT_VECTOR_ALREADY_CONNECTED() {
        return ERROR_INTERRUPT_VECTOR_ALREADY_CONNECTED;
    }
    private static final int ERROR_INTERRUPT_STILL_CONNECTED = (int)764L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INTERRUPT_STILL_CONNECTED 764
     * }
     */
    public static int ERROR_INTERRUPT_STILL_CONNECTED() {
        return ERROR_INTERRUPT_STILL_CONNECTED;
    }
    private static final int ERROR_WAIT_FOR_OPLOCK = (int)765L;
    /**
     * {@snippet lang=c :
     * #define ERROR_WAIT_FOR_OPLOCK 765
     * }
     */
    public static int ERROR_WAIT_FOR_OPLOCK() {
        return ERROR_WAIT_FOR_OPLOCK;
    }
    private static final int ERROR_DBG_EXCEPTION_HANDLED = (int)766L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DBG_EXCEPTION_HANDLED 766
     * }
     */
    public static int ERROR_DBG_EXCEPTION_HANDLED() {
        return ERROR_DBG_EXCEPTION_HANDLED;
    }
    private static final int ERROR_DBG_CONTINUE = (int)767L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DBG_CONTINUE 767
     * }
     */
    public static int ERROR_DBG_CONTINUE() {
        return ERROR_DBG_CONTINUE;
    }
    private static final int ERROR_CALLBACK_POP_STACK = (int)768L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CALLBACK_POP_STACK 768
     * }
     */
    public static int ERROR_CALLBACK_POP_STACK() {
        return ERROR_CALLBACK_POP_STACK;
    }
    private static final int ERROR_COMPRESSION_DISABLED = (int)769L;
    /**
     * {@snippet lang=c :
     * #define ERROR_COMPRESSION_DISABLED 769
     * }
     */
    public static int ERROR_COMPRESSION_DISABLED() {
        return ERROR_COMPRESSION_DISABLED;
    }
    private static final int ERROR_CANTFETCHBACKWARDS = (int)770L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CANTFETCHBACKWARDS 770
     * }
     */
    public static int ERROR_CANTFETCHBACKWARDS() {
        return ERROR_CANTFETCHBACKWARDS;
    }
    private static final int ERROR_CANTSCROLLBACKWARDS = (int)771L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CANTSCROLLBACKWARDS 771
     * }
     */
    public static int ERROR_CANTSCROLLBACKWARDS() {
        return ERROR_CANTSCROLLBACKWARDS;
    }
    private static final int ERROR_ROWSNOTRELEASED = (int)772L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ROWSNOTRELEASED 772
     * }
     */
    public static int ERROR_ROWSNOTRELEASED() {
        return ERROR_ROWSNOTRELEASED;
    }
    private static final int ERROR_BAD_ACCESSOR_FLAGS = (int)773L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BAD_ACCESSOR_FLAGS 773
     * }
     */
    public static int ERROR_BAD_ACCESSOR_FLAGS() {
        return ERROR_BAD_ACCESSOR_FLAGS;
    }
    private static final int ERROR_ERRORS_ENCOUNTERED = (int)774L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ERRORS_ENCOUNTERED 774
     * }
     */
    public static int ERROR_ERRORS_ENCOUNTERED() {
        return ERROR_ERRORS_ENCOUNTERED;
    }
    private static final int ERROR_NOT_CAPABLE = (int)775L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_CAPABLE 775
     * }
     */
    public static int ERROR_NOT_CAPABLE() {
        return ERROR_NOT_CAPABLE;
    }
    private static final int ERROR_REQUEST_OUT_OF_SEQUENCE = (int)776L;
    /**
     * {@snippet lang=c :
     * #define ERROR_REQUEST_OUT_OF_SEQUENCE 776
     * }
     */
    public static int ERROR_REQUEST_OUT_OF_SEQUENCE() {
        return ERROR_REQUEST_OUT_OF_SEQUENCE;
    }
    private static final int ERROR_VERSION_PARSE_ERROR = (int)777L;
    /**
     * {@snippet lang=c :
     * #define ERROR_VERSION_PARSE_ERROR 777
     * }
     */
    public static int ERROR_VERSION_PARSE_ERROR() {
        return ERROR_VERSION_PARSE_ERROR;
    }
    private static final int ERROR_BADSTARTPOSITION = (int)778L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BADSTARTPOSITION 778
     * }
     */
    public static int ERROR_BADSTARTPOSITION() {
        return ERROR_BADSTARTPOSITION;
    }
    private static final int ERROR_MEMORY_HARDWARE = (int)779L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MEMORY_HARDWARE 779
     * }
     */
    public static int ERROR_MEMORY_HARDWARE() {
        return ERROR_MEMORY_HARDWARE;
    }
    private static final int ERROR_DISK_REPAIR_DISABLED = (int)780L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DISK_REPAIR_DISABLED 780
     * }
     */
    public static int ERROR_DISK_REPAIR_DISABLED() {
        return ERROR_DISK_REPAIR_DISABLED;
    }
    private static final int ERROR_INSUFFICIENT_RESOURCE_FOR_SPECIFIED_SHARED_SECTION_SIZE = (int)781L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INSUFFICIENT_RESOURCE_FOR_SPECIFIED_SHARED_SECTION_SIZE 781
     * }
     */
    public static int ERROR_INSUFFICIENT_RESOURCE_FOR_SPECIFIED_SHARED_SECTION_SIZE() {
        return ERROR_INSUFFICIENT_RESOURCE_FOR_SPECIFIED_SHARED_SECTION_SIZE;
    }
    private static final int ERROR_SYSTEM_POWERSTATE_TRANSITION = (int)782L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SYSTEM_POWERSTATE_TRANSITION 782
     * }
     */
    public static int ERROR_SYSTEM_POWERSTATE_TRANSITION() {
        return ERROR_SYSTEM_POWERSTATE_TRANSITION;
    }
    private static final int ERROR_SYSTEM_POWERSTATE_COMPLEX_TRANSITION = (int)783L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SYSTEM_POWERSTATE_COMPLEX_TRANSITION 783
     * }
     */
    public static int ERROR_SYSTEM_POWERSTATE_COMPLEX_TRANSITION() {
        return ERROR_SYSTEM_POWERSTATE_COMPLEX_TRANSITION;
    }
    private static final int ERROR_MCA_EXCEPTION = (int)784L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MCA_EXCEPTION 784
     * }
     */
    public static int ERROR_MCA_EXCEPTION() {
        return ERROR_MCA_EXCEPTION;
    }
    private static final int ERROR_ACCESS_AUDIT_BY_POLICY = (int)785L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ACCESS_AUDIT_BY_POLICY 785
     * }
     */
    public static int ERROR_ACCESS_AUDIT_BY_POLICY() {
        return ERROR_ACCESS_AUDIT_BY_POLICY;
    }
    private static final int ERROR_ACCESS_DISABLED_NO_SAFER_UI_BY_POLICY = (int)786L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ACCESS_DISABLED_NO_SAFER_UI_BY_POLICY 786
     * }
     */
    public static int ERROR_ACCESS_DISABLED_NO_SAFER_UI_BY_POLICY() {
        return ERROR_ACCESS_DISABLED_NO_SAFER_UI_BY_POLICY;
    }
    private static final int ERROR_ABANDON_HIBERFILE = (int)787L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ABANDON_HIBERFILE 787
     * }
     */
    public static int ERROR_ABANDON_HIBERFILE() {
        return ERROR_ABANDON_HIBERFILE;
    }
    private static final int ERROR_LOST_WRITEBEHIND_DATA_NETWORK_DISCONNECTED = (int)788L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOST_WRITEBEHIND_DATA_NETWORK_DISCONNECTED 788
     * }
     */
    public static int ERROR_LOST_WRITEBEHIND_DATA_NETWORK_DISCONNECTED() {
        return ERROR_LOST_WRITEBEHIND_DATA_NETWORK_DISCONNECTED;
    }
    private static final int ERROR_LOST_WRITEBEHIND_DATA_NETWORK_SERVER_ERROR = (int)789L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOST_WRITEBEHIND_DATA_NETWORK_SERVER_ERROR 789
     * }
     */
    public static int ERROR_LOST_WRITEBEHIND_DATA_NETWORK_SERVER_ERROR() {
        return ERROR_LOST_WRITEBEHIND_DATA_NETWORK_SERVER_ERROR;
    }
    private static final int ERROR_LOST_WRITEBEHIND_DATA_LOCAL_DISK_ERROR = (int)790L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOST_WRITEBEHIND_DATA_LOCAL_DISK_ERROR 790
     * }
     */
    public static int ERROR_LOST_WRITEBEHIND_DATA_LOCAL_DISK_ERROR() {
        return ERROR_LOST_WRITEBEHIND_DATA_LOCAL_DISK_ERROR;
    }
    private static final int ERROR_BAD_MCFG_TABLE = (int)791L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BAD_MCFG_TABLE 791
     * }
     */
    public static int ERROR_BAD_MCFG_TABLE() {
        return ERROR_BAD_MCFG_TABLE;
    }
    private static final int ERROR_DISK_REPAIR_REDIRECTED = (int)792L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DISK_REPAIR_REDIRECTED 792
     * }
     */
    public static int ERROR_DISK_REPAIR_REDIRECTED() {
        return ERROR_DISK_REPAIR_REDIRECTED;
    }
    private static final int ERROR_DISK_REPAIR_UNSUCCESSFUL = (int)793L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DISK_REPAIR_UNSUCCESSFUL 793
     * }
     */
    public static int ERROR_DISK_REPAIR_UNSUCCESSFUL() {
        return ERROR_DISK_REPAIR_UNSUCCESSFUL;
    }
    private static final int ERROR_CORRUPT_LOG_OVERFULL = (int)794L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CORRUPT_LOG_OVERFULL 794
     * }
     */
    public static int ERROR_CORRUPT_LOG_OVERFULL() {
        return ERROR_CORRUPT_LOG_OVERFULL;
    }
    private static final int ERROR_CORRUPT_LOG_CORRUPTED = (int)795L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CORRUPT_LOG_CORRUPTED 795
     * }
     */
    public static int ERROR_CORRUPT_LOG_CORRUPTED() {
        return ERROR_CORRUPT_LOG_CORRUPTED;
    }
    private static final int ERROR_CORRUPT_LOG_UNAVAILABLE = (int)796L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CORRUPT_LOG_UNAVAILABLE 796
     * }
     */
    public static int ERROR_CORRUPT_LOG_UNAVAILABLE() {
        return ERROR_CORRUPT_LOG_UNAVAILABLE;
    }
    private static final int ERROR_CORRUPT_LOG_DELETED_FULL = (int)797L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CORRUPT_LOG_DELETED_FULL 797
     * }
     */
    public static int ERROR_CORRUPT_LOG_DELETED_FULL() {
        return ERROR_CORRUPT_LOG_DELETED_FULL;
    }
    private static final int ERROR_CORRUPT_LOG_CLEARED = (int)798L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CORRUPT_LOG_CLEARED 798
     * }
     */
    public static int ERROR_CORRUPT_LOG_CLEARED() {
        return ERROR_CORRUPT_LOG_CLEARED;
    }
    private static final int ERROR_ORPHAN_NAME_EXHAUSTED = (int)799L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ORPHAN_NAME_EXHAUSTED 799
     * }
     */
    public static int ERROR_ORPHAN_NAME_EXHAUSTED() {
        return ERROR_ORPHAN_NAME_EXHAUSTED;
    }
    private static final int ERROR_OPLOCK_SWITCHED_TO_NEW_HANDLE = (int)800L;
    /**
     * {@snippet lang=c :
     * #define ERROR_OPLOCK_SWITCHED_TO_NEW_HANDLE 800
     * }
     */
    public static int ERROR_OPLOCK_SWITCHED_TO_NEW_HANDLE() {
        return ERROR_OPLOCK_SWITCHED_TO_NEW_HANDLE;
    }
    private static final int ERROR_CANNOT_GRANT_REQUESTED_OPLOCK = (int)801L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CANNOT_GRANT_REQUESTED_OPLOCK 801
     * }
     */
    public static int ERROR_CANNOT_GRANT_REQUESTED_OPLOCK() {
        return ERROR_CANNOT_GRANT_REQUESTED_OPLOCK;
    }
    private static final int ERROR_CANNOT_BREAK_OPLOCK = (int)802L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CANNOT_BREAK_OPLOCK 802
     * }
     */
    public static int ERROR_CANNOT_BREAK_OPLOCK() {
        return ERROR_CANNOT_BREAK_OPLOCK;
    }
    private static final int ERROR_OPLOCK_HANDLE_CLOSED = (int)803L;
    /**
     * {@snippet lang=c :
     * #define ERROR_OPLOCK_HANDLE_CLOSED 803
     * }
     */
    public static int ERROR_OPLOCK_HANDLE_CLOSED() {
        return ERROR_OPLOCK_HANDLE_CLOSED;
    }
    private static final int ERROR_NO_ACE_CONDITION = (int)804L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_ACE_CONDITION 804
     * }
     */
    public static int ERROR_NO_ACE_CONDITION() {
        return ERROR_NO_ACE_CONDITION;
    }
    private static final int ERROR_INVALID_ACE_CONDITION = (int)805L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_ACE_CONDITION 805
     * }
     */
    public static int ERROR_INVALID_ACE_CONDITION() {
        return ERROR_INVALID_ACE_CONDITION;
    }
    private static final int ERROR_FILE_HANDLE_REVOKED = (int)806L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FILE_HANDLE_REVOKED 806
     * }
     */
    public static int ERROR_FILE_HANDLE_REVOKED() {
        return ERROR_FILE_HANDLE_REVOKED;
    }
    private static final int ERROR_IMAGE_AT_DIFFERENT_BASE = (int)807L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IMAGE_AT_DIFFERENT_BASE 807
     * }
     */
    public static int ERROR_IMAGE_AT_DIFFERENT_BASE() {
        return ERROR_IMAGE_AT_DIFFERENT_BASE;
    }
    private static final int ERROR_ENCRYPTED_IO_NOT_POSSIBLE = (int)808L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ENCRYPTED_IO_NOT_POSSIBLE 808
     * }
     */
    public static int ERROR_ENCRYPTED_IO_NOT_POSSIBLE() {
        return ERROR_ENCRYPTED_IO_NOT_POSSIBLE;
    }
    private static final int ERROR_FILE_METADATA_OPTIMIZATION_IN_PROGRESS = (int)809L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FILE_METADATA_OPTIMIZATION_IN_PROGRESS 809
     * }
     */
    public static int ERROR_FILE_METADATA_OPTIMIZATION_IN_PROGRESS() {
        return ERROR_FILE_METADATA_OPTIMIZATION_IN_PROGRESS;
    }
    private static final int ERROR_QUOTA_ACTIVITY = (int)810L;
    /**
     * {@snippet lang=c :
     * #define ERROR_QUOTA_ACTIVITY 810
     * }
     */
    public static int ERROR_QUOTA_ACTIVITY() {
        return ERROR_QUOTA_ACTIVITY;
    }
    private static final int ERROR_HANDLE_REVOKED = (int)811L;
    /**
     * {@snippet lang=c :
     * #define ERROR_HANDLE_REVOKED 811
     * }
     */
    public static int ERROR_HANDLE_REVOKED() {
        return ERROR_HANDLE_REVOKED;
    }
    private static final int ERROR_CALLBACK_INVOKE_INLINE = (int)812L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CALLBACK_INVOKE_INLINE 812
     * }
     */
    public static int ERROR_CALLBACK_INVOKE_INLINE() {
        return ERROR_CALLBACK_INVOKE_INLINE;
    }
    private static final int ERROR_CPU_SET_INVALID = (int)813L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CPU_SET_INVALID 813
     * }
     */
    public static int ERROR_CPU_SET_INVALID() {
        return ERROR_CPU_SET_INVALID;
    }
    private static final int ERROR_ENCLAVE_NOT_TERMINATED = (int)814L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ENCLAVE_NOT_TERMINATED 814
     * }
     */
    public static int ERROR_ENCLAVE_NOT_TERMINATED() {
        return ERROR_ENCLAVE_NOT_TERMINATED;
    }
    private static final int ERROR_ENCLAVE_VIOLATION = (int)815L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ENCLAVE_VIOLATION 815
     * }
     */
    public static int ERROR_ENCLAVE_VIOLATION() {
        return ERROR_ENCLAVE_VIOLATION;
    }
    private static final int ERROR_SERVER_TRANSPORT_CONFLICT = (int)816L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SERVER_TRANSPORT_CONFLICT 816
     * }
     */
    public static int ERROR_SERVER_TRANSPORT_CONFLICT() {
        return ERROR_SERVER_TRANSPORT_CONFLICT;
    }
    private static final int ERROR_CERTIFICATE_VALIDATION_PREFERENCE_CONFLICT = (int)817L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CERTIFICATE_VALIDATION_PREFERENCE_CONFLICT 817
     * }
     */
    public static int ERROR_CERTIFICATE_VALIDATION_PREFERENCE_CONFLICT() {
        return ERROR_CERTIFICATE_VALIDATION_PREFERENCE_CONFLICT;
    }
    private static final int ERROR_FT_READ_FROM_COPY_FAILURE = (int)818L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FT_READ_FROM_COPY_FAILURE 818
     * }
     */
    public static int ERROR_FT_READ_FROM_COPY_FAILURE() {
        return ERROR_FT_READ_FROM_COPY_FAILURE;
    }
    private static final int ERROR_SECTION_DIRECT_MAP_ONLY = (int)819L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SECTION_DIRECT_MAP_ONLY 819
     * }
     */
    public static int ERROR_SECTION_DIRECT_MAP_ONLY() {
        return ERROR_SECTION_DIRECT_MAP_ONLY;
    }
    private static final int ERROR_EA_ACCESS_DENIED = (int)994L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EA_ACCESS_DENIED 994
     * }
     */
    public static int ERROR_EA_ACCESS_DENIED() {
        return ERROR_EA_ACCESS_DENIED;
    }
    private static final int ERROR_OPERATION_ABORTED = (int)995L;
    /**
     * {@snippet lang=c :
     * #define ERROR_OPERATION_ABORTED 995
     * }
     */
    public static int ERROR_OPERATION_ABORTED() {
        return ERROR_OPERATION_ABORTED;
    }
    private static final int ERROR_IO_INCOMPLETE = (int)996L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IO_INCOMPLETE 996
     * }
     */
    public static int ERROR_IO_INCOMPLETE() {
        return ERROR_IO_INCOMPLETE;
    }
    private static final int ERROR_IO_PENDING = (int)997L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IO_PENDING 997
     * }
     */
    public static int ERROR_IO_PENDING() {
        return ERROR_IO_PENDING;
    }
    private static final int ERROR_NOACCESS = (int)998L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOACCESS 998
     * }
     */
    public static int ERROR_NOACCESS() {
        return ERROR_NOACCESS;
    }
    private static final int ERROR_SWAPERROR = (int)999L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SWAPERROR 999
     * }
     */
    public static int ERROR_SWAPERROR() {
        return ERROR_SWAPERROR;
    }
    private static final int ERROR_STACK_OVERFLOW = (int)1001L;
    /**
     * {@snippet lang=c :
     * #define ERROR_STACK_OVERFLOW 1001
     * }
     */
    public static int ERROR_STACK_OVERFLOW() {
        return ERROR_STACK_OVERFLOW;
    }
    private static final int ERROR_INVALID_MESSAGE = (int)1002L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_MESSAGE 1002
     * }
     */
    public static int ERROR_INVALID_MESSAGE() {
        return ERROR_INVALID_MESSAGE;
    }
    private static final int ERROR_CAN_NOT_COMPLETE = (int)1003L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CAN_NOT_COMPLETE 1003
     * }
     */
    public static int ERROR_CAN_NOT_COMPLETE() {
        return ERROR_CAN_NOT_COMPLETE;
    }
    private static final int ERROR_INVALID_FLAGS = (int)1004L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_FLAGS 1004
     * }
     */
    public static int ERROR_INVALID_FLAGS() {
        return ERROR_INVALID_FLAGS;
    }
    private static final int ERROR_UNRECOGNIZED_VOLUME = (int)1005L;
    /**
     * {@snippet lang=c :
     * #define ERROR_UNRECOGNIZED_VOLUME 1005
     * }
     */
    public static int ERROR_UNRECOGNIZED_VOLUME() {
        return ERROR_UNRECOGNIZED_VOLUME;
    }
    private static final int ERROR_FILE_INVALID = (int)1006L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FILE_INVALID 1006
     * }
     */
    public static int ERROR_FILE_INVALID() {
        return ERROR_FILE_INVALID;
    }
    private static final int ERROR_FULLSCREEN_MODE = (int)1007L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FULLSCREEN_MODE 1007
     * }
     */
    public static int ERROR_FULLSCREEN_MODE() {
        return ERROR_FULLSCREEN_MODE;
    }
    private static final int ERROR_NO_TOKEN = (int)1008L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_TOKEN 1008
     * }
     */
    public static int ERROR_NO_TOKEN() {
        return ERROR_NO_TOKEN;
    }
    private static final int ERROR_BADDB = (int)1009L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BADDB 1009
     * }
     */
    public static int ERROR_BADDB() {
        return ERROR_BADDB;
    }
    private static final int ERROR_BADKEY = (int)1010L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BADKEY 1010
     * }
     */
    public static int ERROR_BADKEY() {
        return ERROR_BADKEY;
    }
    private static final int ERROR_CANTOPEN = (int)1011L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CANTOPEN 1011
     * }
     */
    public static int ERROR_CANTOPEN() {
        return ERROR_CANTOPEN;
    }
    private static final int ERROR_CANTREAD = (int)1012L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CANTREAD 1012
     * }
     */
    public static int ERROR_CANTREAD() {
        return ERROR_CANTREAD;
    }
    private static final int ERROR_CANTWRITE = (int)1013L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CANTWRITE 1013
     * }
     */
    public static int ERROR_CANTWRITE() {
        return ERROR_CANTWRITE;
    }
    private static final int ERROR_REGISTRY_RECOVERED = (int)1014L;
    /**
     * {@snippet lang=c :
     * #define ERROR_REGISTRY_RECOVERED 1014
     * }
     */
    public static int ERROR_REGISTRY_RECOVERED() {
        return ERROR_REGISTRY_RECOVERED;
    }
    private static final int ERROR_REGISTRY_CORRUPT = (int)1015L;
    /**
     * {@snippet lang=c :
     * #define ERROR_REGISTRY_CORRUPT 1015
     * }
     */
    public static int ERROR_REGISTRY_CORRUPT() {
        return ERROR_REGISTRY_CORRUPT;
    }
    private static final int ERROR_REGISTRY_IO_FAILED = (int)1016L;
    /**
     * {@snippet lang=c :
     * #define ERROR_REGISTRY_IO_FAILED 1016
     * }
     */
    public static int ERROR_REGISTRY_IO_FAILED() {
        return ERROR_REGISTRY_IO_FAILED;
    }
    private static final int ERROR_NOT_REGISTRY_FILE = (int)1017L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_REGISTRY_FILE 1017
     * }
     */
    public static int ERROR_NOT_REGISTRY_FILE() {
        return ERROR_NOT_REGISTRY_FILE;
    }
    private static final int ERROR_KEY_DELETED = (int)1018L;
    /**
     * {@snippet lang=c :
     * #define ERROR_KEY_DELETED 1018
     * }
     */
    public static int ERROR_KEY_DELETED() {
        return ERROR_KEY_DELETED;
    }
    private static final int ERROR_NO_LOG_SPACE = (int)1019L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_LOG_SPACE 1019
     * }
     */
    public static int ERROR_NO_LOG_SPACE() {
        return ERROR_NO_LOG_SPACE;
    }
    private static final int ERROR_KEY_HAS_CHILDREN = (int)1020L;
    /**
     * {@snippet lang=c :
     * #define ERROR_KEY_HAS_CHILDREN 1020
     * }
     */
    public static int ERROR_KEY_HAS_CHILDREN() {
        return ERROR_KEY_HAS_CHILDREN;
    }
    private static final int ERROR_CHILD_MUST_BE_VOLATILE = (int)1021L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CHILD_MUST_BE_VOLATILE 1021
     * }
     */
    public static int ERROR_CHILD_MUST_BE_VOLATILE() {
        return ERROR_CHILD_MUST_BE_VOLATILE;
    }
    private static final int ERROR_NOTIFY_ENUM_DIR = (int)1022L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOTIFY_ENUM_DIR 1022
     * }
     */
    public static int ERROR_NOTIFY_ENUM_DIR() {
        return ERROR_NOTIFY_ENUM_DIR;
    }
    private static final int ERROR_DEPENDENT_SERVICES_RUNNING = (int)1051L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DEPENDENT_SERVICES_RUNNING 1051
     * }
     */
    public static int ERROR_DEPENDENT_SERVICES_RUNNING() {
        return ERROR_DEPENDENT_SERVICES_RUNNING;
    }
    private static final int ERROR_INVALID_SERVICE_CONTROL = (int)1052L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_SERVICE_CONTROL 1052
     * }
     */
    public static int ERROR_INVALID_SERVICE_CONTROL() {
        return ERROR_INVALID_SERVICE_CONTROL;
    }
    private static final int ERROR_SERVICE_REQUEST_TIMEOUT = (int)1053L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SERVICE_REQUEST_TIMEOUT 1053
     * }
     */
    public static int ERROR_SERVICE_REQUEST_TIMEOUT() {
        return ERROR_SERVICE_REQUEST_TIMEOUT;
    }
    private static final int ERROR_SERVICE_NO_THREAD = (int)1054L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SERVICE_NO_THREAD 1054
     * }
     */
    public static int ERROR_SERVICE_NO_THREAD() {
        return ERROR_SERVICE_NO_THREAD;
    }
    private static final int ERROR_SERVICE_DATABASE_LOCKED = (int)1055L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SERVICE_DATABASE_LOCKED 1055
     * }
     */
    public static int ERROR_SERVICE_DATABASE_LOCKED() {
        return ERROR_SERVICE_DATABASE_LOCKED;
    }
    private static final int ERROR_SERVICE_ALREADY_RUNNING = (int)1056L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SERVICE_ALREADY_RUNNING 1056
     * }
     */
    public static int ERROR_SERVICE_ALREADY_RUNNING() {
        return ERROR_SERVICE_ALREADY_RUNNING;
    }
    private static final int ERROR_INVALID_SERVICE_ACCOUNT = (int)1057L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_SERVICE_ACCOUNT 1057
     * }
     */
    public static int ERROR_INVALID_SERVICE_ACCOUNT() {
        return ERROR_INVALID_SERVICE_ACCOUNT;
    }
    private static final int ERROR_SERVICE_DISABLED = (int)1058L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SERVICE_DISABLED 1058
     * }
     */
    public static int ERROR_SERVICE_DISABLED() {
        return ERROR_SERVICE_DISABLED;
    }
    private static final int ERROR_CIRCULAR_DEPENDENCY = (int)1059L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CIRCULAR_DEPENDENCY 1059
     * }
     */
    public static int ERROR_CIRCULAR_DEPENDENCY() {
        return ERROR_CIRCULAR_DEPENDENCY;
    }
    private static final int ERROR_SERVICE_DOES_NOT_EXIST = (int)1060L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SERVICE_DOES_NOT_EXIST 1060
     * }
     */
    public static int ERROR_SERVICE_DOES_NOT_EXIST() {
        return ERROR_SERVICE_DOES_NOT_EXIST;
    }
    private static final int ERROR_SERVICE_CANNOT_ACCEPT_CTRL = (int)1061L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SERVICE_CANNOT_ACCEPT_CTRL 1061
     * }
     */
    public static int ERROR_SERVICE_CANNOT_ACCEPT_CTRL() {
        return ERROR_SERVICE_CANNOT_ACCEPT_CTRL;
    }
    private static final int ERROR_SERVICE_NOT_ACTIVE = (int)1062L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SERVICE_NOT_ACTIVE 1062
     * }
     */
    public static int ERROR_SERVICE_NOT_ACTIVE() {
        return ERROR_SERVICE_NOT_ACTIVE;
    }
    private static final int ERROR_FAILED_SERVICE_CONTROLLER_CONNECT = (int)1063L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FAILED_SERVICE_CONTROLLER_CONNECT 1063
     * }
     */
    public static int ERROR_FAILED_SERVICE_CONTROLLER_CONNECT() {
        return ERROR_FAILED_SERVICE_CONTROLLER_CONNECT;
    }
    private static final int ERROR_EXCEPTION_IN_SERVICE = (int)1064L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EXCEPTION_IN_SERVICE 1064
     * }
     */
    public static int ERROR_EXCEPTION_IN_SERVICE() {
        return ERROR_EXCEPTION_IN_SERVICE;
    }
    private static final int ERROR_DATABASE_DOES_NOT_EXIST = (int)1065L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DATABASE_DOES_NOT_EXIST 1065
     * }
     */
    public static int ERROR_DATABASE_DOES_NOT_EXIST() {
        return ERROR_DATABASE_DOES_NOT_EXIST;
    }
    private static final int ERROR_SERVICE_SPECIFIC_ERROR = (int)1066L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SERVICE_SPECIFIC_ERROR 1066
     * }
     */
    public static int ERROR_SERVICE_SPECIFIC_ERROR() {
        return ERROR_SERVICE_SPECIFIC_ERROR;
    }
    private static final int ERROR_PROCESS_ABORTED = (int)1067L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PROCESS_ABORTED 1067
     * }
     */
    public static int ERROR_PROCESS_ABORTED() {
        return ERROR_PROCESS_ABORTED;
    }
    private static final int ERROR_SERVICE_DEPENDENCY_FAIL = (int)1068L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SERVICE_DEPENDENCY_FAIL 1068
     * }
     */
    public static int ERROR_SERVICE_DEPENDENCY_FAIL() {
        return ERROR_SERVICE_DEPENDENCY_FAIL;
    }
    private static final int ERROR_SERVICE_LOGON_FAILED = (int)1069L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SERVICE_LOGON_FAILED 1069
     * }
     */
    public static int ERROR_SERVICE_LOGON_FAILED() {
        return ERROR_SERVICE_LOGON_FAILED;
    }
    private static final int ERROR_SERVICE_START_HANG = (int)1070L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SERVICE_START_HANG 1070
     * }
     */
    public static int ERROR_SERVICE_START_HANG() {
        return ERROR_SERVICE_START_HANG;
    }
    private static final int ERROR_INVALID_SERVICE_LOCK = (int)1071L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_SERVICE_LOCK 1071
     * }
     */
    public static int ERROR_INVALID_SERVICE_LOCK() {
        return ERROR_INVALID_SERVICE_LOCK;
    }
    private static final int ERROR_SERVICE_MARKED_FOR_DELETE = (int)1072L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SERVICE_MARKED_FOR_DELETE 1072
     * }
     */
    public static int ERROR_SERVICE_MARKED_FOR_DELETE() {
        return ERROR_SERVICE_MARKED_FOR_DELETE;
    }
    private static final int ERROR_SERVICE_EXISTS = (int)1073L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SERVICE_EXISTS 1073
     * }
     */
    public static int ERROR_SERVICE_EXISTS() {
        return ERROR_SERVICE_EXISTS;
    }
    private static final int ERROR_ALREADY_RUNNING_LKG = (int)1074L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ALREADY_RUNNING_LKG 1074
     * }
     */
    public static int ERROR_ALREADY_RUNNING_LKG() {
        return ERROR_ALREADY_RUNNING_LKG;
    }
    private static final int ERROR_SERVICE_DEPENDENCY_DELETED = (int)1075L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SERVICE_DEPENDENCY_DELETED 1075
     * }
     */
    public static int ERROR_SERVICE_DEPENDENCY_DELETED() {
        return ERROR_SERVICE_DEPENDENCY_DELETED;
    }
    private static final int ERROR_BOOT_ALREADY_ACCEPTED = (int)1076L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BOOT_ALREADY_ACCEPTED 1076
     * }
     */
    public static int ERROR_BOOT_ALREADY_ACCEPTED() {
        return ERROR_BOOT_ALREADY_ACCEPTED;
    }
    private static final int ERROR_SERVICE_NEVER_STARTED = (int)1077L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SERVICE_NEVER_STARTED 1077
     * }
     */
    public static int ERROR_SERVICE_NEVER_STARTED() {
        return ERROR_SERVICE_NEVER_STARTED;
    }
    private static final int ERROR_DUPLICATE_SERVICE_NAME = (int)1078L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DUPLICATE_SERVICE_NAME 1078
     * }
     */
    public static int ERROR_DUPLICATE_SERVICE_NAME() {
        return ERROR_DUPLICATE_SERVICE_NAME;
    }
    private static final int ERROR_DIFFERENT_SERVICE_ACCOUNT = (int)1079L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DIFFERENT_SERVICE_ACCOUNT 1079
     * }
     */
    public static int ERROR_DIFFERENT_SERVICE_ACCOUNT() {
        return ERROR_DIFFERENT_SERVICE_ACCOUNT;
    }
    private static final int ERROR_CANNOT_DETECT_DRIVER_FAILURE = (int)1080L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CANNOT_DETECT_DRIVER_FAILURE 1080
     * }
     */
    public static int ERROR_CANNOT_DETECT_DRIVER_FAILURE() {
        return ERROR_CANNOT_DETECT_DRIVER_FAILURE;
    }
    private static final int ERROR_CANNOT_DETECT_PROCESS_ABORT = (int)1081L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CANNOT_DETECT_PROCESS_ABORT 1081
     * }
     */
    public static int ERROR_CANNOT_DETECT_PROCESS_ABORT() {
        return ERROR_CANNOT_DETECT_PROCESS_ABORT;
    }
    private static final int ERROR_NO_RECOVERY_PROGRAM = (int)1082L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_RECOVERY_PROGRAM 1082
     * }
     */
    public static int ERROR_NO_RECOVERY_PROGRAM() {
        return ERROR_NO_RECOVERY_PROGRAM;
    }
    private static final int ERROR_SERVICE_NOT_IN_EXE = (int)1083L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SERVICE_NOT_IN_EXE 1083
     * }
     */
    public static int ERROR_SERVICE_NOT_IN_EXE() {
        return ERROR_SERVICE_NOT_IN_EXE;
    }
    private static final int ERROR_NOT_SAFEBOOT_SERVICE = (int)1084L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_SAFEBOOT_SERVICE 1084
     * }
     */
    public static int ERROR_NOT_SAFEBOOT_SERVICE() {
        return ERROR_NOT_SAFEBOOT_SERVICE;
    }
    private static final int ERROR_END_OF_MEDIA = (int)1100L;
    /**
     * {@snippet lang=c :
     * #define ERROR_END_OF_MEDIA 1100
     * }
     */
    public static int ERROR_END_OF_MEDIA() {
        return ERROR_END_OF_MEDIA;
    }
    private static final int ERROR_FILEMARK_DETECTED = (int)1101L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FILEMARK_DETECTED 1101
     * }
     */
    public static int ERROR_FILEMARK_DETECTED() {
        return ERROR_FILEMARK_DETECTED;
    }
    private static final int ERROR_BEGINNING_OF_MEDIA = (int)1102L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BEGINNING_OF_MEDIA 1102
     * }
     */
    public static int ERROR_BEGINNING_OF_MEDIA() {
        return ERROR_BEGINNING_OF_MEDIA;
    }
    private static final int ERROR_SETMARK_DETECTED = (int)1103L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SETMARK_DETECTED 1103
     * }
     */
    public static int ERROR_SETMARK_DETECTED() {
        return ERROR_SETMARK_DETECTED;
    }
    private static final int ERROR_NO_DATA_DETECTED = (int)1104L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_DATA_DETECTED 1104
     * }
     */
    public static int ERROR_NO_DATA_DETECTED() {
        return ERROR_NO_DATA_DETECTED;
    }
    private static final int ERROR_PARTITION_FAILURE = (int)1105L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PARTITION_FAILURE 1105
     * }
     */
    public static int ERROR_PARTITION_FAILURE() {
        return ERROR_PARTITION_FAILURE;
    }
    private static final int ERROR_INVALID_BLOCK_LENGTH = (int)1106L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_BLOCK_LENGTH 1106
     * }
     */
    public static int ERROR_INVALID_BLOCK_LENGTH() {
        return ERROR_INVALID_BLOCK_LENGTH;
    }
    private static final int ERROR_DEVICE_NOT_PARTITIONED = (int)1107L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DEVICE_NOT_PARTITIONED 1107
     * }
     */
    public static int ERROR_DEVICE_NOT_PARTITIONED() {
        return ERROR_DEVICE_NOT_PARTITIONED;
    }
    private static final int ERROR_UNABLE_TO_LOCK_MEDIA = (int)1108L;
    /**
     * {@snippet lang=c :
     * #define ERROR_UNABLE_TO_LOCK_MEDIA 1108
     * }
     */
    public static int ERROR_UNABLE_TO_LOCK_MEDIA() {
        return ERROR_UNABLE_TO_LOCK_MEDIA;
    }
    private static final int ERROR_UNABLE_TO_UNLOAD_MEDIA = (int)1109L;
    /**
     * {@snippet lang=c :
     * #define ERROR_UNABLE_TO_UNLOAD_MEDIA 1109
     * }
     */
    public static int ERROR_UNABLE_TO_UNLOAD_MEDIA() {
        return ERROR_UNABLE_TO_UNLOAD_MEDIA;
    }
    private static final int ERROR_MEDIA_CHANGED = (int)1110L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MEDIA_CHANGED 1110
     * }
     */
    public static int ERROR_MEDIA_CHANGED() {
        return ERROR_MEDIA_CHANGED;
    }
    private static final int ERROR_BUS_RESET = (int)1111L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BUS_RESET 1111
     * }
     */
    public static int ERROR_BUS_RESET() {
        return ERROR_BUS_RESET;
    }
    private static final int ERROR_NO_MEDIA_IN_DRIVE = (int)1112L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_MEDIA_IN_DRIVE 1112
     * }
     */
    public static int ERROR_NO_MEDIA_IN_DRIVE() {
        return ERROR_NO_MEDIA_IN_DRIVE;
    }
    private static final int ERROR_NO_UNICODE_TRANSLATION = (int)1113L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_UNICODE_TRANSLATION 1113
     * }
     */
    public static int ERROR_NO_UNICODE_TRANSLATION() {
        return ERROR_NO_UNICODE_TRANSLATION;
    }
    private static final int ERROR_DLL_INIT_FAILED = (int)1114L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DLL_INIT_FAILED 1114
     * }
     */
    public static int ERROR_DLL_INIT_FAILED() {
        return ERROR_DLL_INIT_FAILED;
    }
    private static final int ERROR_SHUTDOWN_IN_PROGRESS = (int)1115L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SHUTDOWN_IN_PROGRESS 1115
     * }
     */
    public static int ERROR_SHUTDOWN_IN_PROGRESS() {
        return ERROR_SHUTDOWN_IN_PROGRESS;
    }
    private static final int ERROR_NO_SHUTDOWN_IN_PROGRESS = (int)1116L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_SHUTDOWN_IN_PROGRESS 1116
     * }
     */
    public static int ERROR_NO_SHUTDOWN_IN_PROGRESS() {
        return ERROR_NO_SHUTDOWN_IN_PROGRESS;
    }
    private static final int ERROR_IO_DEVICE = (int)1117L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IO_DEVICE 1117
     * }
     */
    public static int ERROR_IO_DEVICE() {
        return ERROR_IO_DEVICE;
    }
    private static final int ERROR_SERIAL_NO_DEVICE = (int)1118L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SERIAL_NO_DEVICE 1118
     * }
     */
    public static int ERROR_SERIAL_NO_DEVICE() {
        return ERROR_SERIAL_NO_DEVICE;
    }
    private static final int ERROR_IRQ_BUSY = (int)1119L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IRQ_BUSY 1119
     * }
     */
    public static int ERROR_IRQ_BUSY() {
        return ERROR_IRQ_BUSY;
    }
    private static final int ERROR_MORE_WRITES = (int)1120L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MORE_WRITES 1120
     * }
     */
    public static int ERROR_MORE_WRITES() {
        return ERROR_MORE_WRITES;
    }
    private static final int ERROR_COUNTER_TIMEOUT = (int)1121L;
    /**
     * {@snippet lang=c :
     * #define ERROR_COUNTER_TIMEOUT 1121
     * }
     */
    public static int ERROR_COUNTER_TIMEOUT() {
        return ERROR_COUNTER_TIMEOUT;
    }
    private static final int ERROR_FLOPPY_ID_MARK_NOT_FOUND = (int)1122L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FLOPPY_ID_MARK_NOT_FOUND 1122
     * }
     */
    public static int ERROR_FLOPPY_ID_MARK_NOT_FOUND() {
        return ERROR_FLOPPY_ID_MARK_NOT_FOUND;
    }
    private static final int ERROR_FLOPPY_WRONG_CYLINDER = (int)1123L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FLOPPY_WRONG_CYLINDER 1123
     * }
     */
    public static int ERROR_FLOPPY_WRONG_CYLINDER() {
        return ERROR_FLOPPY_WRONG_CYLINDER;
    }
    private static final int ERROR_FLOPPY_UNKNOWN_ERROR = (int)1124L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FLOPPY_UNKNOWN_ERROR 1124
     * }
     */
    public static int ERROR_FLOPPY_UNKNOWN_ERROR() {
        return ERROR_FLOPPY_UNKNOWN_ERROR;
    }
    private static final int ERROR_FLOPPY_BAD_REGISTERS = (int)1125L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FLOPPY_BAD_REGISTERS 1125
     * }
     */
    public static int ERROR_FLOPPY_BAD_REGISTERS() {
        return ERROR_FLOPPY_BAD_REGISTERS;
    }
    private static final int ERROR_DISK_RECALIBRATE_FAILED = (int)1126L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DISK_RECALIBRATE_FAILED 1126
     * }
     */
    public static int ERROR_DISK_RECALIBRATE_FAILED() {
        return ERROR_DISK_RECALIBRATE_FAILED;
    }
    private static final int ERROR_DISK_OPERATION_FAILED = (int)1127L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DISK_OPERATION_FAILED 1127
     * }
     */
    public static int ERROR_DISK_OPERATION_FAILED() {
        return ERROR_DISK_OPERATION_FAILED;
    }
    private static final int ERROR_DISK_RESET_FAILED = (int)1128L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DISK_RESET_FAILED 1128
     * }
     */
    public static int ERROR_DISK_RESET_FAILED() {
        return ERROR_DISK_RESET_FAILED;
    }
    private static final int ERROR_EOM_OVERFLOW = (int)1129L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EOM_OVERFLOW 1129
     * }
     */
    public static int ERROR_EOM_OVERFLOW() {
        return ERROR_EOM_OVERFLOW;
    }
    private static final int ERROR_NOT_ENOUGH_SERVER_MEMORY = (int)1130L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_ENOUGH_SERVER_MEMORY 1130
     * }
     */
    public static int ERROR_NOT_ENOUGH_SERVER_MEMORY() {
        return ERROR_NOT_ENOUGH_SERVER_MEMORY;
    }
    private static final int ERROR_POSSIBLE_DEADLOCK = (int)1131L;
    /**
     * {@snippet lang=c :
     * #define ERROR_POSSIBLE_DEADLOCK 1131
     * }
     */
    public static int ERROR_POSSIBLE_DEADLOCK() {
        return ERROR_POSSIBLE_DEADLOCK;
    }
    private static final int ERROR_MAPPED_ALIGNMENT = (int)1132L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MAPPED_ALIGNMENT 1132
     * }
     */
    public static int ERROR_MAPPED_ALIGNMENT() {
        return ERROR_MAPPED_ALIGNMENT;
    }
    private static final int ERROR_SET_POWER_STATE_VETOED = (int)1140L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SET_POWER_STATE_VETOED 1140
     * }
     */
    public static int ERROR_SET_POWER_STATE_VETOED() {
        return ERROR_SET_POWER_STATE_VETOED;
    }
    private static final int ERROR_SET_POWER_STATE_FAILED = (int)1141L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SET_POWER_STATE_FAILED 1141
     * }
     */
    public static int ERROR_SET_POWER_STATE_FAILED() {
        return ERROR_SET_POWER_STATE_FAILED;
    }
    private static final int ERROR_TOO_MANY_LINKS = (int)1142L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TOO_MANY_LINKS 1142
     * }
     */
    public static int ERROR_TOO_MANY_LINKS() {
        return ERROR_TOO_MANY_LINKS;
    }
    private static final int ERROR_OLD_WIN_VERSION = (int)1150L;
    /**
     * {@snippet lang=c :
     * #define ERROR_OLD_WIN_VERSION 1150
     * }
     */
    public static int ERROR_OLD_WIN_VERSION() {
        return ERROR_OLD_WIN_VERSION;
    }
    private static final int ERROR_APP_WRONG_OS = (int)1151L;
    /**
     * {@snippet lang=c :
     * #define ERROR_APP_WRONG_OS 1151
     * }
     */
    public static int ERROR_APP_WRONG_OS() {
        return ERROR_APP_WRONG_OS;
    }
    private static final int ERROR_SINGLE_INSTANCE_APP = (int)1152L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SINGLE_INSTANCE_APP 1152
     * }
     */
    public static int ERROR_SINGLE_INSTANCE_APP() {
        return ERROR_SINGLE_INSTANCE_APP;
    }
    private static final int ERROR_RMODE_APP = (int)1153L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RMODE_APP 1153
     * }
     */
    public static int ERROR_RMODE_APP() {
        return ERROR_RMODE_APP;
    }
    private static final int ERROR_INVALID_DLL = (int)1154L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_DLL 1154
     * }
     */
    public static int ERROR_INVALID_DLL() {
        return ERROR_INVALID_DLL;
    }
    private static final int ERROR_NO_ASSOCIATION = (int)1155L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_ASSOCIATION 1155
     * }
     */
    public static int ERROR_NO_ASSOCIATION() {
        return ERROR_NO_ASSOCIATION;
    }
    private static final int ERROR_DDE_FAIL = (int)1156L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DDE_FAIL 1156
     * }
     */
    public static int ERROR_DDE_FAIL() {
        return ERROR_DDE_FAIL;
    }
    private static final int ERROR_DLL_NOT_FOUND = (int)1157L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DLL_NOT_FOUND 1157
     * }
     */
    public static int ERROR_DLL_NOT_FOUND() {
        return ERROR_DLL_NOT_FOUND;
    }
    private static final int ERROR_NO_MORE_USER_HANDLES = (int)1158L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_MORE_USER_HANDLES 1158
     * }
     */
    public static int ERROR_NO_MORE_USER_HANDLES() {
        return ERROR_NO_MORE_USER_HANDLES;
    }
    private static final int ERROR_MESSAGE_SYNC_ONLY = (int)1159L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MESSAGE_SYNC_ONLY 1159
     * }
     */
    public static int ERROR_MESSAGE_SYNC_ONLY() {
        return ERROR_MESSAGE_SYNC_ONLY;
    }
    private static final int ERROR_SOURCE_ELEMENT_EMPTY = (int)1160L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SOURCE_ELEMENT_EMPTY 1160
     * }
     */
    public static int ERROR_SOURCE_ELEMENT_EMPTY() {
        return ERROR_SOURCE_ELEMENT_EMPTY;
    }
    private static final int ERROR_DESTINATION_ELEMENT_FULL = (int)1161L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DESTINATION_ELEMENT_FULL 1161
     * }
     */
    public static int ERROR_DESTINATION_ELEMENT_FULL() {
        return ERROR_DESTINATION_ELEMENT_FULL;
    }
    private static final int ERROR_ILLEGAL_ELEMENT_ADDRESS = (int)1162L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ILLEGAL_ELEMENT_ADDRESS 1162
     * }
     */
    public static int ERROR_ILLEGAL_ELEMENT_ADDRESS() {
        return ERROR_ILLEGAL_ELEMENT_ADDRESS;
    }
    private static final int ERROR_MAGAZINE_NOT_PRESENT = (int)1163L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MAGAZINE_NOT_PRESENT 1163
     * }
     */
    public static int ERROR_MAGAZINE_NOT_PRESENT() {
        return ERROR_MAGAZINE_NOT_PRESENT;
    }
    private static final int ERROR_DEVICE_REINITIALIZATION_NEEDED = (int)1164L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DEVICE_REINITIALIZATION_NEEDED 1164
     * }
     */
    public static int ERROR_DEVICE_REINITIALIZATION_NEEDED() {
        return ERROR_DEVICE_REINITIALIZATION_NEEDED;
    }
    private static final int ERROR_DEVICE_REQUIRES_CLEANING = (int)1165L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DEVICE_REQUIRES_CLEANING 1165
     * }
     */
    public static int ERROR_DEVICE_REQUIRES_CLEANING() {
        return ERROR_DEVICE_REQUIRES_CLEANING;
    }
    private static final int ERROR_DEVICE_DOOR_OPEN = (int)1166L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DEVICE_DOOR_OPEN 1166
     * }
     */
    public static int ERROR_DEVICE_DOOR_OPEN() {
        return ERROR_DEVICE_DOOR_OPEN;
    }
    private static final int ERROR_DEVICE_NOT_CONNECTED = (int)1167L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DEVICE_NOT_CONNECTED 1167
     * }
     */
    public static int ERROR_DEVICE_NOT_CONNECTED() {
        return ERROR_DEVICE_NOT_CONNECTED;
    }
    private static final int ERROR_NOT_FOUND = (int)1168L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_FOUND 1168
     * }
     */
    public static int ERROR_NOT_FOUND() {
        return ERROR_NOT_FOUND;
    }
    private static final int ERROR_NO_MATCH = (int)1169L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_MATCH 1169
     * }
     */
    public static int ERROR_NO_MATCH() {
        return ERROR_NO_MATCH;
    }
    private static final int ERROR_SET_NOT_FOUND = (int)1170L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SET_NOT_FOUND 1170
     * }
     */
    public static int ERROR_SET_NOT_FOUND() {
        return ERROR_SET_NOT_FOUND;
    }
    private static final int ERROR_POINT_NOT_FOUND = (int)1171L;
    /**
     * {@snippet lang=c :
     * #define ERROR_POINT_NOT_FOUND 1171
     * }
     */
    public static int ERROR_POINT_NOT_FOUND() {
        return ERROR_POINT_NOT_FOUND;
    }
    private static final int ERROR_NO_TRACKING_SERVICE = (int)1172L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_TRACKING_SERVICE 1172
     * }
     */
    public static int ERROR_NO_TRACKING_SERVICE() {
        return ERROR_NO_TRACKING_SERVICE;
    }
    private static final int ERROR_NO_VOLUME_ID = (int)1173L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_VOLUME_ID 1173
     * }
     */
    public static int ERROR_NO_VOLUME_ID() {
        return ERROR_NO_VOLUME_ID;
    }
    private static final int ERROR_UNABLE_TO_REMOVE_REPLACED = (int)1175L;
    /**
     * {@snippet lang=c :
     * #define ERROR_UNABLE_TO_REMOVE_REPLACED 1175
     * }
     */
    public static int ERROR_UNABLE_TO_REMOVE_REPLACED() {
        return ERROR_UNABLE_TO_REMOVE_REPLACED;
    }
    private static final int ERROR_UNABLE_TO_MOVE_REPLACEMENT = (int)1176L;
    /**
     * {@snippet lang=c :
     * #define ERROR_UNABLE_TO_MOVE_REPLACEMENT 1176
     * }
     */
    public static int ERROR_UNABLE_TO_MOVE_REPLACEMENT() {
        return ERROR_UNABLE_TO_MOVE_REPLACEMENT;
    }
    private static final int ERROR_UNABLE_TO_MOVE_REPLACEMENT_2 = (int)1177L;
    /**
     * {@snippet lang=c :
     * #define ERROR_UNABLE_TO_MOVE_REPLACEMENT_2 1177
     * }
     */
    public static int ERROR_UNABLE_TO_MOVE_REPLACEMENT_2() {
        return ERROR_UNABLE_TO_MOVE_REPLACEMENT_2;
    }
    private static final int ERROR_JOURNAL_DELETE_IN_PROGRESS = (int)1178L;
    /**
     * {@snippet lang=c :
     * #define ERROR_JOURNAL_DELETE_IN_PROGRESS 1178
     * }
     */
    public static int ERROR_JOURNAL_DELETE_IN_PROGRESS() {
        return ERROR_JOURNAL_DELETE_IN_PROGRESS;
    }
    private static final int ERROR_JOURNAL_NOT_ACTIVE = (int)1179L;
    /**
     * {@snippet lang=c :
     * #define ERROR_JOURNAL_NOT_ACTIVE 1179
     * }
     */
    public static int ERROR_JOURNAL_NOT_ACTIVE() {
        return ERROR_JOURNAL_NOT_ACTIVE;
    }
    private static final int ERROR_POTENTIAL_FILE_FOUND = (int)1180L;
    /**
     * {@snippet lang=c :
     * #define ERROR_POTENTIAL_FILE_FOUND 1180
     * }
     */
    public static int ERROR_POTENTIAL_FILE_FOUND() {
        return ERROR_POTENTIAL_FILE_FOUND;
    }
    private static final int ERROR_JOURNAL_ENTRY_DELETED = (int)1181L;
    /**
     * {@snippet lang=c :
     * #define ERROR_JOURNAL_ENTRY_DELETED 1181
     * }
     */
    public static int ERROR_JOURNAL_ENTRY_DELETED() {
        return ERROR_JOURNAL_ENTRY_DELETED;
    }
    private static final int ERROR_PARTITION_TERMINATING = (int)1184L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PARTITION_TERMINATING 1184
     * }
     */
    public static int ERROR_PARTITION_TERMINATING() {
        return ERROR_PARTITION_TERMINATING;
    }
    private static final int ERROR_SHUTDOWN_IS_SCHEDULED = (int)1190L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SHUTDOWN_IS_SCHEDULED 1190
     * }
     */
    public static int ERROR_SHUTDOWN_IS_SCHEDULED() {
        return ERROR_SHUTDOWN_IS_SCHEDULED;
    }
    private static final int ERROR_SHUTDOWN_USERS_LOGGED_ON = (int)1191L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SHUTDOWN_USERS_LOGGED_ON 1191
     * }
     */
    public static int ERROR_SHUTDOWN_USERS_LOGGED_ON() {
        return ERROR_SHUTDOWN_USERS_LOGGED_ON;
    }
    private static final int ERROR_SHUTDOWN_DISKS_NOT_IN_MAINTENANCE_MODE = (int)1192L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SHUTDOWN_DISKS_NOT_IN_MAINTENANCE_MODE 1192
     * }
     */
    public static int ERROR_SHUTDOWN_DISKS_NOT_IN_MAINTENANCE_MODE() {
        return ERROR_SHUTDOWN_DISKS_NOT_IN_MAINTENANCE_MODE;
    }
    private static final int ERROR_BAD_DEVICE = (int)1200L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BAD_DEVICE 1200
     * }
     */
    public static int ERROR_BAD_DEVICE() {
        return ERROR_BAD_DEVICE;
    }
    private static final int ERROR_CONNECTION_UNAVAIL = (int)1201L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CONNECTION_UNAVAIL 1201
     * }
     */
    public static int ERROR_CONNECTION_UNAVAIL() {
        return ERROR_CONNECTION_UNAVAIL;
    }
    private static final int ERROR_DEVICE_ALREADY_REMEMBERED = (int)1202L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DEVICE_ALREADY_REMEMBERED 1202
     * }
     */
    public static int ERROR_DEVICE_ALREADY_REMEMBERED() {
        return ERROR_DEVICE_ALREADY_REMEMBERED;
    }
    private static final int ERROR_NO_NET_OR_BAD_PATH = (int)1203L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_NET_OR_BAD_PATH 1203
     * }
     */
    public static int ERROR_NO_NET_OR_BAD_PATH() {
        return ERROR_NO_NET_OR_BAD_PATH;
    }
    private static final int ERROR_BAD_PROVIDER = (int)1204L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BAD_PROVIDER 1204
     * }
     */
    public static int ERROR_BAD_PROVIDER() {
        return ERROR_BAD_PROVIDER;
    }
    private static final int ERROR_CANNOT_OPEN_PROFILE = (int)1205L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CANNOT_OPEN_PROFILE 1205
     * }
     */
    public static int ERROR_CANNOT_OPEN_PROFILE() {
        return ERROR_CANNOT_OPEN_PROFILE;
    }
    private static final int ERROR_BAD_PROFILE = (int)1206L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BAD_PROFILE 1206
     * }
     */
    public static int ERROR_BAD_PROFILE() {
        return ERROR_BAD_PROFILE;
    }
    private static final int ERROR_NOT_CONTAINER = (int)1207L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_CONTAINER 1207
     * }
     */
    public static int ERROR_NOT_CONTAINER() {
        return ERROR_NOT_CONTAINER;
    }
    private static final int ERROR_EXTENDED_ERROR = (int)1208L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EXTENDED_ERROR 1208
     * }
     */
    public static int ERROR_EXTENDED_ERROR() {
        return ERROR_EXTENDED_ERROR;
    }
    private static final int ERROR_INVALID_GROUPNAME = (int)1209L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_GROUPNAME 1209
     * }
     */
    public static int ERROR_INVALID_GROUPNAME() {
        return ERROR_INVALID_GROUPNAME;
    }
    private static final int ERROR_INVALID_COMPUTERNAME = (int)1210L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_COMPUTERNAME 1210
     * }
     */
    public static int ERROR_INVALID_COMPUTERNAME() {
        return ERROR_INVALID_COMPUTERNAME;
    }
    private static final int ERROR_INVALID_EVENTNAME = (int)1211L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_EVENTNAME 1211
     * }
     */
    public static int ERROR_INVALID_EVENTNAME() {
        return ERROR_INVALID_EVENTNAME;
    }
    private static final int ERROR_INVALID_DOMAINNAME = (int)1212L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_DOMAINNAME 1212
     * }
     */
    public static int ERROR_INVALID_DOMAINNAME() {
        return ERROR_INVALID_DOMAINNAME;
    }
    private static final int ERROR_INVALID_SERVICENAME = (int)1213L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_SERVICENAME 1213
     * }
     */
    public static int ERROR_INVALID_SERVICENAME() {
        return ERROR_INVALID_SERVICENAME;
    }
    private static final int ERROR_INVALID_NETNAME = (int)1214L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_NETNAME 1214
     * }
     */
    public static int ERROR_INVALID_NETNAME() {
        return ERROR_INVALID_NETNAME;
    }
    private static final int ERROR_INVALID_SHARENAME = (int)1215L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_SHARENAME 1215
     * }
     */
    public static int ERROR_INVALID_SHARENAME() {
        return ERROR_INVALID_SHARENAME;
    }
    private static final int ERROR_INVALID_PASSWORDNAME = (int)1216L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_PASSWORDNAME 1216
     * }
     */
    public static int ERROR_INVALID_PASSWORDNAME() {
        return ERROR_INVALID_PASSWORDNAME;
    }
    private static final int ERROR_INVALID_MESSAGENAME = (int)1217L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_MESSAGENAME 1217
     * }
     */
    public static int ERROR_INVALID_MESSAGENAME() {
        return ERROR_INVALID_MESSAGENAME;
    }
    private static final int ERROR_INVALID_MESSAGEDEST = (int)1218L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_MESSAGEDEST 1218
     * }
     */
    public static int ERROR_INVALID_MESSAGEDEST() {
        return ERROR_INVALID_MESSAGEDEST;
    }
    private static final int ERROR_SESSION_CREDENTIAL_CONFLICT = (int)1219L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SESSION_CREDENTIAL_CONFLICT 1219
     * }
     */
    public static int ERROR_SESSION_CREDENTIAL_CONFLICT() {
        return ERROR_SESSION_CREDENTIAL_CONFLICT;
    }
    private static final int ERROR_REMOTE_SESSION_LIMIT_EXCEEDED = (int)1220L;
    /**
     * {@snippet lang=c :
     * #define ERROR_REMOTE_SESSION_LIMIT_EXCEEDED 1220
     * }
     */
    public static int ERROR_REMOTE_SESSION_LIMIT_EXCEEDED() {
        return ERROR_REMOTE_SESSION_LIMIT_EXCEEDED;
    }
    private static final int ERROR_DUP_DOMAINNAME = (int)1221L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DUP_DOMAINNAME 1221
     * }
     */
    public static int ERROR_DUP_DOMAINNAME() {
        return ERROR_DUP_DOMAINNAME;
    }
    private static final int ERROR_NO_NETWORK = (int)1222L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_NETWORK 1222
     * }
     */
    public static int ERROR_NO_NETWORK() {
        return ERROR_NO_NETWORK;
    }
    private static final int ERROR_CANCELLED = (int)1223L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CANCELLED 1223
     * }
     */
    public static int ERROR_CANCELLED() {
        return ERROR_CANCELLED;
    }
    private static final int ERROR_USER_MAPPED_FILE = (int)1224L;
    /**
     * {@snippet lang=c :
     * #define ERROR_USER_MAPPED_FILE 1224
     * }
     */
    public static int ERROR_USER_MAPPED_FILE() {
        return ERROR_USER_MAPPED_FILE;
    }
    private static final int ERROR_CONNECTION_REFUSED = (int)1225L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CONNECTION_REFUSED 1225
     * }
     */
    public static int ERROR_CONNECTION_REFUSED() {
        return ERROR_CONNECTION_REFUSED;
    }
    private static final int ERROR_GRACEFUL_DISCONNECT = (int)1226L;
    /**
     * {@snippet lang=c :
     * #define ERROR_GRACEFUL_DISCONNECT 1226
     * }
     */
    public static int ERROR_GRACEFUL_DISCONNECT() {
        return ERROR_GRACEFUL_DISCONNECT;
    }
    private static final int ERROR_ADDRESS_ALREADY_ASSOCIATED = (int)1227L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ADDRESS_ALREADY_ASSOCIATED 1227
     * }
     */
    public static int ERROR_ADDRESS_ALREADY_ASSOCIATED() {
        return ERROR_ADDRESS_ALREADY_ASSOCIATED;
    }
    private static final int ERROR_ADDRESS_NOT_ASSOCIATED = (int)1228L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ADDRESS_NOT_ASSOCIATED 1228
     * }
     */
    public static int ERROR_ADDRESS_NOT_ASSOCIATED() {
        return ERROR_ADDRESS_NOT_ASSOCIATED;
    }
    private static final int ERROR_CONNECTION_INVALID = (int)1229L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CONNECTION_INVALID 1229
     * }
     */
    public static int ERROR_CONNECTION_INVALID() {
        return ERROR_CONNECTION_INVALID;
    }
    private static final int ERROR_CONNECTION_ACTIVE = (int)1230L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CONNECTION_ACTIVE 1230
     * }
     */
    public static int ERROR_CONNECTION_ACTIVE() {
        return ERROR_CONNECTION_ACTIVE;
    }
    private static final int ERROR_NETWORK_UNREACHABLE = (int)1231L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NETWORK_UNREACHABLE 1231
     * }
     */
    public static int ERROR_NETWORK_UNREACHABLE() {
        return ERROR_NETWORK_UNREACHABLE;
    }
    private static final int ERROR_HOST_UNREACHABLE = (int)1232L;
    /**
     * {@snippet lang=c :
     * #define ERROR_HOST_UNREACHABLE 1232
     * }
     */
    public static int ERROR_HOST_UNREACHABLE() {
        return ERROR_HOST_UNREACHABLE;
    }
    private static final int ERROR_PROTOCOL_UNREACHABLE = (int)1233L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PROTOCOL_UNREACHABLE 1233
     * }
     */
    public static int ERROR_PROTOCOL_UNREACHABLE() {
        return ERROR_PROTOCOL_UNREACHABLE;
    }
    private static final int ERROR_PORT_UNREACHABLE = (int)1234L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PORT_UNREACHABLE 1234
     * }
     */
    public static int ERROR_PORT_UNREACHABLE() {
        return ERROR_PORT_UNREACHABLE;
    }
    private static final int ERROR_REQUEST_ABORTED = (int)1235L;
    /**
     * {@snippet lang=c :
     * #define ERROR_REQUEST_ABORTED 1235
     * }
     */
    public static int ERROR_REQUEST_ABORTED() {
        return ERROR_REQUEST_ABORTED;
    }
    private static final int ERROR_CONNECTION_ABORTED = (int)1236L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CONNECTION_ABORTED 1236
     * }
     */
    public static int ERROR_CONNECTION_ABORTED() {
        return ERROR_CONNECTION_ABORTED;
    }
    private static final int ERROR_RETRY = (int)1237L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RETRY 1237
     * }
     */
    public static int ERROR_RETRY() {
        return ERROR_RETRY;
    }
    private static final int ERROR_CONNECTION_COUNT_LIMIT = (int)1238L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CONNECTION_COUNT_LIMIT 1238
     * }
     */
    public static int ERROR_CONNECTION_COUNT_LIMIT() {
        return ERROR_CONNECTION_COUNT_LIMIT;
    }
    private static final int ERROR_LOGIN_TIME_RESTRICTION = (int)1239L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOGIN_TIME_RESTRICTION 1239
     * }
     */
    public static int ERROR_LOGIN_TIME_RESTRICTION() {
        return ERROR_LOGIN_TIME_RESTRICTION;
    }
    private static final int ERROR_LOGIN_WKSTA_RESTRICTION = (int)1240L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOGIN_WKSTA_RESTRICTION 1240
     * }
     */
    public static int ERROR_LOGIN_WKSTA_RESTRICTION() {
        return ERROR_LOGIN_WKSTA_RESTRICTION;
    }
    private static final int ERROR_INCORRECT_ADDRESS = (int)1241L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INCORRECT_ADDRESS 1241
     * }
     */
    public static int ERROR_INCORRECT_ADDRESS() {
        return ERROR_INCORRECT_ADDRESS;
    }
    private static final int ERROR_ALREADY_REGISTERED = (int)1242L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ALREADY_REGISTERED 1242
     * }
     */
    public static int ERROR_ALREADY_REGISTERED() {
        return ERROR_ALREADY_REGISTERED;
    }
    private static final int ERROR_SERVICE_NOT_FOUND = (int)1243L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SERVICE_NOT_FOUND 1243
     * }
     */
    public static int ERROR_SERVICE_NOT_FOUND() {
        return ERROR_SERVICE_NOT_FOUND;
    }
    private static final int ERROR_NOT_AUTHENTICATED = (int)1244L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_AUTHENTICATED 1244
     * }
     */
    public static int ERROR_NOT_AUTHENTICATED() {
        return ERROR_NOT_AUTHENTICATED;
    }
    private static final int ERROR_NOT_LOGGED_ON = (int)1245L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_LOGGED_ON 1245
     * }
     */
    public static int ERROR_NOT_LOGGED_ON() {
        return ERROR_NOT_LOGGED_ON;
    }
    private static final int ERROR_CONTINUE = (int)1246L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CONTINUE 1246
     * }
     */
    public static int ERROR_CONTINUE() {
        return ERROR_CONTINUE;
    }
    private static final int ERROR_ALREADY_INITIALIZED = (int)1247L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ALREADY_INITIALIZED 1247
     * }
     */
    public static int ERROR_ALREADY_INITIALIZED() {
        return ERROR_ALREADY_INITIALIZED;
    }
    private static final int ERROR_NO_MORE_DEVICES = (int)1248L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_MORE_DEVICES 1248
     * }
     */
    public static int ERROR_NO_MORE_DEVICES() {
        return ERROR_NO_MORE_DEVICES;
    }
    private static final int ERROR_NO_SUCH_SITE = (int)1249L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_SUCH_SITE 1249
     * }
     */
    public static int ERROR_NO_SUCH_SITE() {
        return ERROR_NO_SUCH_SITE;
    }
    private static final int ERROR_DOMAIN_CONTROLLER_EXISTS = (int)1250L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DOMAIN_CONTROLLER_EXISTS 1250
     * }
     */
    public static int ERROR_DOMAIN_CONTROLLER_EXISTS() {
        return ERROR_DOMAIN_CONTROLLER_EXISTS;
    }
    private static final int ERROR_ONLY_IF_CONNECTED = (int)1251L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ONLY_IF_CONNECTED 1251
     * }
     */
    public static int ERROR_ONLY_IF_CONNECTED() {
        return ERROR_ONLY_IF_CONNECTED;
    }
    private static final int ERROR_OVERRIDE_NOCHANGES = (int)1252L;
    /**
     * {@snippet lang=c :
     * #define ERROR_OVERRIDE_NOCHANGES 1252
     * }
     */
    public static int ERROR_OVERRIDE_NOCHANGES() {
        return ERROR_OVERRIDE_NOCHANGES;
    }
    private static final int ERROR_BAD_USER_PROFILE = (int)1253L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BAD_USER_PROFILE 1253
     * }
     */
    public static int ERROR_BAD_USER_PROFILE() {
        return ERROR_BAD_USER_PROFILE;
    }
    private static final int ERROR_NOT_SUPPORTED_ON_SBS = (int)1254L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_SUPPORTED_ON_SBS 1254
     * }
     */
    public static int ERROR_NOT_SUPPORTED_ON_SBS() {
        return ERROR_NOT_SUPPORTED_ON_SBS;
    }
    private static final int ERROR_SERVER_SHUTDOWN_IN_PROGRESS = (int)1255L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SERVER_SHUTDOWN_IN_PROGRESS 1255
     * }
     */
    public static int ERROR_SERVER_SHUTDOWN_IN_PROGRESS() {
        return ERROR_SERVER_SHUTDOWN_IN_PROGRESS;
    }
    private static final int ERROR_HOST_DOWN = (int)1256L;
    /**
     * {@snippet lang=c :
     * #define ERROR_HOST_DOWN 1256
     * }
     */
    public static int ERROR_HOST_DOWN() {
        return ERROR_HOST_DOWN;
    }
    private static final int ERROR_NON_ACCOUNT_SID = (int)1257L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NON_ACCOUNT_SID 1257
     * }
     */
    public static int ERROR_NON_ACCOUNT_SID() {
        return ERROR_NON_ACCOUNT_SID;
    }
    private static final int ERROR_NON_DOMAIN_SID = (int)1258L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NON_DOMAIN_SID 1258
     * }
     */
    public static int ERROR_NON_DOMAIN_SID() {
        return ERROR_NON_DOMAIN_SID;
    }
    private static final int ERROR_APPHELP_BLOCK = (int)1259L;
    /**
     * {@snippet lang=c :
     * #define ERROR_APPHELP_BLOCK 1259
     * }
     */
    public static int ERROR_APPHELP_BLOCK() {
        return ERROR_APPHELP_BLOCK;
    }
    private static final int ERROR_ACCESS_DISABLED_BY_POLICY = (int)1260L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ACCESS_DISABLED_BY_POLICY 1260
     * }
     */
    public static int ERROR_ACCESS_DISABLED_BY_POLICY() {
        return ERROR_ACCESS_DISABLED_BY_POLICY;
    }
    private static final int ERROR_REG_NAT_CONSUMPTION = (int)1261L;
    /**
     * {@snippet lang=c :
     * #define ERROR_REG_NAT_CONSUMPTION 1261
     * }
     */
    public static int ERROR_REG_NAT_CONSUMPTION() {
        return ERROR_REG_NAT_CONSUMPTION;
    }
    private static final int ERROR_CSCSHARE_OFFLINE = (int)1262L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CSCSHARE_OFFLINE 1262
     * }
     */
    public static int ERROR_CSCSHARE_OFFLINE() {
        return ERROR_CSCSHARE_OFFLINE;
    }
    private static final int ERROR_PKINIT_FAILURE = (int)1263L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PKINIT_FAILURE 1263
     * }
     */
    public static int ERROR_PKINIT_FAILURE() {
        return ERROR_PKINIT_FAILURE;
    }
    private static final int ERROR_SMARTCARD_SUBSYSTEM_FAILURE = (int)1264L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SMARTCARD_SUBSYSTEM_FAILURE 1264
     * }
     */
    public static int ERROR_SMARTCARD_SUBSYSTEM_FAILURE() {
        return ERROR_SMARTCARD_SUBSYSTEM_FAILURE;
    }
    private static final int ERROR_DOWNGRADE_DETECTED = (int)1265L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DOWNGRADE_DETECTED 1265
     * }
     */
    public static int ERROR_DOWNGRADE_DETECTED() {
        return ERROR_DOWNGRADE_DETECTED;
    }
    private static final int ERROR_MACHINE_LOCKED = (int)1271L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MACHINE_LOCKED 1271
     * }
     */
    public static int ERROR_MACHINE_LOCKED() {
        return ERROR_MACHINE_LOCKED;
    }
    private static final int ERROR_SMB_GUEST_LOGON_BLOCKED = (int)1272L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SMB_GUEST_LOGON_BLOCKED 1272
     * }
     */
    public static int ERROR_SMB_GUEST_LOGON_BLOCKED() {
        return ERROR_SMB_GUEST_LOGON_BLOCKED;
    }
    private static final int ERROR_CALLBACK_SUPPLIED_INVALID_DATA = (int)1273L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CALLBACK_SUPPLIED_INVALID_DATA 1273
     * }
     */
    public static int ERROR_CALLBACK_SUPPLIED_INVALID_DATA() {
        return ERROR_CALLBACK_SUPPLIED_INVALID_DATA;
    }
    private static final int ERROR_SYNC_FOREGROUND_REFRESH_REQUIRED = (int)1274L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SYNC_FOREGROUND_REFRESH_REQUIRED 1274
     * }
     */
    public static int ERROR_SYNC_FOREGROUND_REFRESH_REQUIRED() {
        return ERROR_SYNC_FOREGROUND_REFRESH_REQUIRED;
    }
    private static final int ERROR_DRIVER_BLOCKED = (int)1275L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DRIVER_BLOCKED 1275
     * }
     */
    public static int ERROR_DRIVER_BLOCKED() {
        return ERROR_DRIVER_BLOCKED;
    }
    private static final int ERROR_INVALID_IMPORT_OF_NON_DLL = (int)1276L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_IMPORT_OF_NON_DLL 1276
     * }
     */
    public static int ERROR_INVALID_IMPORT_OF_NON_DLL() {
        return ERROR_INVALID_IMPORT_OF_NON_DLL;
    }
    private static final int ERROR_ACCESS_DISABLED_WEBBLADE = (int)1277L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ACCESS_DISABLED_WEBBLADE 1277
     * }
     */
    public static int ERROR_ACCESS_DISABLED_WEBBLADE() {
        return ERROR_ACCESS_DISABLED_WEBBLADE;
    }
    private static final int ERROR_ACCESS_DISABLED_WEBBLADE_TAMPER = (int)1278L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ACCESS_DISABLED_WEBBLADE_TAMPER 1278
     * }
     */
    public static int ERROR_ACCESS_DISABLED_WEBBLADE_TAMPER() {
        return ERROR_ACCESS_DISABLED_WEBBLADE_TAMPER;
    }
    private static final int ERROR_RECOVERY_FAILURE = (int)1279L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RECOVERY_FAILURE 1279
     * }
     */
    public static int ERROR_RECOVERY_FAILURE() {
        return ERROR_RECOVERY_FAILURE;
    }
    private static final int ERROR_ALREADY_FIBER = (int)1280L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ALREADY_FIBER 1280
     * }
     */
    public static int ERROR_ALREADY_FIBER() {
        return ERROR_ALREADY_FIBER;
    }
    private static final int ERROR_ALREADY_THREAD = (int)1281L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ALREADY_THREAD 1281
     * }
     */
    public static int ERROR_ALREADY_THREAD() {
        return ERROR_ALREADY_THREAD;
    }
    private static final int ERROR_STACK_BUFFER_OVERRUN = (int)1282L;
    /**
     * {@snippet lang=c :
     * #define ERROR_STACK_BUFFER_OVERRUN 1282
     * }
     */
    public static int ERROR_STACK_BUFFER_OVERRUN() {
        return ERROR_STACK_BUFFER_OVERRUN;
    }
    private static final int ERROR_PARAMETER_QUOTA_EXCEEDED = (int)1283L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PARAMETER_QUOTA_EXCEEDED 1283
     * }
     */
    public static int ERROR_PARAMETER_QUOTA_EXCEEDED() {
        return ERROR_PARAMETER_QUOTA_EXCEEDED;
    }
    private static final int ERROR_DEBUGGER_INACTIVE = (int)1284L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DEBUGGER_INACTIVE 1284
     * }
     */
    public static int ERROR_DEBUGGER_INACTIVE() {
        return ERROR_DEBUGGER_INACTIVE;
    }
    private static final int ERROR_DELAY_LOAD_FAILED = (int)1285L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DELAY_LOAD_FAILED 1285
     * }
     */
    public static int ERROR_DELAY_LOAD_FAILED() {
        return ERROR_DELAY_LOAD_FAILED;
    }
    private static final int ERROR_VDM_DISALLOWED = (int)1286L;
    /**
     * {@snippet lang=c :
     * #define ERROR_VDM_DISALLOWED 1286
     * }
     */
    public static int ERROR_VDM_DISALLOWED() {
        return ERROR_VDM_DISALLOWED;
    }
    private static final int ERROR_UNIDENTIFIED_ERROR = (int)1287L;
    /**
     * {@snippet lang=c :
     * #define ERROR_UNIDENTIFIED_ERROR 1287
     * }
     */
    public static int ERROR_UNIDENTIFIED_ERROR() {
        return ERROR_UNIDENTIFIED_ERROR;
    }
    private static final int ERROR_INVALID_CRUNTIME_PARAMETER = (int)1288L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_CRUNTIME_PARAMETER 1288
     * }
     */
    public static int ERROR_INVALID_CRUNTIME_PARAMETER() {
        return ERROR_INVALID_CRUNTIME_PARAMETER;
    }
    private static final int ERROR_BEYOND_VDL = (int)1289L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BEYOND_VDL 1289
     * }
     */
    public static int ERROR_BEYOND_VDL() {
        return ERROR_BEYOND_VDL;
    }
    private static final int ERROR_INCOMPATIBLE_SERVICE_SID_TYPE = (int)1290L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INCOMPATIBLE_SERVICE_SID_TYPE 1290
     * }
     */
    public static int ERROR_INCOMPATIBLE_SERVICE_SID_TYPE() {
        return ERROR_INCOMPATIBLE_SERVICE_SID_TYPE;
    }
    private static final int ERROR_DRIVER_PROCESS_TERMINATED = (int)1291L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DRIVER_PROCESS_TERMINATED 1291
     * }
     */
    public static int ERROR_DRIVER_PROCESS_TERMINATED() {
        return ERROR_DRIVER_PROCESS_TERMINATED;
    }
    private static final int ERROR_IMPLEMENTATION_LIMIT = (int)1292L;
    /**
     * {@snippet lang=c :
     * #define ERROR_IMPLEMENTATION_LIMIT 1292
     * }
     */
    public static int ERROR_IMPLEMENTATION_LIMIT() {
        return ERROR_IMPLEMENTATION_LIMIT;
    }
    private static final int ERROR_PROCESS_IS_PROTECTED = (int)1293L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PROCESS_IS_PROTECTED 1293
     * }
     */
    public static int ERROR_PROCESS_IS_PROTECTED() {
        return ERROR_PROCESS_IS_PROTECTED;
    }
    private static final int ERROR_SERVICE_NOTIFY_CLIENT_LAGGING = (int)1294L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SERVICE_NOTIFY_CLIENT_LAGGING 1294
     * }
     */
    public static int ERROR_SERVICE_NOTIFY_CLIENT_LAGGING() {
        return ERROR_SERVICE_NOTIFY_CLIENT_LAGGING;
    }
    private static final int ERROR_DISK_QUOTA_EXCEEDED = (int)1295L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DISK_QUOTA_EXCEEDED 1295
     * }
     */
    public static int ERROR_DISK_QUOTA_EXCEEDED() {
        return ERROR_DISK_QUOTA_EXCEEDED;
    }
    private static final int ERROR_CONTENT_BLOCKED = (int)1296L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CONTENT_BLOCKED 1296
     * }
     */
    public static int ERROR_CONTENT_BLOCKED() {
        return ERROR_CONTENT_BLOCKED;
    }
    private static final int ERROR_INCOMPATIBLE_SERVICE_PRIVILEGE = (int)1297L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INCOMPATIBLE_SERVICE_PRIVILEGE 1297
     * }
     */
    public static int ERROR_INCOMPATIBLE_SERVICE_PRIVILEGE() {
        return ERROR_INCOMPATIBLE_SERVICE_PRIVILEGE;
    }
    private static final int ERROR_APP_HANG = (int)1298L;
    /**
     * {@snippet lang=c :
     * #define ERROR_APP_HANG 1298
     * }
     */
    public static int ERROR_APP_HANG() {
        return ERROR_APP_HANG;
    }
    private static final int ERROR_INVALID_LABEL = (int)1299L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_LABEL 1299
     * }
     */
    public static int ERROR_INVALID_LABEL() {
        return ERROR_INVALID_LABEL;
    }
    private static final int ERROR_NOT_ALL_ASSIGNED = (int)1300L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_ALL_ASSIGNED 1300
     * }
     */
    public static int ERROR_NOT_ALL_ASSIGNED() {
        return ERROR_NOT_ALL_ASSIGNED;
    }
    private static final int ERROR_SOME_NOT_MAPPED = (int)1301L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SOME_NOT_MAPPED 1301
     * }
     */
    public static int ERROR_SOME_NOT_MAPPED() {
        return ERROR_SOME_NOT_MAPPED;
    }
    private static final int ERROR_NO_QUOTAS_FOR_ACCOUNT = (int)1302L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_QUOTAS_FOR_ACCOUNT 1302
     * }
     */
    public static int ERROR_NO_QUOTAS_FOR_ACCOUNT() {
        return ERROR_NO_QUOTAS_FOR_ACCOUNT;
    }
    private static final int ERROR_LOCAL_USER_SESSION_KEY = (int)1303L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOCAL_USER_SESSION_KEY 1303
     * }
     */
    public static int ERROR_LOCAL_USER_SESSION_KEY() {
        return ERROR_LOCAL_USER_SESSION_KEY;
    }
    private static final int ERROR_NULL_LM_PASSWORD = (int)1304L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NULL_LM_PASSWORD 1304
     * }
     */
    public static int ERROR_NULL_LM_PASSWORD() {
        return ERROR_NULL_LM_PASSWORD;
    }
    private static final int ERROR_UNKNOWN_REVISION = (int)1305L;
    /**
     * {@snippet lang=c :
     * #define ERROR_UNKNOWN_REVISION 1305
     * }
     */
    public static int ERROR_UNKNOWN_REVISION() {
        return ERROR_UNKNOWN_REVISION;
    }
    private static final int ERROR_REVISION_MISMATCH = (int)1306L;
    /**
     * {@snippet lang=c :
     * #define ERROR_REVISION_MISMATCH 1306
     * }
     */
    public static int ERROR_REVISION_MISMATCH() {
        return ERROR_REVISION_MISMATCH;
    }
    private static final int ERROR_INVALID_OWNER = (int)1307L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_OWNER 1307
     * }
     */
    public static int ERROR_INVALID_OWNER() {
        return ERROR_INVALID_OWNER;
    }
    private static final int ERROR_INVALID_PRIMARY_GROUP = (int)1308L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_PRIMARY_GROUP 1308
     * }
     */
    public static int ERROR_INVALID_PRIMARY_GROUP() {
        return ERROR_INVALID_PRIMARY_GROUP;
    }
    private static final int ERROR_NO_IMPERSONATION_TOKEN = (int)1309L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_IMPERSONATION_TOKEN 1309
     * }
     */
    public static int ERROR_NO_IMPERSONATION_TOKEN() {
        return ERROR_NO_IMPERSONATION_TOKEN;
    }
    private static final int ERROR_CANT_DISABLE_MANDATORY = (int)1310L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CANT_DISABLE_MANDATORY 1310
     * }
     */
    public static int ERROR_CANT_DISABLE_MANDATORY() {
        return ERROR_CANT_DISABLE_MANDATORY;
    }
    private static final int ERROR_NO_LOGON_SERVERS = (int)1311L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_LOGON_SERVERS 1311
     * }
     */
    public static int ERROR_NO_LOGON_SERVERS() {
        return ERROR_NO_LOGON_SERVERS;
    }
    private static final int ERROR_NO_SUCH_LOGON_SESSION = (int)1312L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_SUCH_LOGON_SESSION 1312
     * }
     */
    public static int ERROR_NO_SUCH_LOGON_SESSION() {
        return ERROR_NO_SUCH_LOGON_SESSION;
    }
    private static final int ERROR_NO_SUCH_PRIVILEGE = (int)1313L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_SUCH_PRIVILEGE 1313
     * }
     */
    public static int ERROR_NO_SUCH_PRIVILEGE() {
        return ERROR_NO_SUCH_PRIVILEGE;
    }
    private static final int ERROR_PRIVILEGE_NOT_HELD = (int)1314L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PRIVILEGE_NOT_HELD 1314
     * }
     */
    public static int ERROR_PRIVILEGE_NOT_HELD() {
        return ERROR_PRIVILEGE_NOT_HELD;
    }
    private static final int ERROR_INVALID_ACCOUNT_NAME = (int)1315L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_ACCOUNT_NAME 1315
     * }
     */
    public static int ERROR_INVALID_ACCOUNT_NAME() {
        return ERROR_INVALID_ACCOUNT_NAME;
    }
    private static final int ERROR_USER_EXISTS = (int)1316L;
    /**
     * {@snippet lang=c :
     * #define ERROR_USER_EXISTS 1316
     * }
     */
    public static int ERROR_USER_EXISTS() {
        return ERROR_USER_EXISTS;
    }
    private static final int ERROR_NO_SUCH_USER = (int)1317L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_SUCH_USER 1317
     * }
     */
    public static int ERROR_NO_SUCH_USER() {
        return ERROR_NO_SUCH_USER;
    }
    private static final int ERROR_GROUP_EXISTS = (int)1318L;
    /**
     * {@snippet lang=c :
     * #define ERROR_GROUP_EXISTS 1318
     * }
     */
    public static int ERROR_GROUP_EXISTS() {
        return ERROR_GROUP_EXISTS;
    }
    private static final int ERROR_NO_SUCH_GROUP = (int)1319L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_SUCH_GROUP 1319
     * }
     */
    public static int ERROR_NO_SUCH_GROUP() {
        return ERROR_NO_SUCH_GROUP;
    }
    private static final int ERROR_MEMBER_IN_GROUP = (int)1320L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MEMBER_IN_GROUP 1320
     * }
     */
    public static int ERROR_MEMBER_IN_GROUP() {
        return ERROR_MEMBER_IN_GROUP;
    }
    private static final int ERROR_MEMBER_NOT_IN_GROUP = (int)1321L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MEMBER_NOT_IN_GROUP 1321
     * }
     */
    public static int ERROR_MEMBER_NOT_IN_GROUP() {
        return ERROR_MEMBER_NOT_IN_GROUP;
    }
    private static final int ERROR_LAST_ADMIN = (int)1322L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LAST_ADMIN 1322
     * }
     */
    public static int ERROR_LAST_ADMIN() {
        return ERROR_LAST_ADMIN;
    }
    private static final int ERROR_WRONG_PASSWORD = (int)1323L;
    /**
     * {@snippet lang=c :
     * #define ERROR_WRONG_PASSWORD 1323
     * }
     */
    public static int ERROR_WRONG_PASSWORD() {
        return ERROR_WRONG_PASSWORD;
    }
    private static final int ERROR_ILL_FORMED_PASSWORD = (int)1324L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ILL_FORMED_PASSWORD 1324
     * }
     */
    public static int ERROR_ILL_FORMED_PASSWORD() {
        return ERROR_ILL_FORMED_PASSWORD;
    }
    private static final int ERROR_PASSWORD_RESTRICTION = (int)1325L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PASSWORD_RESTRICTION 1325
     * }
     */
    public static int ERROR_PASSWORD_RESTRICTION() {
        return ERROR_PASSWORD_RESTRICTION;
    }
    private static final int ERROR_LOGON_FAILURE = (int)1326L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOGON_FAILURE 1326
     * }
     */
    public static int ERROR_LOGON_FAILURE() {
        return ERROR_LOGON_FAILURE;
    }
    private static final int ERROR_ACCOUNT_RESTRICTION = (int)1327L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ACCOUNT_RESTRICTION 1327
     * }
     */
    public static int ERROR_ACCOUNT_RESTRICTION() {
        return ERROR_ACCOUNT_RESTRICTION;
    }
    private static final int ERROR_INVALID_LOGON_HOURS = (int)1328L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_LOGON_HOURS 1328
     * }
     */
    public static int ERROR_INVALID_LOGON_HOURS() {
        return ERROR_INVALID_LOGON_HOURS;
    }
    private static final int ERROR_INVALID_WORKSTATION = (int)1329L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_WORKSTATION 1329
     * }
     */
    public static int ERROR_INVALID_WORKSTATION() {
        return ERROR_INVALID_WORKSTATION;
    }
    private static final int ERROR_PASSWORD_EXPIRED = (int)1330L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PASSWORD_EXPIRED 1330
     * }
     */
    public static int ERROR_PASSWORD_EXPIRED() {
        return ERROR_PASSWORD_EXPIRED;
    }
    private static final int ERROR_ACCOUNT_DISABLED = (int)1331L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ACCOUNT_DISABLED 1331
     * }
     */
    public static int ERROR_ACCOUNT_DISABLED() {
        return ERROR_ACCOUNT_DISABLED;
    }
    private static final int ERROR_NONE_MAPPED = (int)1332L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NONE_MAPPED 1332
     * }
     */
    public static int ERROR_NONE_MAPPED() {
        return ERROR_NONE_MAPPED;
    }
    private static final int ERROR_TOO_MANY_LUIDS_REQUESTED = (int)1333L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TOO_MANY_LUIDS_REQUESTED 1333
     * }
     */
    public static int ERROR_TOO_MANY_LUIDS_REQUESTED() {
        return ERROR_TOO_MANY_LUIDS_REQUESTED;
    }
    private static final int ERROR_LUIDS_EXHAUSTED = (int)1334L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LUIDS_EXHAUSTED 1334
     * }
     */
    public static int ERROR_LUIDS_EXHAUSTED() {
        return ERROR_LUIDS_EXHAUSTED;
    }
    private static final int ERROR_INVALID_SUB_AUTHORITY = (int)1335L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_SUB_AUTHORITY 1335
     * }
     */
    public static int ERROR_INVALID_SUB_AUTHORITY() {
        return ERROR_INVALID_SUB_AUTHORITY;
    }
    private static final int ERROR_INVALID_ACL = (int)1336L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_ACL 1336
     * }
     */
    public static int ERROR_INVALID_ACL() {
        return ERROR_INVALID_ACL;
    }
    private static final int ERROR_INVALID_SID = (int)1337L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_SID 1337
     * }
     */
    public static int ERROR_INVALID_SID() {
        return ERROR_INVALID_SID;
    }
    private static final int ERROR_INVALID_SECURITY_DESCR = (int)1338L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_SECURITY_DESCR 1338
     * }
     */
    public static int ERROR_INVALID_SECURITY_DESCR() {
        return ERROR_INVALID_SECURITY_DESCR;
    }
    private static final int ERROR_BAD_INHERITANCE_ACL = (int)1340L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BAD_INHERITANCE_ACL 1340
     * }
     */
    public static int ERROR_BAD_INHERITANCE_ACL() {
        return ERROR_BAD_INHERITANCE_ACL;
    }
    private static final int ERROR_SERVER_DISABLED = (int)1341L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SERVER_DISABLED 1341
     * }
     */
    public static int ERROR_SERVER_DISABLED() {
        return ERROR_SERVER_DISABLED;
    }
    private static final int ERROR_SERVER_NOT_DISABLED = (int)1342L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SERVER_NOT_DISABLED 1342
     * }
     */
    public static int ERROR_SERVER_NOT_DISABLED() {
        return ERROR_SERVER_NOT_DISABLED;
    }
    private static final int ERROR_INVALID_ID_AUTHORITY = (int)1343L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_ID_AUTHORITY 1343
     * }
     */
    public static int ERROR_INVALID_ID_AUTHORITY() {
        return ERROR_INVALID_ID_AUTHORITY;
    }
    private static final int ERROR_ALLOTTED_SPACE_EXCEEDED = (int)1344L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ALLOTTED_SPACE_EXCEEDED 1344
     * }
     */
    public static int ERROR_ALLOTTED_SPACE_EXCEEDED() {
        return ERROR_ALLOTTED_SPACE_EXCEEDED;
    }
    private static final int ERROR_INVALID_GROUP_ATTRIBUTES = (int)1345L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_GROUP_ATTRIBUTES 1345
     * }
     */
    public static int ERROR_INVALID_GROUP_ATTRIBUTES() {
        return ERROR_INVALID_GROUP_ATTRIBUTES;
    }
    private static final int ERROR_BAD_IMPERSONATION_LEVEL = (int)1346L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BAD_IMPERSONATION_LEVEL 1346
     * }
     */
    public static int ERROR_BAD_IMPERSONATION_LEVEL() {
        return ERROR_BAD_IMPERSONATION_LEVEL;
    }
    private static final int ERROR_CANT_OPEN_ANONYMOUS = (int)1347L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CANT_OPEN_ANONYMOUS 1347
     * }
     */
    public static int ERROR_CANT_OPEN_ANONYMOUS() {
        return ERROR_CANT_OPEN_ANONYMOUS;
    }
    private static final int ERROR_BAD_VALIDATION_CLASS = (int)1348L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BAD_VALIDATION_CLASS 1348
     * }
     */
    public static int ERROR_BAD_VALIDATION_CLASS() {
        return ERROR_BAD_VALIDATION_CLASS;
    }
    private static final int ERROR_BAD_TOKEN_TYPE = (int)1349L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BAD_TOKEN_TYPE 1349
     * }
     */
    public static int ERROR_BAD_TOKEN_TYPE() {
        return ERROR_BAD_TOKEN_TYPE;
    }
    private static final int ERROR_NO_SECURITY_ON_OBJECT = (int)1350L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_SECURITY_ON_OBJECT 1350
     * }
     */
    public static int ERROR_NO_SECURITY_ON_OBJECT() {
        return ERROR_NO_SECURITY_ON_OBJECT;
    }
    private static final int ERROR_CANT_ACCESS_DOMAIN_INFO = (int)1351L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CANT_ACCESS_DOMAIN_INFO 1351
     * }
     */
    public static int ERROR_CANT_ACCESS_DOMAIN_INFO() {
        return ERROR_CANT_ACCESS_DOMAIN_INFO;
    }
    private static final int ERROR_INVALID_SERVER_STATE = (int)1352L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_SERVER_STATE 1352
     * }
     */
    public static int ERROR_INVALID_SERVER_STATE() {
        return ERROR_INVALID_SERVER_STATE;
    }
    private static final int ERROR_INVALID_DOMAIN_STATE = (int)1353L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_DOMAIN_STATE 1353
     * }
     */
    public static int ERROR_INVALID_DOMAIN_STATE() {
        return ERROR_INVALID_DOMAIN_STATE;
    }
    private static final int ERROR_INVALID_DOMAIN_ROLE = (int)1354L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_DOMAIN_ROLE 1354
     * }
     */
    public static int ERROR_INVALID_DOMAIN_ROLE() {
        return ERROR_INVALID_DOMAIN_ROLE;
    }
    private static final int ERROR_NO_SUCH_DOMAIN = (int)1355L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_SUCH_DOMAIN 1355
     * }
     */
    public static int ERROR_NO_SUCH_DOMAIN() {
        return ERROR_NO_SUCH_DOMAIN;
    }
    private static final int ERROR_DOMAIN_EXISTS = (int)1356L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DOMAIN_EXISTS 1356
     * }
     */
    public static int ERROR_DOMAIN_EXISTS() {
        return ERROR_DOMAIN_EXISTS;
    }
    private static final int ERROR_DOMAIN_LIMIT_EXCEEDED = (int)1357L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DOMAIN_LIMIT_EXCEEDED 1357
     * }
     */
    public static int ERROR_DOMAIN_LIMIT_EXCEEDED() {
        return ERROR_DOMAIN_LIMIT_EXCEEDED;
    }
    private static final int ERROR_INTERNAL_DB_CORRUPTION = (int)1358L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INTERNAL_DB_CORRUPTION 1358
     * }
     */
    public static int ERROR_INTERNAL_DB_CORRUPTION() {
        return ERROR_INTERNAL_DB_CORRUPTION;
    }
    private static final int ERROR_INTERNAL_ERROR = (int)1359L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INTERNAL_ERROR 1359
     * }
     */
    public static int ERROR_INTERNAL_ERROR() {
        return ERROR_INTERNAL_ERROR;
    }
    private static final int ERROR_GENERIC_NOT_MAPPED = (int)1360L;
    /**
     * {@snippet lang=c :
     * #define ERROR_GENERIC_NOT_MAPPED 1360
     * }
     */
    public static int ERROR_GENERIC_NOT_MAPPED() {
        return ERROR_GENERIC_NOT_MAPPED;
    }
    private static final int ERROR_BAD_DESCRIPTOR_FORMAT = (int)1361L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BAD_DESCRIPTOR_FORMAT 1361
     * }
     */
    public static int ERROR_BAD_DESCRIPTOR_FORMAT() {
        return ERROR_BAD_DESCRIPTOR_FORMAT;
    }
    private static final int ERROR_NOT_LOGON_PROCESS = (int)1362L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_LOGON_PROCESS 1362
     * }
     */
    public static int ERROR_NOT_LOGON_PROCESS() {
        return ERROR_NOT_LOGON_PROCESS;
    }
    private static final int ERROR_LOGON_SESSION_EXISTS = (int)1363L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOGON_SESSION_EXISTS 1363
     * }
     */
    public static int ERROR_LOGON_SESSION_EXISTS() {
        return ERROR_LOGON_SESSION_EXISTS;
    }
    private static final int ERROR_NO_SUCH_PACKAGE = (int)1364L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_SUCH_PACKAGE 1364
     * }
     */
    public static int ERROR_NO_SUCH_PACKAGE() {
        return ERROR_NO_SUCH_PACKAGE;
    }
    private static final int ERROR_BAD_LOGON_SESSION_STATE = (int)1365L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BAD_LOGON_SESSION_STATE 1365
     * }
     */
    public static int ERROR_BAD_LOGON_SESSION_STATE() {
        return ERROR_BAD_LOGON_SESSION_STATE;
    }
    private static final int ERROR_LOGON_SESSION_COLLISION = (int)1366L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOGON_SESSION_COLLISION 1366
     * }
     */
    public static int ERROR_LOGON_SESSION_COLLISION() {
        return ERROR_LOGON_SESSION_COLLISION;
    }
    private static final int ERROR_INVALID_LOGON_TYPE = (int)1367L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_LOGON_TYPE 1367
     * }
     */
    public static int ERROR_INVALID_LOGON_TYPE() {
        return ERROR_INVALID_LOGON_TYPE;
    }
    private static final int ERROR_CANNOT_IMPERSONATE = (int)1368L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CANNOT_IMPERSONATE 1368
     * }
     */
    public static int ERROR_CANNOT_IMPERSONATE() {
        return ERROR_CANNOT_IMPERSONATE;
    }
    private static final int ERROR_RXACT_INVALID_STATE = (int)1369L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RXACT_INVALID_STATE 1369
     * }
     */
    public static int ERROR_RXACT_INVALID_STATE() {
        return ERROR_RXACT_INVALID_STATE;
    }
    private static final int ERROR_RXACT_COMMIT_FAILURE = (int)1370L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RXACT_COMMIT_FAILURE 1370
     * }
     */
    public static int ERROR_RXACT_COMMIT_FAILURE() {
        return ERROR_RXACT_COMMIT_FAILURE;
    }
    private static final int ERROR_SPECIAL_ACCOUNT = (int)1371L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SPECIAL_ACCOUNT 1371
     * }
     */
    public static int ERROR_SPECIAL_ACCOUNT() {
        return ERROR_SPECIAL_ACCOUNT;
    }
    private static final int ERROR_SPECIAL_GROUP = (int)1372L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SPECIAL_GROUP 1372
     * }
     */
    public static int ERROR_SPECIAL_GROUP() {
        return ERROR_SPECIAL_GROUP;
    }
    private static final int ERROR_SPECIAL_USER = (int)1373L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SPECIAL_USER 1373
     * }
     */
    public static int ERROR_SPECIAL_USER() {
        return ERROR_SPECIAL_USER;
    }
    private static final int ERROR_MEMBERS_PRIMARY_GROUP = (int)1374L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MEMBERS_PRIMARY_GROUP 1374
     * }
     */
    public static int ERROR_MEMBERS_PRIMARY_GROUP() {
        return ERROR_MEMBERS_PRIMARY_GROUP;
    }
    private static final int ERROR_TOKEN_ALREADY_IN_USE = (int)1375L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TOKEN_ALREADY_IN_USE 1375
     * }
     */
    public static int ERROR_TOKEN_ALREADY_IN_USE() {
        return ERROR_TOKEN_ALREADY_IN_USE;
    }
    private static final int ERROR_NO_SUCH_ALIAS = (int)1376L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_SUCH_ALIAS 1376
     * }
     */
    public static int ERROR_NO_SUCH_ALIAS() {
        return ERROR_NO_SUCH_ALIAS;
    }
    private static final int ERROR_MEMBER_NOT_IN_ALIAS = (int)1377L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MEMBER_NOT_IN_ALIAS 1377
     * }
     */
    public static int ERROR_MEMBER_NOT_IN_ALIAS() {
        return ERROR_MEMBER_NOT_IN_ALIAS;
    }
    private static final int ERROR_MEMBER_IN_ALIAS = (int)1378L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MEMBER_IN_ALIAS 1378
     * }
     */
    public static int ERROR_MEMBER_IN_ALIAS() {
        return ERROR_MEMBER_IN_ALIAS;
    }
    private static final int ERROR_ALIAS_EXISTS = (int)1379L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ALIAS_EXISTS 1379
     * }
     */
    public static int ERROR_ALIAS_EXISTS() {
        return ERROR_ALIAS_EXISTS;
    }
    private static final int ERROR_LOGON_NOT_GRANTED = (int)1380L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOGON_NOT_GRANTED 1380
     * }
     */
    public static int ERROR_LOGON_NOT_GRANTED() {
        return ERROR_LOGON_NOT_GRANTED;
    }
    private static final int ERROR_TOO_MANY_SECRETS = (int)1381L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TOO_MANY_SECRETS 1381
     * }
     */
    public static int ERROR_TOO_MANY_SECRETS() {
        return ERROR_TOO_MANY_SECRETS;
    }
    private static final int ERROR_SECRET_TOO_LONG = (int)1382L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SECRET_TOO_LONG 1382
     * }
     */
    public static int ERROR_SECRET_TOO_LONG() {
        return ERROR_SECRET_TOO_LONG;
    }
    private static final int ERROR_INTERNAL_DB_ERROR = (int)1383L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INTERNAL_DB_ERROR 1383
     * }
     */
    public static int ERROR_INTERNAL_DB_ERROR() {
        return ERROR_INTERNAL_DB_ERROR;
    }
    private static final int ERROR_TOO_MANY_CONTEXT_IDS = (int)1384L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TOO_MANY_CONTEXT_IDS 1384
     * }
     */
    public static int ERROR_TOO_MANY_CONTEXT_IDS() {
        return ERROR_TOO_MANY_CONTEXT_IDS;
    }
    private static final int ERROR_LOGON_TYPE_NOT_GRANTED = (int)1385L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOGON_TYPE_NOT_GRANTED 1385
     * }
     */
    public static int ERROR_LOGON_TYPE_NOT_GRANTED() {
        return ERROR_LOGON_TYPE_NOT_GRANTED;
    }
    private static final int ERROR_NT_CROSS_ENCRYPTION_REQUIRED = (int)1386L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NT_CROSS_ENCRYPTION_REQUIRED 1386
     * }
     */
    public static int ERROR_NT_CROSS_ENCRYPTION_REQUIRED() {
        return ERROR_NT_CROSS_ENCRYPTION_REQUIRED;
    }
    private static final int ERROR_NO_SUCH_MEMBER = (int)1387L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_SUCH_MEMBER 1387
     * }
     */
    public static int ERROR_NO_SUCH_MEMBER() {
        return ERROR_NO_SUCH_MEMBER;
    }
    private static final int ERROR_INVALID_MEMBER = (int)1388L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_MEMBER 1388
     * }
     */
    public static int ERROR_INVALID_MEMBER() {
        return ERROR_INVALID_MEMBER;
    }
    private static final int ERROR_TOO_MANY_SIDS = (int)1389L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TOO_MANY_SIDS 1389
     * }
     */
    public static int ERROR_TOO_MANY_SIDS() {
        return ERROR_TOO_MANY_SIDS;
    }
    private static final int ERROR_LM_CROSS_ENCRYPTION_REQUIRED = (int)1390L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LM_CROSS_ENCRYPTION_REQUIRED 1390
     * }
     */
    public static int ERROR_LM_CROSS_ENCRYPTION_REQUIRED() {
        return ERROR_LM_CROSS_ENCRYPTION_REQUIRED;
    }
    private static final int ERROR_NO_INHERITANCE = (int)1391L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_INHERITANCE 1391
     * }
     */
    public static int ERROR_NO_INHERITANCE() {
        return ERROR_NO_INHERITANCE;
    }
    private static final int ERROR_FILE_CORRUPT = (int)1392L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FILE_CORRUPT 1392
     * }
     */
    public static int ERROR_FILE_CORRUPT() {
        return ERROR_FILE_CORRUPT;
    }
    private static final int ERROR_DISK_CORRUPT = (int)1393L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DISK_CORRUPT 1393
     * }
     */
    public static int ERROR_DISK_CORRUPT() {
        return ERROR_DISK_CORRUPT;
    }
    private static final int ERROR_NO_USER_SESSION_KEY = (int)1394L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_USER_SESSION_KEY 1394
     * }
     */
    public static int ERROR_NO_USER_SESSION_KEY() {
        return ERROR_NO_USER_SESSION_KEY;
    }
    private static final int ERROR_LICENSE_QUOTA_EXCEEDED = (int)1395L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LICENSE_QUOTA_EXCEEDED 1395
     * }
     */
    public static int ERROR_LICENSE_QUOTA_EXCEEDED() {
        return ERROR_LICENSE_QUOTA_EXCEEDED;
    }
    private static final int ERROR_WRONG_TARGET_NAME = (int)1396L;
    /**
     * {@snippet lang=c :
     * #define ERROR_WRONG_TARGET_NAME 1396
     * }
     */
    public static int ERROR_WRONG_TARGET_NAME() {
        return ERROR_WRONG_TARGET_NAME;
    }
    private static final int ERROR_MUTUAL_AUTH_FAILED = (int)1397L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MUTUAL_AUTH_FAILED 1397
     * }
     */
    public static int ERROR_MUTUAL_AUTH_FAILED() {
        return ERROR_MUTUAL_AUTH_FAILED;
    }
    private static final int ERROR_TIME_SKEW = (int)1398L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TIME_SKEW 1398
     * }
     */
    public static int ERROR_TIME_SKEW() {
        return ERROR_TIME_SKEW;
    }
    private static final int ERROR_CURRENT_DOMAIN_NOT_ALLOWED = (int)1399L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CURRENT_DOMAIN_NOT_ALLOWED 1399
     * }
     */
    public static int ERROR_CURRENT_DOMAIN_NOT_ALLOWED() {
        return ERROR_CURRENT_DOMAIN_NOT_ALLOWED;
    }
    private static final int ERROR_INVALID_WINDOW_HANDLE = (int)1400L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_WINDOW_HANDLE 1400
     * }
     */
    public static int ERROR_INVALID_WINDOW_HANDLE() {
        return ERROR_INVALID_WINDOW_HANDLE;
    }
    private static final int ERROR_INVALID_MENU_HANDLE = (int)1401L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_MENU_HANDLE 1401
     * }
     */
    public static int ERROR_INVALID_MENU_HANDLE() {
        return ERROR_INVALID_MENU_HANDLE;
    }
    private static final int ERROR_INVALID_CURSOR_HANDLE = (int)1402L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_CURSOR_HANDLE 1402
     * }
     */
    public static int ERROR_INVALID_CURSOR_HANDLE() {
        return ERROR_INVALID_CURSOR_HANDLE;
    }
    private static final int ERROR_INVALID_ACCEL_HANDLE = (int)1403L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_ACCEL_HANDLE 1403
     * }
     */
    public static int ERROR_INVALID_ACCEL_HANDLE() {
        return ERROR_INVALID_ACCEL_HANDLE;
    }
    private static final int ERROR_INVALID_HOOK_HANDLE = (int)1404L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_HOOK_HANDLE 1404
     * }
     */
    public static int ERROR_INVALID_HOOK_HANDLE() {
        return ERROR_INVALID_HOOK_HANDLE;
    }
    private static final int ERROR_INVALID_DWP_HANDLE = (int)1405L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_DWP_HANDLE 1405
     * }
     */
    public static int ERROR_INVALID_DWP_HANDLE() {
        return ERROR_INVALID_DWP_HANDLE;
    }
    private static final int ERROR_TLW_WITH_WSCHILD = (int)1406L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TLW_WITH_WSCHILD 1406
     * }
     */
    public static int ERROR_TLW_WITH_WSCHILD() {
        return ERROR_TLW_WITH_WSCHILD;
    }
    private static final int ERROR_CANNOT_FIND_WND_CLASS = (int)1407L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CANNOT_FIND_WND_CLASS 1407
     * }
     */
    public static int ERROR_CANNOT_FIND_WND_CLASS() {
        return ERROR_CANNOT_FIND_WND_CLASS;
    }
    private static final int ERROR_WINDOW_OF_OTHER_THREAD = (int)1408L;
    /**
     * {@snippet lang=c :
     * #define ERROR_WINDOW_OF_OTHER_THREAD 1408
     * }
     */
    public static int ERROR_WINDOW_OF_OTHER_THREAD() {
        return ERROR_WINDOW_OF_OTHER_THREAD;
    }
    private static final int ERROR_HOTKEY_ALREADY_REGISTERED = (int)1409L;
    /**
     * {@snippet lang=c :
     * #define ERROR_HOTKEY_ALREADY_REGISTERED 1409
     * }
     */
    public static int ERROR_HOTKEY_ALREADY_REGISTERED() {
        return ERROR_HOTKEY_ALREADY_REGISTERED;
    }
    private static final int ERROR_CLASS_ALREADY_EXISTS = (int)1410L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLASS_ALREADY_EXISTS 1410
     * }
     */
    public static int ERROR_CLASS_ALREADY_EXISTS() {
        return ERROR_CLASS_ALREADY_EXISTS;
    }
    private static final int ERROR_CLASS_DOES_NOT_EXIST = (int)1411L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLASS_DOES_NOT_EXIST 1411
     * }
     */
    public static int ERROR_CLASS_DOES_NOT_EXIST() {
        return ERROR_CLASS_DOES_NOT_EXIST;
    }
    private static final int ERROR_CLASS_HAS_WINDOWS = (int)1412L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLASS_HAS_WINDOWS 1412
     * }
     */
    public static int ERROR_CLASS_HAS_WINDOWS() {
        return ERROR_CLASS_HAS_WINDOWS;
    }
    private static final int ERROR_INVALID_INDEX = (int)1413L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_INDEX 1413
     * }
     */
    public static int ERROR_INVALID_INDEX() {
        return ERROR_INVALID_INDEX;
    }
    private static final int ERROR_INVALID_ICON_HANDLE = (int)1414L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_ICON_HANDLE 1414
     * }
     */
    public static int ERROR_INVALID_ICON_HANDLE() {
        return ERROR_INVALID_ICON_HANDLE;
    }
    private static final int ERROR_PRIVATE_DIALOG_INDEX = (int)1415L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PRIVATE_DIALOG_INDEX 1415
     * }
     */
    public static int ERROR_PRIVATE_DIALOG_INDEX() {
        return ERROR_PRIVATE_DIALOG_INDEX;
    }
    private static final int ERROR_LISTBOX_ID_NOT_FOUND = (int)1416L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LISTBOX_ID_NOT_FOUND 1416
     * }
     */
    public static int ERROR_LISTBOX_ID_NOT_FOUND() {
        return ERROR_LISTBOX_ID_NOT_FOUND;
    }
    private static final int ERROR_NO_WILDCARD_CHARACTERS = (int)1417L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_WILDCARD_CHARACTERS 1417
     * }
     */
    public static int ERROR_NO_WILDCARD_CHARACTERS() {
        return ERROR_NO_WILDCARD_CHARACTERS;
    }
    private static final int ERROR_CLIPBOARD_NOT_OPEN = (int)1418L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLIPBOARD_NOT_OPEN 1418
     * }
     */
    public static int ERROR_CLIPBOARD_NOT_OPEN() {
        return ERROR_CLIPBOARD_NOT_OPEN;
    }
    private static final int ERROR_HOTKEY_NOT_REGISTERED = (int)1419L;
    /**
     * {@snippet lang=c :
     * #define ERROR_HOTKEY_NOT_REGISTERED 1419
     * }
     */
    public static int ERROR_HOTKEY_NOT_REGISTERED() {
        return ERROR_HOTKEY_NOT_REGISTERED;
    }
    private static final int ERROR_WINDOW_NOT_DIALOG = (int)1420L;
    /**
     * {@snippet lang=c :
     * #define ERROR_WINDOW_NOT_DIALOG 1420
     * }
     */
    public static int ERROR_WINDOW_NOT_DIALOG() {
        return ERROR_WINDOW_NOT_DIALOG;
    }
    private static final int ERROR_CONTROL_ID_NOT_FOUND = (int)1421L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CONTROL_ID_NOT_FOUND 1421
     * }
     */
    public static int ERROR_CONTROL_ID_NOT_FOUND() {
        return ERROR_CONTROL_ID_NOT_FOUND;
    }
    private static final int ERROR_INVALID_COMBOBOX_MESSAGE = (int)1422L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_COMBOBOX_MESSAGE 1422
     * }
     */
    public static int ERROR_INVALID_COMBOBOX_MESSAGE() {
        return ERROR_INVALID_COMBOBOX_MESSAGE;
    }
    private static final int ERROR_WINDOW_NOT_COMBOBOX = (int)1423L;
    /**
     * {@snippet lang=c :
     * #define ERROR_WINDOW_NOT_COMBOBOX 1423
     * }
     */
    public static int ERROR_WINDOW_NOT_COMBOBOX() {
        return ERROR_WINDOW_NOT_COMBOBOX;
    }
    private static final int ERROR_INVALID_EDIT_HEIGHT = (int)1424L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_EDIT_HEIGHT 1424
     * }
     */
    public static int ERROR_INVALID_EDIT_HEIGHT() {
        return ERROR_INVALID_EDIT_HEIGHT;
    }
    private static final int ERROR_DC_NOT_FOUND = (int)1425L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DC_NOT_FOUND 1425
     * }
     */
    public static int ERROR_DC_NOT_FOUND() {
        return ERROR_DC_NOT_FOUND;
    }
    private static final int ERROR_INVALID_HOOK_FILTER = (int)1426L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_HOOK_FILTER 1426
     * }
     */
    public static int ERROR_INVALID_HOOK_FILTER() {
        return ERROR_INVALID_HOOK_FILTER;
    }
    private static final int ERROR_INVALID_FILTER_PROC = (int)1427L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_FILTER_PROC 1427
     * }
     */
    public static int ERROR_INVALID_FILTER_PROC() {
        return ERROR_INVALID_FILTER_PROC;
    }
    private static final int ERROR_HOOK_NEEDS_HMOD = (int)1428L;
    /**
     * {@snippet lang=c :
     * #define ERROR_HOOK_NEEDS_HMOD 1428
     * }
     */
    public static int ERROR_HOOK_NEEDS_HMOD() {
        return ERROR_HOOK_NEEDS_HMOD;
    }
    private static final int ERROR_GLOBAL_ONLY_HOOK = (int)1429L;
    /**
     * {@snippet lang=c :
     * #define ERROR_GLOBAL_ONLY_HOOK 1429
     * }
     */
    public static int ERROR_GLOBAL_ONLY_HOOK() {
        return ERROR_GLOBAL_ONLY_HOOK;
    }
    private static final int ERROR_JOURNAL_HOOK_SET = (int)1430L;
    /**
     * {@snippet lang=c :
     * #define ERROR_JOURNAL_HOOK_SET 1430
     * }
     */
    public static int ERROR_JOURNAL_HOOK_SET() {
        return ERROR_JOURNAL_HOOK_SET;
    }
    private static final int ERROR_HOOK_NOT_INSTALLED = (int)1431L;
    /**
     * {@snippet lang=c :
     * #define ERROR_HOOK_NOT_INSTALLED 1431
     * }
     */
    public static int ERROR_HOOK_NOT_INSTALLED() {
        return ERROR_HOOK_NOT_INSTALLED;
    }
    private static final int ERROR_INVALID_LB_MESSAGE = (int)1432L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_LB_MESSAGE 1432
     * }
     */
    public static int ERROR_INVALID_LB_MESSAGE() {
        return ERROR_INVALID_LB_MESSAGE;
    }
    private static final int ERROR_SETCOUNT_ON_BAD_LB = (int)1433L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SETCOUNT_ON_BAD_LB 1433
     * }
     */
    public static int ERROR_SETCOUNT_ON_BAD_LB() {
        return ERROR_SETCOUNT_ON_BAD_LB;
    }
    private static final int ERROR_LB_WITHOUT_TABSTOPS = (int)1434L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LB_WITHOUT_TABSTOPS 1434
     * }
     */
    public static int ERROR_LB_WITHOUT_TABSTOPS() {
        return ERROR_LB_WITHOUT_TABSTOPS;
    }
    private static final int ERROR_DESTROY_OBJECT_OF_OTHER_THREAD = (int)1435L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DESTROY_OBJECT_OF_OTHER_THREAD 1435
     * }
     */
    public static int ERROR_DESTROY_OBJECT_OF_OTHER_THREAD() {
        return ERROR_DESTROY_OBJECT_OF_OTHER_THREAD;
    }
    private static final int ERROR_CHILD_WINDOW_MENU = (int)1436L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CHILD_WINDOW_MENU 1436
     * }
     */
    public static int ERROR_CHILD_WINDOW_MENU() {
        return ERROR_CHILD_WINDOW_MENU;
    }
    private static final int ERROR_NO_SYSTEM_MENU = (int)1437L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_SYSTEM_MENU 1437
     * }
     */
    public static int ERROR_NO_SYSTEM_MENU() {
        return ERROR_NO_SYSTEM_MENU;
    }
    private static final int ERROR_INVALID_MSGBOX_STYLE = (int)1438L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_MSGBOX_STYLE 1438
     * }
     */
    public static int ERROR_INVALID_MSGBOX_STYLE() {
        return ERROR_INVALID_MSGBOX_STYLE;
    }
    private static final int ERROR_INVALID_SPI_VALUE = (int)1439L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_SPI_VALUE 1439
     * }
     */
    public static int ERROR_INVALID_SPI_VALUE() {
        return ERROR_INVALID_SPI_VALUE;
    }
    private static final int ERROR_SCREEN_ALREADY_LOCKED = (int)1440L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SCREEN_ALREADY_LOCKED 1440
     * }
     */
    public static int ERROR_SCREEN_ALREADY_LOCKED() {
        return ERROR_SCREEN_ALREADY_LOCKED;
    }
    private static final int ERROR_HWNDS_HAVE_DIFF_PARENT = (int)1441L;
    /**
     * {@snippet lang=c :
     * #define ERROR_HWNDS_HAVE_DIFF_PARENT 1441
     * }
     */
    public static int ERROR_HWNDS_HAVE_DIFF_PARENT() {
        return ERROR_HWNDS_HAVE_DIFF_PARENT;
    }
    private static final int ERROR_NOT_CHILD_WINDOW = (int)1442L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_CHILD_WINDOW 1442
     * }
     */
    public static int ERROR_NOT_CHILD_WINDOW() {
        return ERROR_NOT_CHILD_WINDOW;
    }
    private static final int ERROR_INVALID_GW_COMMAND = (int)1443L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_GW_COMMAND 1443
     * }
     */
    public static int ERROR_INVALID_GW_COMMAND() {
        return ERROR_INVALID_GW_COMMAND;
    }
    private static final int ERROR_INVALID_THREAD_ID = (int)1444L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_THREAD_ID 1444
     * }
     */
    public static int ERROR_INVALID_THREAD_ID() {
        return ERROR_INVALID_THREAD_ID;
    }
    private static final int ERROR_NON_MDICHILD_WINDOW = (int)1445L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NON_MDICHILD_WINDOW 1445
     * }
     */
    public static int ERROR_NON_MDICHILD_WINDOW() {
        return ERROR_NON_MDICHILD_WINDOW;
    }
    private static final int ERROR_POPUP_ALREADY_ACTIVE = (int)1446L;
    /**
     * {@snippet lang=c :
     * #define ERROR_POPUP_ALREADY_ACTIVE 1446
     * }
     */
    public static int ERROR_POPUP_ALREADY_ACTIVE() {
        return ERROR_POPUP_ALREADY_ACTIVE;
    }
    private static final int ERROR_NO_SCROLLBARS = (int)1447L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_SCROLLBARS 1447
     * }
     */
    public static int ERROR_NO_SCROLLBARS() {
        return ERROR_NO_SCROLLBARS;
    }
    private static final int ERROR_INVALID_SCROLLBAR_RANGE = (int)1448L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_SCROLLBAR_RANGE 1448
     * }
     */
    public static int ERROR_INVALID_SCROLLBAR_RANGE() {
        return ERROR_INVALID_SCROLLBAR_RANGE;
    }
    private static final int ERROR_INVALID_SHOWWIN_COMMAND = (int)1449L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_SHOWWIN_COMMAND 1449
     * }
     */
    public static int ERROR_INVALID_SHOWWIN_COMMAND() {
        return ERROR_INVALID_SHOWWIN_COMMAND;
    }
    private static final int ERROR_NO_SYSTEM_RESOURCES = (int)1450L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_SYSTEM_RESOURCES 1450
     * }
     */
    public static int ERROR_NO_SYSTEM_RESOURCES() {
        return ERROR_NO_SYSTEM_RESOURCES;
    }
    private static final int ERROR_NONPAGED_SYSTEM_RESOURCES = (int)1451L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NONPAGED_SYSTEM_RESOURCES 1451
     * }
     */
    public static int ERROR_NONPAGED_SYSTEM_RESOURCES() {
        return ERROR_NONPAGED_SYSTEM_RESOURCES;
    }
    private static final int ERROR_PAGED_SYSTEM_RESOURCES = (int)1452L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PAGED_SYSTEM_RESOURCES 1452
     * }
     */
    public static int ERROR_PAGED_SYSTEM_RESOURCES() {
        return ERROR_PAGED_SYSTEM_RESOURCES;
    }
    private static final int ERROR_WORKING_SET_QUOTA = (int)1453L;
    /**
     * {@snippet lang=c :
     * #define ERROR_WORKING_SET_QUOTA 1453
     * }
     */
    public static int ERROR_WORKING_SET_QUOTA() {
        return ERROR_WORKING_SET_QUOTA;
    }
    private static final int ERROR_PAGEFILE_QUOTA = (int)1454L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PAGEFILE_QUOTA 1454
     * }
     */
    public static int ERROR_PAGEFILE_QUOTA() {
        return ERROR_PAGEFILE_QUOTA;
    }
    private static final int ERROR_COMMITMENT_LIMIT = (int)1455L;
    /**
     * {@snippet lang=c :
     * #define ERROR_COMMITMENT_LIMIT 1455
     * }
     */
    public static int ERROR_COMMITMENT_LIMIT() {
        return ERROR_COMMITMENT_LIMIT;
    }
    private static final int ERROR_MENU_ITEM_NOT_FOUND = (int)1456L;
    /**
     * {@snippet lang=c :
     * #define ERROR_MENU_ITEM_NOT_FOUND 1456
     * }
     */
    public static int ERROR_MENU_ITEM_NOT_FOUND() {
        return ERROR_MENU_ITEM_NOT_FOUND;
    }
    private static final int ERROR_INVALID_KEYBOARD_HANDLE = (int)1457L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_KEYBOARD_HANDLE 1457
     * }
     */
    public static int ERROR_INVALID_KEYBOARD_HANDLE() {
        return ERROR_INVALID_KEYBOARD_HANDLE;
    }
    private static final int ERROR_HOOK_TYPE_NOT_ALLOWED = (int)1458L;
    /**
     * {@snippet lang=c :
     * #define ERROR_HOOK_TYPE_NOT_ALLOWED 1458
     * }
     */
    public static int ERROR_HOOK_TYPE_NOT_ALLOWED() {
        return ERROR_HOOK_TYPE_NOT_ALLOWED;
    }
    private static final int ERROR_REQUIRES_INTERACTIVE_WINDOWSTATION = (int)1459L;
    /**
     * {@snippet lang=c :
     * #define ERROR_REQUIRES_INTERACTIVE_WINDOWSTATION 1459
     * }
     */
    public static int ERROR_REQUIRES_INTERACTIVE_WINDOWSTATION() {
        return ERROR_REQUIRES_INTERACTIVE_WINDOWSTATION;
    }
    private static final int ERROR_TIMEOUT = (int)1460L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TIMEOUT 1460
     * }
     */
    public static int ERROR_TIMEOUT() {
        return ERROR_TIMEOUT;
    }
    private static final int ERROR_INVALID_MONITOR_HANDLE = (int)1461L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_MONITOR_HANDLE 1461
     * }
     */
    public static int ERROR_INVALID_MONITOR_HANDLE() {
        return ERROR_INVALID_MONITOR_HANDLE;
    }
    private static final int ERROR_INCORRECT_SIZE = (int)1462L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INCORRECT_SIZE 1462
     * }
     */
    public static int ERROR_INCORRECT_SIZE() {
        return ERROR_INCORRECT_SIZE;
    }
    private static final int ERROR_SYMLINK_CLASS_DISABLED = (int)1463L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SYMLINK_CLASS_DISABLED 1463
     * }
     */
    public static int ERROR_SYMLINK_CLASS_DISABLED() {
        return ERROR_SYMLINK_CLASS_DISABLED;
    }
    private static final int ERROR_SYMLINK_NOT_SUPPORTED = (int)1464L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SYMLINK_NOT_SUPPORTED 1464
     * }
     */
    public static int ERROR_SYMLINK_NOT_SUPPORTED() {
        return ERROR_SYMLINK_NOT_SUPPORTED;
    }
    private static final int ERROR_XML_PARSE_ERROR = (int)1465L;
    /**
     * {@snippet lang=c :
     * #define ERROR_XML_PARSE_ERROR 1465
     * }
     */
    public static int ERROR_XML_PARSE_ERROR() {
        return ERROR_XML_PARSE_ERROR;
    }
    private static final int ERROR_XMLDSIG_ERROR = (int)1466L;
    /**
     * {@snippet lang=c :
     * #define ERROR_XMLDSIG_ERROR 1466
     * }
     */
    public static int ERROR_XMLDSIG_ERROR() {
        return ERROR_XMLDSIG_ERROR;
    }
    private static final int ERROR_RESTART_APPLICATION = (int)1467L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RESTART_APPLICATION 1467
     * }
     */
    public static int ERROR_RESTART_APPLICATION() {
        return ERROR_RESTART_APPLICATION;
    }
    private static final int ERROR_WRONG_COMPARTMENT = (int)1468L;
    /**
     * {@snippet lang=c :
     * #define ERROR_WRONG_COMPARTMENT 1468
     * }
     */
    public static int ERROR_WRONG_COMPARTMENT() {
        return ERROR_WRONG_COMPARTMENT;
    }
    private static final int ERROR_AUTHIP_FAILURE = (int)1469L;
    /**
     * {@snippet lang=c :
     * #define ERROR_AUTHIP_FAILURE 1469
     * }
     */
    public static int ERROR_AUTHIP_FAILURE() {
        return ERROR_AUTHIP_FAILURE;
    }
    private static final int ERROR_NO_NVRAM_RESOURCES = (int)1470L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_NVRAM_RESOURCES 1470
     * }
     */
    public static int ERROR_NO_NVRAM_RESOURCES() {
        return ERROR_NO_NVRAM_RESOURCES;
    }
    private static final int ERROR_NOT_GUI_PROCESS = (int)1471L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_GUI_PROCESS 1471
     * }
     */
    public static int ERROR_NOT_GUI_PROCESS() {
        return ERROR_NOT_GUI_PROCESS;
    }
    private static final int ERROR_EVENTLOG_FILE_CORRUPT = (int)1500L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EVENTLOG_FILE_CORRUPT 1500
     * }
     */
    public static int ERROR_EVENTLOG_FILE_CORRUPT() {
        return ERROR_EVENTLOG_FILE_CORRUPT;
    }
    private static final int ERROR_EVENTLOG_CANT_START = (int)1501L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EVENTLOG_CANT_START 1501
     * }
     */
    public static int ERROR_EVENTLOG_CANT_START() {
        return ERROR_EVENTLOG_CANT_START;
    }
    private static final int ERROR_LOG_FILE_FULL = (int)1502L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOG_FILE_FULL 1502
     * }
     */
    public static int ERROR_LOG_FILE_FULL() {
        return ERROR_LOG_FILE_FULL;
    }
    private static final int ERROR_EVENTLOG_FILE_CHANGED = (int)1503L;
    /**
     * {@snippet lang=c :
     * #define ERROR_EVENTLOG_FILE_CHANGED 1503
     * }
     */
    public static int ERROR_EVENTLOG_FILE_CHANGED() {
        return ERROR_EVENTLOG_FILE_CHANGED;
    }
    private static final int ERROR_CONTAINER_ASSIGNED = (int)1504L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CONTAINER_ASSIGNED 1504
     * }
     */
    public static int ERROR_CONTAINER_ASSIGNED() {
        return ERROR_CONTAINER_ASSIGNED;
    }
    private static final int ERROR_JOB_NO_CONTAINER = (int)1505L;
    /**
     * {@snippet lang=c :
     * #define ERROR_JOB_NO_CONTAINER 1505
     * }
     */
    public static int ERROR_JOB_NO_CONTAINER() {
        return ERROR_JOB_NO_CONTAINER;
    }
    private static final int ERROR_INVALID_TASK_NAME = (int)1550L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_TASK_NAME 1550
     * }
     */
    public static int ERROR_INVALID_TASK_NAME() {
        return ERROR_INVALID_TASK_NAME;
    }
    private static final int ERROR_INVALID_TASK_INDEX = (int)1551L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_TASK_INDEX 1551
     * }
     */
    public static int ERROR_INVALID_TASK_INDEX() {
        return ERROR_INVALID_TASK_INDEX;
    }
    private static final int ERROR_THREAD_ALREADY_IN_TASK = (int)1552L;
    /**
     * {@snippet lang=c :
     * #define ERROR_THREAD_ALREADY_IN_TASK 1552
     * }
     */
    public static int ERROR_THREAD_ALREADY_IN_TASK() {
        return ERROR_THREAD_ALREADY_IN_TASK;
    }
    private static final int ERROR_INSTALL_SERVICE_FAILURE = (int)1601L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INSTALL_SERVICE_FAILURE 1601
     * }
     */
    public static int ERROR_INSTALL_SERVICE_FAILURE() {
        return ERROR_INSTALL_SERVICE_FAILURE;
    }
    private static final int ERROR_INSTALL_USEREXIT = (int)1602L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INSTALL_USEREXIT 1602
     * }
     */
    public static int ERROR_INSTALL_USEREXIT() {
        return ERROR_INSTALL_USEREXIT;
    }
    private static final int ERROR_INSTALL_FAILURE = (int)1603L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INSTALL_FAILURE 1603
     * }
     */
    public static int ERROR_INSTALL_FAILURE() {
        return ERROR_INSTALL_FAILURE;
    }
    private static final int ERROR_INSTALL_SUSPEND = (int)1604L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INSTALL_SUSPEND 1604
     * }
     */
    public static int ERROR_INSTALL_SUSPEND() {
        return ERROR_INSTALL_SUSPEND;
    }
    private static final int ERROR_UNKNOWN_PRODUCT = (int)1605L;
    /**
     * {@snippet lang=c :
     * #define ERROR_UNKNOWN_PRODUCT 1605
     * }
     */
    public static int ERROR_UNKNOWN_PRODUCT() {
        return ERROR_UNKNOWN_PRODUCT;
    }
    private static final int ERROR_UNKNOWN_FEATURE = (int)1606L;
    /**
     * {@snippet lang=c :
     * #define ERROR_UNKNOWN_FEATURE 1606
     * }
     */
    public static int ERROR_UNKNOWN_FEATURE() {
        return ERROR_UNKNOWN_FEATURE;
    }
    private static final int ERROR_UNKNOWN_COMPONENT = (int)1607L;
    /**
     * {@snippet lang=c :
     * #define ERROR_UNKNOWN_COMPONENT 1607
     * }
     */
    public static int ERROR_UNKNOWN_COMPONENT() {
        return ERROR_UNKNOWN_COMPONENT;
    }
    private static final int ERROR_UNKNOWN_PROPERTY = (int)1608L;
    /**
     * {@snippet lang=c :
     * #define ERROR_UNKNOWN_PROPERTY 1608
     * }
     */
    public static int ERROR_UNKNOWN_PROPERTY() {
        return ERROR_UNKNOWN_PROPERTY;
    }
    private static final int ERROR_INVALID_HANDLE_STATE = (int)1609L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_HANDLE_STATE 1609
     * }
     */
    public static int ERROR_INVALID_HANDLE_STATE() {
        return ERROR_INVALID_HANDLE_STATE;
    }
    private static final int ERROR_BAD_CONFIGURATION = (int)1610L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BAD_CONFIGURATION 1610
     * }
     */
    public static int ERROR_BAD_CONFIGURATION() {
        return ERROR_BAD_CONFIGURATION;
    }
    private static final int ERROR_INDEX_ABSENT = (int)1611L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INDEX_ABSENT 1611
     * }
     */
    public static int ERROR_INDEX_ABSENT() {
        return ERROR_INDEX_ABSENT;
    }
    private static final int ERROR_INSTALL_SOURCE_ABSENT = (int)1612L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INSTALL_SOURCE_ABSENT 1612
     * }
     */
    public static int ERROR_INSTALL_SOURCE_ABSENT() {
        return ERROR_INSTALL_SOURCE_ABSENT;
    }
    private static final int ERROR_INSTALL_PACKAGE_VERSION = (int)1613L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INSTALL_PACKAGE_VERSION 1613
     * }
     */
    public static int ERROR_INSTALL_PACKAGE_VERSION() {
        return ERROR_INSTALL_PACKAGE_VERSION;
    }
    private static final int ERROR_PRODUCT_UNINSTALLED = (int)1614L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PRODUCT_UNINSTALLED 1614
     * }
     */
    public static int ERROR_PRODUCT_UNINSTALLED() {
        return ERROR_PRODUCT_UNINSTALLED;
    }
    private static final int ERROR_BAD_QUERY_SYNTAX = (int)1615L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BAD_QUERY_SYNTAX 1615
     * }
     */
    public static int ERROR_BAD_QUERY_SYNTAX() {
        return ERROR_BAD_QUERY_SYNTAX;
    }
    private static final int ERROR_INVALID_FIELD = (int)1616L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_FIELD 1616
     * }
     */
    public static int ERROR_INVALID_FIELD() {
        return ERROR_INVALID_FIELD;
    }
    private static final int ERROR_DEVICE_REMOVED = (int)1617L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DEVICE_REMOVED 1617
     * }
     */
    public static int ERROR_DEVICE_REMOVED() {
        return ERROR_DEVICE_REMOVED;
    }
    private static final int ERROR_INSTALL_ALREADY_RUNNING = (int)1618L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INSTALL_ALREADY_RUNNING 1618
     * }
     */
    public static int ERROR_INSTALL_ALREADY_RUNNING() {
        return ERROR_INSTALL_ALREADY_RUNNING;
    }
    private static final int ERROR_INSTALL_PACKAGE_OPEN_FAILED = (int)1619L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INSTALL_PACKAGE_OPEN_FAILED 1619
     * }
     */
    public static int ERROR_INSTALL_PACKAGE_OPEN_FAILED() {
        return ERROR_INSTALL_PACKAGE_OPEN_FAILED;
    }
    private static final int ERROR_INSTALL_PACKAGE_INVALID = (int)1620L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INSTALL_PACKAGE_INVALID 1620
     * }
     */
    public static int ERROR_INSTALL_PACKAGE_INVALID() {
        return ERROR_INSTALL_PACKAGE_INVALID;
    }
    private static final int ERROR_INSTALL_UI_FAILURE = (int)1621L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INSTALL_UI_FAILURE 1621
     * }
     */
    public static int ERROR_INSTALL_UI_FAILURE() {
        return ERROR_INSTALL_UI_FAILURE;
    }
    private static final int ERROR_INSTALL_LOG_FAILURE = (int)1622L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INSTALL_LOG_FAILURE 1622
     * }
     */
    public static int ERROR_INSTALL_LOG_FAILURE() {
        return ERROR_INSTALL_LOG_FAILURE;
    }
    private static final int ERROR_INSTALL_LANGUAGE_UNSUPPORTED = (int)1623L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INSTALL_LANGUAGE_UNSUPPORTED 1623
     * }
     */
    public static int ERROR_INSTALL_LANGUAGE_UNSUPPORTED() {
        return ERROR_INSTALL_LANGUAGE_UNSUPPORTED;
    }
    private static final int ERROR_INSTALL_TRANSFORM_FAILURE = (int)1624L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INSTALL_TRANSFORM_FAILURE 1624
     * }
     */
    public static int ERROR_INSTALL_TRANSFORM_FAILURE() {
        return ERROR_INSTALL_TRANSFORM_FAILURE;
    }
    private static final int ERROR_INSTALL_PACKAGE_REJECTED = (int)1625L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INSTALL_PACKAGE_REJECTED 1625
     * }
     */
    public static int ERROR_INSTALL_PACKAGE_REJECTED() {
        return ERROR_INSTALL_PACKAGE_REJECTED;
    }
    private static final int ERROR_FUNCTION_NOT_CALLED = (int)1626L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FUNCTION_NOT_CALLED 1626
     * }
     */
    public static int ERROR_FUNCTION_NOT_CALLED() {
        return ERROR_FUNCTION_NOT_CALLED;
    }
    private static final int ERROR_FUNCTION_FAILED = (int)1627L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FUNCTION_FAILED 1627
     * }
     */
    public static int ERROR_FUNCTION_FAILED() {
        return ERROR_FUNCTION_FAILED;
    }
    private static final int ERROR_INVALID_TABLE = (int)1628L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_TABLE 1628
     * }
     */
    public static int ERROR_INVALID_TABLE() {
        return ERROR_INVALID_TABLE;
    }
    private static final int ERROR_DATATYPE_MISMATCH = (int)1629L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DATATYPE_MISMATCH 1629
     * }
     */
    public static int ERROR_DATATYPE_MISMATCH() {
        return ERROR_DATATYPE_MISMATCH;
    }
    private static final int ERROR_UNSUPPORTED_TYPE = (int)1630L;
    /**
     * {@snippet lang=c :
     * #define ERROR_UNSUPPORTED_TYPE 1630
     * }
     */
    public static int ERROR_UNSUPPORTED_TYPE() {
        return ERROR_UNSUPPORTED_TYPE;
    }
    private static final int ERROR_CREATE_FAILED = (int)1631L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CREATE_FAILED 1631
     * }
     */
    public static int ERROR_CREATE_FAILED() {
        return ERROR_CREATE_FAILED;
    }
    private static final int ERROR_INSTALL_TEMP_UNWRITABLE = (int)1632L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INSTALL_TEMP_UNWRITABLE 1632
     * }
     */
    public static int ERROR_INSTALL_TEMP_UNWRITABLE() {
        return ERROR_INSTALL_TEMP_UNWRITABLE;
    }
    private static final int ERROR_INSTALL_PLATFORM_UNSUPPORTED = (int)1633L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INSTALL_PLATFORM_UNSUPPORTED 1633
     * }
     */
    public static int ERROR_INSTALL_PLATFORM_UNSUPPORTED() {
        return ERROR_INSTALL_PLATFORM_UNSUPPORTED;
    }
    private static final int ERROR_INSTALL_NOTUSED = (int)1634L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INSTALL_NOTUSED 1634
     * }
     */
    public static int ERROR_INSTALL_NOTUSED() {
        return ERROR_INSTALL_NOTUSED;
    }
    private static final int ERROR_PATCH_PACKAGE_OPEN_FAILED = (int)1635L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PATCH_PACKAGE_OPEN_FAILED 1635
     * }
     */
    public static int ERROR_PATCH_PACKAGE_OPEN_FAILED() {
        return ERROR_PATCH_PACKAGE_OPEN_FAILED;
    }
    private static final int ERROR_PATCH_PACKAGE_INVALID = (int)1636L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PATCH_PACKAGE_INVALID 1636
     * }
     */
    public static int ERROR_PATCH_PACKAGE_INVALID() {
        return ERROR_PATCH_PACKAGE_INVALID;
    }
    private static final int ERROR_PATCH_PACKAGE_UNSUPPORTED = (int)1637L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PATCH_PACKAGE_UNSUPPORTED 1637
     * }
     */
    public static int ERROR_PATCH_PACKAGE_UNSUPPORTED() {
        return ERROR_PATCH_PACKAGE_UNSUPPORTED;
    }
    private static final int ERROR_PRODUCT_VERSION = (int)1638L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PRODUCT_VERSION 1638
     * }
     */
    public static int ERROR_PRODUCT_VERSION() {
        return ERROR_PRODUCT_VERSION;
    }
    private static final int ERROR_INVALID_COMMAND_LINE = (int)1639L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_COMMAND_LINE 1639
     * }
     */
    public static int ERROR_INVALID_COMMAND_LINE() {
        return ERROR_INVALID_COMMAND_LINE;
    }
    private static final int ERROR_INSTALL_REMOTE_DISALLOWED = (int)1640L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INSTALL_REMOTE_DISALLOWED 1640
     * }
     */
    public static int ERROR_INSTALL_REMOTE_DISALLOWED() {
        return ERROR_INSTALL_REMOTE_DISALLOWED;
    }
    private static final int ERROR_SUCCESS_REBOOT_INITIATED = (int)1641L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SUCCESS_REBOOT_INITIATED 1641
     * }
     */
    public static int ERROR_SUCCESS_REBOOT_INITIATED() {
        return ERROR_SUCCESS_REBOOT_INITIATED;
    }
    private static final int ERROR_PATCH_TARGET_NOT_FOUND = (int)1642L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PATCH_TARGET_NOT_FOUND 1642
     * }
     */
    public static int ERROR_PATCH_TARGET_NOT_FOUND() {
        return ERROR_PATCH_TARGET_NOT_FOUND;
    }
    private static final int ERROR_PATCH_PACKAGE_REJECTED = (int)1643L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PATCH_PACKAGE_REJECTED 1643
     * }
     */
    public static int ERROR_PATCH_PACKAGE_REJECTED() {
        return ERROR_PATCH_PACKAGE_REJECTED;
    }
    private static final int ERROR_INSTALL_TRANSFORM_REJECTED = (int)1644L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INSTALL_TRANSFORM_REJECTED 1644
     * }
     */
    public static int ERROR_INSTALL_TRANSFORM_REJECTED() {
        return ERROR_INSTALL_TRANSFORM_REJECTED;
    }
    private static final int ERROR_INSTALL_REMOTE_PROHIBITED = (int)1645L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INSTALL_REMOTE_PROHIBITED 1645
     * }
     */
    public static int ERROR_INSTALL_REMOTE_PROHIBITED() {
        return ERROR_INSTALL_REMOTE_PROHIBITED;
    }
    private static final int ERROR_PATCH_REMOVAL_UNSUPPORTED = (int)1646L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PATCH_REMOVAL_UNSUPPORTED 1646
     * }
     */
    public static int ERROR_PATCH_REMOVAL_UNSUPPORTED() {
        return ERROR_PATCH_REMOVAL_UNSUPPORTED;
    }
    private static final int ERROR_UNKNOWN_PATCH = (int)1647L;
    /**
     * {@snippet lang=c :
     * #define ERROR_UNKNOWN_PATCH 1647
     * }
     */
    public static int ERROR_UNKNOWN_PATCH() {
        return ERROR_UNKNOWN_PATCH;
    }
    private static final int ERROR_PATCH_NO_SEQUENCE = (int)1648L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PATCH_NO_SEQUENCE 1648
     * }
     */
    public static int ERROR_PATCH_NO_SEQUENCE() {
        return ERROR_PATCH_NO_SEQUENCE;
    }
    private static final int ERROR_PATCH_REMOVAL_DISALLOWED = (int)1649L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PATCH_REMOVAL_DISALLOWED 1649
     * }
     */
    public static int ERROR_PATCH_REMOVAL_DISALLOWED() {
        return ERROR_PATCH_REMOVAL_DISALLOWED;
    }
    private static final int ERROR_INVALID_PATCH_XML = (int)1650L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_PATCH_XML 1650
     * }
     */
    public static int ERROR_INVALID_PATCH_XML() {
        return ERROR_INVALID_PATCH_XML;
    }
    private static final int ERROR_PATCH_MANAGED_ADVERTISED_PRODUCT = (int)1651L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PATCH_MANAGED_ADVERTISED_PRODUCT 1651
     * }
     */
    public static int ERROR_PATCH_MANAGED_ADVERTISED_PRODUCT() {
        return ERROR_PATCH_MANAGED_ADVERTISED_PRODUCT;
    }
    private static final int ERROR_INSTALL_SERVICE_SAFEBOOT = (int)1652L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INSTALL_SERVICE_SAFEBOOT 1652
     * }
     */
    public static int ERROR_INSTALL_SERVICE_SAFEBOOT() {
        return ERROR_INSTALL_SERVICE_SAFEBOOT;
    }
    private static final int ERROR_FAIL_FAST_EXCEPTION = (int)1653L;
    /**
     * {@snippet lang=c :
     * #define ERROR_FAIL_FAST_EXCEPTION 1653
     * }
     */
    public static int ERROR_FAIL_FAST_EXCEPTION() {
        return ERROR_FAIL_FAST_EXCEPTION;
    }
    private static final int ERROR_INSTALL_REJECTED = (int)1654L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INSTALL_REJECTED 1654
     * }
     */
    public static int ERROR_INSTALL_REJECTED() {
        return ERROR_INSTALL_REJECTED;
    }
    private static final int ERROR_DYNAMIC_CODE_BLOCKED = (int)1655L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DYNAMIC_CODE_BLOCKED 1655
     * }
     */
    public static int ERROR_DYNAMIC_CODE_BLOCKED() {
        return ERROR_DYNAMIC_CODE_BLOCKED;
    }
    private static final int ERROR_NOT_SAME_OBJECT = (int)1656L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_SAME_OBJECT 1656
     * }
     */
    public static int ERROR_NOT_SAME_OBJECT() {
        return ERROR_NOT_SAME_OBJECT;
    }
    private static final int ERROR_STRICT_CFG_VIOLATION = (int)1657L;
    /**
     * {@snippet lang=c :
     * #define ERROR_STRICT_CFG_VIOLATION 1657
     * }
     */
    public static int ERROR_STRICT_CFG_VIOLATION() {
        return ERROR_STRICT_CFG_VIOLATION;
    }
    private static final int ERROR_SET_CONTEXT_DENIED = (int)1660L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SET_CONTEXT_DENIED 1660
     * }
     */
    public static int ERROR_SET_CONTEXT_DENIED() {
        return ERROR_SET_CONTEXT_DENIED;
    }
    private static final int ERROR_CROSS_PARTITION_VIOLATION = (int)1661L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CROSS_PARTITION_VIOLATION 1661
     * }
     */
    public static int ERROR_CROSS_PARTITION_VIOLATION() {
        return ERROR_CROSS_PARTITION_VIOLATION;
    }
    private static final int ERROR_RETURN_ADDRESS_HIJACK_ATTEMPT = (int)1662L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RETURN_ADDRESS_HIJACK_ATTEMPT 1662
     * }
     */
    public static int ERROR_RETURN_ADDRESS_HIJACK_ATTEMPT() {
        return ERROR_RETURN_ADDRESS_HIJACK_ATTEMPT;
    }
    private static final int RPC_S_INVALID_STRING_BINDING = (int)1700L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_INVALID_STRING_BINDING 1700
     * }
     */
    public static int RPC_S_INVALID_STRING_BINDING() {
        return RPC_S_INVALID_STRING_BINDING;
    }
    private static final int RPC_S_WRONG_KIND_OF_BINDING = (int)1701L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_WRONG_KIND_OF_BINDING 1701
     * }
     */
    public static int RPC_S_WRONG_KIND_OF_BINDING() {
        return RPC_S_WRONG_KIND_OF_BINDING;
    }
    private static final int RPC_S_INVALID_BINDING = (int)1702L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_INVALID_BINDING 1702
     * }
     */
    public static int RPC_S_INVALID_BINDING() {
        return RPC_S_INVALID_BINDING;
    }
    private static final int RPC_S_PROTSEQ_NOT_SUPPORTED = (int)1703L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_PROTSEQ_NOT_SUPPORTED 1703
     * }
     */
    public static int RPC_S_PROTSEQ_NOT_SUPPORTED() {
        return RPC_S_PROTSEQ_NOT_SUPPORTED;
    }
    private static final int RPC_S_INVALID_RPC_PROTSEQ = (int)1704L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_INVALID_RPC_PROTSEQ 1704
     * }
     */
    public static int RPC_S_INVALID_RPC_PROTSEQ() {
        return RPC_S_INVALID_RPC_PROTSEQ;
    }
    private static final int RPC_S_INVALID_STRING_UUID = (int)1705L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_INVALID_STRING_UUID 1705
     * }
     */
    public static int RPC_S_INVALID_STRING_UUID() {
        return RPC_S_INVALID_STRING_UUID;
    }
    private static final int RPC_S_INVALID_ENDPOINT_FORMAT = (int)1706L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_INVALID_ENDPOINT_FORMAT 1706
     * }
     */
    public static int RPC_S_INVALID_ENDPOINT_FORMAT() {
        return RPC_S_INVALID_ENDPOINT_FORMAT;
    }
    private static final int RPC_S_INVALID_NET_ADDR = (int)1707L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_INVALID_NET_ADDR 1707
     * }
     */
    public static int RPC_S_INVALID_NET_ADDR() {
        return RPC_S_INVALID_NET_ADDR;
    }
    private static final int RPC_S_NO_ENDPOINT_FOUND = (int)1708L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_NO_ENDPOINT_FOUND 1708
     * }
     */
    public static int RPC_S_NO_ENDPOINT_FOUND() {
        return RPC_S_NO_ENDPOINT_FOUND;
    }
    private static final int RPC_S_INVALID_TIMEOUT = (int)1709L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_INVALID_TIMEOUT 1709
     * }
     */
    public static int RPC_S_INVALID_TIMEOUT() {
        return RPC_S_INVALID_TIMEOUT;
    }
    private static final int RPC_S_OBJECT_NOT_FOUND = (int)1710L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_OBJECT_NOT_FOUND 1710
     * }
     */
    public static int RPC_S_OBJECT_NOT_FOUND() {
        return RPC_S_OBJECT_NOT_FOUND;
    }
    private static final int RPC_S_ALREADY_REGISTERED = (int)1711L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_ALREADY_REGISTERED 1711
     * }
     */
    public static int RPC_S_ALREADY_REGISTERED() {
        return RPC_S_ALREADY_REGISTERED;
    }
    private static final int RPC_S_TYPE_ALREADY_REGISTERED = (int)1712L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_TYPE_ALREADY_REGISTERED 1712
     * }
     */
    public static int RPC_S_TYPE_ALREADY_REGISTERED() {
        return RPC_S_TYPE_ALREADY_REGISTERED;
    }
    private static final int RPC_S_ALREADY_LISTENING = (int)1713L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_ALREADY_LISTENING 1713
     * }
     */
    public static int RPC_S_ALREADY_LISTENING() {
        return RPC_S_ALREADY_LISTENING;
    }
    private static final int RPC_S_NO_PROTSEQS_REGISTERED = (int)1714L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_NO_PROTSEQS_REGISTERED 1714
     * }
     */
    public static int RPC_S_NO_PROTSEQS_REGISTERED() {
        return RPC_S_NO_PROTSEQS_REGISTERED;
    }
    private static final int RPC_S_NOT_LISTENING = (int)1715L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_NOT_LISTENING 1715
     * }
     */
    public static int RPC_S_NOT_LISTENING() {
        return RPC_S_NOT_LISTENING;
    }
    private static final int RPC_S_UNKNOWN_MGR_TYPE = (int)1716L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_UNKNOWN_MGR_TYPE 1716
     * }
     */
    public static int RPC_S_UNKNOWN_MGR_TYPE() {
        return RPC_S_UNKNOWN_MGR_TYPE;
    }
    private static final int RPC_S_UNKNOWN_IF = (int)1717L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_UNKNOWN_IF 1717
     * }
     */
    public static int RPC_S_UNKNOWN_IF() {
        return RPC_S_UNKNOWN_IF;
    }
    private static final int RPC_S_NO_BINDINGS = (int)1718L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_NO_BINDINGS 1718
     * }
     */
    public static int RPC_S_NO_BINDINGS() {
        return RPC_S_NO_BINDINGS;
    }
    private static final int RPC_S_NO_PROTSEQS = (int)1719L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_NO_PROTSEQS 1719
     * }
     */
    public static int RPC_S_NO_PROTSEQS() {
        return RPC_S_NO_PROTSEQS;
    }
    private static final int RPC_S_CANT_CREATE_ENDPOINT = (int)1720L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_CANT_CREATE_ENDPOINT 1720
     * }
     */
    public static int RPC_S_CANT_CREATE_ENDPOINT() {
        return RPC_S_CANT_CREATE_ENDPOINT;
    }
    private static final int RPC_S_OUT_OF_RESOURCES = (int)1721L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_OUT_OF_RESOURCES 1721
     * }
     */
    public static int RPC_S_OUT_OF_RESOURCES() {
        return RPC_S_OUT_OF_RESOURCES;
    }
    private static final int RPC_S_SERVER_UNAVAILABLE = (int)1722L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_SERVER_UNAVAILABLE 1722
     * }
     */
    public static int RPC_S_SERVER_UNAVAILABLE() {
        return RPC_S_SERVER_UNAVAILABLE;
    }
    private static final int RPC_S_SERVER_TOO_BUSY = (int)1723L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_SERVER_TOO_BUSY 1723
     * }
     */
    public static int RPC_S_SERVER_TOO_BUSY() {
        return RPC_S_SERVER_TOO_BUSY;
    }
    private static final int RPC_S_INVALID_NETWORK_OPTIONS = (int)1724L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_INVALID_NETWORK_OPTIONS 1724
     * }
     */
    public static int RPC_S_INVALID_NETWORK_OPTIONS() {
        return RPC_S_INVALID_NETWORK_OPTIONS;
    }
    private static final int RPC_S_NO_CALL_ACTIVE = (int)1725L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_NO_CALL_ACTIVE 1725
     * }
     */
    public static int RPC_S_NO_CALL_ACTIVE() {
        return RPC_S_NO_CALL_ACTIVE;
    }
    private static final int RPC_S_CALL_FAILED = (int)1726L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_CALL_FAILED 1726
     * }
     */
    public static int RPC_S_CALL_FAILED() {
        return RPC_S_CALL_FAILED;
    }
    private static final int RPC_S_CALL_FAILED_DNE = (int)1727L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_CALL_FAILED_DNE 1727
     * }
     */
    public static int RPC_S_CALL_FAILED_DNE() {
        return RPC_S_CALL_FAILED_DNE;
    }
    private static final int RPC_S_PROTOCOL_ERROR = (int)1728L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_PROTOCOL_ERROR 1728
     * }
     */
    public static int RPC_S_PROTOCOL_ERROR() {
        return RPC_S_PROTOCOL_ERROR;
    }
    private static final int RPC_S_PROXY_ACCESS_DENIED = (int)1729L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_PROXY_ACCESS_DENIED 1729
     * }
     */
    public static int RPC_S_PROXY_ACCESS_DENIED() {
        return RPC_S_PROXY_ACCESS_DENIED;
    }
    private static final int RPC_S_UNSUPPORTED_TRANS_SYN = (int)1730L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_UNSUPPORTED_TRANS_SYN 1730
     * }
     */
    public static int RPC_S_UNSUPPORTED_TRANS_SYN() {
        return RPC_S_UNSUPPORTED_TRANS_SYN;
    }
    private static final int RPC_S_UNSUPPORTED_TYPE = (int)1732L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_UNSUPPORTED_TYPE 1732
     * }
     */
    public static int RPC_S_UNSUPPORTED_TYPE() {
        return RPC_S_UNSUPPORTED_TYPE;
    }
    private static final int RPC_S_INVALID_TAG = (int)1733L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_INVALID_TAG 1733
     * }
     */
    public static int RPC_S_INVALID_TAG() {
        return RPC_S_INVALID_TAG;
    }
    private static final int RPC_S_INVALID_BOUND = (int)1734L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_INVALID_BOUND 1734
     * }
     */
    public static int RPC_S_INVALID_BOUND() {
        return RPC_S_INVALID_BOUND;
    }
    private static final int RPC_S_NO_ENTRY_NAME = (int)1735L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_NO_ENTRY_NAME 1735
     * }
     */
    public static int RPC_S_NO_ENTRY_NAME() {
        return RPC_S_NO_ENTRY_NAME;
    }
    private static final int RPC_S_INVALID_NAME_SYNTAX = (int)1736L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_INVALID_NAME_SYNTAX 1736
     * }
     */
    public static int RPC_S_INVALID_NAME_SYNTAX() {
        return RPC_S_INVALID_NAME_SYNTAX;
    }
    private static final int RPC_S_UNSUPPORTED_NAME_SYNTAX = (int)1737L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_UNSUPPORTED_NAME_SYNTAX 1737
     * }
     */
    public static int RPC_S_UNSUPPORTED_NAME_SYNTAX() {
        return RPC_S_UNSUPPORTED_NAME_SYNTAX;
    }
    private static final int RPC_S_UUID_NO_ADDRESS = (int)1739L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_UUID_NO_ADDRESS 1739
     * }
     */
    public static int RPC_S_UUID_NO_ADDRESS() {
        return RPC_S_UUID_NO_ADDRESS;
    }
    private static final int RPC_S_DUPLICATE_ENDPOINT = (int)1740L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_DUPLICATE_ENDPOINT 1740
     * }
     */
    public static int RPC_S_DUPLICATE_ENDPOINT() {
        return RPC_S_DUPLICATE_ENDPOINT;
    }
    private static final int RPC_S_UNKNOWN_AUTHN_TYPE = (int)1741L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_UNKNOWN_AUTHN_TYPE 1741
     * }
     */
    public static int RPC_S_UNKNOWN_AUTHN_TYPE() {
        return RPC_S_UNKNOWN_AUTHN_TYPE;
    }
    private static final int RPC_S_MAX_CALLS_TOO_SMALL = (int)1742L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_MAX_CALLS_TOO_SMALL 1742
     * }
     */
    public static int RPC_S_MAX_CALLS_TOO_SMALL() {
        return RPC_S_MAX_CALLS_TOO_SMALL;
    }
    private static final int RPC_S_STRING_TOO_LONG = (int)1743L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_STRING_TOO_LONG 1743
     * }
     */
    public static int RPC_S_STRING_TOO_LONG() {
        return RPC_S_STRING_TOO_LONG;
    }
    private static final int RPC_S_PROTSEQ_NOT_FOUND = (int)1744L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_PROTSEQ_NOT_FOUND 1744
     * }
     */
    public static int RPC_S_PROTSEQ_NOT_FOUND() {
        return RPC_S_PROTSEQ_NOT_FOUND;
    }
    private static final int RPC_S_PROCNUM_OUT_OF_RANGE = (int)1745L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_PROCNUM_OUT_OF_RANGE 1745
     * }
     */
    public static int RPC_S_PROCNUM_OUT_OF_RANGE() {
        return RPC_S_PROCNUM_OUT_OF_RANGE;
    }
    private static final int RPC_S_BINDING_HAS_NO_AUTH = (int)1746L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_BINDING_HAS_NO_AUTH 1746
     * }
     */
    public static int RPC_S_BINDING_HAS_NO_AUTH() {
        return RPC_S_BINDING_HAS_NO_AUTH;
    }
    private static final int RPC_S_UNKNOWN_AUTHN_SERVICE = (int)1747L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_UNKNOWN_AUTHN_SERVICE 1747
     * }
     */
    public static int RPC_S_UNKNOWN_AUTHN_SERVICE() {
        return RPC_S_UNKNOWN_AUTHN_SERVICE;
    }
    private static final int RPC_S_UNKNOWN_AUTHN_LEVEL = (int)1748L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_UNKNOWN_AUTHN_LEVEL 1748
     * }
     */
    public static int RPC_S_UNKNOWN_AUTHN_LEVEL() {
        return RPC_S_UNKNOWN_AUTHN_LEVEL;
    }
    private static final int RPC_S_INVALID_AUTH_IDENTITY = (int)1749L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_INVALID_AUTH_IDENTITY 1749
     * }
     */
    public static int RPC_S_INVALID_AUTH_IDENTITY() {
        return RPC_S_INVALID_AUTH_IDENTITY;
    }
    private static final int RPC_S_UNKNOWN_AUTHZ_SERVICE = (int)1750L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_UNKNOWN_AUTHZ_SERVICE 1750
     * }
     */
    public static int RPC_S_UNKNOWN_AUTHZ_SERVICE() {
        return RPC_S_UNKNOWN_AUTHZ_SERVICE;
    }
    private static final int EPT_S_INVALID_ENTRY = (int)1751L;
    /**
     * {@snippet lang=c :
     * #define EPT_S_INVALID_ENTRY 1751
     * }
     */
    public static int EPT_S_INVALID_ENTRY() {
        return EPT_S_INVALID_ENTRY;
    }
    private static final int EPT_S_CANT_PERFORM_OP = (int)1752L;
    /**
     * {@snippet lang=c :
     * #define EPT_S_CANT_PERFORM_OP 1752
     * }
     */
    public static int EPT_S_CANT_PERFORM_OP() {
        return EPT_S_CANT_PERFORM_OP;
    }
    private static final int EPT_S_NOT_REGISTERED = (int)1753L;
    /**
     * {@snippet lang=c :
     * #define EPT_S_NOT_REGISTERED 1753
     * }
     */
    public static int EPT_S_NOT_REGISTERED() {
        return EPT_S_NOT_REGISTERED;
    }
    private static final int RPC_S_NOTHING_TO_EXPORT = (int)1754L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_NOTHING_TO_EXPORT 1754
     * }
     */
    public static int RPC_S_NOTHING_TO_EXPORT() {
        return RPC_S_NOTHING_TO_EXPORT;
    }
    private static final int RPC_S_INCOMPLETE_NAME = (int)1755L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_INCOMPLETE_NAME 1755
     * }
     */
    public static int RPC_S_INCOMPLETE_NAME() {
        return RPC_S_INCOMPLETE_NAME;
    }
    private static final int RPC_S_INVALID_VERS_OPTION = (int)1756L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_INVALID_VERS_OPTION 1756
     * }
     */
    public static int RPC_S_INVALID_VERS_OPTION() {
        return RPC_S_INVALID_VERS_OPTION;
    }
    private static final int RPC_S_NO_MORE_MEMBERS = (int)1757L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_NO_MORE_MEMBERS 1757
     * }
     */
    public static int RPC_S_NO_MORE_MEMBERS() {
        return RPC_S_NO_MORE_MEMBERS;
    }
    private static final int RPC_S_NOT_ALL_OBJS_UNEXPORTED = (int)1758L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_NOT_ALL_OBJS_UNEXPORTED 1758
     * }
     */
    public static int RPC_S_NOT_ALL_OBJS_UNEXPORTED() {
        return RPC_S_NOT_ALL_OBJS_UNEXPORTED;
    }
    private static final int RPC_S_INTERFACE_NOT_FOUND = (int)1759L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_INTERFACE_NOT_FOUND 1759
     * }
     */
    public static int RPC_S_INTERFACE_NOT_FOUND() {
        return RPC_S_INTERFACE_NOT_FOUND;
    }
    private static final int RPC_S_ENTRY_ALREADY_EXISTS = (int)1760L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_ENTRY_ALREADY_EXISTS 1760
     * }
     */
    public static int RPC_S_ENTRY_ALREADY_EXISTS() {
        return RPC_S_ENTRY_ALREADY_EXISTS;
    }
    private static final int RPC_S_ENTRY_NOT_FOUND = (int)1761L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_ENTRY_NOT_FOUND 1761
     * }
     */
    public static int RPC_S_ENTRY_NOT_FOUND() {
        return RPC_S_ENTRY_NOT_FOUND;
    }
    private static final int RPC_S_NAME_SERVICE_UNAVAILABLE = (int)1762L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_NAME_SERVICE_UNAVAILABLE 1762
     * }
     */
    public static int RPC_S_NAME_SERVICE_UNAVAILABLE() {
        return RPC_S_NAME_SERVICE_UNAVAILABLE;
    }
    private static final int RPC_S_INVALID_NAF_ID = (int)1763L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_INVALID_NAF_ID 1763
     * }
     */
    public static int RPC_S_INVALID_NAF_ID() {
        return RPC_S_INVALID_NAF_ID;
    }
    private static final int RPC_S_CANNOT_SUPPORT = (int)1764L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_CANNOT_SUPPORT 1764
     * }
     */
    public static int RPC_S_CANNOT_SUPPORT() {
        return RPC_S_CANNOT_SUPPORT;
    }
    private static final int RPC_S_NO_CONTEXT_AVAILABLE = (int)1765L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_NO_CONTEXT_AVAILABLE 1765
     * }
     */
    public static int RPC_S_NO_CONTEXT_AVAILABLE() {
        return RPC_S_NO_CONTEXT_AVAILABLE;
    }
    private static final int RPC_S_INTERNAL_ERROR = (int)1766L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_INTERNAL_ERROR 1766
     * }
     */
    public static int RPC_S_INTERNAL_ERROR() {
        return RPC_S_INTERNAL_ERROR;
    }
    private static final int RPC_S_ZERO_DIVIDE = (int)1767L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_ZERO_DIVIDE 1767
     * }
     */
    public static int RPC_S_ZERO_DIVIDE() {
        return RPC_S_ZERO_DIVIDE;
    }
    private static final int RPC_S_ADDRESS_ERROR = (int)1768L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_ADDRESS_ERROR 1768
     * }
     */
    public static int RPC_S_ADDRESS_ERROR() {
        return RPC_S_ADDRESS_ERROR;
    }
    private static final int RPC_S_FP_DIV_ZERO = (int)1769L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_FP_DIV_ZERO 1769
     * }
     */
    public static int RPC_S_FP_DIV_ZERO() {
        return RPC_S_FP_DIV_ZERO;
    }
    private static final int RPC_S_FP_UNDERFLOW = (int)1770L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_FP_UNDERFLOW 1770
     * }
     */
    public static int RPC_S_FP_UNDERFLOW() {
        return RPC_S_FP_UNDERFLOW;
    }
    private static final int RPC_S_FP_OVERFLOW = (int)1771L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_FP_OVERFLOW 1771
     * }
     */
    public static int RPC_S_FP_OVERFLOW() {
        return RPC_S_FP_OVERFLOW;
    }
    private static final int RPC_X_NO_MORE_ENTRIES = (int)1772L;
    /**
     * {@snippet lang=c :
     * #define RPC_X_NO_MORE_ENTRIES 1772
     * }
     */
    public static int RPC_X_NO_MORE_ENTRIES() {
        return RPC_X_NO_MORE_ENTRIES;
    }
    private static final int RPC_X_SS_CHAR_TRANS_OPEN_FAIL = (int)1773L;
    /**
     * {@snippet lang=c :
     * #define RPC_X_SS_CHAR_TRANS_OPEN_FAIL 1773
     * }
     */
    public static int RPC_X_SS_CHAR_TRANS_OPEN_FAIL() {
        return RPC_X_SS_CHAR_TRANS_OPEN_FAIL;
    }
    private static final int RPC_X_SS_CHAR_TRANS_SHORT_FILE = (int)1774L;
    /**
     * {@snippet lang=c :
     * #define RPC_X_SS_CHAR_TRANS_SHORT_FILE 1774
     * }
     */
    public static int RPC_X_SS_CHAR_TRANS_SHORT_FILE() {
        return RPC_X_SS_CHAR_TRANS_SHORT_FILE;
    }
    private static final int RPC_X_SS_IN_NULL_CONTEXT = (int)1775L;
    /**
     * {@snippet lang=c :
     * #define RPC_X_SS_IN_NULL_CONTEXT 1775
     * }
     */
    public static int RPC_X_SS_IN_NULL_CONTEXT() {
        return RPC_X_SS_IN_NULL_CONTEXT;
    }
    private static final int RPC_X_SS_CONTEXT_DAMAGED = (int)1777L;
    /**
     * {@snippet lang=c :
     * #define RPC_X_SS_CONTEXT_DAMAGED 1777
     * }
     */
    public static int RPC_X_SS_CONTEXT_DAMAGED() {
        return RPC_X_SS_CONTEXT_DAMAGED;
    }
    private static final int RPC_X_SS_HANDLES_MISMATCH = (int)1778L;
    /**
     * {@snippet lang=c :
     * #define RPC_X_SS_HANDLES_MISMATCH 1778
     * }
     */
    public static int RPC_X_SS_HANDLES_MISMATCH() {
        return RPC_X_SS_HANDLES_MISMATCH;
    }
    private static final int RPC_X_SS_CANNOT_GET_CALL_HANDLE = (int)1779L;
    /**
     * {@snippet lang=c :
     * #define RPC_X_SS_CANNOT_GET_CALL_HANDLE 1779
     * }
     */
    public static int RPC_X_SS_CANNOT_GET_CALL_HANDLE() {
        return RPC_X_SS_CANNOT_GET_CALL_HANDLE;
    }
    private static final int RPC_X_NULL_REF_POINTER = (int)1780L;
    /**
     * {@snippet lang=c :
     * #define RPC_X_NULL_REF_POINTER 1780
     * }
     */
    public static int RPC_X_NULL_REF_POINTER() {
        return RPC_X_NULL_REF_POINTER;
    }
    private static final int RPC_X_ENUM_VALUE_OUT_OF_RANGE = (int)1781L;
    /**
     * {@snippet lang=c :
     * #define RPC_X_ENUM_VALUE_OUT_OF_RANGE 1781
     * }
     */
    public static int RPC_X_ENUM_VALUE_OUT_OF_RANGE() {
        return RPC_X_ENUM_VALUE_OUT_OF_RANGE;
    }
    private static final int RPC_X_BYTE_COUNT_TOO_SMALL = (int)1782L;
    /**
     * {@snippet lang=c :
     * #define RPC_X_BYTE_COUNT_TOO_SMALL 1782
     * }
     */
    public static int RPC_X_BYTE_COUNT_TOO_SMALL() {
        return RPC_X_BYTE_COUNT_TOO_SMALL;
    }
    private static final int RPC_X_BAD_STUB_DATA = (int)1783L;
    /**
     * {@snippet lang=c :
     * #define RPC_X_BAD_STUB_DATA 1783
     * }
     */
    public static int RPC_X_BAD_STUB_DATA() {
        return RPC_X_BAD_STUB_DATA;
    }
    private static final int ERROR_INVALID_USER_BUFFER = (int)1784L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_USER_BUFFER 1784
     * }
     */
    public static int ERROR_INVALID_USER_BUFFER() {
        return ERROR_INVALID_USER_BUFFER;
    }
    private static final int ERROR_UNRECOGNIZED_MEDIA = (int)1785L;
    /**
     * {@snippet lang=c :
     * #define ERROR_UNRECOGNIZED_MEDIA 1785
     * }
     */
    public static int ERROR_UNRECOGNIZED_MEDIA() {
        return ERROR_UNRECOGNIZED_MEDIA;
    }
    private static final int ERROR_NO_TRUST_LSA_SECRET = (int)1786L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_TRUST_LSA_SECRET 1786
     * }
     */
    public static int ERROR_NO_TRUST_LSA_SECRET() {
        return ERROR_NO_TRUST_LSA_SECRET;
    }
    private static final int ERROR_NO_TRUST_SAM_ACCOUNT = (int)1787L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_TRUST_SAM_ACCOUNT 1787
     * }
     */
    public static int ERROR_NO_TRUST_SAM_ACCOUNT() {
        return ERROR_NO_TRUST_SAM_ACCOUNT;
    }
    private static final int ERROR_TRUSTED_DOMAIN_FAILURE = (int)1788L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TRUSTED_DOMAIN_FAILURE 1788
     * }
     */
    public static int ERROR_TRUSTED_DOMAIN_FAILURE() {
        return ERROR_TRUSTED_DOMAIN_FAILURE;
    }
    private static final int ERROR_TRUSTED_RELATIONSHIP_FAILURE = (int)1789L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TRUSTED_RELATIONSHIP_FAILURE 1789
     * }
     */
    public static int ERROR_TRUSTED_RELATIONSHIP_FAILURE() {
        return ERROR_TRUSTED_RELATIONSHIP_FAILURE;
    }
    private static final int ERROR_TRUST_FAILURE = (int)1790L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TRUST_FAILURE 1790
     * }
     */
    public static int ERROR_TRUST_FAILURE() {
        return ERROR_TRUST_FAILURE;
    }
    private static final int RPC_S_CALL_IN_PROGRESS = (int)1791L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_CALL_IN_PROGRESS 1791
     * }
     */
    public static int RPC_S_CALL_IN_PROGRESS() {
        return RPC_S_CALL_IN_PROGRESS;
    }
    private static final int ERROR_NETLOGON_NOT_STARTED = (int)1792L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NETLOGON_NOT_STARTED 1792
     * }
     */
    public static int ERROR_NETLOGON_NOT_STARTED() {
        return ERROR_NETLOGON_NOT_STARTED;
    }
    private static final int ERROR_ACCOUNT_EXPIRED = (int)1793L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ACCOUNT_EXPIRED 1793
     * }
     */
    public static int ERROR_ACCOUNT_EXPIRED() {
        return ERROR_ACCOUNT_EXPIRED;
    }
    private static final int ERROR_REDIRECTOR_HAS_OPEN_HANDLES = (int)1794L;
    /**
     * {@snippet lang=c :
     * #define ERROR_REDIRECTOR_HAS_OPEN_HANDLES 1794
     * }
     */
    public static int ERROR_REDIRECTOR_HAS_OPEN_HANDLES() {
        return ERROR_REDIRECTOR_HAS_OPEN_HANDLES;
    }
    private static final int ERROR_PRINTER_DRIVER_ALREADY_INSTALLED = (int)1795L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PRINTER_DRIVER_ALREADY_INSTALLED 1795
     * }
     */
    public static int ERROR_PRINTER_DRIVER_ALREADY_INSTALLED() {
        return ERROR_PRINTER_DRIVER_ALREADY_INSTALLED;
    }
    private static final int ERROR_UNKNOWN_PORT = (int)1796L;
    /**
     * {@snippet lang=c :
     * #define ERROR_UNKNOWN_PORT 1796
     * }
     */
    public static int ERROR_UNKNOWN_PORT() {
        return ERROR_UNKNOWN_PORT;
    }
    private static final int ERROR_UNKNOWN_PRINTER_DRIVER = (int)1797L;
    /**
     * {@snippet lang=c :
     * #define ERROR_UNKNOWN_PRINTER_DRIVER 1797
     * }
     */
    public static int ERROR_UNKNOWN_PRINTER_DRIVER() {
        return ERROR_UNKNOWN_PRINTER_DRIVER;
    }
    private static final int ERROR_UNKNOWN_PRINTPROCESSOR = (int)1798L;
    /**
     * {@snippet lang=c :
     * #define ERROR_UNKNOWN_PRINTPROCESSOR 1798
     * }
     */
    public static int ERROR_UNKNOWN_PRINTPROCESSOR() {
        return ERROR_UNKNOWN_PRINTPROCESSOR;
    }
    private static final int ERROR_INVALID_SEPARATOR_FILE = (int)1799L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_SEPARATOR_FILE 1799
     * }
     */
    public static int ERROR_INVALID_SEPARATOR_FILE() {
        return ERROR_INVALID_SEPARATOR_FILE;
    }
    private static final int ERROR_INVALID_PRIORITY = (int)1800L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_PRIORITY 1800
     * }
     */
    public static int ERROR_INVALID_PRIORITY() {
        return ERROR_INVALID_PRIORITY;
    }
    private static final int ERROR_INVALID_PRINTER_NAME = (int)1801L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_PRINTER_NAME 1801
     * }
     */
    public static int ERROR_INVALID_PRINTER_NAME() {
        return ERROR_INVALID_PRINTER_NAME;
    }
    private static final int ERROR_PRINTER_ALREADY_EXISTS = (int)1802L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PRINTER_ALREADY_EXISTS 1802
     * }
     */
    public static int ERROR_PRINTER_ALREADY_EXISTS() {
        return ERROR_PRINTER_ALREADY_EXISTS;
    }
    private static final int ERROR_INVALID_PRINTER_COMMAND = (int)1803L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_PRINTER_COMMAND 1803
     * }
     */
    public static int ERROR_INVALID_PRINTER_COMMAND() {
        return ERROR_INVALID_PRINTER_COMMAND;
    }
    private static final int ERROR_INVALID_DATATYPE = (int)1804L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_DATATYPE 1804
     * }
     */
    public static int ERROR_INVALID_DATATYPE() {
        return ERROR_INVALID_DATATYPE;
    }
    private static final int ERROR_INVALID_ENVIRONMENT = (int)1805L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_ENVIRONMENT 1805
     * }
     */
    public static int ERROR_INVALID_ENVIRONMENT() {
        return ERROR_INVALID_ENVIRONMENT;
    }
    private static final int RPC_S_NO_MORE_BINDINGS = (int)1806L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_NO_MORE_BINDINGS 1806
     * }
     */
    public static int RPC_S_NO_MORE_BINDINGS() {
        return RPC_S_NO_MORE_BINDINGS;
    }
    private static final int ERROR_NOLOGON_INTERDOMAIN_TRUST_ACCOUNT = (int)1807L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOLOGON_INTERDOMAIN_TRUST_ACCOUNT 1807
     * }
     */
    public static int ERROR_NOLOGON_INTERDOMAIN_TRUST_ACCOUNT() {
        return ERROR_NOLOGON_INTERDOMAIN_TRUST_ACCOUNT;
    }
    private static final int ERROR_NOLOGON_WORKSTATION_TRUST_ACCOUNT = (int)1808L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOLOGON_WORKSTATION_TRUST_ACCOUNT 1808
     * }
     */
    public static int ERROR_NOLOGON_WORKSTATION_TRUST_ACCOUNT() {
        return ERROR_NOLOGON_WORKSTATION_TRUST_ACCOUNT;
    }
    private static final int ERROR_NOLOGON_SERVER_TRUST_ACCOUNT = (int)1809L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOLOGON_SERVER_TRUST_ACCOUNT 1809
     * }
     */
    public static int ERROR_NOLOGON_SERVER_TRUST_ACCOUNT() {
        return ERROR_NOLOGON_SERVER_TRUST_ACCOUNT;
    }
    private static final int ERROR_DOMAIN_TRUST_INCONSISTENT = (int)1810L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DOMAIN_TRUST_INCONSISTENT 1810
     * }
     */
    public static int ERROR_DOMAIN_TRUST_INCONSISTENT() {
        return ERROR_DOMAIN_TRUST_INCONSISTENT;
    }
    private static final int ERROR_SERVER_HAS_OPEN_HANDLES = (int)1811L;
    /**
     * {@snippet lang=c :
     * #define ERROR_SERVER_HAS_OPEN_HANDLES 1811
     * }
     */
    public static int ERROR_SERVER_HAS_OPEN_HANDLES() {
        return ERROR_SERVER_HAS_OPEN_HANDLES;
    }
    private static final int ERROR_RESOURCE_DATA_NOT_FOUND = (int)1812L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RESOURCE_DATA_NOT_FOUND 1812
     * }
     */
    public static int ERROR_RESOURCE_DATA_NOT_FOUND() {
        return ERROR_RESOURCE_DATA_NOT_FOUND;
    }
    private static final int ERROR_RESOURCE_TYPE_NOT_FOUND = (int)1813L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RESOURCE_TYPE_NOT_FOUND 1813
     * }
     */
    public static int ERROR_RESOURCE_TYPE_NOT_FOUND() {
        return ERROR_RESOURCE_TYPE_NOT_FOUND;
    }
    private static final int ERROR_RESOURCE_NAME_NOT_FOUND = (int)1814L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RESOURCE_NAME_NOT_FOUND 1814
     * }
     */
    public static int ERROR_RESOURCE_NAME_NOT_FOUND() {
        return ERROR_RESOURCE_NAME_NOT_FOUND;
    }
    private static final int ERROR_RESOURCE_LANG_NOT_FOUND = (int)1815L;
    /**
     * {@snippet lang=c :
     * #define ERROR_RESOURCE_LANG_NOT_FOUND 1815
     * }
     */
    public static int ERROR_RESOURCE_LANG_NOT_FOUND() {
        return ERROR_RESOURCE_LANG_NOT_FOUND;
    }
    private static final int ERROR_NOT_ENOUGH_QUOTA = (int)1816L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NOT_ENOUGH_QUOTA 1816
     * }
     */
    public static int ERROR_NOT_ENOUGH_QUOTA() {
        return ERROR_NOT_ENOUGH_QUOTA;
    }
    private static final int RPC_S_NO_INTERFACES = (int)1817L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_NO_INTERFACES 1817
     * }
     */
    public static int RPC_S_NO_INTERFACES() {
        return RPC_S_NO_INTERFACES;
    }
    private static final int RPC_S_CALL_CANCELLED = (int)1818L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_CALL_CANCELLED 1818
     * }
     */
    public static int RPC_S_CALL_CANCELLED() {
        return RPC_S_CALL_CANCELLED;
    }
    private static final int RPC_S_BINDING_INCOMPLETE = (int)1819L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_BINDING_INCOMPLETE 1819
     * }
     */
    public static int RPC_S_BINDING_INCOMPLETE() {
        return RPC_S_BINDING_INCOMPLETE;
    }
    private static final int RPC_S_COMM_FAILURE = (int)1820L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_COMM_FAILURE 1820
     * }
     */
    public static int RPC_S_COMM_FAILURE() {
        return RPC_S_COMM_FAILURE;
    }
    private static final int RPC_S_UNSUPPORTED_AUTHN_LEVEL = (int)1821L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_UNSUPPORTED_AUTHN_LEVEL 1821
     * }
     */
    public static int RPC_S_UNSUPPORTED_AUTHN_LEVEL() {
        return RPC_S_UNSUPPORTED_AUTHN_LEVEL;
    }
    private static final int RPC_S_NO_PRINC_NAME = (int)1822L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_NO_PRINC_NAME 1822
     * }
     */
    public static int RPC_S_NO_PRINC_NAME() {
        return RPC_S_NO_PRINC_NAME;
    }
    private static final int RPC_S_NOT_RPC_ERROR = (int)1823L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_NOT_RPC_ERROR 1823
     * }
     */
    public static int RPC_S_NOT_RPC_ERROR() {
        return RPC_S_NOT_RPC_ERROR;
    }
    private static final int RPC_S_UUID_LOCAL_ONLY = (int)1824L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_UUID_LOCAL_ONLY 1824
     * }
     */
    public static int RPC_S_UUID_LOCAL_ONLY() {
        return RPC_S_UUID_LOCAL_ONLY;
    }
    private static final int RPC_S_SEC_PKG_ERROR = (int)1825L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_SEC_PKG_ERROR 1825
     * }
     */
    public static int RPC_S_SEC_PKG_ERROR() {
        return RPC_S_SEC_PKG_ERROR;
    }
    private static final int RPC_S_NOT_CANCELLED = (int)1826L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_NOT_CANCELLED 1826
     * }
     */
    public static int RPC_S_NOT_CANCELLED() {
        return RPC_S_NOT_CANCELLED;
    }
    private static final int RPC_X_INVALID_ES_ACTION = (int)1827L;
    /**
     * {@snippet lang=c :
     * #define RPC_X_INVALID_ES_ACTION 1827
     * }
     */
    public static int RPC_X_INVALID_ES_ACTION() {
        return RPC_X_INVALID_ES_ACTION;
    }
    private static final int RPC_X_WRONG_ES_VERSION = (int)1828L;
    /**
     * {@snippet lang=c :
     * #define RPC_X_WRONG_ES_VERSION 1828
     * }
     */
    public static int RPC_X_WRONG_ES_VERSION() {
        return RPC_X_WRONG_ES_VERSION;
    }
    private static final int RPC_X_WRONG_STUB_VERSION = (int)1829L;
    /**
     * {@snippet lang=c :
     * #define RPC_X_WRONG_STUB_VERSION 1829
     * }
     */
    public static int RPC_X_WRONG_STUB_VERSION() {
        return RPC_X_WRONG_STUB_VERSION;
    }
    private static final int RPC_X_INVALID_PIPE_OBJECT = (int)1830L;
    /**
     * {@snippet lang=c :
     * #define RPC_X_INVALID_PIPE_OBJECT 1830
     * }
     */
    public static int RPC_X_INVALID_PIPE_OBJECT() {
        return RPC_X_INVALID_PIPE_OBJECT;
    }
    private static final int RPC_X_WRONG_PIPE_ORDER = (int)1831L;
    /**
     * {@snippet lang=c :
     * #define RPC_X_WRONG_PIPE_ORDER 1831
     * }
     */
    public static int RPC_X_WRONG_PIPE_ORDER() {
        return RPC_X_WRONG_PIPE_ORDER;
    }
    private static final int RPC_X_WRONG_PIPE_VERSION = (int)1832L;
    /**
     * {@snippet lang=c :
     * #define RPC_X_WRONG_PIPE_VERSION 1832
     * }
     */
    public static int RPC_X_WRONG_PIPE_VERSION() {
        return RPC_X_WRONG_PIPE_VERSION;
    }
    private static final int RPC_S_COOKIE_AUTH_FAILED = (int)1833L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_COOKIE_AUTH_FAILED 1833
     * }
     */
    public static int RPC_S_COOKIE_AUTH_FAILED() {
        return RPC_S_COOKIE_AUTH_FAILED;
    }
    private static final int RPC_S_DO_NOT_DISTURB = (int)1834L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_DO_NOT_DISTURB 1834
     * }
     */
    public static int RPC_S_DO_NOT_DISTURB() {
        return RPC_S_DO_NOT_DISTURB;
    }
    private static final int RPC_S_SYSTEM_HANDLE_COUNT_EXCEEDED = (int)1835L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_SYSTEM_HANDLE_COUNT_EXCEEDED 1835
     * }
     */
    public static int RPC_S_SYSTEM_HANDLE_COUNT_EXCEEDED() {
        return RPC_S_SYSTEM_HANDLE_COUNT_EXCEEDED;
    }
    private static final int RPC_S_SYSTEM_HANDLE_TYPE_MISMATCH = (int)1836L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_SYSTEM_HANDLE_TYPE_MISMATCH 1836
     * }
     */
    public static int RPC_S_SYSTEM_HANDLE_TYPE_MISMATCH() {
        return RPC_S_SYSTEM_HANDLE_TYPE_MISMATCH;
    }
    private static final int RPC_S_GROUP_MEMBER_NOT_FOUND = (int)1898L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_GROUP_MEMBER_NOT_FOUND 1898
     * }
     */
    public static int RPC_S_GROUP_MEMBER_NOT_FOUND() {
        return RPC_S_GROUP_MEMBER_NOT_FOUND;
    }
    private static final int EPT_S_CANT_CREATE = (int)1899L;
    /**
     * {@snippet lang=c :
     * #define EPT_S_CANT_CREATE 1899
     * }
     */
    public static int EPT_S_CANT_CREATE() {
        return EPT_S_CANT_CREATE;
    }
    private static final int RPC_S_INVALID_OBJECT = (int)1900L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_INVALID_OBJECT 1900
     * }
     */
    public static int RPC_S_INVALID_OBJECT() {
        return RPC_S_INVALID_OBJECT;
    }
    private static final int ERROR_INVALID_TIME = (int)1901L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_TIME 1901
     * }
     */
    public static int ERROR_INVALID_TIME() {
        return ERROR_INVALID_TIME;
    }
    private static final int ERROR_INVALID_FORM_NAME = (int)1902L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_FORM_NAME 1902
     * }
     */
    public static int ERROR_INVALID_FORM_NAME() {
        return ERROR_INVALID_FORM_NAME;
    }
    private static final int ERROR_INVALID_FORM_SIZE = (int)1903L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_FORM_SIZE 1903
     * }
     */
    public static int ERROR_INVALID_FORM_SIZE() {
        return ERROR_INVALID_FORM_SIZE;
    }
    private static final int ERROR_ALREADY_WAITING = (int)1904L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ALREADY_WAITING 1904
     * }
     */
    public static int ERROR_ALREADY_WAITING() {
        return ERROR_ALREADY_WAITING;
    }
    private static final int ERROR_PRINTER_DELETED = (int)1905L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PRINTER_DELETED 1905
     * }
     */
    public static int ERROR_PRINTER_DELETED() {
        return ERROR_PRINTER_DELETED;
    }
    private static final int ERROR_INVALID_PRINTER_STATE = (int)1906L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_PRINTER_STATE 1906
     * }
     */
    public static int ERROR_INVALID_PRINTER_STATE() {
        return ERROR_INVALID_PRINTER_STATE;
    }
    private static final int ERROR_PASSWORD_MUST_CHANGE = (int)1907L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PASSWORD_MUST_CHANGE 1907
     * }
     */
    public static int ERROR_PASSWORD_MUST_CHANGE() {
        return ERROR_PASSWORD_MUST_CHANGE;
    }
    private static final int ERROR_DOMAIN_CONTROLLER_NOT_FOUND = (int)1908L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DOMAIN_CONTROLLER_NOT_FOUND 1908
     * }
     */
    public static int ERROR_DOMAIN_CONTROLLER_NOT_FOUND() {
        return ERROR_DOMAIN_CONTROLLER_NOT_FOUND;
    }
    private static final int ERROR_ACCOUNT_LOCKED_OUT = (int)1909L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ACCOUNT_LOCKED_OUT 1909
     * }
     */
    public static int ERROR_ACCOUNT_LOCKED_OUT() {
        return ERROR_ACCOUNT_LOCKED_OUT;
    }
    private static final int OR_INVALID_OXID = (int)1910L;
    /**
     * {@snippet lang=c :
     * #define OR_INVALID_OXID 1910
     * }
     */
    public static int OR_INVALID_OXID() {
        return OR_INVALID_OXID;
    }
    private static final int OR_INVALID_OID = (int)1911L;
    /**
     * {@snippet lang=c :
     * #define OR_INVALID_OID 1911
     * }
     */
    public static int OR_INVALID_OID() {
        return OR_INVALID_OID;
    }
    private static final int OR_INVALID_SET = (int)1912L;
    /**
     * {@snippet lang=c :
     * #define OR_INVALID_SET 1912
     * }
     */
    public static int OR_INVALID_SET() {
        return OR_INVALID_SET;
    }
    private static final int RPC_S_SEND_INCOMPLETE = (int)1913L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_SEND_INCOMPLETE 1913
     * }
     */
    public static int RPC_S_SEND_INCOMPLETE() {
        return RPC_S_SEND_INCOMPLETE;
    }
    private static final int RPC_S_INVALID_ASYNC_HANDLE = (int)1914L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_INVALID_ASYNC_HANDLE 1914
     * }
     */
    public static int RPC_S_INVALID_ASYNC_HANDLE() {
        return RPC_S_INVALID_ASYNC_HANDLE;
    }
    private static final int RPC_S_INVALID_ASYNC_CALL = (int)1915L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_INVALID_ASYNC_CALL 1915
     * }
     */
    public static int RPC_S_INVALID_ASYNC_CALL() {
        return RPC_S_INVALID_ASYNC_CALL;
    }
    private static final int RPC_X_PIPE_CLOSED = (int)1916L;
    /**
     * {@snippet lang=c :
     * #define RPC_X_PIPE_CLOSED 1916
     * }
     */
    public static int RPC_X_PIPE_CLOSED() {
        return RPC_X_PIPE_CLOSED;
    }
    private static final int RPC_X_PIPE_DISCIPLINE_ERROR = (int)1917L;
    /**
     * {@snippet lang=c :
     * #define RPC_X_PIPE_DISCIPLINE_ERROR 1917
     * }
     */
    public static int RPC_X_PIPE_DISCIPLINE_ERROR() {
        return RPC_X_PIPE_DISCIPLINE_ERROR;
    }
    private static final int RPC_X_PIPE_EMPTY = (int)1918L;
    /**
     * {@snippet lang=c :
     * #define RPC_X_PIPE_EMPTY 1918
     * }
     */
    public static int RPC_X_PIPE_EMPTY() {
        return RPC_X_PIPE_EMPTY;
    }
    private static final int ERROR_NO_SITENAME = (int)1919L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NO_SITENAME 1919
     * }
     */
    public static int ERROR_NO_SITENAME() {
        return ERROR_NO_SITENAME;
    }
    private static final int ERROR_CANT_ACCESS_FILE = (int)1920L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CANT_ACCESS_FILE 1920
     * }
     */
    public static int ERROR_CANT_ACCESS_FILE() {
        return ERROR_CANT_ACCESS_FILE;
    }
    private static final int ERROR_CANT_RESOLVE_FILENAME = (int)1921L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CANT_RESOLVE_FILENAME 1921
     * }
     */
    public static int ERROR_CANT_RESOLVE_FILENAME() {
        return ERROR_CANT_RESOLVE_FILENAME;
    }
    private static final int RPC_S_ENTRY_TYPE_MISMATCH = (int)1922L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_ENTRY_TYPE_MISMATCH 1922
     * }
     */
    public static int RPC_S_ENTRY_TYPE_MISMATCH() {
        return RPC_S_ENTRY_TYPE_MISMATCH;
    }
    private static final int RPC_S_NOT_ALL_OBJS_EXPORTED = (int)1923L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_NOT_ALL_OBJS_EXPORTED 1923
     * }
     */
    public static int RPC_S_NOT_ALL_OBJS_EXPORTED() {
        return RPC_S_NOT_ALL_OBJS_EXPORTED;
    }
    private static final int RPC_S_INTERFACE_NOT_EXPORTED = (int)1924L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_INTERFACE_NOT_EXPORTED 1924
     * }
     */
    public static int RPC_S_INTERFACE_NOT_EXPORTED() {
        return RPC_S_INTERFACE_NOT_EXPORTED;
    }
    private static final int RPC_S_PROFILE_NOT_ADDED = (int)1925L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_PROFILE_NOT_ADDED 1925
     * }
     */
    public static int RPC_S_PROFILE_NOT_ADDED() {
        return RPC_S_PROFILE_NOT_ADDED;
    }
    private static final int RPC_S_PRF_ELT_NOT_ADDED = (int)1926L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_PRF_ELT_NOT_ADDED 1926
     * }
     */
    public static int RPC_S_PRF_ELT_NOT_ADDED() {
        return RPC_S_PRF_ELT_NOT_ADDED;
    }
    private static final int RPC_S_PRF_ELT_NOT_REMOVED = (int)1927L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_PRF_ELT_NOT_REMOVED 1927
     * }
     */
    public static int RPC_S_PRF_ELT_NOT_REMOVED() {
        return RPC_S_PRF_ELT_NOT_REMOVED;
    }
    private static final int RPC_S_GRP_ELT_NOT_ADDED = (int)1928L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_GRP_ELT_NOT_ADDED 1928
     * }
     */
    public static int RPC_S_GRP_ELT_NOT_ADDED() {
        return RPC_S_GRP_ELT_NOT_ADDED;
    }
    private static final int RPC_S_GRP_ELT_NOT_REMOVED = (int)1929L;
    /**
     * {@snippet lang=c :
     * #define RPC_S_GRP_ELT_NOT_REMOVED 1929
     * }
     */
    public static int RPC_S_GRP_ELT_NOT_REMOVED() {
        return RPC_S_GRP_ELT_NOT_REMOVED;
    }
    private static final int ERROR_KM_DRIVER_BLOCKED = (int)1930L;
    /**
     * {@snippet lang=c :
     * #define ERROR_KM_DRIVER_BLOCKED 1930
     * }
     */
    public static int ERROR_KM_DRIVER_BLOCKED() {
        return ERROR_KM_DRIVER_BLOCKED;
    }
    private static final int ERROR_CONTEXT_EXPIRED = (int)1931L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CONTEXT_EXPIRED 1931
     * }
     */
    public static int ERROR_CONTEXT_EXPIRED() {
        return ERROR_CONTEXT_EXPIRED;
    }
    private static final int ERROR_PER_USER_TRUST_QUOTA_EXCEEDED = (int)1932L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PER_USER_TRUST_QUOTA_EXCEEDED 1932
     * }
     */
    public static int ERROR_PER_USER_TRUST_QUOTA_EXCEEDED() {
        return ERROR_PER_USER_TRUST_QUOTA_EXCEEDED;
    }
    private static final int ERROR_ALL_USER_TRUST_QUOTA_EXCEEDED = (int)1933L;
    /**
     * {@snippet lang=c :
     * #define ERROR_ALL_USER_TRUST_QUOTA_EXCEEDED 1933
     * }
     */
    public static int ERROR_ALL_USER_TRUST_QUOTA_EXCEEDED() {
        return ERROR_ALL_USER_TRUST_QUOTA_EXCEEDED;
    }
    private static final int ERROR_USER_DELETE_TRUST_QUOTA_EXCEEDED = (int)1934L;
    /**
     * {@snippet lang=c :
     * #define ERROR_USER_DELETE_TRUST_QUOTA_EXCEEDED 1934
     * }
     */
    public static int ERROR_USER_DELETE_TRUST_QUOTA_EXCEEDED() {
        return ERROR_USER_DELETE_TRUST_QUOTA_EXCEEDED;
    }
    private static final int ERROR_AUTHENTICATION_FIREWALL_FAILED = (int)1935L;
    /**
     * {@snippet lang=c :
     * #define ERROR_AUTHENTICATION_FIREWALL_FAILED 1935
     * }
     */
    public static int ERROR_AUTHENTICATION_FIREWALL_FAILED() {
        return ERROR_AUTHENTICATION_FIREWALL_FAILED;
    }
    private static final int ERROR_REMOTE_PRINT_CONNECTIONS_BLOCKED = (int)1936L;
    /**
     * {@snippet lang=c :
     * #define ERROR_REMOTE_PRINT_CONNECTIONS_BLOCKED 1936
     * }
     */
    public static int ERROR_REMOTE_PRINT_CONNECTIONS_BLOCKED() {
        return ERROR_REMOTE_PRINT_CONNECTIONS_BLOCKED;
    }
    private static final int ERROR_NTLM_BLOCKED = (int)1937L;
    /**
     * {@snippet lang=c :
     * #define ERROR_NTLM_BLOCKED 1937
     * }
     */
    public static int ERROR_NTLM_BLOCKED() {
        return ERROR_NTLM_BLOCKED;
    }
    private static final int ERROR_PASSWORD_CHANGE_REQUIRED = (int)1938L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PASSWORD_CHANGE_REQUIRED 1938
     * }
     */
    public static int ERROR_PASSWORD_CHANGE_REQUIRED() {
        return ERROR_PASSWORD_CHANGE_REQUIRED;
    }
    private static final int ERROR_LOST_MODE_LOGON_RESTRICTION = (int)1939L;
    /**
     * {@snippet lang=c :
     * #define ERROR_LOST_MODE_LOGON_RESTRICTION 1939
     * }
     */
    public static int ERROR_LOST_MODE_LOGON_RESTRICTION() {
        return ERROR_LOST_MODE_LOGON_RESTRICTION;
    }
    private static final int ERROR_INVALID_PIXEL_FORMAT = (int)2000L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_PIXEL_FORMAT 2000
     * }
     */
    public static int ERROR_INVALID_PIXEL_FORMAT() {
        return ERROR_INVALID_PIXEL_FORMAT;
    }
    private static final int ERROR_BAD_DRIVER = (int)2001L;
    /**
     * {@snippet lang=c :
     * #define ERROR_BAD_DRIVER 2001
     * }
     */
    public static int ERROR_BAD_DRIVER() {
        return ERROR_BAD_DRIVER;
    }
    private static final int ERROR_INVALID_WINDOW_STYLE = (int)2002L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_WINDOW_STYLE 2002
     * }
     */
    public static int ERROR_INVALID_WINDOW_STYLE() {
        return ERROR_INVALID_WINDOW_STYLE;
    }
    private static final int ERROR_METAFILE_NOT_SUPPORTED = (int)2003L;
    /**
     * {@snippet lang=c :
     * #define ERROR_METAFILE_NOT_SUPPORTED 2003
     * }
     */
    public static int ERROR_METAFILE_NOT_SUPPORTED() {
        return ERROR_METAFILE_NOT_SUPPORTED;
    }
    private static final int ERROR_TRANSFORM_NOT_SUPPORTED = (int)2004L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TRANSFORM_NOT_SUPPORTED 2004
     * }
     */
    public static int ERROR_TRANSFORM_NOT_SUPPORTED() {
        return ERROR_TRANSFORM_NOT_SUPPORTED;
    }
    private static final int ERROR_CLIPPING_NOT_SUPPORTED = (int)2005L;
    /**
     * {@snippet lang=c :
     * #define ERROR_CLIPPING_NOT_SUPPORTED 2005
     * }
     */
    public static int ERROR_CLIPPING_NOT_SUPPORTED() {
        return ERROR_CLIPPING_NOT_SUPPORTED;
    }
    private static final int ERROR_INVALID_CMM = (int)2010L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_CMM 2010
     * }
     */
    public static int ERROR_INVALID_CMM() {
        return ERROR_INVALID_CMM;
    }
    private static final int ERROR_INVALID_PROFILE = (int)2011L;
    /**
     * {@snippet lang=c :
     * #define ERROR_INVALID_PROFILE 2011
     * }
     */
    public static int ERROR_INVALID_PROFILE() {
        return ERROR_INVALID_PROFILE;
    }
    private static final int ERROR_TAG_NOT_FOUND = (int)2012L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TAG_NOT_FOUND 2012
     * }
     */
    public static int ERROR_TAG_NOT_FOUND() {
        return ERROR_TAG_NOT_FOUND;
    }
    private static final int ERROR_TAG_NOT_PRESENT = (int)2013L;
    /**
     * {@snippet lang=c :
     * #define ERROR_TAG_NOT_PRESENT 2013
     * }
     */
    public static int ERROR_TAG_NOT_PRESENT() {
        return ERROR_TAG_NOT_PRESENT;
    }
    private static final int ERROR_DUPLICATE_TAG = (int)2014L;
    /**
     * {@snippet lang=c :
     * #define ERROR_DUPLICATE_TAG 2014
     * }
     */
    public static int ERROR_DUPLICATE_TAG() {
        return ERROR_DUPLICATE_TAG;
    }
    private static final int ERROR_PROFILE_NOT_ASSOCIATED_WITH_DEVICE = (int)2015L;
    /**
     * {@snippet lang=c :
     * #define ERROR_PROFILE_NOT_ASSOCIATED_WITH_DEVICE 2015
     * }
     */
    public static int ERROR_PROFILE_NOT_ASSOCIATED_WITH_DEVICE() {
        return ERROR_PROFILE_NOT_ASSOCIATED_WITH_DEVICE;
    }
}

